using System;

namespace LiveForensics.Symbols
{
	#region HEADER
	public class CatalogueInformation
	{
		 public Guid Guid { get { return new Guid("D67FECD4-3A49-492C-87EC-845789255D64"); } }
		 public uint Age { get { return 1; } }
		 public string MachineType { get { return @"Amd64"; } }
		 public string SymbolsFileName { get { return @"ntkrnlmp.pdb"; } }
		 public uint Signature { get { return 1394083134; } }
		 public string Contents { get { return @"[""LIST_ENTRY64"",""LIST_ENTRY32"",""_KSYSTEM_TIME"",""_KUSER_SHARED_DATA"",""_UNNAMED_26823"",""_ULARGE_INTEGER"",""_UNNAMED_26831"",""_LARGE_INTEGER"",""_TP_POOL"",""_TP_CLEANUP_GROUP"",""_ACTIVATION_CONTEXT"",""_TP_CALLBACK_INSTANCE"",""_UNNAMED_26838"",""_UNNAMED_26842"",""_TP_CALLBACK_ENVIRON_V3"",""_TEB"",""_LIST_ENTRY"",""_SINGLE_LIST_ENTRY"",""_RTL_SPLAY_LINKS"",""_RTL_DYNAMIC_HASH_TABLE_CONTEXT"",""_RTL_DYNAMIC_HASH_TABLE_ENUMERATOR"",""_RTL_DYNAMIC_HASH_TABLE"",""_UNICODE_STRING"",""_STRING"",""_RTL_BITMAP"",""_LUID"",""_IMAGE_NT_HEADERS64"",""_IMAGE_DOS_HEADER"",""_RTL_BALANCED_NODE"",""_RTL_RB_TREE"",""_RTL_AVL_TREE"",""_GUID"",""_KPCR"",""_KPRCB"",""_KFLOATING_SAVE"",""_SINGLE_LIST_ENTRY32"",""_EXT_SET_PARAMETERS_V0"",""_KTHREAD"",""_KSTACK_CONTROL"",""_KSPIN_LOCK_QUEUE"",""_FAST_MUTEX"",""_KEVENT"",""_UNNAMED_27674"",""_SLIST_HEADER"",""_LOOKASIDE_LIST_EX"",""_SLIST_ENTRY"",""_NPAGED_LOOKASIDE_LIST"",""_PAGED_LOOKASIDE_LIST"",""_IO_STATUS_BLOCK"",""_QUAD"",""_WORK_QUEUE_ITEM"",""_EXT_DELETE_PARAMETERS"",""_EX_PUSH_LOCK"",""_PP_LOOKASIDE_LIST"",""_GENERAL_LOOKASIDE"",""_KNODE"",""_ENODE"",""_HANDLE_TABLE"",""_HANDLE_TABLE_ENTRY_INFO"",""_HANDLE_TABLE_ENTRY"",""_EX_FAST_REF"",""_UNNAMED_27836"",""_ACCESS_STATE"",""_AUX_ACCESS_DATA"",""_ETHREAD"",""_PAGEFAULT_HISTORY"",""_EPROCESS_QUOTA_BLOCK"",""_EPROCESS"",""_KAFFINITY_EX"",""_KSTACK_COUNT"",""_KPROCESS"",""_UNNAMED_28222"",""_UNNAMED_28228"",""_UNNAMED_28234"",""_UNNAMED_28237"",""_UNNAMED_28253"",""_IRP"",""_UNNAMED_28286"",""_UNNAMED_28294"",""_UNNAMED_28302"",""_UNNAMED_28310"",""_UNNAMED_28314"",""_UNNAMED_28320"",""_UNNAMED_28323"",""_UNNAMED_28326"",""_UNNAMED_28334"",""_UNNAMED_28339"",""_UNNAMED_28341"",""_UNNAMED_28344"",""_UNNAMED_28349"",""_UNNAMED_28354"",""_UNNAMED_28359"",""_UNNAMED_28362"",""_UNNAMED_28365"",""_SCSI_REQUEST_BLOCK"",""_UNNAMED_28370"",""_UNNAMED_28374"",""_UNNAMED_28381"",""_UNNAMED_28383"",""_UNNAMED_28391"",""_UNNAMED_28395"",""_UNNAMED_28399"",""_UNNAMED_28404"",""_UNNAMED_28406"",""_UNNAMED_28408"",""_UNNAMED_28411"",""_UNNAMED_28415"",""_UNNAMED_28417"",""_UNNAMED_28421"",""_UNNAMED_28429"",""_UNNAMED_28434"",""_UNNAMED_28439"",""_UNNAMED_28444"",""_IO_STACK_LOCATION"",""_UNNAMED_28494"",""_DEVICE_OBJECT"",""_KDPC"",""_IO_DRIVER_CREATE_CONTEXT"",""_IO_PRIORITY_INFO"",""_OBJECT_HANDLE_INFORMATION"",""_MDL"",""_EVENT_DATA_DESCRIPTOR"",""_EVENT_DESCRIPTOR"",""_EVENT_RECORD"",""_PERFINFO_GROUPMASK"",""_FILE_OBJECT"",""_EX_RUNDOWN_REF"",""_MM_PAGE_ACCESS_INFO_HEADER"",""_WHEA_ERROR_PACKET_V2"",""_WHEA_ERROR_RECORD"",""_WHEA_ERROR_RECORD_SECTION_DESCRIPTOR"",""_FSRTL_ADVANCED_FCB_HEADER"",""_iobuf"",""_UNNAMED_28720"",""_MMPTE"",""_EX_PUSH_LOCK_CACHE_AWARE"",""_ERESOURCE"",""_MI_CACHED_PTE"",""_KLOCK_QUEUE_HANDLE"",""_MMPFNLIST"",""_UNNAMED_28778"",""_UNNAMED_28787"",""_UNNAMED_28795"",""_UNNAMED_28800"",""_UNNAMED_28805"",""_MMPFN"",""_MI_SYSTEM_PTE_TYPE"",""_UNNAMED_28850"",""_MMWSLE"",""_MMWSL"",""_MMSUPPORT"",""_UNNAMED_28916"",""_UNNAMED_28920"",""_UNNAMED_28934"",""_CONTROL_AREA"",""_MM_STORE_KEY"",""_MMPAGING_FILE"",""_MI_PAGING_FILE_SPACE_BITMAPS"",""tagSWITCH_CONTEXT"",""_UNNAMED_29011"",""_UNNAMED_29015"",""_UNNAMED_29019"",""_UNNAMED_29021"",""_UNNAMED_29028"",""_UNNAMED_29033"",""_UNNAMED_29039"",""_UNNAMED_29044"",""_HIVE_LOAD_FAILURE"",""_PCW_COUNTER_DESCRIPTOR"",""_PCW_REGISTRATION"",""_PCW_REGISTRATION_INFORMATION"",""_PCW_PROCESSOR_INFO"",""_PCW_INSTANCE"",""_PCW_DATA"",""_PCW_BUFFER"",""_SYNCH_COUNTERS"",""_ETW_PERF_COUNTERS"",""_ETW_SESSION_PERF_COUNTERS"",""_FILESYSTEM_DISK_COUNTERS"",""_THERMAL_ZONE_COUNTERS"",""_CONTEXT32_UPDATE"",""_UNNAMED_29181"",""_HV_CPUID_RESULT"",""_HV_VENDOR_AND_MAX_FUNCTION"",""_HV_HYPERVISOR_INTERFACE_INFO"",""_HV_HYPERVISOR_VERSION_INFO"",""_HV_HYPERVISOR_FEATURES"",""_HV_HYPERVISOR_HARDWARE_FEATURES"",""_HV_ENLIGHTENMENT_INFORMATION"",""_HV_IMPLEMENTATION_LIMITS"",""_HV_PARTITION_PRIVILEGE_MASK"",""_KTIMER_TABLE"",""_KTIMER_TABLE_ENTRY"",""_XSTATE_SAVE"",""_XSAVE_AREA"",""_KSHARED_READY_QUEUE"",""_KEXCEPTION_FRAME"",""_KTRAP_FRAME"",""_MCGEN_TRACE_CONTEXT"",""_EVENT_FILTER_DESCRIPTOR"",""_SID"",""_PNP_DEVICE_COMPLETION_QUEUE"",""_KSEMAPHORE"",""_DEVOBJ_EXTENSION"",""_UNNAMED_29477"",""_UNNAMED_29485"",""_UNNAMED_29487"",""_DEVICE_NODE"",""_GROUP_AFFINITY"",""_PNP_ASSIGN_RESOURCES_CONTEXT"",""_PNP_RESOURCE_REQUEST"",""_IO_RESOURCE_REQUIREMENTS_LIST"",""_EXCEPTION_RECORD64"",""_EXCEPTION_RECORD32"",""_DBGKM_EXCEPTION64"",""_DBGKM_EXCEPTION32"",""_X86_KTRAP_FRAME"",""_X86_KTRAP_FRAME_BLUE"",""_DBGKD_LOAD_SYMBOLS64"",""_DBGKD_LOAD_SYMBOLS32"",""_DBGKD_READ_MEMORY64"",""_DBGKD_READ_MEMORY32"",""_DBGKD_WRITE_MEMORY64"",""_DBGKD_WRITE_MEMORY32"",""_DBGKD_WRITE_BREAKPOINT64"",""_DBGKD_WRITE_BREAKPOINT32"",""_DBGKD_READ_WRITE_IO64"",""_DBGKD_READ_WRITE_IO32"",""_DBGKD_READ_WRITE_IO_EXTENDED64"",""_DBGKD_READ_WRITE_IO_EXTENDED32"",""_DBGKD_SET_SPECIAL_CALL32"",""_DBGKD_SET_SPECIAL_CALL64"",""_DBGKD_SET_INTERNAL_BREAKPOINT32"",""_DBGKD_SET_INTERNAL_BREAKPOINT64"",""_DBGKD_GET_INTERNAL_BREAKPOINT64"",""_DBGKD_GET_INTERNAL_BREAKPOINT32"",""_UNNAMED_29779"",""_DBGKD_MANIPULATE_STATE64"",""_UNNAMED_29825"",""_DBGKD_MANIPULATE_STATE32"",""_DBGKD_READ_WRITE_MSR"",""_DBGKD_BREAKPOINTEX"",""_DBGKD_SEARCH_MEMORY"",""_DBGKD_RESTORE_BREAKPOINT"",""_DBGKD_CONTINUE"",""_DBGKD_CONTINUE2"",""_PPM_IDLE_SYNCHRONIZATION_STATE"",""_PROCESSOR_POWER_STATE"",""_PROC_PERF_UTILITY"",""_CPU_INFO"",""_POP_FX_COMPONENT_FLAGS"",""_POP_FX_DEVICE_STATUS"",""_POP_RW_LOCK"",""_VOLUME_CACHE_MAP"",""_SHARED_CACHE_MAP"",""_UNNAMED_30029"",""_VACB"",""_UNNAMED_30040"",""_UNNAMED_30042"",""_UNNAMED_30044"",""_UNNAMED_30046"",""_UNNAMED_30048"",""_UNNAMED_30053"",""_WORK_QUEUE_ENTRY"",""_CC_EXTERNAL_CACHE_INFO"",""_LOG_HANDLE_CONTEXT"",""_MBCB"",""_BITMAP_RANGE"",""VACB_LEVEL_ALLOCATION_LIST"",""_VACB_LEVEL_REFERENCE"",""_CACHE_UNINITIALIZE_EVENT"",""_HEAP_LIST_LOOKUP"",""_HEAP"",""_UNNAMED_30197"",""_HEAP_LOCK"",""_HEAP_ENTRY"",""_HEAP_SEGMENT"",""_HEAP_VIRTUAL_ALLOC_ENTRY"",""_HEAP_FREE_ENTRY"",""_UNNAMED_30274"",""_UNNAMED_30277"",""_UNNAMED_30280"",""_UNNAMED_30283"",""_PORT_MESSAGE"",""_ALPC_MESSAGE_ATTRIBUTES"",""_ALPC_HANDLE_ENTRY"",""_BLOB_TYPE"",""_UNNAMED_30312"",""_UNNAMED_30317"",""_BLOB"",""_UNNAMED_30328"",""_UNNAMED_30331"",""_KALPC_SECTION"",""_UNNAMED_30347"",""_UNNAMED_30349"",""_KALPC_REGION"",""_UNNAMED_30365"",""_UNNAMED_30369"",""_KALPC_VIEW"",""_ALPC_COMMUNICATION_INFO"",""_CALLBACK_OBJECT"",""_UNNAMED_30392"",""_UNNAMED_30409"",""_ALPC_PORT"",""_ALPC_COMPLETION_LIST"",""_OBJECT_ATTRIBUTES"",""_OBJECT_TYPE"",""_PALPC_PORT_REFERENCE_WAIT_BLOCK"",""_PORT_MESSAGE32"",""_UNNAMED_30515"",""_UNNAMED_30528"",""_KALPC_MESSAGE"",""_ALPC_DISPATCH_CONTEXT"",""_REMOTE_PORT_VIEW"",""_KALPC_RESERVE"",""_KALPC_HANDLE_DATA"",""_KALPC_MESSAGE_ATTRIBUTES"",""_UNNAMED_30592"",""_UNNAMED_30595"",""_KALPC_SECURITY_DATA"",""_IO_MINI_COMPLETION_PACKET_USER"",""_IOP_IRP_EXTENSION"",""_DRIVER_OBJECT"",""_FILE_SEGMENT_ELEMENT"",""_RELATIVE_SYMLINK_INFO"",""_ECP_LIST"",""_IOP_FILE_OBJECT_EXTENSION"",""_OPEN_PACKET"",""_ETW_SYSTEMTIME"",""_TIME_FIELDS"",""_UNNAMED_30726"",""_TRACE_LOGFILE_HEADER"",""_ETW_STACK_CACHE"",""_WMI_LOGGER_CONTEXT"",""_HAL_PMC_COUNTERS"",""_ETW_PMC_SUPPORT"",""_ETW_LOGGER_HANDLE"",""_LUID_AND_ATTRIBUTES"",""_TOKEN"",""_SEP_LOGON_SESSION_REFERENCES"",""_PS_PROTECTION"",""_OBJECT_HEADER"",""_OBJECT_HEADER_QUOTA_INFO"",""_OBJECT_HEADER_PROCESS_INFO"",""_OBJECT_HEADER_HANDLE_INFO"",""_OBJECT_HEADER_NAME_INFO"",""_OBJECT_HEADER_CREATOR_INFO"",""_OBJECT_HEADER_AUDIT_INFO"",""_OBP_LOOKUP_CONTEXT"",""_OBJECT_DIRECTORY"",""_WHEAP_INFO_BLOCK"",""_WHEAP_ERROR_SOURCE"",""_WHEAP_ERROR_RECORD_WRAPPER"",""_KSECONDARY_IDT_ENTRY"",""_WNF_STATE_NAME"",""_PS_CLIENT_SECURITY_CONTEXT"",""_DBGKD_ANY_CONTROL_SET"",""_MI_VERIFIER_POOL_HEADER"",""_POP_FX_PLUGIN"",""_ARM_DBGKD_CONTROL_SET"",""_LPCP_MESSAGE"",""_HARDWARE_PTE"",""_ALPC_PORT_ATTRIBUTES"",""_KENTROPY_TIMING_STATE"",""_DISPATCHER_HEADER"",""_VI_POOL_ENTRY"",""_MM_PAGE_ACCESS_INFO"",""_MI_CONTROL_AREA_WAIT_BLOCK"",""_HEAP_COUNTERS"",""_PPM_FFH_THROTTLE_STATE_INFO"",""_SYSPTES_HEADER"",""_EXCEPTION_RECORD"",""_MI_ACTIVE_WSLE_LISTHEAD"",""_PENDING_RELATIONS_LIST_ENTRY"",""_CELL_DATA"",""_INITIAL_PRIVILEGE_SET"",""_HEAP_TUNING_PARAMETERS"",""_MMWSLE_NONDIRECT_HASH"",""_POP_FX_WORK_ORDER"",""_KAPC"",""_KTIMER_EXPIRATION_TRACE"",""_POOL_TRACKER_BIG_PAGES"",""tagSWITCH_CONTEXT_DATA"",""_WHEAP_ERROR_SOURCE_TABLE"",""_TEB_ACTIVE_FRAME_CONTEXT"",""_TEB_ACTIVE_FRAME"",""_FILE_GET_QUOTA_INFORMATION"",""_ACCESS_REASONS"",""_CM_KEY_BODY"",""_KWAIT_BLOCK"",""_MMPTE_PROTOTYPE"",""_WHEA_ERROR_PACKET_FLAGS"",""_THERMAL_INFORMATION_EX"",""_UNNAMED_31442"",""_UNNAMED_31447"",""_MM_PAGE_ACCESS_INFO_FLAGS"",""_PPM_CONCURRENCY_ACCOUNTING"",""_VI_VERIFIER_ISSUE"",""_MMSUBSECTION_FLAGS"",""_EXCEPTION_POINTERS"",""_KMUTANT"",""_OBJECT_REF_INFO"",""_HBIN"",""_MI_IMAGE_SECURITY_REFERENCE"",""_AUTHZBASEP_CLAIM_ATTRIBUTES_COLLECTION"",""_HEAP_TAG_ENTRY"",""_SECURITY_QUALITY_OF_SERVICE"",""_MMWSLE_FREE_ENTRY"",""_NT_TIB"",""_LEARNING_MODE_DATA"",""_WHEA_REVISION"",""_JOB_ACCESS_STATE"",""_JOB_NOTIFICATION_INFORMATION"",""_JOB_CPU_RATE_CONTROL"",""_EJOB"",""_PPM_IDLE_STATES"",""_ACTIVATION_CONTEXT_DATA"",""_ASSEMBLY_STORAGE_MAP"",""_FLS_CALLBACK_INFO"",""_PEB"",""_HEAP_UCR_DESCRIPTOR"",""_ETW_REALTIME_CONSUMER"",""_POOL_DESCRIPTOR"",""_BLOB_COUNTERS"",""_KGATE"",""_WHEA_ERROR_RECORD_HEADER"",""_ALPC_PROCESS_CONTEXT"",""_DRIVER_EXTENSION"",""_PRIVILEGE_SET"",""_WHEAP_WORK_QUEUE"",""_CM_NOTIFY_BLOCK"",""_KINTERRUPT"",""_AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION"",""_IMAGE_FILE_HEADER"",""_HIVE_LIST_ENTRY"",""_HMAP_DIRECTORY"",""_CONTEXT"",""_ALPC_HANDLE_TABLE"",""_UNNAMED_32089"",""_WHEA_ERROR_SOURCE_DESCRIPTOR"",""_MMPTE_HARDWARE"",""_IO_COMPLETION_CONTEXT"",""_EX_WORK_QUEUE"",""_IOV_FORCED_PENDING_TRACE"",""_IOP_IRP_EXTENSION_STATUS"",""_DBGKD_SET_CONTEXT"",""_VI_POOL_ENTRY_INUSE"",""_INTERFACE"",""_ACL"",""_LAZY_WRITER"",""_PI_BUS_EXTENSION"",""_DEVICE_DESCRIPTION"",""_SID_AND_ATTRIBUTES"",""_SID_IDENTIFIER_AUTHORITY"",""_PROCESS_DISK_COUNTERS"",""_IO_WORKITEM"",""_MMWSLE_HASH"",""_JOBOBJECT_WAKE_FILTER"",""_UNEXPECTED_INTERRUPT"",""_POP_FX_WORK_ORDER_WATCHDOG_INFO"",""_DBGKD_FILL_MEMORY"",""_HEAP_STOP_ON_VALUES"",""_HEAP_PSEUDO_TAG_ENTRY"",""_CALL_HASH_ENTRY"",""_VF_TRACKER_STAMP"",""_VI_TRACK_IRQL"",""_SESSION_LOWBOX_MAP"",""_PROCESSOR_PROFILE_CONTROL_AREA"",""_PEB_LDR_DATA"",""_PNP_DEVICE_EVENT_ENTRY"",""_PROC_IDLE_POLICY"",""_HEAP_STOP_ON_TAG"",""_PS_WAKE_INFORMATION"",""_RH_OP_CONTEXT"",""_DBGKD_GET_CONTEXT"",""_ISRDPCSTATS"",""_RTL_BITMAP_EX"",""_XSTATE_CONFIGURATION"",""_CM_KEY_CONTROL_BLOCK"",""_KLOCK_ENTRY"",""_MMPTE_SOFTWARE"",""_UNNAMED_32454"",""_MMMOD_WRITER_MDL_ENTRY"",""_CM_RESOURCE_LIST"",""_POOL_TRACKER_TABLE"",""_CM_FULL_RESOURCE_DESCRIPTOR"",""_WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS"",""_WMI_BUFFER_HEADER"",""_POWER_SEQUENCE"",""_EPROCESS_VALUES"",""_OBJECT_REF_STACK_INFO"",""_PPC_DBGKD_CONTROL_SET"",""_MMPFNENTRY"",""_SEGMENT_OBJECT"",""_PCW_CALLBACK_INFORMATION"",""_TOKEN_SOURCE"",""_CMHIVE"",""_DBGKD_QUERY_MEMORY"",""_DIRTY_PAGE_THRESHOLDS"",""DOCK_INTERFACE"",""CMP_OFFSET_ARRAY"",""_MMSUPPORT_FLAGS"",""_IMAGE_OPTIONAL_HEADER64"",""_ALPC_COMPLETION_PACKET_LOOKASIDE"",""_TERMINATION_PORT"",""_MEMORY_ALLOCATION_DESCRIPTOR"",""_CM_INTENT_LOCK"",""_PROC_IDLE_ACCOUNTING"",""_THERMAL_INFORMATION"",""_SEP_LOWBOX_NUMBER_MAPPING"",""_MAPPED_FILE_SEGMENT"",""_TEB64"",""_GDI_TEB_BATCH"",""_MM_DRIVER_VERIFIER_DATA"",""_INVERTED_FUNCTION_TABLE"",""_HIVE_WRITE_WAIT_QUEUE"",""_VI_FAULT_TRACE"",""_GENERIC_MAPPING"",""_OBJECT_HANDLE_COUNT_DATABASE"",""_UMS_CONTROL_BLOCK"",""_OWNER_ENTRY"",""_ETIMER"",""_PROC_PERF_SNAP"",""_OBJECT_DIRECTORY_ENTRY"",""_LOCK_TRACKER"",""_POOL_BLOCK_HEAD"",""_EXHANDLE"",""_XSTATE_FEATURE"",""_DBGKD_CONTEXT_EX"",""_CM_DIRTY_VECTOR_LOG"",""_ARBITER_INSTANCE"",""_KDEVICE_QUEUE_ENTRY"",""_UNNAMED_33160"",""_UNNAMED_33163"",""_UNNAMED_33165"",""_HCELL"",""_WHEA_GENERIC_ERROR_DESCRIPTOR"",""_HMAP_TABLE"",""_SEP_LOWBOX_HANDLES_ENTRY"",""_PROC_PERF_CONSTRAINT"",""_UNNAMED_33204"",""_UNNAMED_33211"",""_POP_IRP_DATA"",""_IMAGE_DATA_DIRECTORY"",""_DEVICE_CAPABILITIES"",""_MI_USER_VA_INFO"",""_PROC_FEEDBACK"",""_UNNAMED_33308"",""_UNNAMED_33313"",""_UNNAMED_33320"",""_UNNAMED_33323"",""_UNNAMED_33328"",""_UNNAMED_33330"",""_UNNAMED_33335"",""_UNNAMED_33339"",""_UNNAMED_33344"",""_UNNAMED_33349"",""_UNNAMED_33354"",""_UNNAMED_33361"",""_IO_RESOURCE_DESCRIPTOR"",""_POP_THERMAL_ZONE"",""_MMPTE_LIST"",""_VI_POOL_PAGE_HEADER"",""_HANDLE_TRACE_DEBUG_INFO"",""_HHIVE"",""_WHEA_XPF_NMI_DESCRIPTOR"",""_CM_WORKITEM"",""_POP_THERMAL_ZONE_METRICS"",""_CM_TRANS"",""_WHEA_ERROR_RECORD_HEADER_VALIDBITS"",""_CM_PARTIAL_RESOURCE_LIST"",""_RTL_RANGE_LIST"",""_RTL_TIME_ZONE_INFORMATION"",""_OBJECT_CREATE_INFORMATION"",""_POOL_HACKER"",""_PO_DIAG_STACK_RECORD"",""_SECTION_OBJECT_POINTERS"",""_SEP_AUDIT_POLICY"",""_UNNAMED_33566"",""_UNNAMED_33569"",""_VF_TARGET_DRIVER"",""_UNNAMED_33580"",""_UNNAMED_33584"",""_UNNAMED_33586"",""_UNNAMED_33589"",""_UNNAMED_33591"",""_UNNAMED_33594"",""_UNNAMED_33597"",""_UNNAMED_33599"",""_UNNAMED_33601"",""_UNNAMED_33607"",""_PLUGPLAY_EVENT_BLOCK"",""_VF_SUSPECT_DRIVER_ENTRY"",""_MMPTE_TIMESTAMP"",""_SID_AND_ATTRIBUTES_HASH"",""_XSTATE_CONTEXT"",""_PROCESSOR_IDLE_PREPARE_INFO"",""_XSAVE_FORMAT"",""_UNNAMED_33677"",""PROCESSOR_PERFSTATE_POLICY"",""_BUS_EXTENSION_LIST"",""_CACHED_CHILD_LIST"",""_KDEVICE_QUEUE"",""_SYSTEM_POWER_STATE_CONTEXT"",""_PEBS_DS_SAVE_AREA"",""_OBJECT_TYPE_INITIALIZER"",""_UNNAMED_33772"",""_SUBSECTION"",""_KPROCESSOR_STATE"",""tagSWITCH_CONTEXT_ATTRIBUTE"",""_IO_CLIENT_EXTENSION"",""_ETW_BUFFER_CONTEXT"",""_DIRTY_PAGE_STATISTICS"",""_PROC_IDLE_SNAP"",""_KERNEL_STACK_SEGMENT"",""_KEXECUTE_OPTIONS"",""_SEP_TOKEN_PRIVILEGES"",""_WHEA_XPF_MCE_DESCRIPTOR"",""_ARBITER_ALLOCATION_STATE"",""_VACB_ARRAY_HEADER"",""_MMWSLENTRY"",""_DBGKD_SWITCH_PARTITION"",""_REQUEST_MAILBOX"",""_DBGKD_GET_VERSION32"",""_WHEA_XPF_CMC_DESCRIPTOR"",""_WHEA_TIMESTAMP"",""_PEB32"",""_VPB"",""_CACHE_DESCRIPTOR"",""_IOP_IRP_STACK_PROFILER"",""_FILE_BASIC_INFORMATION"",""_SECURITY_SUBJECT_CONTEXT"",""_EVENT_HEADER"",""_PF_KERNEL_GLOBALS"",""_CM_KEY_HASH_TABLE_ENTRY"",""_ARBITER_QUERY_ARBITRATE_PARAMETERS"",""_ARBITER_BOOT_ALLOCATION_PARAMETERS"",""_KPRIQUEUE"",""_EXCEPTION_REGISTRATION_RECORD"",""_WAITING_IRP"",""_POP_SYSTEM_IDLE"",""_VERIFIER_SHARED_EXPORT_THUNK"",""_VF_TARGET_ALL_SHARED_EXPORT_THUNKS"",""_KSCHEDULING_GROUP"",""_ETW_REF_CLOCK"",""_OB_DUPLICATE_OBJECT_STATE"",""_MMPTE_SUBSECTION"",""_POWER_STATE"",""_POP_IRP_WORKER_ENTRY"",""_POP_POLICY_DEVICE"",""_UNNAMED_34129"",""_UNNAMED_34132"",""_UNNAMED_34137"",""_UNNAMED_34142"",""_UNNAMED_34145"",""_UNNAMED_34149"",""_UNNAMED_34156"",""_UNNAMED_34160"",""_UNNAMED_34164"",""_UNNAMED_34167"",""_UNNAMED_34170"",""_UNNAMED_34173"",""_CM_PARTIAL_RESOURCE_DESCRIPTOR"",""_OBJECT_HEADER_PADDING_INFO"",""_UNNAMED_34194"",""_IMAGE_SECTION_HEADER"",""_INVERTED_FUNCTION_TABLE_ENTRY"",""_ARBITER_ADD_RESERVED_PARAMETERS"",""_UNNAMED_34219"",""_CM_CACHED_VALUE_INDEX"",""_DBGKD_QUERY_SPECIAL_CALLS"",""_VF_AVL_TREE_NODE"",""_POP_FX_DEVICE"",""_UNNAMED_34271"",""_UNNAMED_34274"",""_DEVICE_OBJECT_POWER_EXTENSION"",""_ARBITER_RETEST_ALLOCATION_PARAMETERS"",""_PROCESSOR_NUMBER"",""_MI_TRIAGE_DUMP_DATA"",""_WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS"",""_FS_FILTER_CALLBACKS"",""_KTMNOTIFICATION_PACKET"",""_KENLISTMENT"",""_ARBITER_INTERFACE"",""_KAPC_STATE"",""_DELAY_ACK_FO"",""_IA64_DBGKD_CONTROL_SET"",""_DEVICE_RELATIONS"",""_IMAGE_ROM_OPTIONAL_HEADER"",""_ALPC_COMPLETION_LIST_STATE"",""_ALPC_COMPLETION_LIST_HEADER"",""_IMAGE_DEBUG_DIRECTORY"",""_WHEA_AER_ENDPOINT_DESCRIPTOR"",""_ETW_WMITRACE_WORK"",""_DEVICE_MAP"",""_CHILD_LIST"",""_IO_RESOURCE_LIST"",""_ARMCE_DBGKD_CONTROL_SET"",""_WHEA_ERROR_RECORD_HEADER_FLAGS"",""_XSAVE_AREA_HEADER"",""_RTL_CRITICAL_SECTION"",""_PNP_DEVICE_COMPLETION_REQUEST"",""_KTSS64"",""_UNNAMED_34513"",""_UNNAMED_34516"",""_UNNAMED_34519"",""_UNNAMED_34522"",""_CM_DIRTY_VECTOR_LOG_ENTRY"",""_UNNAMED_34530"",""_UNNAMED_34534"",""_MMVAD_SHORT"",""_KLOCK_ENTRY_LOCK_STATE"",""_WAIT_CONTEXT_BLOCK"",""_SECTION_OBJECT"",""_CM_NAME_CONTROL_BLOCK"",""_u"",""_HBASE_BLOCK"",""_GENERAL_LOOKASIDE_POOL"",""_RTL_DYNAMIC_HASH_TABLE_ENTRY"",""_M128A"",""_HEAP_LOOKASIDE"",""_KTIMER"",""_RTL_ATOM_TABLE"",""_UNNAMED_34687"",""_POP_POWER_ACTION"",""_CM_KEY_VALUE"",""_CM_KEY_HASH"",""_WHEA_IPF_CMC_DESCRIPTOR"",""_PROCESSOR_IDLE_DEPENDENCY"",""_AMD64_DBGKD_CONTROL_SET"",""_PO_DEVICE_NOTIFY"",""_CM_KEY_SECURITY_CACHE_ENTRY"",""_FS_FILTER_CALLBACK_DATA"",""_WHEA_AER_ROOTPORT_DESCRIPTOR"",""_PROC_IDLE_STATE_ACCOUNTING"",""_IMAGE_SECURITY_CONTEXT"",""_KENLISTMENT_HISTORY"",""_FAST_IO_DISPATCH"",""_PERFINFO_PPM_STATE_SELECTION"",""_KIDTENTRY64"",""_CM_CELL_REMAP_BLOCK"",""_PI_RESOURCE_ARBITER_ENTRY"",""_SECURITY_DESCRIPTOR"",""_MODWRITER_FLAGS"",""_KQUEUE"",""_RTL_USER_PROCESS_PARAMETERS"",""_PHYSICAL_MEMORY_RUN"",""_RTL_SRWLOCK"",""_KTMOBJECT_NAMESPACE_LINK"",""_CACHE_MANAGER_CALLBACKS"",""_PROC_PERF_LOAD"",""_RTL_RANGE"",""_LOCK_HEADER"",""_WHEA_IPF_MCA_DESCRIPTOR"",""_KSPECIAL_REGISTERS"",""_SYSTEM_POWER_POLICY"",""_POOL_HEADER"",""_PEB64"",""_SE_AUDIT_PROCESS_CREATION_INFO"",""_HEAP_ENTRY_EXTRA"",""_VF_POOL_TRACE"",""_UNNAMED_35170"",""_MM_SESSION_SPACE"",""_WHEA_XPF_MC_BANK_DESCRIPTOR"",""_UNNAMED_35233"",""_UNNAMED_35237"",""_MMVAD"",""_SEP_SID_VALUES_BLOCK"",""_CM_RM"",""_NONOPAQUE_OPLOCK"",""_OBJECT_HANDLE_COUNT_ENTRY"",""_CLIENT_ID"",""_WHEA_MEMORY_ERROR_SECTION"",""_KWAIT_STATUS_REGISTER"",""_VI_DEADLOCK_RESOURCE"",""_DBGKD_GET_SET_BUS_DATA"",""_MMSECTION_FLAGS"",""_SECURITY_CLIENT_CONTEXT"",""_MM_PAGED_POOL_INFO"",""_NT_TIB64"",""_MI_REVERSE_VIEW_MAP"",""_IO_SECURITY_CONTEXT"",""_PROC_PERF_DOMAIN"",""_X86_DBGKD_CONTROL_SET"",""_HANDLE_TRACE_DB_ENTRY"",""_WHEA_IPF_CPE_DESCRIPTOR"",""_DUMMY_FILE_OBJECT"",""_RELATION_LIST"",""_IO_TIMER"",""_ETW_BUFFER_QUEUE"",""_ARBITER_TEST_ALLOCATION_PARAMETERS"",""_MI_SPECIAL_POOL"",""_LOGGED_STREAM_CALLBACK_V2"",""_ARBITER_QUERY_CONFLICT_PARAMETERS"",""_POP_CURRENT_BROADCAST"",""_PHYSICAL_MEMORY_DESCRIPTOR"",""PEPHANDLE__"",""_UNNAMED_35500"",""_UNNAMED_35505"",""_KGDTENTRY64"",""_PNP_DEVICE_EVENT_LIST"",""_IOV_IRP_TRACE"",""_MAILSLOT_CREATE_PARAMETERS"",""_PO_IRP_MANAGER"",""_DYNAMIC_FUNCTION_TABLE"",""_SEP_LOWBOX_HANDLES_TABLE"",""_CLIENT_ID64"",""_UNNAMED_35561"",""_UNNAMED_35563"",""_POP_ACTION_TRIGGER"",""_KDPC_DATA"",""_NAMED_PIPE_CREATE_PARAMETERS"",""_CM_BIG_DATA"",""_KSCB"",""_UNNAMED_35611"",""_UNNAMED_35614"",""_RTLP_RANGE_LIST_ENTRY"",""_ALPC_COMPLETION_PACKET_LOOKASIDE_ENTRY"",""_PROC_PERF_HISTORY"",""_IMAGE_RUNTIME_FUNCTION_ENTRY"",""_UNNAMED_35637"",""PROCESSOR_IDLESTATE_POLICY"",""_ACTIVATION_CONTEXT_STACK"",""_RTL_DRIVE_LETTER_CURDIR"",""_MI_PTE_CHAIN_HEAD"",""SYSTEM_POWER_CAPABILITIES"",""_UNNAMED_35696"",""_UNNAMED_35699"",""_SEGMENT"",""_DIAGNOSTIC_CONTEXT"",""_UNNAMED_35720"",""_UNNAMED_35723"",""_VF_TARGET_VERIFIED_DRIVER_DATA"",""_MMVAD_FLAGS1"",""_PRIVATE_CACHE_MAP"",""_CM_KEY_NODE"",""_AER_ROOTPORT_DESCRIPTOR_FLAGS"",""_PTE_TRACKER"",""_KTHREAD_COUNTERS"",""_SHARED_CACHE_MAP_LIST_CURSOR"",""_DBGKD_GET_VERSION64"",""_PROC_FEEDBACK_COUNTER"",""_STRING32"",""_PROCESSOR_PLATFORM_STATE_RESIDENCIES"",""_HMAP_ENTRY"",""_RTL_ATOM_TABLE_ENTRY"",""_TXN_PARAMETER_BLOCK"",""_DUAL"",""_MI_VAD_SEQUENTIAL_INFO"",""_PNP_DEVICE_ACTION_ENTRY"",""_SEP_LOWBOX_NUMBER_ENTRY"",""_MI_CFG_BITMAP_INFO"",""_COUNTER_READING"",""_MMSESSION"",""_ETW_REG_ENTRY"",""_LPCP_PORT_OBJECT"",""_ARBITER_LIST_ENTRY"",""_INTERRUPT_CONNECTION_DATA"",""_LDRP_DLL_SNAP_CONTEXT"",""_LDR_DATA_TABLE_ENTRY"",""_LDR_DDAG_NODE"",""_POP_DEVICE_SYS_STATE"",""_SEGMENT_FLAGS"",""_VF_KE_CRITICAL_REGION_TRACE"",""_LOGGED_STREAM_CALLBACK_V1"",""_DIAGNOSTIC_BUFFER"",""_CLIENT_ID32"",""_TEB32"",""_CM_KEY_INDEX"",""_VI_DEADLOCK_THREAD"",""_PPM_IDLE_STATE"",""_KRESOURCEMANAGER"",""_MMEXTEND_INFO"",""_HANDLE_TABLE_FREE_LIST"",""_WHEAP_ERROR_RECORD_WRAPPER_FLAGS"",""_GDI_TEB_BATCH64"",""_UNNAMED_36314"",""_VF_AVL_TREE"",""_FILE_NETWORK_OPEN_INFORMATION"",""_POP_FX_ACCOUNTING"",""_WHEA_MEMORY_ERROR_SECTION_VALIDBITS"",""_POP_TRIGGER_WAIT"",""_AER_ENDPOINT_DESCRIPTOR_FLAGS"",""_RELATION_LIST_ENTRY"",""_HEAP_FREE_ENTRY_EXTRA"",""_PROC_PERF_HISTORY_ENTRY"",""_POP_FX_COMPONENT"",""_PEP_CRASHDUMP_INFORMATION"",""_POP_FX_DRIVER_CALLBACKS"",""_PROVIDER_BINARY_ENTRY"",""_VI_DEADLOCK_GLOBALS"",""_KTM"",""_KTRANSACTION"",""_PRIVATE_CACHE_MAP_FLAGS"",""_CM_KCB_UOW"",""_MMPTE_TRANSITION"",""_KREQUEST_PACKET"",""_PROCESSOR_IDLE_CONSTRAINTS"",""_VF_WATCHDOG_IRP"",""_MMVAD_FLAGS2"",""_flags"",""_UNNAMED_36617"",""_UNNAMED_34403"",""_CM_KEY_SECURITY_CACHE"",""_CM_NAME_HASH"",""_PROC_IDLE_STATE_BUCKET"",""_PO_IRP_QUEUE"",""_UNNAMED_36641"",""_VI_DEADLOCK_NODE"",""PROCESSOR_IDLESTATE_INFO"",""_KTMOBJECT_NAMESPACE"",""_LPCP_PORT_QUEUE"",""_CM_KEY_REFERENCE"",""SYSTEM_POWER_LEVEL"",""_OBJECT_DUMP_CONTROL"",""_EVENT_HEADER_EXTENDED_DATA_ITEM"",""_VF_ADDRESS_RANGE"",""_OBJECT_SYMBOLIC_LINK"",""_LPCP_NONPAGED_PORT_QUEUE"",""_THERMAL_POLICY"",""_KRESOURCEMANAGER_COMPLETION_BINDING"",""_VF_TRACKER"",""_CALL_PERFORMANCE_DATA"",""_RTL_UMS_CONTEXT"",""_ARBITER_ALTERNATIVE"",""_WHEA_ERROR_STATUS"",""_WHEA_PERSISTENCE_INFO"",""_MI_SECTION_IMAGE_INFORMATION"",""_STRING64"",""_STACK_TABLE"",""_CM_INDEX_HINT_BLOCK"",""_TOKEN_CONTROL"",""_ETW_GUID_ENTRY"",""_KUMS_CONTEXT_HEADER"",""_DEFERRED_WRITE"",""_UNNAMED_36827"",""_UNNAMED_36831"",""_WHEA_PCI_SLOT_NUMBER"",""_ARBITER_ORDERING_LIST"",""_SECTION_IMAGE_INFORMATION"",""_VF_AVL_TABLE"",""_XPF_MC_BANK_FLAGS"",""_TOKEN_AUDIT_POLICY"",""_ETW_LAST_ENABLE_INFO"",""_UNNAMED_36879"",""_UNNAMED_36883"",""_UNNAMED_36885"",""_UNNAMED_36888"",""_UNNAMED_36891"",""_FS_FILTER_PARAMETERS"",""_MI_SESSION_DRIVER_UNLOAD"",""_PPM_SELECTION_STATISTICS"",""_LDR_SERVICE_TAG_RECORD"",""_COMPRESSED_DATA_INFO"",""_HIVE_WAIT_PACKET"",""_UNNAMED_36930"",""_UNNAMED_36932"",""_UNNAMED_36939"",""_WHEA_NOTIFICATION_DESCRIPTOR"",""_POP_HIBER_CONTEXT"",""_OBJECT_REF_TRACE"",""_CVDD"",""_OBJECT_NAME_INFORMATION"",""_WHEA_AER_BRIDGE_DESCRIPTOR"",""_KDESCRIPTOR"",""_PCW_COUNTER_INFORMATION"",""_DUMP_STACK_CONTEXT"",""_FILE_STANDARD_INFORMATION"",""_PPM_VETO_ACCOUNTING"",""_POP_SHUTDOWN_BUG_CHECK"",""_NB10"",""_MI_EXTRA_IMAGE_INFORMATION"",""_PCW_MASK_INFORMATION"",""_MMVAD_FLAGS"",""_SECURITY_DESCRIPTOR_RELATIVE"",""_MI_VAD_EVENT_BLOCK"",""_UNNAMED_37109"",""_ARBITER_PARAMETERS"",""_UNNAMED_37120"",""_CLS_LSN"",""_NT_TIB32"",""POWER_ACTION_POLICY"",""_RSDS"",""PO_MEMORY_IMAGE"",""BATTERY_REPORTING_SCALE"",""_RTL_ATOM_TABLE_REFERENCE"",""_CURDIR"",""_PO_HIBER_PERF"",""_POP_FX_PROVIDER"",""_RTL_BALANCED_LINKS"",""_FREE_DISPLAY"",""_UNNAMED_37256"",""_MMADDRESS_LIST"",""_MI_PHYSMEM_BLOCK"",""_POP_PER_PROCESSOR_CONTEXT"",""_DEVICE_OBJECT_LIST_ENTRY"",""_IO_REMOVE_LOCK"",""_POP_IO_INFO"",""_LDRP_CSLIST"",""_MMVIEW"",""_AER_BRIDGE_DESCRIPTOR_FLAGS"",""_ETW_PERFECT_HASH_FUNCTION"",""_ETW_FILTER_HEADER"",""_ETW_PAYLOAD_FILTER"",""_MMVIEW_CONTROL_AREA"",""_MM_SESSION_SPACE_FLAGS"",""_RTL_CRITICAL_SECTION_DEBUG"",""_TRACE_ENABLE_INFO"",""_UNNAMED_37368"",""_UNNAMED_37372"",""_UNNAMED_37375"",""_UNNAMED_37378"",""_INTERRUPT_VECTOR_DATA"",""_POP_FX_DEPENDENT"",""_XPF_MCE_FLAGS"",""_ADAPTER_OBJECT"",""_UNNAMED_37399"",""_UNNAMED_37402"",""_UNNAMED_37404"",""_DUMP_INITIALIZATION_CONTEXT"",""_PROCESSOR_PLATFORM_STATE_RESIDENCY"",""_ETW_QUEUE_ENTRY"",""_ETW_FILTER_PID"",""_KDPC_LIST"",""_CM_KEY_SECURITY"",""_PO_DEVICE_NOTIFY_ORDER"",""_EVENT_FILTER_HEADER"",""_IO_REMOVE_LOCK_COMMON_BLOCK"",""_POP_FX_IDLE_STATE"",""_WHEA_NOTIFICATION_FLAGS"",""_ARBITER_CONFLICT_INFO"",""_PO_NOTIFY_ORDER_LEVEL"",""_ETWP_NOTIFICATION_HEADER"",""_UNNAMED_37526"",""_UNNAMED_37536"",""_UNNAMED_37539"",""_UNNAMED_37544"",""_INTERRUPT_HT_INTR_INFO"",""_THREAD_PERFORMANCE_DATA"",""_GDI_TEB_BATCH32"",""_ETW_REPLY_QUEUE"",""_ARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS"",""_MI_LARGEPAGE_MEMORY_INFO"",""_UNNAMED_37573"",""_UNNAMED_37577"",""_INTERRUPT_REMAPPING_INFO"",""_RTL_ACTIVATION_CONTEXT_STACK_FRAME"",""_MMIO_TRACKER"",""_ARBITER_ORDERING"",""_UNNAMED_37600"",""_UNNAMED_37603"",""_MMINPAGE_SUPPORT"",""_RTL_AVL_TABLE"",""_MMINPAGE_FLAGS"",""_AGGREGATED_PAYLOAD_FILTER"",""_KTRANSACTION_HISTORY"",""_MMSECURE_FLAGS"",""_EVENT_PAYLOAD_PREDICATE"",""_COLORED_PAGE_INFO"",""_ETW_FILTER_STRING_TOKEN"",""_IO_CACHE_INFO"",""_ETW_FILTER_STRING_TOKEN_ELEMENT""])"; } }
		 public string Created { get { return "18-04-2017T10:50:48"; } }
	}
	#endregion
	#region LIST_ENTRY64
 
	public class LIST_ENTRY64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public LIST_ENTRY64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""LIST_ENTRY64"": [ 16, {
				 ""Flink"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Blink"": [ 8, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Flink { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Blink { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region LIST_ENTRY32
 
	public class LIST_ENTRY32
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public LIST_ENTRY32(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""LIST_ENTRY32"": [ 8, {
				 ""Flink"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Blink"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Flink { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Blink { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _KSYSTEM_TIME
 
	public class _KSYSTEM_TIME
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KSYSTEM_TIME(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KSYSTEM_TIME"": [ 12, {
				 ""LowPart"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""High1Time"": [ 4, [ ""Int32"", ""null"" ]],
				 ""High2Time"": [ 8, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 LowPart { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Int32 High1Time { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 4); } }
		public Int32 High2Time { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _KUSER_SHARED_DATA
 
	public class _KUSER_SHARED_DATA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KUSER_SHARED_DATA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1520; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KUSER_SHARED_DATA"": [ 1520, {
				 ""TickCountLowDeprecated"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""TickCountMultiplier"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""InterruptTime"": [ 8, [ ""_KSYSTEM_TIME"", ""null"" ]],
				 ""SystemTime"": [ 20, [ ""_KSYSTEM_TIME"", ""null"" ]],
				 ""TimeZoneBias"": [ 32, [ ""_KSYSTEM_TIME"", ""null"" ]],
				 ""ImageNumberLow"": [ 44, [ ""UInt16"", ""null"" ]],
				 ""ImageNumberHigh"": [ 46, [ ""UInt16"", ""null"" ]],
				 ""NtSystemRoot"": [ 48, [ ""Array"", ""{\""count\"":260,\""target\"":\""UInt16\""}"" ]],
				 ""MaxStackTraceDepth"": [ 568, [ ""UInt32"", ""null"" ]],
				 ""CryptoExponent"": [ 572, [ ""UInt32"", ""null"" ]],
				 ""TimeZoneId"": [ 576, [ ""UInt32"", ""null"" ]],
				 ""LargePageMinimum"": [ 580, [ ""UInt32"", ""null"" ]],
				 ""AitSamplingValue"": [ 584, [ ""UInt32"", ""null"" ]],
				 ""AppCompatFlag"": [ 588, [ ""UInt32"", ""null"" ]],
				 ""RNGSeedVersion"": [ 592, [ ""UInt64"", ""null"" ]],
				 ""GlobalValidationRunlevel"": [ 600, [ ""UInt32"", ""null"" ]],
				 ""TimeZoneBiasStamp"": [ 604, [ ""Int32"", ""null"" ]],
				 ""Reserved2"": [ 608, [ ""UInt32"", ""null"" ]],
				 ""NtProductType"": [ 612, [ ""Enumeration"", ""{\""enum_name\"":\""_NT_PRODUCT_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""ProductTypeIsValid"": [ 616, [ ""Byte"", ""null"" ]],
				 ""Reserved0"": [ 617, [ ""Array"", ""{\""count\"":1,\""target\"":\""Byte\""}"" ]],
				 ""NativeProcessorArchitecture"": [ 618, [ ""UInt16"", ""null"" ]],
				 ""NtMajorVersion"": [ 620, [ ""UInt32"", ""null"" ]],
				 ""NtMinorVersion"": [ 624, [ ""UInt32"", ""null"" ]],
				 ""ProcessorFeatures"": [ 628, [ ""Array"", ""{\""count\"":64,\""target\"":\""Byte\""}"" ]],
				 ""Reserved1"": [ 692, [ ""UInt32"", ""null"" ]],
				 ""Reserved3"": [ 696, [ ""UInt32"", ""null"" ]],
				 ""TimeSlip"": [ 700, [ ""UInt32"", ""null"" ]],
				 ""AlternativeArchitecture"": [ 704, [ ""Enumeration"", ""{\""enum_name\"":\""_ALTERNATIVE_ARCHITECTURE_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""AltArchitecturePad"": [ 708, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""SystemExpirationDate"": [ 712, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""SuiteMask"": [ 720, [ ""UInt32"", ""null"" ]],
				 ""KdDebuggerEnabled"": [ 724, [ ""Byte"", ""null"" ]],
				 ""MitigationPolicies"": [ 725, [ ""Byte"", ""null"" ]],
				 ""NXSupportPolicy"": [ 725, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""SEHValidationPolicy"": [ 725, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""CurDirDevicesSkippedForDlls"": [ 725, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""Reserved"": [ 725, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":6,\""target\"":\""Byte\""}"" ]],
				 ""Reserved6"": [ 726, [ ""Array"", ""{\""count\"":2,\""target\"":\""Byte\""}"" ]],
				 ""ActiveConsoleId"": [ 728, [ ""UInt32"", ""null"" ]],
				 ""DismountCount"": [ 732, [ ""UInt32"", ""null"" ]],
				 ""ComPlusPackage"": [ 736, [ ""UInt32"", ""null"" ]],
				 ""LastSystemRITEventTickCount"": [ 740, [ ""UInt32"", ""null"" ]],
				 ""NumberOfPhysicalPages"": [ 744, [ ""UInt32"", ""null"" ]],
				 ""SafeBootMode"": [ 748, [ ""Byte"", ""null"" ]],
				 ""Reserved12"": [ 749, [ ""Array"", ""{\""count\"":3,\""target\"":\""Byte\""}"" ]],
				 ""SharedDataFlags"": [ 752, [ ""UInt32"", ""null"" ]],
				 ""DbgErrorPortPresent"": [ 752, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""DbgElevationEnabled"": [ 752, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""DbgVirtEnabled"": [ 752, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""DbgInstallerDetectEnabled"": [ 752, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""DbgLkgEnabled"": [ 752, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""DbgDynProcessorEnabled"": [ 752, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""DbgConsoleBrokerEnabled"": [ 752, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""DbgSecureBootEnabled"": [ 752, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt32\""}"" ]],
				 ""SpareBits"": [ 752, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]],
				 ""DataFlagsPad"": [ 756, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""TestRetInstruction"": [ 760, [ ""UInt64"", ""null"" ]],
				 ""QpcFrequency"": [ 768, [ ""Int64"", ""null"" ]],
				 ""SystemCallPad"": [ 776, [ ""Array"", ""{\""count\"":3,\""target\"":\""UInt64\""}"" ]],
				 ""TickCount"": [ 800, [ ""_KSYSTEM_TIME"", ""null"" ]],
				 ""TickCountQuad"": [ 800, [ ""UInt64"", ""null"" ]],
				 ""ReservedTickCountOverlay"": [ 800, [ ""Array"", ""{\""count\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""TickCountPad"": [ 812, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""Cookie"": [ 816, [ ""UInt32"", ""null"" ]],
				 ""CookiePad"": [ 820, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""ConsoleSessionForegroundProcessId"": [ 824, [ ""Int64"", ""null"" ]],
				 ""TimeUpdateLock"": [ 832, [ ""UInt64"", ""null"" ]],
				 ""BaselineSystemTimeQpc"": [ 840, [ ""UInt64"", ""null"" ]],
				 ""BaselineInterruptTimeQpc"": [ 848, [ ""UInt64"", ""null"" ]],
				 ""QpcSystemTimeIncrement"": [ 856, [ ""UInt64"", ""null"" ]],
				 ""QpcInterruptTimeIncrement"": [ 864, [ ""UInt64"", ""null"" ]],
				 ""QpcSystemTimeIncrement32"": [ 872, [ ""UInt32"", ""null"" ]],
				 ""QpcInterruptTimeIncrement32"": [ 876, [ ""UInt32"", ""null"" ]],
				 ""QpcSystemTimeIncrementShift"": [ 880, [ ""Byte"", ""null"" ]],
				 ""QpcInterruptTimeIncrementShift"": [ 881, [ ""Byte"", ""null"" ]],
				 ""UnparkedProcessorCount"": [ 882, [ ""UInt16"", ""null"" ]],
				 ""Reserved8"": [ 884, [ ""Array"", ""{\""count\"":12,\""target\"":\""Byte\""}"" ]],
				 ""UserModeGlobalLogger"": [ 896, [ ""Array"", ""{\""count\"":16,\""target\"":\""UInt16\""}"" ]],
				 ""ImageFileExecutionOptions"": [ 928, [ ""UInt32"", ""null"" ]],
				 ""LangGenerationCount"": [ 932, [ ""UInt32"", ""null"" ]],
				 ""Reserved4"": [ 936, [ ""UInt64"", ""null"" ]],
				 ""InterruptTimeBias"": [ 944, [ ""UInt64"", ""null"" ]],
				 ""QpcBias"": [ 952, [ ""UInt64"", ""null"" ]],
				 ""ActiveProcessorCount"": [ 960, [ ""UInt32"", ""null"" ]],
				 ""ActiveGroupCount"": [ 964, [ ""Byte"", ""null"" ]],
				 ""Reserved9"": [ 965, [ ""Byte"", ""null"" ]],
				 ""QpcData"": [ 966, [ ""UInt16"", ""null"" ]],
				 ""QpcBypassEnabled"": [ 966, [ ""Byte"", ""null"" ]],
				 ""QpcShift"": [ 967, [ ""Byte"", ""null"" ]],
				 ""TimeZoneBiasEffectiveStart"": [ 968, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""TimeZoneBiasEffectiveEnd"": [ 976, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""XState"": [ 984, [ ""_XSTATE_CONFIGURATION"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 TickCountLowDeprecated { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 TickCountMultiplier { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _KSYSTEM_TIME InterruptTime
		{
			get
			{
				_KSYSTEM_TIME returnValue = new _KSYSTEM_TIME(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _KSYSTEM_TIME SystemTime
		{
			get
			{
				_KSYSTEM_TIME returnValue = new _KSYSTEM_TIME(_StructureData, _BufferOffset + 20);
				return returnValue;
			}
		}
		public _KSYSTEM_TIME TimeZoneBias
		{
			get
			{
				_KSYSTEM_TIME returnValue = new _KSYSTEM_TIME(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt16 ImageNumberLow { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 44); } }
		public UInt16 ImageNumberHigh { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 46); } }
		public UInt16[] NtSystemRoot
		{
			get
			{
				UInt16[] returnValue = new UInt16[260];
				for(int i=0; i<260; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 48);
				return returnValue;
			}
		}
		public UInt32 MaxStackTraceDepth { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 568); } }
		public UInt32 CryptoExponent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 572); } }
		public UInt32 TimeZoneId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 576); } }
		public UInt32 LargePageMinimum { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 580); } }
		public UInt32 AitSamplingValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 584); } }
		public UInt32 AppCompatFlag { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 588); } }
		public UInt64 RNGSeedVersion { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 592); } }
		public UInt32 GlobalValidationRunlevel { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 600); } }
		public Int32 TimeZoneBiasStamp { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 604); } }
		public UInt32 Reserved2 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 608); } }
		public _NT_PRODUCT_TYPE NtProductType { get { return (_NT_PRODUCT_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 612); } }
		public Byte ProductTypeIsValid{ get { return _StructureData[_BufferOffset +616]; } }
		public Byte[] Reserved0
		{
			get
			{
				Byte[] returnValue = new Byte[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 617];
				return returnValue;
			}
		}
		public UInt16 NativeProcessorArchitecture { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 618); } }
		public UInt32 NtMajorVersion { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 620); } }
		public UInt32 NtMinorVersion { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 624); } }
		public Byte[] ProcessorFeatures
		{
			get
			{
				Byte[] returnValue = new Byte[64];
				for(int i=0; i<64; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 628];
				return returnValue;
			}
		}
		public UInt32 Reserved1 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 692); } }
		public UInt32 Reserved3 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 696); } }
		public UInt32 TimeSlip { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 700); } }
		public _ALTERNATIVE_ARCHITECTURE_TYPE AlternativeArchitecture { get { return (_ALTERNATIVE_ARCHITECTURE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 704); } }
		public UInt32[] AltArchitecturePad
		{
			get
			{
				UInt32[] returnValue = new UInt32[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 708);
				return returnValue;
			}
		}
		public _LARGE_INTEGER SystemExpirationDate
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 712);
				return returnValue;
			}
		}
		public UInt32 SuiteMask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 720); } }
		public Byte KdDebuggerEnabled{ get { return _StructureData[_BufferOffset +724]; } }
		public Byte MitigationPolicies{ get { return _StructureData[_BufferOffset +725]; } }
		public Byte NXSupportPolicy
		{
			get
			{
				// start: 0  end: 2  Mask: 0000000000000011
				Byte value = _StructureData[_BufferOffset + 725];
				var value2 = (value & 3) >> 0;
				return (Byte)value2;
			}
		}
		public Byte SEHValidationPolicy
		{
			get
			{
				// start: 2  end: 4  Mask: 0000000000001100
				Byte value = _StructureData[_BufferOffset + 725];
				var value2 = (value & 12) >> 2;
				return (Byte)value2;
			}
		}
		public Byte CurDirDevicesSkippedForDlls
		{
			get
			{
				// start: 4  end: 6  Mask: 0000000000110000
				Byte value = _StructureData[_BufferOffset + 725];
				var value2 = (value & 48) >> 4;
				return (Byte)value2;
			}
		}
		public Byte Reserved
		{
			get
			{
				// start: 6  end: 8  Mask: 0000000011000000
				Byte value = _StructureData[_BufferOffset + 725];
				var value2 = (value & 192) >> 6;
				return (Byte)value2;
			}
		}
		public Byte[] Reserved6
		{
			get
			{
				Byte[] returnValue = new Byte[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 726];
				return returnValue;
			}
		}
		public UInt32 ActiveConsoleId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 728); } }
		public UInt32 DismountCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 732); } }
		public UInt32 ComPlusPackage { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 736); } }
		public UInt32 LastSystemRITEventTickCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 740); } }
		public UInt32 NumberOfPhysicalPages { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 744); } }
		public Byte SafeBootMode{ get { return _StructureData[_BufferOffset +748]; } }
		public Byte[] Reserved12
		{
			get
			{
				Byte[] returnValue = new Byte[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 749];
				return returnValue;
			}
		}
		public UInt32 SharedDataFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 752); } }
		public UInt32 DbgErrorPortPresent
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 752);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 DbgElevationEnabled
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 752);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 DbgVirtEnabled
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 752);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 DbgInstallerDetectEnabled
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 752);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 DbgLkgEnabled
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 752);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 DbgDynProcessorEnabled
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 752);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 DbgConsoleBrokerEnabled
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 752);
				var value2 = (value & 64) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 DbgSecureBootEnabled
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 752);
				var value2 = (value & 128) >> 7;
				return (UInt32)value2;
			}
		}
		public UInt32 SpareBits
		{
			get
			{
				// start: 8  end: 32  Mask: 11111111111111111111111100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 752);
				var value2 = (value & 4294967040) >> 8;
				return (UInt32)value2;
			}
		}
		public UInt32[] DataFlagsPad
		{
			get
			{
				UInt32[] returnValue = new UInt32[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 756);
				return returnValue;
			}
		}
		public UInt64 TestRetInstruction { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 760); } }
		public Int64 QpcFrequency { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 768); } }
		public UInt64[] SystemCallPad
		{
			get
			{
				UInt64[] returnValue = new UInt64[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 776);
				return returnValue;
			}
		}
		public _KSYSTEM_TIME TickCount
		{
			get
			{
				_KSYSTEM_TIME returnValue = new _KSYSTEM_TIME(_StructureData, _BufferOffset + 800);
				return returnValue;
			}
		}
		public UInt64 TickCountQuad { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 800); } }
		public UInt32[] ReservedTickCountOverlay
		{
			get
			{
				UInt32[] returnValue = new UInt32[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 800);
				return returnValue;
			}
		}
		public UInt32[] TickCountPad
		{
			get
			{
				UInt32[] returnValue = new UInt32[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 812);
				return returnValue;
			}
		}
		public UInt32 Cookie { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 816); } }
		public UInt32[] CookiePad
		{
			get
			{
				UInt32[] returnValue = new UInt32[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 820);
				return returnValue;
			}
		}
		public Int64 ConsoleSessionForegroundProcessId { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 824); } }
		public UInt64 TimeUpdateLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 832); } }
		public UInt64 BaselineSystemTimeQpc { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 840); } }
		public UInt64 BaselineInterruptTimeQpc { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 848); } }
		public UInt64 QpcSystemTimeIncrement { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 856); } }
		public UInt64 QpcInterruptTimeIncrement { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 864); } }
		public UInt32 QpcSystemTimeIncrement32 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 872); } }
		public UInt32 QpcInterruptTimeIncrement32 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 876); } }
		public Byte QpcSystemTimeIncrementShift{ get { return _StructureData[_BufferOffset +880]; } }
		public Byte QpcInterruptTimeIncrementShift{ get { return _StructureData[_BufferOffset +881]; } }
		public UInt16 UnparkedProcessorCount { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 882); } }
		public Byte[] Reserved8
		{
			get
			{
				Byte[] returnValue = new Byte[12];
				for(int i=0; i<12; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 884];
				return returnValue;
			}
		}
		public UInt16[] UserModeGlobalLogger
		{
			get
			{
				UInt16[] returnValue = new UInt16[16];
				for(int i=0; i<16; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 896);
				return returnValue;
			}
		}
		public UInt32 ImageFileExecutionOptions { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 928); } }
		public UInt32 LangGenerationCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 932); } }
		public UInt64 Reserved4 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 936); } }
		public UInt64 InterruptTimeBias { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 944); } }
		public UInt64 QpcBias { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 952); } }
		public UInt32 ActiveProcessorCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 960); } }
		public Byte ActiveGroupCount{ get { return _StructureData[_BufferOffset +964]; } }
		public Byte Reserved9{ get { return _StructureData[_BufferOffset +965]; } }
		public UInt16 QpcData { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 966); } }
		public Byte QpcBypassEnabled{ get { return _StructureData[_BufferOffset +966]; } }
		public Byte QpcShift{ get { return _StructureData[_BufferOffset +967]; } }
		public _LARGE_INTEGER TimeZoneBiasEffectiveStart
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 968);
				return returnValue;
			}
		}
		public _LARGE_INTEGER TimeZoneBiasEffectiveEnd
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 976);
				return returnValue;
			}
		}
		public _XSTATE_CONFIGURATION XState
		{
			get
			{
				_XSTATE_CONFIGURATION returnValue = new _XSTATE_CONFIGURATION(_StructureData, _BufferOffset + 984);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_26823
 
	public class _UNNAMED_26823
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_26823(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_26823"": [ 8, {
				 ""LowPart"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""HighPart"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 LowPart { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 HighPart { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _ULARGE_INTEGER
 
	public class _ULARGE_INTEGER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ULARGE_INTEGER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ULARGE_INTEGER"": [ 8, {
				 ""LowPart"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""HighPart"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""u"": [ 0, [ ""_UNNAMED_26823"", ""null"" ]],
				 ""QuadPart"": [ 0, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 LowPart { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 HighPart { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _UNNAMED_26823 u
		{
			get
			{
				_UNNAMED_26823 returnValue = new _UNNAMED_26823(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 QuadPart { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_26831
 
	public class _UNNAMED_26831
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_26831(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_26831"": [ 8, {
				 ""LowPart"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""HighPart"": [ 4, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 LowPart { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Int32 HighPart { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _LARGE_INTEGER
 
	public class _LARGE_INTEGER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _LARGE_INTEGER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_LARGE_INTEGER"": [ 8, {
				 ""LowPart"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""HighPart"": [ 4, [ ""Int32"", ""null"" ]],
				 ""u"": [ 0, [ ""_UNNAMED_26831"", ""null"" ]],
				 ""QuadPart"": [ 0, [ ""Int64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 LowPart { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Int32 HighPart { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 4); } }
		public _UNNAMED_26831 u
		{
			get
			{
				_UNNAMED_26831 returnValue = new _UNNAMED_26831(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public Int64 QuadPart { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _TP_POOL
 
	public class _TP_POOL
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _TP_POOL(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_TP_POOL"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _TP_CLEANUP_GROUP
 
	public class _TP_CLEANUP_GROUP
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _TP_CLEANUP_GROUP(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_TP_CLEANUP_GROUP"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _ACTIVATION_CONTEXT
 
	public class _ACTIVATION_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ACTIVATION_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ACTIVATION_CONTEXT"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _TP_CALLBACK_INSTANCE
 
	public class _TP_CALLBACK_INSTANCE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _TP_CALLBACK_INSTANCE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_TP_CALLBACK_INSTANCE"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _UNNAMED_26838
 
	public class _UNNAMED_26838
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_26838(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_26838"": [ 4, {
				 ""LongFunction"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""Persistent"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""Private"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 LongFunction
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 Persistent
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 Private
		{
			get
			{
				// start: 2  end: 32  Mask: 11111111111111111111111111111100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967292) >> 2;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _UNNAMED_26842
 
	public class _UNNAMED_26842
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_26842(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_26842"": [ 4, {
				 ""Flags"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""s"": [ 0, [ ""_UNNAMED_26838"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _UNNAMED_26838 s
		{
			get
			{
				_UNNAMED_26838 returnValue = new _UNNAMED_26838(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _TP_CALLBACK_ENVIRON_V3
 
	public class _TP_CALLBACK_ENVIRON_V3
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _TP_CALLBACK_ENVIRON_V3(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_TP_CALLBACK_ENVIRON_V3"": [ 72, {
				 ""Version"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Pool"": [ 8, [ ""Pointer"", ""{\""target\"":\""_TP_POOL\""}"" ]],
				 ""CleanupGroup"": [ 16, [ ""Pointer"", ""{\""target\"":\""_TP_CLEANUP_GROUP\""}"" ]],
				 ""CleanupGroupCancelCallback"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""RaceDll"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ActivationContext"": [ 40, [ ""Pointer"", ""{\""target\"":\""_ACTIVATION_CONTEXT\""}"" ]],
				 ""FinalizationCallback"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""u"": [ 56, [ ""_UNNAMED_26842"", ""null"" ]],
				 ""CallbackPriority"": [ 60, [ ""Enumeration"", ""{\""enum_name\"":\""_TP_CALLBACK_PRIORITY\"",\""target\"":\""UInt32\""}"" ]],
				 ""Size"": [ 64, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Version { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 Pool { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 CleanupGroup { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 CleanupGroupCancelCallback { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 RaceDll { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 ActivationContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 FinalizationCallback { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public _UNNAMED_26842 u
		{
			get
			{
				_UNNAMED_26842 returnValue = new _UNNAMED_26842(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public _TP_CALLBACK_PRIORITY CallbackPriority { get { return (_TP_CALLBACK_PRIORITY)BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
		public UInt32 Size { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
	}
	#endregion
	#region _TEB
 
	public class _TEB
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _TEB(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 6176; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_TEB"": [ 6176, {
				 ""NtTib"": [ 0, [ ""_NT_TIB"", ""null"" ]],
				 ""EnvironmentPointer"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ClientId"": [ 64, [ ""_CLIENT_ID"", ""null"" ]],
				 ""ActiveRpcHandle"": [ 80, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ThreadLocalStoragePointer"": [ 88, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ProcessEnvironmentBlock"": [ 96, [ ""Pointer"", ""{\""target\"":\""_PEB\""}"" ]],
				 ""LastErrorValue"": [ 104, [ ""UInt32"", ""null"" ]],
				 ""CountOfOwnedCriticalSections"": [ 108, [ ""UInt32"", ""null"" ]],
				 ""CsrClientThread"": [ 112, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Win32ThreadInfo"": [ 120, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""User32Reserved"": [ 128, [ ""Array"", ""{\""count\"":26,\""target\"":\""UInt32\""}"" ]],
				 ""UserReserved"": [ 232, [ ""Array"", ""{\""count\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""WOW32Reserved"": [ 256, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CurrentLocale"": [ 264, [ ""UInt32"", ""null"" ]],
				 ""FpSoftwareStatusRegister"": [ 268, [ ""UInt32"", ""null"" ]],
				 ""SystemReserved1"": [ 272, [ ""Array"", ""{\""count\"":54,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]],
				 ""ExceptionCode"": [ 704, [ ""Int32"", ""null"" ]],
				 ""Padding0"": [ 708, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""ActivationContextStackPointer"": [ 712, [ ""Pointer"", ""{\""target\"":\""_ACTIVATION_CONTEXT_STACK\""}"" ]],
				 ""SpareBytes"": [ 720, [ ""Array"", ""{\""count\"":24,\""target\"":\""Byte\""}"" ]],
				 ""TxFsContext"": [ 744, [ ""UInt32"", ""null"" ]],
				 ""Padding1"": [ 748, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""GdiTebBatch"": [ 752, [ ""_GDI_TEB_BATCH"", ""null"" ]],
				 ""RealClientId"": [ 2008, [ ""_CLIENT_ID"", ""null"" ]],
				 ""GdiCachedProcessHandle"": [ 2024, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""GdiClientPID"": [ 2032, [ ""UInt32"", ""null"" ]],
				 ""GdiClientTID"": [ 2036, [ ""UInt32"", ""null"" ]],
				 ""GdiThreadLocalInfo"": [ 2040, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Win32ClientInfo"": [ 2048, [ ""Array"", ""{\""count\"":62,\""target\"":\""UInt64\""}"" ]],
				 ""glDispatchTable"": [ 2544, [ ""Array"", ""{\""count\"":233,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]],
				 ""glReserved1"": [ 4408, [ ""Array"", ""{\""count\"":29,\""target\"":\""UInt64\""}"" ]],
				 ""glReserved2"": [ 4640, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""glSectionInfo"": [ 4648, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""glSection"": [ 4656, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""glTable"": [ 4664, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""glCurrentRC"": [ 4672, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""glContext"": [ 4680, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""LastStatusValue"": [ 4688, [ ""UInt32"", ""null"" ]],
				 ""Padding2"": [ 4692, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""StaticUnicodeString"": [ 4696, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""StaticUnicodeBuffer"": [ 4712, [ ""Array"", ""{\""count\"":261,\""target\"":\""UInt16\""}"" ]],
				 ""Padding3"": [ 5234, [ ""Array"", ""{\""count\"":6,\""target\"":\""Byte\""}"" ]],
				 ""DeallocationStack"": [ 5240, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""TlsSlots"": [ 5248, [ ""Array"", ""{\""count\"":64,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]],
				 ""TlsLinks"": [ 5760, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Vdm"": [ 5776, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ReservedForNtRpc"": [ 5784, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DbgSsReserved"": [ 5792, [ ""Array"", ""{\""count\"":2,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]],
				 ""HardErrorMode"": [ 5808, [ ""UInt32"", ""null"" ]],
				 ""Padding4"": [ 5812, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""Instrumentation"": [ 5816, [ ""Array"", ""{\""count\"":11,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]],
				 ""ActivityId"": [ 5904, [ ""_GUID"", ""null"" ]],
				 ""SubProcessTag"": [ 5920, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PerflibData"": [ 5928, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""EtwTraceData"": [ 5936, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""WinSockData"": [ 5944, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""GdiBatchCount"": [ 5952, [ ""UInt32"", ""null"" ]],
				 ""CurrentIdealProcessor"": [ 5956, [ ""_PROCESSOR_NUMBER"", ""null"" ]],
				 ""IdealProcessorValue"": [ 5956, [ ""UInt32"", ""null"" ]],
				 ""ReservedPad0"": [ 5956, [ ""Byte"", ""null"" ]],
				 ""ReservedPad1"": [ 5957, [ ""Byte"", ""null"" ]],
				 ""ReservedPad2"": [ 5958, [ ""Byte"", ""null"" ]],
				 ""IdealProcessor"": [ 5959, [ ""Byte"", ""null"" ]],
				 ""GuaranteedStackBytes"": [ 5960, [ ""UInt32"", ""null"" ]],
				 ""Padding5"": [ 5964, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""ReservedForPerf"": [ 5968, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ReservedForOle"": [ 5976, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""WaitingOnLoaderLock"": [ 5984, [ ""UInt32"", ""null"" ]],
				 ""Padding6"": [ 5988, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""SavedPriorityState"": [ 5992, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ReservedForCodeCoverage"": [ 6000, [ ""UInt64"", ""null"" ]],
				 ""ThreadPoolData"": [ 6008, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""TlsExpansionSlots"": [ 6016, [ ""Pointer"", ""{\""target\"":\""void*\""}"" ]],
				 ""DeallocationBStore"": [ 6024, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""BStoreLimit"": [ 6032, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""MuiGeneration"": [ 6040, [ ""UInt32"", ""null"" ]],
				 ""IsImpersonating"": [ 6044, [ ""UInt32"", ""null"" ]],
				 ""NlsCache"": [ 6048, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""pShimData"": [ 6056, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""HeapVirtualAffinity"": [ 6064, [ ""UInt16"", ""null"" ]],
				 ""LowFragHeapDataSlot"": [ 6066, [ ""UInt16"", ""null"" ]],
				 ""Padding7"": [ 6068, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""CurrentTransactionHandle"": [ 6072, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ActiveFrame"": [ 6080, [ ""Pointer"", ""{\""target\"":\""_TEB_ACTIVE_FRAME\""}"" ]],
				 ""FlsData"": [ 6088, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PreferredLanguages"": [ 6096, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""UserPrefLanguages"": [ 6104, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""MergedPrefLanguages"": [ 6112, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""MuiImpersonation"": [ 6120, [ ""UInt32"", ""null"" ]],
				 ""CrossTebFlags"": [ 6124, [ ""UInt16"", ""null"" ]],
				 ""SpareCrossTebBits"": [ 6124, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""SameTebFlags"": [ 6126, [ ""UInt16"", ""null"" ]],
				 ""SafeThunkCall"": [ 6126, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""InDebugPrint"": [ 6126, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt16\""}"" ]],
				 ""HasFiberData"": [ 6126, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt16\""}"" ]],
				 ""SkipThreadAttach"": [ 6126, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt16\""}"" ]],
				 ""WerInShipAssertCode"": [ 6126, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt16\""}"" ]],
				 ""RanProcessInit"": [ 6126, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt16\""}"" ]],
				 ""ClonedThread"": [ 6126, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt16\""}"" ]],
				 ""SuppressDebugMsg"": [ 6126, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt16\""}"" ]],
				 ""DisableUserStackWalk"": [ 6126, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt16\""}"" ]],
				 ""RtlExceptionAttached"": [ 6126, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt16\""}"" ]],
				 ""InitialThread"": [ 6126, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt16\""}"" ]],
				 ""SessionAware"": [ 6126, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt16\""}"" ]],
				 ""SpareSameTebBits"": [ 6126, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":12,\""target\"":\""UInt16\""}"" ]],
				 ""TxnScopeEnterCallback"": [ 6128, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""TxnScopeExitCallback"": [ 6136, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""TxnScopeContext"": [ 6144, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""LockCount"": [ 6152, [ ""UInt32"", ""null"" ]],
				 ""SpareUlong0"": [ 6156, [ ""UInt32"", ""null"" ]],
				 ""ResourceRetValue"": [ 6160, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ReservedForWdf"": [ 6168, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public _NT_TIB NtTib
		{
			get
			{
				_NT_TIB returnValue = new _NT_TIB(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 EnvironmentPointer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public _CLIENT_ID ClientId
		{
			get
			{
				_CLIENT_ID returnValue = new _CLIENT_ID(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public UInt64 ActiveRpcHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 ThreadLocalStoragePointer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 ProcessEnvironmentBlock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt32 LastErrorValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 104); } }
		public UInt32 CountOfOwnedCriticalSections { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 108); } }
		public UInt64 CsrClientThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 112); } }
		public UInt64 Win32ThreadInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 120); } }
		public UInt32[] User32Reserved
		{
			get
			{
				UInt32[] returnValue = new UInt32[26];
				for(int i=0; i<26; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 128);
				return returnValue;
			}
		}
		public UInt32[] UserReserved
		{
			get
			{
				UInt32[] returnValue = new UInt32[5];
				for(int i=0; i<5; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 232);
				return returnValue;
			}
		}
		public UInt64 WOW32Reserved { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 256); } }
		public UInt32 CurrentLocale { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 264); } }
		public UInt32 FpSoftwareStatusRegister { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 268); } }
		public UInt64[] SystemReserved1
		{
			get
			{
				UInt64[] returnValue = new UInt64[54];
				int size = 8;
				for(int i=0; i<54; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 272);
				return returnValue;
			}
		}
		public Int32 ExceptionCode { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 704); } }
		public Byte[] Padding0
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 708];
				return returnValue;
			}
		}
		public UInt64 ActivationContextStackPointer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 712); } }
		public Byte[] SpareBytes
		{
			get
			{
				Byte[] returnValue = new Byte[24];
				for(int i=0; i<24; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 720];
				return returnValue;
			}
		}
		public UInt32 TxFsContext { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 744); } }
		public Byte[] Padding1
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 748];
				return returnValue;
			}
		}
		public _GDI_TEB_BATCH GdiTebBatch
		{
			get
			{
				_GDI_TEB_BATCH returnValue = new _GDI_TEB_BATCH(_StructureData, _BufferOffset + 752);
				return returnValue;
			}
		}
		public _CLIENT_ID RealClientId
		{
			get
			{
				_CLIENT_ID returnValue = new _CLIENT_ID(_StructureData, _BufferOffset + 2008);
				return returnValue;
			}
		}
		public UInt64 GdiCachedProcessHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 2024); } }
		public UInt32 GdiClientPID { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 2032); } }
		public UInt32 GdiClientTID { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 2036); } }
		public UInt64 GdiThreadLocalInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 2040); } }
		public UInt64[] Win32ClientInfo
		{
			get
			{
				UInt64[] returnValue = new UInt64[62];
				for(int i=0; i<62; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 2048);
				return returnValue;
			}
		}
		public UInt64[] glDispatchTable
		{
			get
			{
				UInt64[] returnValue = new UInt64[233];
				int size = 8;
				for(int i=0; i<233; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 2544);
				return returnValue;
			}
		}
		public UInt64[] glReserved1
		{
			get
			{
				UInt64[] returnValue = new UInt64[29];
				for(int i=0; i<29; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 4408);
				return returnValue;
			}
		}
		public UInt64 glReserved2 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 4640); } }
		public UInt64 glSectionInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 4648); } }
		public UInt64 glSection { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 4656); } }
		public UInt64 glTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 4664); } }
		public UInt64 glCurrentRC { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 4672); } }
		public UInt64 glContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 4680); } }
		public UInt32 LastStatusValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4688); } }
		public Byte[] Padding2
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 4692];
				return returnValue;
			}
		}
		public _UNICODE_STRING StaticUnicodeString
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 4696);
				return returnValue;
			}
		}
		public UInt16[] StaticUnicodeBuffer
		{
			get
			{
				UInt16[] returnValue = new UInt16[261];
				for(int i=0; i<261; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 4712);
				return returnValue;
			}
		}
		public Byte[] Padding3
		{
			get
			{
				Byte[] returnValue = new Byte[6];
				for(int i=0; i<6; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 5234];
				return returnValue;
			}
		}
		public UInt64 DeallocationStack { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 5240); } }
		public UInt64[] TlsSlots
		{
			get
			{
				UInt64[] returnValue = new UInt64[64];
				int size = 8;
				for(int i=0; i<64; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 5248);
				return returnValue;
			}
		}
		public _LIST_ENTRY TlsLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 5760);
				return returnValue;
			}
		}
		public UInt64 Vdm { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 5776); } }
		public UInt64 ReservedForNtRpc { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 5784); } }
		public UInt64[] DbgSsReserved
		{
			get
			{
				UInt64[] returnValue = new UInt64[2];
				int size = 8;
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 5792);
				return returnValue;
			}
		}
		public UInt32 HardErrorMode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 5808); } }
		public Byte[] Padding4
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 5812];
				return returnValue;
			}
		}
		public UInt64[] Instrumentation
		{
			get
			{
				UInt64[] returnValue = new UInt64[11];
				int size = 8;
				for(int i=0; i<11; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 5816);
				return returnValue;
			}
		}
		public _GUID ActivityId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 5904);
				return returnValue;
			}
		}
		public UInt64 SubProcessTag { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 5920); } }
		public UInt64 PerflibData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 5928); } }
		public UInt64 EtwTraceData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 5936); } }
		public UInt64 WinSockData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 5944); } }
		public UInt32 GdiBatchCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 5952); } }
		public _PROCESSOR_NUMBER CurrentIdealProcessor
		{
			get
			{
				_PROCESSOR_NUMBER returnValue = new _PROCESSOR_NUMBER(_StructureData, _BufferOffset + 5956);
				return returnValue;
			}
		}
		public UInt32 IdealProcessorValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 5956); } }
		public Byte ReservedPad0{ get { return _StructureData[_BufferOffset +5956]; } }
		public Byte ReservedPad1{ get { return _StructureData[_BufferOffset +5957]; } }
		public Byte ReservedPad2{ get { return _StructureData[_BufferOffset +5958]; } }
		public Byte IdealProcessor{ get { return _StructureData[_BufferOffset +5959]; } }
		public UInt32 GuaranteedStackBytes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 5960); } }
		public Byte[] Padding5
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 5964];
				return returnValue;
			}
		}
		public UInt64 ReservedForPerf { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 5968); } }
		public UInt64 ReservedForOle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 5976); } }
		public UInt32 WaitingOnLoaderLock { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 5984); } }
		public Byte[] Padding6
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 5988];
				return returnValue;
			}
		}
		public UInt64 SavedPriorityState { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 5992); } }
		public UInt64 ReservedForCodeCoverage { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6000); } }
		public UInt64 ThreadPoolData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6008); } }
		public UInt64 TlsExpansionSlots { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6016); } }
		public UInt64 DeallocationBStore { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6024); } }
		public UInt64 BStoreLimit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6032); } }
		public UInt32 MuiGeneration { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 6040); } }
		public UInt32 IsImpersonating { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 6044); } }
		public UInt64 NlsCache { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6048); } }
		public UInt64 pShimData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6056); } }
		public UInt16 HeapVirtualAffinity { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6064); } }
		public UInt16 LowFragHeapDataSlot { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6066); } }
		public Byte[] Padding7
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 6068];
				return returnValue;
			}
		}
		public UInt64 CurrentTransactionHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6072); } }
		public UInt64 ActiveFrame { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6080); } }
		public UInt64 FlsData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6088); } }
		public UInt64 PreferredLanguages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6096); } }
		public UInt64 UserPrefLanguages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6104); } }
		public UInt64 MergedPrefLanguages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6112); } }
		public UInt32 MuiImpersonation { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 6120); } }
		public UInt16 CrossTebFlags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6124); } }
		public UInt16 SpareCrossTebBits
		{
			get
			{
				// start: 0  end: 16  Mask: 1111111111111111
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6124);
				var value2 = (value & 65535) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 SameTebFlags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126); } }
		public UInt16 SafeThunkCall
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 1) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 InDebugPrint
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 2) >> 1;
				return (UInt16)value2;
			}
		}
		public UInt16 HasFiberData
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 4) >> 2;
				return (UInt16)value2;
			}
		}
		public UInt16 SkipThreadAttach
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 8) >> 3;
				return (UInt16)value2;
			}
		}
		public UInt16 WerInShipAssertCode
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 16) >> 4;
				return (UInt16)value2;
			}
		}
		public UInt16 RanProcessInit
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 32) >> 5;
				return (UInt16)value2;
			}
		}
		public UInt16 ClonedThread
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 64) >> 6;
				return (UInt16)value2;
			}
		}
		public UInt16 SuppressDebugMsg
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 128) >> 7;
				return (UInt16)value2;
			}
		}
		public UInt16 DisableUserStackWalk
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 256) >> 8;
				return (UInt16)value2;
			}
		}
		public UInt16 RtlExceptionAttached
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 512) >> 9;
				return (UInt16)value2;
			}
		}
		public UInt16 InitialThread
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 1024) >> 10;
				return (UInt16)value2;
			}
		}
		public UInt16 SessionAware
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 2048) >> 11;
				return (UInt16)value2;
			}
		}
		public UInt16 SpareSameTebBits
		{
			get
			{
				// start: 12  end: 16  Mask: 1111000000000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 61440) >> 12;
				return (UInt16)value2;
			}
		}
		public UInt64 TxnScopeEnterCallback { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6128); } }
		public UInt64 TxnScopeExitCallback { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6136); } }
		public UInt64 TxnScopeContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6144); } }
		public UInt32 LockCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 6152); } }
		public UInt32 SpareUlong0 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 6156); } }
		public UInt64 ResourceRetValue { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6160); } }
		public UInt64 ReservedForWdf { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6168); } }
	}
	#endregion
	#region _LIST_ENTRY
 
	public class _LIST_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _LIST_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_LIST_ENTRY"": [ 16, {
				 ""Flink"": [ 0, [ ""Pointer"", ""{\""target\"":\""_LIST_ENTRY\""}"" ]],
				 ""Blink"": [ 8, [ ""Pointer"", ""{\""target\"":\""_LIST_ENTRY\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Flink { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Blink { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _SINGLE_LIST_ENTRY
 
	public class _SINGLE_LIST_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SINGLE_LIST_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SINGLE_LIST_ENTRY"": [ 8, {
				 ""Next"": [ 0, [ ""Pointer"", ""{\""target\"":\""_SINGLE_LIST_ENTRY\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Next { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _RTL_SPLAY_LINKS
 
	public class _RTL_SPLAY_LINKS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_SPLAY_LINKS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_SPLAY_LINKS"": [ 24, {
				 ""Parent"": [ 0, [ ""Pointer"", ""{\""target\"":\""_RTL_SPLAY_LINKS\""}"" ]],
				 ""LeftChild"": [ 8, [ ""Pointer"", ""{\""target\"":\""_RTL_SPLAY_LINKS\""}"" ]],
				 ""RightChild"": [ 16, [ ""Pointer"", ""{\""target\"":\""_RTL_SPLAY_LINKS\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Parent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 LeftChild { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 RightChild { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _RTL_DYNAMIC_HASH_TABLE_CONTEXT
 
	public class _RTL_DYNAMIC_HASH_TABLE_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_DYNAMIC_HASH_TABLE_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_DYNAMIC_HASH_TABLE_CONTEXT"": [ 24, {
				 ""ChainHead"": [ 0, [ ""Pointer"", ""{\""target\"":\""_LIST_ENTRY\""}"" ]],
				 ""PrevLinkage"": [ 8, [ ""Pointer"", ""{\""target\"":\""_LIST_ENTRY\""}"" ]],
				 ""Signature"": [ 16, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ChainHead { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 PrevLinkage { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Signature { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR
 
	public class _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_DYNAMIC_HASH_TABLE_ENUMERATOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_DYNAMIC_HASH_TABLE_ENUMERATOR"": [ 40, {
				 ""HashEntry"": [ 0, [ ""_RTL_DYNAMIC_HASH_TABLE_ENTRY"", ""null"" ]],
				 ""ChainHead"": [ 24, [ ""Pointer"", ""{\""target\"":\""_LIST_ENTRY\""}"" ]],
				 ""BucketIndex"": [ 32, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _RTL_DYNAMIC_HASH_TABLE_ENTRY HashEntry
		{
			get
			{
				_RTL_DYNAMIC_HASH_TABLE_ENTRY returnValue = new _RTL_DYNAMIC_HASH_TABLE_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 ChainHead { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt32 BucketIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _RTL_DYNAMIC_HASH_TABLE
 
	public class _RTL_DYNAMIC_HASH_TABLE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_DYNAMIC_HASH_TABLE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_DYNAMIC_HASH_TABLE"": [ 40, {
				 ""Flags"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Shift"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""TableSize"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Pivot"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""DivisorMask"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""NumEntries"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""NonEmptyBuckets"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""NumEnumerators"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""Directory"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Shift { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 TableSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Pivot { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 DivisorMask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 NumEntries { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 NonEmptyBuckets { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 NumEnumerators { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt64 Directory { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _UNICODE_STRING
 
	public class _UNICODE_STRING
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNICODE_STRING(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNICODE_STRING"": [ 16, {
				 ""Length"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""MaximumLength"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Buffer"": [ 8, [ ""Pointer"", ""{\""target\"":\""UInt16\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Length { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 MaximumLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt64 Buffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _STRING
 
	public class _STRING
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _STRING(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_STRING"": [ 16, {
				 ""Length"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""MaximumLength"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Buffer"": [ 8, [ ""Pointer"", ""{\""target\"":\""char\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Length { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 MaximumLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt64 Buffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _RTL_BITMAP
 
	public class _RTL_BITMAP
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_BITMAP(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_BITMAP"": [ 16, {
				 ""SizeOfBitMap"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Buffer"": [ 8, [ ""Pointer"", ""{\""target\"":\""unsigned long\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 SizeOfBitMap { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 Buffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _LUID
 
	public class _LUID
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _LUID(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_LUID"": [ 8, {
				 ""LowPart"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""HighPart"": [ 4, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 LowPart { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Int32 HighPart { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _IMAGE_NT_HEADERS64
 
	public class _IMAGE_NT_HEADERS64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IMAGE_NT_HEADERS64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 264; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IMAGE_NT_HEADERS64"": [ 264, {
				 ""Signature"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""FileHeader"": [ 4, [ ""_IMAGE_FILE_HEADER"", ""null"" ]],
				 ""OptionalHeader"": [ 24, [ ""_IMAGE_OPTIONAL_HEADER64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Signature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _IMAGE_FILE_HEADER FileHeader
		{
			get
			{
				_IMAGE_FILE_HEADER returnValue = new _IMAGE_FILE_HEADER(_StructureData, _BufferOffset + 4);
				return returnValue;
			}
		}
		public _IMAGE_OPTIONAL_HEADER64 OptionalHeader
		{
			get
			{
				_IMAGE_OPTIONAL_HEADER64 returnValue = new _IMAGE_OPTIONAL_HEADER64(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
	}
	#endregion
	#region _IMAGE_DOS_HEADER
 
	public class _IMAGE_DOS_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IMAGE_DOS_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IMAGE_DOS_HEADER"": [ 64, {
				 ""e_magic"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""e_cblp"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""e_cp"": [ 4, [ ""UInt16"", ""null"" ]],
				 ""e_crlc"": [ 6, [ ""UInt16"", ""null"" ]],
				 ""e_cparhdr"": [ 8, [ ""UInt16"", ""null"" ]],
				 ""e_minalloc"": [ 10, [ ""UInt16"", ""null"" ]],
				 ""e_maxalloc"": [ 12, [ ""UInt16"", ""null"" ]],
				 ""e_ss"": [ 14, [ ""UInt16"", ""null"" ]],
				 ""e_sp"": [ 16, [ ""UInt16"", ""null"" ]],
				 ""e_csum"": [ 18, [ ""UInt16"", ""null"" ]],
				 ""e_ip"": [ 20, [ ""UInt16"", ""null"" ]],
				 ""e_cs"": [ 22, [ ""UInt16"", ""null"" ]],
				 ""e_lfarlc"": [ 24, [ ""UInt16"", ""null"" ]],
				 ""e_ovno"": [ 26, [ ""UInt16"", ""null"" ]],
				 ""e_res"": [ 28, [ ""Array"", ""{\""count\"":4,\""target\"":\""UInt16\""}"" ]],
				 ""e_oemid"": [ 36, [ ""UInt16"", ""null"" ]],
				 ""e_oeminfo"": [ 38, [ ""UInt16"", ""null"" ]],
				 ""e_res2"": [ 40, [ ""Array"", ""{\""count\"":10,\""target\"":\""UInt16\""}"" ]],
				 ""e_lfanew"": [ 60, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 e_magic { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 e_cblp { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt16 e_cp { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 4); } }
		public UInt16 e_crlc { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
		public UInt16 e_cparhdr { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 8); } }
		public UInt16 e_minalloc { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 10); } }
		public UInt16 e_maxalloc { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 12); } }
		public UInt16 e_ss { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 14); } }
		public UInt16 e_sp { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 16); } }
		public UInt16 e_csum { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 18); } }
		public UInt16 e_ip { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 20); } }
		public UInt16 e_cs { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 22); } }
		public UInt16 e_lfarlc { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 24); } }
		public UInt16 e_ovno { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 26); } }
		public UInt16[] e_res
		{
			get
			{
				UInt16[] returnValue = new UInt16[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 28);
				return returnValue;
			}
		}
		public UInt16 e_oemid { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 36); } }
		public UInt16 e_oeminfo { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 38); } }
		public UInt16[] e_res2
		{
			get
			{
				UInt16[] returnValue = new UInt16[10];
				for(int i=0; i<10; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 40);
				return returnValue;
			}
		}
		public Int32 e_lfanew { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 60); } }
	}
	#endregion
	#region _RTL_BALANCED_NODE
 
	public class _RTL_BALANCED_NODE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_BALANCED_NODE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_BALANCED_NODE"": [ 24, {
				 ""Children"": [ 0, [ ""Array"", ""{\""count\"":2,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""_RTL_BALANCED_NODE\""}}"" ]],
				 ""Left"": [ 0, [ ""Pointer"", ""{\""target\"":\""_RTL_BALANCED_NODE\""}"" ]],
				 ""Right"": [ 8, [ ""Pointer"", ""{\""target\"":\""_RTL_BALANCED_NODE\""}"" ]],
				 ""Red"": [ 16, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""Balance"": [ 16, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""ParentValue"": [ 16, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64[] Children
		{
			get
			{
				UInt64[] returnValue = new UInt64[2];
				int size = 8;
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Left { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Right { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public Byte Red
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 16];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte Balance
		{
			get
			{
				// start: 0  end: 2  Mask: 0000000000000011
				Byte value = _StructureData[_BufferOffset + 16];
				var value2 = (value & 3) >> 0;
				return (Byte)value2;
			}
		}
		public UInt64 ParentValue { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _RTL_RB_TREE
 
	public class _RTL_RB_TREE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_RB_TREE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_RB_TREE"": [ 16, {
				 ""Root"": [ 0, [ ""Pointer"", ""{\""target\"":\""_RTL_BALANCED_NODE\""}"" ]],
				 ""Min"": [ 8, [ ""Pointer"", ""{\""target\"":\""_RTL_BALANCED_NODE\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Root { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Min { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _RTL_AVL_TREE
 
	public class _RTL_AVL_TREE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_AVL_TREE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_AVL_TREE"": [ 8, {
				 ""Root"": [ 0, [ ""Pointer"", ""{\""target\"":\""_RTL_BALANCED_NODE\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Root { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _GUID
 
	public class _GUID
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _GUID(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_GUID"": [ 16, {
				 ""Data1"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Data2"": [ 4, [ ""UInt16"", ""null"" ]],
				 ""Data3"": [ 6, [ ""UInt16"", ""null"" ]],
				 ""Data4"": [ 8, [ ""Array"", ""{\""count\"":8,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Data1 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt16 Data2 { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 4); } }
		public UInt16 Data3 { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
		public Byte[] Data4
		{
			get
			{
				Byte[] returnValue = new Byte[8];
				for(int i=0; i<8; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 8];
				return returnValue;
			}
		}
	}
	#endregion
	#region _KPCR
 
	public class _KPCR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KPCR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24320; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KPCR"": [ 24320, {
				 ""NtTib"": [ 0, [ ""_NT_TIB"", ""null"" ]],
				 ""GdtBase"": [ 0, [ ""Pointer"", ""{\""target\"":\""_KGDTENTRY64\""}"" ]],
				 ""TssBase"": [ 8, [ ""Pointer"", ""{\""target\"":\""_KTSS64\""}"" ]],
				 ""UserRsp"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""Self"": [ 24, [ ""Pointer"", ""{\""target\"":\""_KPCR\""}"" ]],
				 ""CurrentPrcb"": [ 32, [ ""Pointer"", ""{\""target\"":\""_KPRCB\""}"" ]],
				 ""LockArray"": [ 40, [ ""Pointer"", ""{\""target\"":\""_KSPIN_LOCK_QUEUE\""}"" ]],
				 ""Used_Self"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""IdtBase"": [ 56, [ ""Pointer"", ""{\""target\"":\""_KIDTENTRY64\""}"" ]],
				 ""Unused"": [ 64, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt64\""}"" ]],
				 ""Irql"": [ 80, [ ""Byte"", ""null"" ]],
				 ""SecondLevelCacheAssociativity"": [ 81, [ ""Byte"", ""null"" ]],
				 ""ObsoleteNumber"": [ 82, [ ""Byte"", ""null"" ]],
				 ""Fill0"": [ 83, [ ""Byte"", ""null"" ]],
				 ""Unused0"": [ 84, [ ""Array"", ""{\""count\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""MajorVersion"": [ 96, [ ""UInt16"", ""null"" ]],
				 ""MinorVersion"": [ 98, [ ""UInt16"", ""null"" ]],
				 ""StallScaleFactor"": [ 100, [ ""UInt32"", ""null"" ]],
				 ""Unused1"": [ 104, [ ""Array"", ""{\""count\"":3,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]],
				 ""KernelReserved"": [ 128, [ ""Array"", ""{\""count\"":15,\""target\"":\""UInt32\""}"" ]],
				 ""SecondLevelCacheSize"": [ 188, [ ""UInt32"", ""null"" ]],
				 ""HalReserved"": [ 192, [ ""Array"", ""{\""count\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""Unused2"": [ 256, [ ""UInt32"", ""null"" ]],
				 ""KdVersionBlock"": [ 264, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Unused3"": [ 272, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PcrAlign1"": [ 280, [ ""Array"", ""{\""count\"":24,\""target\"":\""UInt32\""}"" ]],
				 ""Prcb"": [ 384, [ ""_KPRCB"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _NT_TIB NtTib
		{
			get
			{
				_NT_TIB returnValue = new _NT_TIB(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 GdtBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 TssBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 UserRsp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Self { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 CurrentPrcb { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 LockArray { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 Used_Self { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 IdtBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64[] Unused
		{
			get
			{
				UInt64[] returnValue = new UInt64[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 64);
				return returnValue;
			}
		}
		public Byte Irql{ get { return _StructureData[_BufferOffset +80]; } }
		public Byte SecondLevelCacheAssociativity{ get { return _StructureData[_BufferOffset +81]; } }
		public Byte ObsoleteNumber{ get { return _StructureData[_BufferOffset +82]; } }
		public Byte Fill0{ get { return _StructureData[_BufferOffset +83]; } }
		public UInt32[] Unused0
		{
			get
			{
				UInt32[] returnValue = new UInt32[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 84);
				return returnValue;
			}
		}
		public UInt16 MajorVersion { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 96); } }
		public UInt16 MinorVersion { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 98); } }
		public UInt32 StallScaleFactor { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 100); } }
		public UInt64[] Unused1
		{
			get
			{
				UInt64[] returnValue = new UInt64[3];
				int size = 8;
				for(int i=0; i<3; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 104);
				return returnValue;
			}
		}
		public UInt32[] KernelReserved
		{
			get
			{
				UInt32[] returnValue = new UInt32[15];
				for(int i=0; i<15; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 128);
				return returnValue;
			}
		}
		public UInt32 SecondLevelCacheSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 188); } }
		public UInt32[] HalReserved
		{
			get
			{
				UInt32[] returnValue = new UInt32[16];
				for(int i=0; i<16; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 192);
				return returnValue;
			}
		}
		public UInt32 Unused2 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 256); } }
		public UInt64 KdVersionBlock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 264); } }
		public UInt64 Unused3 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 272); } }
		public UInt32[] PcrAlign1
		{
			get
			{
				UInt32[] returnValue = new UInt32[24];
				for(int i=0; i<24; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 280);
				return returnValue;
			}
		}
		public _KPRCB Prcb
		{
			get
			{
				_KPRCB returnValue = new _KPRCB(_StructureData, _BufferOffset + 384);
				return returnValue;
			}
		}
	}
	#endregion
	#region _KPRCB
 
	public class _KPRCB
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KPRCB(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 23936; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KPRCB"": [ 23936, {
				 ""MxCsr"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""LegacyNumber"": [ 4, [ ""Byte"", ""null"" ]],
				 ""ReservedMustBeZero"": [ 5, [ ""Byte"", ""null"" ]],
				 ""InterruptRequest"": [ 6, [ ""Byte"", ""null"" ]],
				 ""IdleHalt"": [ 7, [ ""Byte"", ""null"" ]],
				 ""CurrentThread"": [ 8, [ ""Pointer"", ""{\""target\"":\""_KTHREAD\""}"" ]],
				 ""NextThread"": [ 16, [ ""Pointer"", ""{\""target\"":\""_KTHREAD\""}"" ]],
				 ""IdleThread"": [ 24, [ ""Pointer"", ""{\""target\"":\""_KTHREAD\""}"" ]],
				 ""NestingLevel"": [ 32, [ ""Byte"", ""null"" ]],
				 ""ClockOwner"": [ 33, [ ""Byte"", ""null"" ]],
				 ""PendingTickFlags"": [ 34, [ ""Byte"", ""null"" ]],
				 ""PendingTick"": [ 34, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""PendingBackupTick"": [ 34, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""PrcbPad00"": [ 35, [ ""Array"", ""{\""count\"":1,\""target\"":\""Byte\""}"" ]],
				 ""Number"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""RspBase"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""PrcbLock"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""PriorityState"": [ 56, [ ""Pointer"", ""{\""target\"":\""char\""}"" ]],
				 ""ProcessorState"": [ 64, [ ""_KPROCESSOR_STATE"", ""null"" ]],
				 ""CpuType"": [ 1520, [ ""Char"", ""null"" ]],
				 ""CpuID"": [ 1521, [ ""Char"", ""null"" ]],
				 ""CpuStep"": [ 1522, [ ""UInt16"", ""null"" ]],
				 ""CpuStepping"": [ 1522, [ ""Byte"", ""null"" ]],
				 ""CpuModel"": [ 1523, [ ""Byte"", ""null"" ]],
				 ""MHz"": [ 1524, [ ""UInt32"", ""null"" ]],
				 ""HalReserved"": [ 1528, [ ""Array"", ""{\""count\"":8,\""target\"":\""UInt64\""}"" ]],
				 ""MinorVersion"": [ 1592, [ ""UInt16"", ""null"" ]],
				 ""MajorVersion"": [ 1594, [ ""UInt16"", ""null"" ]],
				 ""BuildType"": [ 1596, [ ""Byte"", ""null"" ]],
				 ""CpuVendor"": [ 1597, [ ""Byte"", ""null"" ]],
				 ""CoresPerPhysicalProcessor"": [ 1598, [ ""Byte"", ""null"" ]],
				 ""LogicalProcessorsPerCore"": [ 1599, [ ""Byte"", ""null"" ]],
				 ""ParentNode"": [ 1600, [ ""Pointer"", ""{\""target\"":\""_KNODE\""}"" ]],
				 ""GroupSetMember"": [ 1608, [ ""UInt64"", ""null"" ]],
				 ""Group"": [ 1616, [ ""Byte"", ""null"" ]],
				 ""GroupIndex"": [ 1617, [ ""Byte"", ""null"" ]],
				 ""PrcbPad05"": [ 1618, [ ""Array"", ""{\""count\"":2,\""target\"":\""Byte\""}"" ]],
				 ""ApicMask"": [ 1620, [ ""UInt32"", ""null"" ]],
				 ""CFlushSize"": [ 1624, [ ""UInt32"", ""null"" ]],
				 ""AcpiReserved"": [ 1632, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""InitialApicId"": [ 1640, [ ""UInt32"", ""null"" ]],
				 ""LockQueue"": [ 1648, [ ""Array"", ""{\""count\"":17,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""PPLookasideList"": [ 1920, [ ""Array"", ""{\""count\"":16,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""PPNxPagedLookasideList"": [ 2176, [ ""Array"", ""{\""count\"":32,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""PPNPagedLookasideList"": [ 5248, [ ""Array"", ""{\""count\"":32,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""PPPagedLookasideList"": [ 8320, [ ""Array"", ""{\""count\"":32,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""PrcbPad20"": [ 11392, [ ""UInt64"", ""null"" ]],
				 ""DeferredReadyListHead"": [ 11400, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""MmPageFaultCount"": [ 11408, [ ""Int32"", ""null"" ]],
				 ""MmCopyOnWriteCount"": [ 11412, [ ""Int32"", ""null"" ]],
				 ""MmTransitionCount"": [ 11416, [ ""Int32"", ""null"" ]],
				 ""MmDemandZeroCount"": [ 11420, [ ""Int32"", ""null"" ]],
				 ""MmPageReadCount"": [ 11424, [ ""Int32"", ""null"" ]],
				 ""MmPageReadIoCount"": [ 11428, [ ""Int32"", ""null"" ]],
				 ""MmDirtyPagesWriteCount"": [ 11432, [ ""Int32"", ""null"" ]],
				 ""MmDirtyWriteIoCount"": [ 11436, [ ""Int32"", ""null"" ]],
				 ""MmMappedPagesWriteCount"": [ 11440, [ ""Int32"", ""null"" ]],
				 ""MmMappedWriteIoCount"": [ 11444, [ ""Int32"", ""null"" ]],
				 ""KeSystemCalls"": [ 11448, [ ""UInt32"", ""null"" ]],
				 ""KeContextSwitches"": [ 11452, [ ""UInt32"", ""null"" ]],
				 ""LdtSelector"": [ 11456, [ ""UInt16"", ""null"" ]],
				 ""PrcbPad40"": [ 11458, [ ""UInt16"", ""null"" ]],
				 ""CcFastReadNoWait"": [ 11460, [ ""UInt32"", ""null"" ]],
				 ""CcFastReadWait"": [ 11464, [ ""UInt32"", ""null"" ]],
				 ""CcFastReadNotPossible"": [ 11468, [ ""UInt32"", ""null"" ]],
				 ""CcCopyReadNoWait"": [ 11472, [ ""UInt32"", ""null"" ]],
				 ""CcCopyReadWait"": [ 11476, [ ""UInt32"", ""null"" ]],
				 ""CcCopyReadNoWaitMiss"": [ 11480, [ ""UInt32"", ""null"" ]],
				 ""IoReadOperationCount"": [ 11484, [ ""Int32"", ""null"" ]],
				 ""IoWriteOperationCount"": [ 11488, [ ""Int32"", ""null"" ]],
				 ""IoOtherOperationCount"": [ 11492, [ ""Int32"", ""null"" ]],
				 ""IoReadTransferCount"": [ 11496, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""IoWriteTransferCount"": [ 11504, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""IoOtherTransferCount"": [ 11512, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""PacketBarrier"": [ 11520, [ ""Int32"", ""null"" ]],
				 ""TargetCount"": [ 11524, [ ""Int32"", ""null"" ]],
				 ""IpiFrozen"": [ 11528, [ ""UInt32"", ""null"" ]],
				 ""IsrDpcStats"": [ 11536, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DeviceInterrupts"": [ 11544, [ ""UInt32"", ""null"" ]],
				 ""LookasideIrpFloat"": [ 11548, [ ""Int32"", ""null"" ]],
				 ""InterruptLastCount"": [ 11552, [ ""UInt32"", ""null"" ]],
				 ""InterruptRate"": [ 11556, [ ""UInt32"", ""null"" ]],
				 ""PrcbPad41"": [ 11560, [ ""Array"", ""{\""count\"":22,\""target\"":\""UInt32\""}"" ]],
				 ""DpcData"": [ 11648, [ ""Array"", ""{\""count\"":2,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""DpcStack"": [ 11728, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""MaximumDpcQueueDepth"": [ 11736, [ ""Int32"", ""null"" ]],
				 ""DpcRequestRate"": [ 11740, [ ""UInt32"", ""null"" ]],
				 ""MinimumDpcRate"": [ 11744, [ ""UInt32"", ""null"" ]],
				 ""DpcLastCount"": [ 11748, [ ""UInt32"", ""null"" ]],
				 ""ThreadDpcEnable"": [ 11752, [ ""Byte"", ""null"" ]],
				 ""QuantumEnd"": [ 11753, [ ""Byte"", ""null"" ]],
				 ""DpcRoutineActive"": [ 11754, [ ""Byte"", ""null"" ]],
				 ""IdleSchedule"": [ 11755, [ ""Byte"", ""null"" ]],
				 ""DpcRequestSummary"": [ 11756, [ ""Int32"", ""null"" ]],
				 ""DpcRequestSlot"": [ 11756, [ ""Array"", ""{\""count\"":2,\""target\"":\""Int16\""}"" ]],
				 ""NormalDpcState"": [ 11756, [ ""Int16"", ""null"" ]],
				 ""ThreadDpcState"": [ 11758, [ ""Int16"", ""null"" ]],
				 ""DpcNormalProcessingActive"": [ 11756, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""DpcNormalProcessingRequested"": [ 11756, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""DpcNormalThreadSignal"": [ 11756, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""DpcNormalTimerExpiration"": [ 11756, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""DpcNormalDpcPresent"": [ 11756, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""DpcNormalLocalInterrupt"": [ 11756, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""DpcNormalSpare"": [ 11756, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""DpcThreadActive"": [ 11756, [ ""BitField"", ""{\""end_bit\"":17,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""DpcThreadRequested"": [ 11756, [ ""BitField"", ""{\""end_bit\"":18,\""start_bit\"":17,\""target\"":\""UInt32\""}"" ]],
				 ""DpcThreadSpare"": [ 11756, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":18,\""target\"":\""UInt32\""}"" ]],
				 ""LastTimerHand"": [ 11760, [ ""UInt32"", ""null"" ]],
				 ""LastTick"": [ 11764, [ ""UInt32"", ""null"" ]],
				 ""ClockInterrupts"": [ 11768, [ ""UInt32"", ""null"" ]],
				 ""ReadyScanTick"": [ 11772, [ ""UInt32"", ""null"" ]],
				 ""TimerTable"": [ 11776, [ ""_KTIMER_TABLE"", ""null"" ]],
				 ""DpcGate"": [ 20480, [ ""_KGATE"", ""null"" ]],
				 ""PrcbPad52"": [ 20504, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CallDpc"": [ 20512, [ ""_KDPC"", ""null"" ]],
				 ""ClockKeepAlive"": [ 20576, [ ""Int32"", ""null"" ]],
				 ""PrcbPad60"": [ 20580, [ ""Array"", ""{\""count\"":2,\""target\"":\""Byte\""}"" ]],
				 ""NmiActive"": [ 20582, [ ""UInt16"", ""null"" ]],
				 ""DpcWatchdogPeriod"": [ 20584, [ ""Int32"", ""null"" ]],
				 ""DpcWatchdogCount"": [ 20588, [ ""Int32"", ""null"" ]],
				 ""KeSpinLockOrdering"": [ 20592, [ ""Int32"", ""null"" ]],
				 ""PrcbPad70"": [ 20596, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""CachedPtes"": [ 20600, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""WaitListHead"": [ 20608, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""WaitLock"": [ 20624, [ ""UInt64"", ""null"" ]],
				 ""ReadySummary"": [ 20632, [ ""UInt32"", ""null"" ]],
				 ""AffinitizedSelectionMask"": [ 20636, [ ""Int32"", ""null"" ]],
				 ""QueueIndex"": [ 20640, [ ""UInt32"", ""null"" ]],
				 ""PrcbPad75"": [ 20644, [ ""Array"", ""{\""count\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""TimerExpirationDpc"": [ 20656, [ ""_KDPC"", ""null"" ]],
				 ""ScbQueue"": [ 20720, [ ""_RTL_RB_TREE"", ""null"" ]],
				 ""DispatcherReadyListHead"": [ 20736, [ ""Array"", ""{\""count\"":32,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""InterruptCount"": [ 21248, [ ""UInt32"", ""null"" ]],
				 ""KernelTime"": [ 21252, [ ""UInt32"", ""null"" ]],
				 ""UserTime"": [ 21256, [ ""UInt32"", ""null"" ]],
				 ""DpcTime"": [ 21260, [ ""UInt32"", ""null"" ]],
				 ""InterruptTime"": [ 21264, [ ""UInt32"", ""null"" ]],
				 ""AdjustDpcThreshold"": [ 21268, [ ""UInt32"", ""null"" ]],
				 ""DebuggerSavedIRQL"": [ 21272, [ ""Byte"", ""null"" ]],
				 ""GroupSchedulingOverQuota"": [ 21273, [ ""Byte"", ""null"" ]],
				 ""DeepSleep"": [ 21274, [ ""Byte"", ""null"" ]],
				 ""PrcbPad80"": [ 21275, [ ""Array"", ""{\""count\"":1,\""target\"":\""Byte\""}"" ]],
				 ""ScbOffset"": [ 21276, [ ""UInt32"", ""null"" ]],
				 ""DpcTimeCount"": [ 21280, [ ""UInt32"", ""null"" ]],
				 ""DpcTimeLimit"": [ 21284, [ ""UInt32"", ""null"" ]],
				 ""PeriodicCount"": [ 21288, [ ""UInt32"", ""null"" ]],
				 ""PeriodicBias"": [ 21292, [ ""UInt32"", ""null"" ]],
				 ""AvailableTime"": [ 21296, [ ""UInt32"", ""null"" ]],
				 ""KeExceptionDispatchCount"": [ 21300, [ ""UInt32"", ""null"" ]],
				 ""StartCycles"": [ 21304, [ ""UInt64"", ""null"" ]],
				 ""GenerationTarget"": [ 21312, [ ""UInt64"", ""null"" ]],
				 ""AffinitizedCycles"": [ 21320, [ ""UInt64"", ""null"" ]],
				 ""PrcbPad81"": [ 21328, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt64\""}"" ]],
				 ""MmSpinLockOrdering"": [ 21344, [ ""Int32"", ""null"" ]],
				 ""PageColor"": [ 21348, [ ""UInt32"", ""null"" ]],
				 ""NodeColor"": [ 21352, [ ""UInt32"", ""null"" ]],
				 ""NodeShiftedColor"": [ 21356, [ ""UInt32"", ""null"" ]],
				 ""SecondaryColorMask"": [ 21360, [ ""UInt32"", ""null"" ]],
				 ""PrcbPad83"": [ 21364, [ ""UInt32"", ""null"" ]],
				 ""CycleTime"": [ 21368, [ ""UInt64"", ""null"" ]],
				 ""CcFastMdlReadNoWait"": [ 21376, [ ""UInt32"", ""null"" ]],
				 ""CcFastMdlReadWait"": [ 21380, [ ""UInt32"", ""null"" ]],
				 ""CcFastMdlReadNotPossible"": [ 21384, [ ""UInt32"", ""null"" ]],
				 ""CcMapDataNoWait"": [ 21388, [ ""UInt32"", ""null"" ]],
				 ""CcMapDataWait"": [ 21392, [ ""UInt32"", ""null"" ]],
				 ""CcPinMappedDataCount"": [ 21396, [ ""UInt32"", ""null"" ]],
				 ""CcPinReadNoWait"": [ 21400, [ ""UInt32"", ""null"" ]],
				 ""CcPinReadWait"": [ 21404, [ ""UInt32"", ""null"" ]],
				 ""CcMdlReadNoWait"": [ 21408, [ ""UInt32"", ""null"" ]],
				 ""CcMdlReadWait"": [ 21412, [ ""UInt32"", ""null"" ]],
				 ""CcLazyWriteHotSpots"": [ 21416, [ ""UInt32"", ""null"" ]],
				 ""CcLazyWriteIos"": [ 21420, [ ""UInt32"", ""null"" ]],
				 ""CcLazyWritePages"": [ 21424, [ ""UInt32"", ""null"" ]],
				 ""CcDataFlushes"": [ 21428, [ ""UInt32"", ""null"" ]],
				 ""CcDataPages"": [ 21432, [ ""UInt32"", ""null"" ]],
				 ""CcLostDelayedWrites"": [ 21436, [ ""UInt32"", ""null"" ]],
				 ""CcFastReadResourceMiss"": [ 21440, [ ""UInt32"", ""null"" ]],
				 ""CcCopyReadWaitMiss"": [ 21444, [ ""UInt32"", ""null"" ]],
				 ""CcFastMdlReadResourceMiss"": [ 21448, [ ""UInt32"", ""null"" ]],
				 ""CcMapDataNoWaitMiss"": [ 21452, [ ""UInt32"", ""null"" ]],
				 ""CcMapDataWaitMiss"": [ 21456, [ ""UInt32"", ""null"" ]],
				 ""CcPinReadNoWaitMiss"": [ 21460, [ ""UInt32"", ""null"" ]],
				 ""CcPinReadWaitMiss"": [ 21464, [ ""UInt32"", ""null"" ]],
				 ""CcMdlReadNoWaitMiss"": [ 21468, [ ""UInt32"", ""null"" ]],
				 ""CcMdlReadWaitMiss"": [ 21472, [ ""UInt32"", ""null"" ]],
				 ""CcReadAheadIos"": [ 21476, [ ""UInt32"", ""null"" ]],
				 ""MmCacheTransitionCount"": [ 21480, [ ""Int32"", ""null"" ]],
				 ""MmCacheReadCount"": [ 21484, [ ""Int32"", ""null"" ]],
				 ""MmCacheIoCount"": [ 21488, [ ""Int32"", ""null"" ]],
				 ""PrcbPad91"": [ 21492, [ ""Array"", ""{\""count\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""PowerState"": [ 21504, [ ""_PROCESSOR_POWER_STATE"", ""null"" ]],
				 ""ScbList"": [ 21984, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""PrcbPad92"": [ 22000, [ ""Array"", ""{\""count\"":19,\""target\"":\""UInt32\""}"" ]],
				 ""KeAlignmentFixupCount"": [ 22076, [ ""UInt32"", ""null"" ]],
				 ""DpcWatchdogDpc"": [ 22080, [ ""_KDPC"", ""null"" ]],
				 ""DpcWatchdogTimer"": [ 22144, [ ""_KTIMER"", ""null"" ]],
				 ""Cache"": [ 22208, [ ""Array"", ""{\""count\"":5,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""CacheCount"": [ 22268, [ ""UInt32"", ""null"" ]],
				 ""CachedCommit"": [ 22272, [ ""UInt32"", ""null"" ]],
				 ""CachedResidentAvailable"": [ 22276, [ ""UInt32"", ""null"" ]],
				 ""HyperPte"": [ 22280, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""WheaInfo"": [ 22288, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""EtwSupport"": [ 22296, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""InterruptObjectPool"": [ 22304, [ ""_SLIST_HEADER"", ""null"" ]],
				 ""HypercallPageList"": [ 22320, [ ""_SLIST_HEADER"", ""null"" ]],
				 ""HypercallPageVirtual"": [ 22336, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""VirtualApicAssist"": [ 22344, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""StatisticsPage"": [ 22352, [ ""Pointer"", ""{\""target\"":\""UInt64\""}"" ]],
				 ""PackageProcessorSet"": [ 22360, [ ""_KAFFINITY_EX"", ""null"" ]],
				 ""SharedReadyQueueMask"": [ 22528, [ ""UInt64"", ""null"" ]],
				 ""SharedReadyQueue"": [ 22536, [ ""Pointer"", ""{\""target\"":\""_KSHARED_READY_QUEUE\""}"" ]],
				 ""CoreProcessorSet"": [ 22544, [ ""UInt64"", ""null"" ]],
				 ""ScanSiblingMask"": [ 22552, [ ""UInt64"", ""null"" ]],
				 ""LLCMask"": [ 22560, [ ""UInt64"", ""null"" ]],
				 ""CacheProcessorMask"": [ 22568, [ ""Array"", ""{\""count\"":5,\""target\"":\""UInt64\""}"" ]],
				 ""ScanSiblingIndex"": [ 22608, [ ""UInt32"", ""null"" ]],
				 ""SharedReadyQueueOffset"": [ 22612, [ ""UInt32"", ""null"" ]],
				 ""ProcessorProfileControlArea"": [ 22616, [ ""Pointer"", ""{\""target\"":\""_PROCESSOR_PROFILE_CONTROL_AREA\""}"" ]],
				 ""ProfileEventIndexAddress"": [ 22624, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PrcbPad94"": [ 22632, [ ""Array"", ""{\""count\"":3,\""target\"":\""UInt64\""}"" ]],
				 ""SynchCounters"": [ 22656, [ ""_SYNCH_COUNTERS"", ""null"" ]],
				 ""PteBitCache"": [ 22840, [ ""UInt64"", ""null"" ]],
				 ""PteBitOffset"": [ 22848, [ ""UInt32"", ""null"" ]],
				 ""FsCounters"": [ 22856, [ ""_FILESYSTEM_DISK_COUNTERS"", ""null"" ]],
				 ""VendorString"": [ 22872, [ ""Array"", ""{\""count\"":13,\""target\"":\""Byte\""}"" ]],
				 ""PrcbPad10"": [ 22885, [ ""Array"", ""{\""count\"":3,\""target\"":\""Byte\""}"" ]],
				 ""FeatureBits"": [ 22888, [ ""UInt64"", ""null"" ]],
				 ""PrcbPad11"": [ 22896, [ ""UInt32"", ""null"" ]],
				 ""UpdateSignature"": [ 22904, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""Context"": [ 22912, [ ""Pointer"", ""{\""target\"":\""_CONTEXT\""}"" ]],
				 ""ContextFlagsInit"": [ 22920, [ ""UInt32"", ""null"" ]],
				 ""ExtendedState"": [ 22928, [ ""Pointer"", ""{\""target\"":\""_XSAVE_AREA\""}"" ]],
				 ""IsrStack"": [ 22936, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""EntropyTimingState"": [ 22944, [ ""_KENTROPY_TIMING_STATE"", ""null"" ]],
				 ""AbSelfIoBoostsList"": [ 23280, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""AbPropagateBoostsList"": [ 23288, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""AbDpc"": [ 23296, [ ""_KDPC"", ""null"" ]],
				 ""IoIrpStackProfilerCurrent"": [ 23360, [ ""_IOP_IRP_STACK_PROFILER"", ""null"" ]],
				 ""IoIrpStackProfilerPrevious"": [ 23444, [ ""_IOP_IRP_STACK_PROFILER"", ""null"" ]],
				 ""TimerExpirationTrace"": [ 23528, [ ""Array"", ""{\""count\"":16,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""TimerExpirationTraceCount"": [ 23784, [ ""UInt32"", ""null"" ]],
				 ""Mailbox"": [ 23808, [ ""Pointer"", ""{\""target\"":\""_REQUEST_MAILBOX\""}"" ]],
				 ""RequestMailbox"": [ 23872, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 MxCsr { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Byte LegacyNumber{ get { return _StructureData[_BufferOffset +4]; } }
		public Byte ReservedMustBeZero{ get { return _StructureData[_BufferOffset +5]; } }
		public Byte InterruptRequest{ get { return _StructureData[_BufferOffset +6]; } }
		public Byte IdleHalt{ get { return _StructureData[_BufferOffset +7]; } }
		public UInt64 CurrentThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 NextThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 IdleThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public Byte NestingLevel{ get { return _StructureData[_BufferOffset +32]; } }
		public Byte ClockOwner{ get { return _StructureData[_BufferOffset +33]; } }
		public Byte PendingTickFlags{ get { return _StructureData[_BufferOffset +34]; } }
		public Byte PendingTick
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 34];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte PendingBackupTick
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 34];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte[] PrcbPad00
		{
			get
			{
				Byte[] returnValue = new Byte[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 35];
				return returnValue;
			}
		}
		public UInt32 Number { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public UInt64 RspBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 PrcbLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 PriorityState { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public _KPROCESSOR_STATE ProcessorState
		{
			get
			{
				_KPROCESSOR_STATE returnValue = new _KPROCESSOR_STATE(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public Char CpuType { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 1520); } }
		public Char CpuID { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 1521); } }
		public UInt16 CpuStep { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 1522); } }
		public Byte CpuStepping{ get { return _StructureData[_BufferOffset +1522]; } }
		public Byte CpuModel{ get { return _StructureData[_BufferOffset +1523]; } }
		public UInt32 MHz { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1524); } }
		public UInt64[] HalReserved
		{
			get
			{
				UInt64[] returnValue = new UInt64[8];
				for(int i=0; i<8; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 1528);
				return returnValue;
			}
		}
		public UInt16 MinorVersion { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 1592); } }
		public UInt16 MajorVersion { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 1594); } }
		public Byte BuildType{ get { return _StructureData[_BufferOffset +1596]; } }
		public Byte CpuVendor{ get { return _StructureData[_BufferOffset +1597]; } }
		public Byte CoresPerPhysicalProcessor{ get { return _StructureData[_BufferOffset +1598]; } }
		public Byte LogicalProcessorsPerCore{ get { return _StructureData[_BufferOffset +1599]; } }
		public UInt64 ParentNode { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1600); } }
		public UInt64 GroupSetMember { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1608); } }
		public Byte Group{ get { return _StructureData[_BufferOffset +1616]; } }
		public Byte GroupIndex{ get { return _StructureData[_BufferOffset +1617]; } }
		public Byte[] PrcbPad05
		{
			get
			{
				Byte[] returnValue = new Byte[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 1618];
				return returnValue;
			}
		}
		public UInt32 ApicMask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1620); } }
		public UInt32 CFlushSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1624); } }
		public UInt64 AcpiReserved { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1632); } }
		public UInt32 InitialApicId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1640); } }
		public _KSPIN_LOCK_QUEUE[] LockQueue
		{
			get
			{
				_KSPIN_LOCK_QUEUE[] returnValue = new _KSPIN_LOCK_QUEUE[17];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<17; i++ )
					returnValue[i] = new _KSPIN_LOCK_QUEUE(_StructureData, (i * size) + _BufferOffset + 1648);
				return returnValue;
			}
		}
		public _PP_LOOKASIDE_LIST[] PPLookasideList
		{
			get
			{
				_PP_LOOKASIDE_LIST[] returnValue = new _PP_LOOKASIDE_LIST[16];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<16; i++ )
					returnValue[i] = new _PP_LOOKASIDE_LIST(_StructureData, (i * size) + _BufferOffset + 1920);
				return returnValue;
			}
		}
		public _GENERAL_LOOKASIDE_POOL[] PPNxPagedLookasideList
		{
			get
			{
				_GENERAL_LOOKASIDE_POOL[] returnValue = new _GENERAL_LOOKASIDE_POOL[32];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<32; i++ )
					returnValue[i] = new _GENERAL_LOOKASIDE_POOL(_StructureData, (i * size) + _BufferOffset + 2176);
				return returnValue;
			}
		}
		public _GENERAL_LOOKASIDE_POOL[] PPNPagedLookasideList
		{
			get
			{
				_GENERAL_LOOKASIDE_POOL[] returnValue = new _GENERAL_LOOKASIDE_POOL[32];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<32; i++ )
					returnValue[i] = new _GENERAL_LOOKASIDE_POOL(_StructureData, (i * size) + _BufferOffset + 5248);
				return returnValue;
			}
		}
		public _GENERAL_LOOKASIDE_POOL[] PPPagedLookasideList
		{
			get
			{
				_GENERAL_LOOKASIDE_POOL[] returnValue = new _GENERAL_LOOKASIDE_POOL[32];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<32; i++ )
					returnValue[i] = new _GENERAL_LOOKASIDE_POOL(_StructureData, (i * size) + _BufferOffset + 8320);
				return returnValue;
			}
		}
		public UInt64 PrcbPad20 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 11392); } }
		public _SINGLE_LIST_ENTRY DeferredReadyListHead
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 11400);
				return returnValue;
			}
		}
		public Int32 MmPageFaultCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 11408); } }
		public Int32 MmCopyOnWriteCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 11412); } }
		public Int32 MmTransitionCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 11416); } }
		public Int32 MmDemandZeroCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 11420); } }
		public Int32 MmPageReadCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 11424); } }
		public Int32 MmPageReadIoCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 11428); } }
		public Int32 MmDirtyPagesWriteCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 11432); } }
		public Int32 MmDirtyWriteIoCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 11436); } }
		public Int32 MmMappedPagesWriteCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 11440); } }
		public Int32 MmMappedWriteIoCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 11444); } }
		public UInt32 KeSystemCalls { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 11448); } }
		public UInt32 KeContextSwitches { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 11452); } }
		public UInt16 LdtSelector { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 11456); } }
		public UInt16 PrcbPad40 { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 11458); } }
		public UInt32 CcFastReadNoWait { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 11460); } }
		public UInt32 CcFastReadWait { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 11464); } }
		public UInt32 CcFastReadNotPossible { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 11468); } }
		public UInt32 CcCopyReadNoWait { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 11472); } }
		public UInt32 CcCopyReadWait { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 11476); } }
		public UInt32 CcCopyReadNoWaitMiss { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 11480); } }
		public Int32 IoReadOperationCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 11484); } }
		public Int32 IoWriteOperationCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 11488); } }
		public Int32 IoOtherOperationCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 11492); } }
		public _LARGE_INTEGER IoReadTransferCount
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 11496);
				return returnValue;
			}
		}
		public _LARGE_INTEGER IoWriteTransferCount
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 11504);
				return returnValue;
			}
		}
		public _LARGE_INTEGER IoOtherTransferCount
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 11512);
				return returnValue;
			}
		}
		public Int32 PacketBarrier { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 11520); } }
		public Int32 TargetCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 11524); } }
		public UInt32 IpiFrozen { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 11528); } }
		public UInt64 IsrDpcStats { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 11536); } }
		public UInt32 DeviceInterrupts { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 11544); } }
		public Int32 LookasideIrpFloat { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 11548); } }
		public UInt32 InterruptLastCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 11552); } }
		public UInt32 InterruptRate { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 11556); } }
		public UInt32[] PrcbPad41
		{
			get
			{
				UInt32[] returnValue = new UInt32[22];
				for(int i=0; i<22; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 11560);
				return returnValue;
			}
		}
		public _KDPC_DATA[] DpcData
		{
			get
			{
				_KDPC_DATA[] returnValue = new _KDPC_DATA[2];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<2; i++ )
					returnValue[i] = new _KDPC_DATA(_StructureData, (i * size) + _BufferOffset + 11648);
				return returnValue;
			}
		}
		public UInt64 DpcStack { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 11728); } }
		public Int32 MaximumDpcQueueDepth { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 11736); } }
		public UInt32 DpcRequestRate { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 11740); } }
		public UInt32 MinimumDpcRate { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 11744); } }
		public UInt32 DpcLastCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 11748); } }
		public Byte ThreadDpcEnable{ get { return _StructureData[_BufferOffset +11752]; } }
		public Byte QuantumEnd{ get { return _StructureData[_BufferOffset +11753]; } }
		public Byte DpcRoutineActive{ get { return _StructureData[_BufferOffset +11754]; } }
		public Byte IdleSchedule{ get { return _StructureData[_BufferOffset +11755]; } }
		public Int32 DpcRequestSummary { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 11756); } }
		public Int16[] DpcRequestSlot
		{
			get
			{
				Int16[] returnValue = new Int16[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToInt16(_StructureData, (i * sizeof(Int16)) + _BufferOffset + 11756);
				return returnValue;
			}
		}
		public Int16 NormalDpcState { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 11756); } }
		public Int16 ThreadDpcState { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 11758); } }
		public UInt32 DpcNormalProcessingActive
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 11756);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 DpcNormalProcessingRequested
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 11756);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 DpcNormalThreadSignal
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 11756);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 DpcNormalTimerExpiration
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 11756);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 DpcNormalDpcPresent
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 11756);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 DpcNormalLocalInterrupt
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 11756);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 DpcNormalSpare
		{
			get
			{
				// start: 6  end: 16  Mask: 1111111111000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 11756);
				var value2 = (value & 65472) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 DpcThreadActive
		{
			get
			{
				// start: 16  end: 17  Mask: 10000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 11756);
				var value2 = (value & 65536) >> 16;
				return (UInt32)value2;
			}
		}
		public UInt32 DpcThreadRequested
		{
			get
			{
				// start: 17  end: 18  Mask: 100000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 11756);
				var value2 = (value & 131072) >> 17;
				return (UInt32)value2;
			}
		}
		public UInt32 DpcThreadSpare
		{
			get
			{
				// start: 18  end: 32  Mask: 11111111111111000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 11756);
				var value2 = (value & 4294705152) >> 18;
				return (UInt32)value2;
			}
		}
		public UInt32 LastTimerHand { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 11760); } }
		public UInt32 LastTick { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 11764); } }
		public UInt32 ClockInterrupts { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 11768); } }
		public UInt32 ReadyScanTick { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 11772); } }
		public _KTIMER_TABLE TimerTable
		{
			get
			{
				_KTIMER_TABLE returnValue = new _KTIMER_TABLE(_StructureData, _BufferOffset + 11776);
				return returnValue;
			}
		}
		public _KGATE DpcGate
		{
			get
			{
				_KGATE returnValue = new _KGATE(_StructureData, _BufferOffset + 20480);
				return returnValue;
			}
		}
		public UInt64 PrcbPad52 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 20504); } }
		public _KDPC CallDpc
		{
			get
			{
				_KDPC returnValue = new _KDPC(_StructureData, _BufferOffset + 20512);
				return returnValue;
			}
		}
		public Int32 ClockKeepAlive { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 20576); } }
		public Byte[] PrcbPad60
		{
			get
			{
				Byte[] returnValue = new Byte[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 20580];
				return returnValue;
			}
		}
		public UInt16 NmiActive { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 20582); } }
		public Int32 DpcWatchdogPeriod { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 20584); } }
		public Int32 DpcWatchdogCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 20588); } }
		public Int32 KeSpinLockOrdering { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 20592); } }
		public UInt32[] PrcbPad70
		{
			get
			{
				UInt32[] returnValue = new UInt32[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 20596);
				return returnValue;
			}
		}
		public UInt64 CachedPtes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 20600); } }
		public _LIST_ENTRY WaitListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 20608);
				return returnValue;
			}
		}
		public UInt64 WaitLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 20624); } }
		public UInt32 ReadySummary { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20632); } }
		public Int32 AffinitizedSelectionMask { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 20636); } }
		public UInt32 QueueIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20640); } }
		public UInt32[] PrcbPad75
		{
			get
			{
				UInt32[] returnValue = new UInt32[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 20644);
				return returnValue;
			}
		}
		public _KDPC TimerExpirationDpc
		{
			get
			{
				_KDPC returnValue = new _KDPC(_StructureData, _BufferOffset + 20656);
				return returnValue;
			}
		}
		public _RTL_RB_TREE ScbQueue
		{
			get
			{
				_RTL_RB_TREE returnValue = new _RTL_RB_TREE(_StructureData, _BufferOffset + 20720);
				return returnValue;
			}
		}
		public _LIST_ENTRY[] DispatcherReadyListHead
		{
			get
			{
				_LIST_ENTRY[] returnValue = new _LIST_ENTRY[32];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<32; i++ )
					returnValue[i] = new _LIST_ENTRY(_StructureData, (i * size) + _BufferOffset + 20736);
				return returnValue;
			}
		}
		public UInt32 InterruptCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21248); } }
		public UInt32 KernelTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21252); } }
		public UInt32 UserTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21256); } }
		public UInt32 DpcTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21260); } }
		public UInt32 InterruptTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21264); } }
		public UInt32 AdjustDpcThreshold { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21268); } }
		public Byte DebuggerSavedIRQL{ get { return _StructureData[_BufferOffset +21272]; } }
		public Byte GroupSchedulingOverQuota{ get { return _StructureData[_BufferOffset +21273]; } }
		public Byte DeepSleep{ get { return _StructureData[_BufferOffset +21274]; } }
		public Byte[] PrcbPad80
		{
			get
			{
				Byte[] returnValue = new Byte[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 21275];
				return returnValue;
			}
		}
		public UInt32 ScbOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21276); } }
		public UInt32 DpcTimeCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21280); } }
		public UInt32 DpcTimeLimit { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21284); } }
		public UInt32 PeriodicCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21288); } }
		public UInt32 PeriodicBias { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21292); } }
		public UInt32 AvailableTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21296); } }
		public UInt32 KeExceptionDispatchCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21300); } }
		public UInt64 StartCycles { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 21304); } }
		public UInt64 GenerationTarget { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 21312); } }
		public UInt64 AffinitizedCycles { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 21320); } }
		public UInt64[] PrcbPad81
		{
			get
			{
				UInt64[] returnValue = new UInt64[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 21328);
				return returnValue;
			}
		}
		public Int32 MmSpinLockOrdering { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 21344); } }
		public UInt32 PageColor { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21348); } }
		public UInt32 NodeColor { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21352); } }
		public UInt32 NodeShiftedColor { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21356); } }
		public UInt32 SecondaryColorMask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21360); } }
		public UInt32 PrcbPad83 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21364); } }
		public UInt64 CycleTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 21368); } }
		public UInt32 CcFastMdlReadNoWait { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21376); } }
		public UInt32 CcFastMdlReadWait { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21380); } }
		public UInt32 CcFastMdlReadNotPossible { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21384); } }
		public UInt32 CcMapDataNoWait { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21388); } }
		public UInt32 CcMapDataWait { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21392); } }
		public UInt32 CcPinMappedDataCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21396); } }
		public UInt32 CcPinReadNoWait { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21400); } }
		public UInt32 CcPinReadWait { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21404); } }
		public UInt32 CcMdlReadNoWait { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21408); } }
		public UInt32 CcMdlReadWait { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21412); } }
		public UInt32 CcLazyWriteHotSpots { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21416); } }
		public UInt32 CcLazyWriteIos { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21420); } }
		public UInt32 CcLazyWritePages { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21424); } }
		public UInt32 CcDataFlushes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21428); } }
		public UInt32 CcDataPages { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21432); } }
		public UInt32 CcLostDelayedWrites { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21436); } }
		public UInt32 CcFastReadResourceMiss { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21440); } }
		public UInt32 CcCopyReadWaitMiss { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21444); } }
		public UInt32 CcFastMdlReadResourceMiss { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21448); } }
		public UInt32 CcMapDataNoWaitMiss { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21452); } }
		public UInt32 CcMapDataWaitMiss { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21456); } }
		public UInt32 CcPinReadNoWaitMiss { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21460); } }
		public UInt32 CcPinReadWaitMiss { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21464); } }
		public UInt32 CcMdlReadNoWaitMiss { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21468); } }
		public UInt32 CcMdlReadWaitMiss { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21472); } }
		public UInt32 CcReadAheadIos { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 21476); } }
		public Int32 MmCacheTransitionCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 21480); } }
		public Int32 MmCacheReadCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 21484); } }
		public Int32 MmCacheIoCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 21488); } }
		public UInt32[] PrcbPad91
		{
			get
			{
				UInt32[] returnValue = new UInt32[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 21492);
				return returnValue;
			}
		}
		public _PROCESSOR_POWER_STATE PowerState
		{
			get
			{
				_PROCESSOR_POWER_STATE returnValue = new _PROCESSOR_POWER_STATE(_StructureData, _BufferOffset + 21504);
				return returnValue;
			}
		}
		public _LIST_ENTRY ScbList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 21984);
				return returnValue;
			}
		}
		public UInt32[] PrcbPad92
		{
			get
			{
				UInt32[] returnValue = new UInt32[19];
				for(int i=0; i<19; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 22000);
				return returnValue;
			}
		}
		public UInt32 KeAlignmentFixupCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 22076); } }
		public _KDPC DpcWatchdogDpc
		{
			get
			{
				_KDPC returnValue = new _KDPC(_StructureData, _BufferOffset + 22080);
				return returnValue;
			}
		}
		public _KTIMER DpcWatchdogTimer
		{
			get
			{
				_KTIMER returnValue = new _KTIMER(_StructureData, _BufferOffset + 22144);
				return returnValue;
			}
		}
		public _CACHE_DESCRIPTOR[] Cache
		{
			get
			{
				_CACHE_DESCRIPTOR[] returnValue = new _CACHE_DESCRIPTOR[5];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<5; i++ )
					returnValue[i] = new _CACHE_DESCRIPTOR(_StructureData, (i * size) + _BufferOffset + 22208);
				return returnValue;
			}
		}
		public UInt32 CacheCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 22268); } }
		public UInt32 CachedCommit { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 22272); } }
		public UInt32 CachedResidentAvailable { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 22276); } }
		public UInt64 HyperPte { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 22280); } }
		public UInt64 WheaInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 22288); } }
		public UInt64 EtwSupport { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 22296); } }
		public _SLIST_HEADER InterruptObjectPool
		{
			get
			{
				_SLIST_HEADER returnValue = new _SLIST_HEADER(_StructureData, _BufferOffset + 22304);
				return returnValue;
			}
		}
		public _SLIST_HEADER HypercallPageList
		{
			get
			{
				_SLIST_HEADER returnValue = new _SLIST_HEADER(_StructureData, _BufferOffset + 22320);
				return returnValue;
			}
		}
		public UInt64 HypercallPageVirtual { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 22336); } }
		public UInt64 VirtualApicAssist { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 22344); } }
		public UInt64 StatisticsPage { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 22352); } }
		public _KAFFINITY_EX PackageProcessorSet
		{
			get
			{
				_KAFFINITY_EX returnValue = new _KAFFINITY_EX(_StructureData, _BufferOffset + 22360);
				return returnValue;
			}
		}
		public UInt64 SharedReadyQueueMask { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 22528); } }
		public UInt64 SharedReadyQueue { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 22536); } }
		public UInt64 CoreProcessorSet { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 22544); } }
		public UInt64 ScanSiblingMask { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 22552); } }
		public UInt64 LLCMask { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 22560); } }
		public UInt64[] CacheProcessorMask
		{
			get
			{
				UInt64[] returnValue = new UInt64[5];
				for(int i=0; i<5; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 22568);
				return returnValue;
			}
		}
		public UInt32 ScanSiblingIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 22608); } }
		public UInt32 SharedReadyQueueOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 22612); } }
		public UInt64 ProcessorProfileControlArea { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 22616); } }
		public UInt64 ProfileEventIndexAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 22624); } }
		public UInt64[] PrcbPad94
		{
			get
			{
				UInt64[] returnValue = new UInt64[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 22632);
				return returnValue;
			}
		}
		public _SYNCH_COUNTERS SynchCounters
		{
			get
			{
				_SYNCH_COUNTERS returnValue = new _SYNCH_COUNTERS(_StructureData, _BufferOffset + 22656);
				return returnValue;
			}
		}
		public UInt64 PteBitCache { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 22840); } }
		public UInt32 PteBitOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 22848); } }
		public _FILESYSTEM_DISK_COUNTERS FsCounters
		{
			get
			{
				_FILESYSTEM_DISK_COUNTERS returnValue = new _FILESYSTEM_DISK_COUNTERS(_StructureData, _BufferOffset + 22856);
				return returnValue;
			}
		}
		public Byte[] VendorString
		{
			get
			{
				Byte[] returnValue = new Byte[13];
				for(int i=0; i<13; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 22872];
				return returnValue;
			}
		}
		public Byte[] PrcbPad10
		{
			get
			{
				Byte[] returnValue = new Byte[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 22885];
				return returnValue;
			}
		}
		public UInt64 FeatureBits { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 22888); } }
		public UInt32 PrcbPad11 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 22896); } }
		public _LARGE_INTEGER UpdateSignature
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 22904);
				return returnValue;
			}
		}
		public UInt64 Context { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 22912); } }
		public UInt32 ContextFlagsInit { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 22920); } }
		public UInt64 ExtendedState { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 22928); } }
		public UInt64 IsrStack { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 22936); } }
		public _KENTROPY_TIMING_STATE EntropyTimingState
		{
			get
			{
				_KENTROPY_TIMING_STATE returnValue = new _KENTROPY_TIMING_STATE(_StructureData, _BufferOffset + 22944);
				return returnValue;
			}
		}
		public _SINGLE_LIST_ENTRY AbSelfIoBoostsList
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 23280);
				return returnValue;
			}
		}
		public _SINGLE_LIST_ENTRY AbPropagateBoostsList
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 23288);
				return returnValue;
			}
		}
		public _KDPC AbDpc
		{
			get
			{
				_KDPC returnValue = new _KDPC(_StructureData, _BufferOffset + 23296);
				return returnValue;
			}
		}
		public _IOP_IRP_STACK_PROFILER IoIrpStackProfilerCurrent
		{
			get
			{
				_IOP_IRP_STACK_PROFILER returnValue = new _IOP_IRP_STACK_PROFILER(_StructureData, _BufferOffset + 23360);
				return returnValue;
			}
		}
		public _IOP_IRP_STACK_PROFILER IoIrpStackProfilerPrevious
		{
			get
			{
				_IOP_IRP_STACK_PROFILER returnValue = new _IOP_IRP_STACK_PROFILER(_StructureData, _BufferOffset + 23444);
				return returnValue;
			}
		}
		public _KTIMER_EXPIRATION_TRACE[] TimerExpirationTrace
		{
			get
			{
				_KTIMER_EXPIRATION_TRACE[] returnValue = new _KTIMER_EXPIRATION_TRACE[16];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<16; i++ )
					returnValue[i] = new _KTIMER_EXPIRATION_TRACE(_StructureData, (i * size) + _BufferOffset + 23528);
				return returnValue;
			}
		}
		public UInt32 TimerExpirationTraceCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 23784); } }
		public UInt64 Mailbox { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 23808); } }
		public _REQUEST_MAILBOX[] RequestMailbox
		{
			get
			{
				_REQUEST_MAILBOX[] returnValue = new _REQUEST_MAILBOX[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _REQUEST_MAILBOX(_StructureData, (i * size) + _BufferOffset + 23872);
				return returnValue;
			}
		}
	}
	#endregion
	#region _KFLOATING_SAVE
 
	public class _KFLOATING_SAVE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KFLOATING_SAVE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KFLOATING_SAVE"": [ 4, {
				 ""Dummy"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Dummy { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _SINGLE_LIST_ENTRY32
 
	public class _SINGLE_LIST_ENTRY32
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SINGLE_LIST_ENTRY32(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SINGLE_LIST_ENTRY32"": [ 4, {
				 ""Next"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Next { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _EXT_SET_PARAMETERS_V0
 
	public class _EXT_SET_PARAMETERS_V0
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EXT_SET_PARAMETERS_V0(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EXT_SET_PARAMETERS_V0"": [ 16, {
				 ""Version"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Reserved"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""NoWakeTolerance"": [ 8, [ ""Int64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Version { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Reserved { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public Int64 NoWakeTolerance { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _KTHREAD
 
	public class _KTHREAD
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KTHREAD(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1488; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KTHREAD"": [ 1488, {
				 ""Header"": [ 0, [ ""_DISPATCHER_HEADER"", ""null"" ]],
				 ""SListFaultAddress"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""QuantumTarget"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""InitialStack"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""StackLimit"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""StackBase"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ThreadLock"": [ 64, [ ""UInt64"", ""null"" ]],
				 ""CycleTime"": [ 72, [ ""UInt64"", ""null"" ]],
				 ""CurrentRunTime"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""ExpectedRunTime"": [ 84, [ ""UInt32"", ""null"" ]],
				 ""KernelStack"": [ 88, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""StateSaveArea"": [ 96, [ ""Pointer"", ""{\""target\"":\""_XSAVE_FORMAT\""}"" ]],
				 ""SchedulingGroup"": [ 104, [ ""Pointer"", ""{\""target\"":\""_KSCHEDULING_GROUP\""}"" ]],
				 ""WaitRegister"": [ 112, [ ""_KWAIT_STATUS_REGISTER"", ""null"" ]],
				 ""Running"": [ 113, [ ""Byte"", ""null"" ]],
				 ""Alerted"": [ 114, [ ""Array"", ""{\""count\"":2,\""target\"":\""Byte\""}"" ]],
				 ""SpareMiscFlag0"": [ 116, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""ReadyTransition"": [ 116, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessReadyQueue"": [ 116, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""WaitNext"": [ 116, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""SystemAffinityActive"": [ 116, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""Alertable"": [ 116, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""UserStackWalkActive"": [ 116, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""ApcInterruptRequest"": [ 116, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt32\""}"" ]],
				 ""QuantumEndMigrate"": [ 116, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]],
				 ""UmsDirectedSwitchEnable"": [ 116, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt32\""}"" ]],
				 ""TimerActive"": [ 116, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt32\""}"" ]],
				 ""SystemThread"": [ 116, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessDetachActive"": [ 116, [ ""BitField"", ""{\""end_bit\"":13,\""start_bit\"":12,\""target\"":\""UInt32\""}"" ]],
				 ""CalloutActive"": [ 116, [ ""BitField"", ""{\""end_bit\"":14,\""start_bit\"":13,\""target\"":\""UInt32\""}"" ]],
				 ""ScbReadyQueue"": [ 116, [ ""BitField"", ""{\""end_bit\"":15,\""start_bit\"":14,\""target\"":\""UInt32\""}"" ]],
				 ""ApcQueueable"": [ 116, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":15,\""target\"":\""UInt32\""}"" ]],
				 ""ReservedStackInUse"": [ 116, [ ""BitField"", ""{\""end_bit\"":17,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""UmsPerformingSyscall"": [ 116, [ ""BitField"", ""{\""end_bit\"":18,\""start_bit\"":17,\""target\"":\""UInt32\""}"" ]],
				 ""ApcPendingReload"": [ 116, [ ""BitField"", ""{\""end_bit\"":19,\""start_bit\"":18,\""target\"":\""UInt32\""}"" ]],
				 ""TimerSuspended"": [ 116, [ ""BitField"", ""{\""end_bit\"":20,\""start_bit\"":19,\""target\"":\""UInt32\""}"" ]],
				 ""SuspendedWaitMode"": [ 116, [ ""BitField"", ""{\""end_bit\"":21,\""start_bit\"":20,\""target\"":\""UInt32\""}"" ]],
				 ""Reserved"": [ 116, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":21,\""target\"":\""UInt32\""}"" ]],
				 ""MiscFlags"": [ 116, [ ""Int32"", ""null"" ]],
				 ""AutoAlignment"": [ 120, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""DisableBoost"": [ 120, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""UserAffinitySet"": [ 120, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""AlertedByThreadId"": [ 120, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""QuantumDonation"": [ 120, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""EnableStackSwap"": [ 120, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""GuiThread"": [ 120, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""DisableQuantum"": [ 120, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt32\""}"" ]],
				 ""ChargeOnlySchedulingGroup"": [ 120, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]],
				 ""DeferPreemption"": [ 120, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt32\""}"" ]],
				 ""QueueDeferPreemption"": [ 120, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt32\""}"" ]],
				 ""ForceDeferSchedule"": [ 120, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt32\""}"" ]],
				 ""SharedReadyQueueAffinity"": [ 120, [ ""BitField"", ""{\""end_bit\"":13,\""start_bit\"":12,\""target\"":\""UInt32\""}"" ]],
				 ""FreezeCount"": [ 120, [ ""BitField"", ""{\""end_bit\"":14,\""start_bit\"":13,\""target\"":\""UInt32\""}"" ]],
				 ""TerminationApcRequest"": [ 120, [ ""BitField"", ""{\""end_bit\"":15,\""start_bit\"":14,\""target\"":\""UInt32\""}"" ]],
				 ""AutoBoostEntriesExhausted"": [ 120, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":15,\""target\"":\""UInt32\""}"" ]],
				 ""KernelStackResident"": [ 120, [ ""BitField"", ""{\""end_bit\"":17,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""EtwStackTraceApcInserted"": [ 120, [ ""BitField"", ""{\""end_bit\"":25,\""start_bit\"":17,\""target\"":\""UInt32\""}"" ]],
				 ""ReservedFlags"": [ 120, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":25,\""target\"":\""UInt32\""}"" ]],
				 ""ThreadFlags"": [ 120, [ ""Int32"", ""null"" ]],
				 ""Spare0"": [ 124, [ ""UInt32"", ""null"" ]],
				 ""SystemCallNumber"": [ 128, [ ""UInt32"", ""null"" ]],
				 ""Spare1"": [ 132, [ ""UInt32"", ""null"" ]],
				 ""FirstArgument"": [ 136, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""TrapFrame"": [ 144, [ ""Pointer"", ""{\""target\"":\""_KTRAP_FRAME\""}"" ]],
				 ""ApcState"": [ 152, [ ""_KAPC_STATE"", ""null"" ]],
				 ""ApcStateFill"": [ 152, [ ""Array"", ""{\""count\"":43,\""target\"":\""Byte\""}"" ]],
				 ""Priority"": [ 195, [ ""Char"", ""null"" ]],
				 ""UserIdealProcessor"": [ 196, [ ""UInt32"", ""null"" ]],
				 ""WaitStatus"": [ 200, [ ""Int64"", ""null"" ]],
				 ""WaitBlockList"": [ 208, [ ""Pointer"", ""{\""target\"":\""_KWAIT_BLOCK\""}"" ]],
				 ""WaitListEntry"": [ 216, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""SwapListEntry"": [ 216, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""Queue"": [ 232, [ ""Pointer"", ""{\""target\"":\""_DISPATCHER_HEADER\""}"" ]],
				 ""Teb"": [ 240, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""RelativeTimerBias"": [ 248, [ ""UInt64"", ""null"" ]],
				 ""Timer"": [ 256, [ ""_KTIMER"", ""null"" ]],
				 ""WaitBlock"": [ 320, [ ""Array"", ""{\""count\"":4,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""WaitBlockFill4"": [ 320, [ ""Array"", ""{\""count\"":20,\""target\"":\""Byte\""}"" ]],
				 ""ContextSwitches"": [ 340, [ ""UInt32"", ""null"" ]],
				 ""WaitBlockFill5"": [ 320, [ ""Array"", ""{\""count\"":68,\""target\"":\""Byte\""}"" ]],
				 ""State"": [ 388, [ ""Byte"", ""null"" ]],
				 ""NpxState"": [ 389, [ ""Char"", ""null"" ]],
				 ""WaitIrql"": [ 390, [ ""Byte"", ""null"" ]],
				 ""WaitMode"": [ 391, [ ""Char"", ""null"" ]],
				 ""WaitBlockFill6"": [ 320, [ ""Array"", ""{\""count\"":116,\""target\"":\""Byte\""}"" ]],
				 ""WaitTime"": [ 436, [ ""UInt32"", ""null"" ]],
				 ""WaitBlockFill7"": [ 320, [ ""Array"", ""{\""count\"":164,\""target\"":\""Byte\""}"" ]],
				 ""KernelApcDisable"": [ 484, [ ""Int16"", ""null"" ]],
				 ""SpecialApcDisable"": [ 486, [ ""Int16"", ""null"" ]],
				 ""CombinedApcDisable"": [ 484, [ ""UInt32"", ""null"" ]],
				 ""WaitBlockFill8"": [ 320, [ ""Array"", ""{\""count\"":40,\""target\"":\""Byte\""}"" ]],
				 ""ThreadCounters"": [ 360, [ ""Pointer"", ""{\""target\"":\""_KTHREAD_COUNTERS\""}"" ]],
				 ""WaitBlockFill9"": [ 320, [ ""Array"", ""{\""count\"":88,\""target\"":\""Byte\""}"" ]],
				 ""XStateSave"": [ 408, [ ""Pointer"", ""{\""target\"":\""_XSTATE_SAVE\""}"" ]],
				 ""WaitBlockFill10"": [ 320, [ ""Array"", ""{\""count\"":136,\""target\"":\""Byte\""}"" ]],
				 ""Win32Thread"": [ 456, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""WaitBlockFill11"": [ 320, [ ""Array"", ""{\""count\"":176,\""target\"":\""Byte\""}"" ]],
				 ""Ucb"": [ 496, [ ""Pointer"", ""{\""target\"":\""_UMS_CONTROL_BLOCK\""}"" ]],
				 ""Uch"": [ 504, [ ""Pointer"", ""{\""target\"":\""_KUMS_CONTEXT_HEADER\""}"" ]],
				 ""TebMappedLowVa"": [ 512, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""QueueListEntry"": [ 520, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""NextProcessor"": [ 536, [ ""UInt32"", ""null"" ]],
				 ""NextProcessorNumber"": [ 536, [ ""BitField"", ""{\""end_bit\"":31,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""SharedReadyQueue"": [ 536, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":31,\""target\"":\""UInt32\""}"" ]],
				 ""QueuePriority"": [ 540, [ ""Int32"", ""null"" ]],
				 ""Process"": [ 544, [ ""Pointer"", ""{\""target\"":\""_KPROCESS\""}"" ]],
				 ""UserAffinity"": [ 552, [ ""_GROUP_AFFINITY"", ""null"" ]],
				 ""UserAffinityFill"": [ 552, [ ""Array"", ""{\""count\"":10,\""target\"":\""Byte\""}"" ]],
				 ""PreviousMode"": [ 562, [ ""Char"", ""null"" ]],
				 ""BasePriority"": [ 563, [ ""Char"", ""null"" ]],
				 ""PriorityDecrement"": [ 564, [ ""Char"", ""null"" ]],
				 ""ForegroundBoost"": [ 564, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""UnusualBoost"": [ 564, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""Preempted"": [ 565, [ ""Byte"", ""null"" ]],
				 ""AdjustReason"": [ 566, [ ""Byte"", ""null"" ]],
				 ""AdjustIncrement"": [ 567, [ ""Char"", ""null"" ]],
				 ""Affinity"": [ 568, [ ""_GROUP_AFFINITY"", ""null"" ]],
				 ""AffinityFill"": [ 568, [ ""Array"", ""{\""count\"":10,\""target\"":\""Byte\""}"" ]],
				 ""ApcStateIndex"": [ 578, [ ""Byte"", ""null"" ]],
				 ""WaitBlockCount"": [ 579, [ ""Byte"", ""null"" ]],
				 ""IdealProcessor"": [ 580, [ ""UInt32"", ""null"" ]],
				 ""ApcStatePointer"": [ 584, [ ""Array"", ""{\""count\"":2,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""_KAPC_STATE\""}}"" ]],
				 ""SavedApcState"": [ 600, [ ""_KAPC_STATE"", ""null"" ]],
				 ""SavedApcStateFill"": [ 600, [ ""Array"", ""{\""count\"":43,\""target\"":\""Byte\""}"" ]],
				 ""WaitReason"": [ 643, [ ""Byte"", ""null"" ]],
				 ""SuspendCount"": [ 644, [ ""Char"", ""null"" ]],
				 ""Saturation"": [ 645, [ ""Char"", ""null"" ]],
				 ""SListFaultCount"": [ 646, [ ""UInt16"", ""null"" ]],
				 ""SchedulerApc"": [ 648, [ ""_KAPC"", ""null"" ]],
				 ""SchedulerApcFill0"": [ 648, [ ""Array"", ""{\""count\"":1,\""target\"":\""Byte\""}"" ]],
				 ""ResourceIndex"": [ 649, [ ""Byte"", ""null"" ]],
				 ""SchedulerApcFill1"": [ 648, [ ""Array"", ""{\""count\"":3,\""target\"":\""Byte\""}"" ]],
				 ""QuantumReset"": [ 651, [ ""Byte"", ""null"" ]],
				 ""SchedulerApcFill2"": [ 648, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""KernelTime"": [ 652, [ ""UInt32"", ""null"" ]],
				 ""SchedulerApcFill3"": [ 648, [ ""Array"", ""{\""count\"":64,\""target\"":\""Byte\""}"" ]],
				 ""WaitPrcb"": [ 712, [ ""Pointer"", ""{\""target\"":\""_KPRCB\""}"" ]],
				 ""SchedulerApcFill4"": [ 648, [ ""Array"", ""{\""count\"":72,\""target\"":\""Byte\""}"" ]],
				 ""LegoData"": [ 720, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SchedulerApcFill5"": [ 648, [ ""Array"", ""{\""count\"":83,\""target\"":\""Byte\""}"" ]],
				 ""CallbackNestingLevel"": [ 731, [ ""Byte"", ""null"" ]],
				 ""UserTime"": [ 732, [ ""UInt32"", ""null"" ]],
				 ""SuspendEvent"": [ 736, [ ""_KEVENT"", ""null"" ]],
				 ""ThreadListEntry"": [ 760, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""MutantListHead"": [ 776, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""LockEntriesFreeList"": [ 792, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""LockEntries"": [ 800, [ ""Array"", ""{\""count\"":6,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""PropagateBoostsEntry"": [ 1376, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""IoSelfBoostsEntry"": [ 1384, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""PriorityFloorCounts"": [ 1392, [ ""Array"", ""{\""count\"":16,\""target\"":\""Byte\""}"" ]],
				 ""PriorityFloorSummary"": [ 1408, [ ""UInt32"", ""null"" ]],
				 ""AbCompletedIoBoostCount"": [ 1412, [ ""Int32"", ""null"" ]],
				 ""AbReferenceCount"": [ 1416, [ ""Int16"", ""null"" ]],
				 ""AbFreeEntryCount"": [ 1418, [ ""Byte"", ""null"" ]],
				 ""AbWaitEntryCount"": [ 1419, [ ""Byte"", ""null"" ]],
				 ""ForegroundLossTime"": [ 1420, [ ""UInt32"", ""null"" ]],
				 ""GlobalForegroundListEntry"": [ 1424, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ForegroundDpcStackListEntry"": [ 1424, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""InGlobalForegroundList"": [ 1432, [ ""UInt64"", ""null"" ]],
				 ""ReadOperationCount"": [ 1440, [ ""Int64"", ""null"" ]],
				 ""WriteOperationCount"": [ 1448, [ ""Int64"", ""null"" ]],
				 ""OtherOperationCount"": [ 1456, [ ""Int64"", ""null"" ]],
				 ""ReadTransferCount"": [ 1464, [ ""Int64"", ""null"" ]],
				 ""WriteTransferCount"": [ 1472, [ ""Int64"", ""null"" ]],
				 ""OtherTransferCount"": [ 1480, [ ""Int64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _DISPATCHER_HEADER Header
		{
			get
			{
				_DISPATCHER_HEADER returnValue = new _DISPATCHER_HEADER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 SListFaultAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 QuantumTarget { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 InitialStack { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 StackLimit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 StackBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 ThreadLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 CycleTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt32 CurrentRunTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 ExpectedRunTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
		public UInt64 KernelStack { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 StateSaveArea { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt64 SchedulingGroup { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public _KWAIT_STATUS_REGISTER WaitRegister
		{
			get
			{
				_KWAIT_STATUS_REGISTER returnValue = new _KWAIT_STATUS_REGISTER(_StructureData, _BufferOffset + 112);
				return returnValue;
			}
		}
		public Byte Running{ get { return _StructureData[_BufferOffset +113]; } }
		public Byte[] Alerted
		{
			get
			{
				Byte[] returnValue = new Byte[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 114];
				return returnValue;
			}
		}
		public UInt32 SpareMiscFlag0
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 116);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 ReadyTransition
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 116);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessReadyQueue
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 116);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 WaitNext
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 116);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 SystemAffinityActive
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 116);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 Alertable
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 116);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 UserStackWalkActive
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 116);
				var value2 = (value & 64) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 ApcInterruptRequest
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 116);
				var value2 = (value & 128) >> 7;
				return (UInt32)value2;
			}
		}
		public UInt32 QuantumEndMigrate
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 116);
				var value2 = (value & 256) >> 8;
				return (UInt32)value2;
			}
		}
		public UInt32 UmsDirectedSwitchEnable
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 116);
				var value2 = (value & 512) >> 9;
				return (UInt32)value2;
			}
		}
		public UInt32 TimerActive
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 116);
				var value2 = (value & 1024) >> 10;
				return (UInt32)value2;
			}
		}
		public UInt32 SystemThread
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 116);
				var value2 = (value & 2048) >> 11;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessDetachActive
		{
			get
			{
				// start: 12  end: 13  Mask: 0001000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 116);
				var value2 = (value & 4096) >> 12;
				return (UInt32)value2;
			}
		}
		public UInt32 CalloutActive
		{
			get
			{
				// start: 13  end: 14  Mask: 0010000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 116);
				var value2 = (value & 8192) >> 13;
				return (UInt32)value2;
			}
		}
		public UInt32 ScbReadyQueue
		{
			get
			{
				// start: 14  end: 15  Mask: 0100000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 116);
				var value2 = (value & 16384) >> 14;
				return (UInt32)value2;
			}
		}
		public UInt32 ApcQueueable
		{
			get
			{
				// start: 15  end: 16  Mask: 1000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 116);
				var value2 = (value & 32768) >> 15;
				return (UInt32)value2;
			}
		}
		public UInt32 ReservedStackInUse
		{
			get
			{
				// start: 16  end: 17  Mask: 10000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 116);
				var value2 = (value & 65536) >> 16;
				return (UInt32)value2;
			}
		}
		public UInt32 UmsPerformingSyscall
		{
			get
			{
				// start: 17  end: 18  Mask: 100000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 116);
				var value2 = (value & 131072) >> 17;
				return (UInt32)value2;
			}
		}
		public UInt32 ApcPendingReload
		{
			get
			{
				// start: 18  end: 19  Mask: 1000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 116);
				var value2 = (value & 262144) >> 18;
				return (UInt32)value2;
			}
		}
		public UInt32 TimerSuspended
		{
			get
			{
				// start: 19  end: 20  Mask: 10000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 116);
				var value2 = (value & 524288) >> 19;
				return (UInt32)value2;
			}
		}
		public UInt32 SuspendedWaitMode
		{
			get
			{
				// start: 20  end: 21  Mask: 100000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 116);
				var value2 = (value & 1048576) >> 20;
				return (UInt32)value2;
			}
		}
		public UInt32 Reserved
		{
			get
			{
				// start: 21  end: 32  Mask: 11111111111000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 116);
				var value2 = (value & 4292870144) >> 21;
				return (UInt32)value2;
			}
		}
		public Int32 MiscFlags { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 116); } }
		public UInt32 AutoAlignment
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 120);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 DisableBoost
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 120);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 UserAffinitySet
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 120);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 AlertedByThreadId
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 120);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 QuantumDonation
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 120);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 EnableStackSwap
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 120);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 GuiThread
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 120);
				var value2 = (value & 64) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 DisableQuantum
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 120);
				var value2 = (value & 128) >> 7;
				return (UInt32)value2;
			}
		}
		public UInt32 ChargeOnlySchedulingGroup
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 120);
				var value2 = (value & 256) >> 8;
				return (UInt32)value2;
			}
		}
		public UInt32 DeferPreemption
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 120);
				var value2 = (value & 512) >> 9;
				return (UInt32)value2;
			}
		}
		public UInt32 QueueDeferPreemption
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 120);
				var value2 = (value & 1024) >> 10;
				return (UInt32)value2;
			}
		}
		public UInt32 ForceDeferSchedule
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 120);
				var value2 = (value & 2048) >> 11;
				return (UInt32)value2;
			}
		}
		public UInt32 SharedReadyQueueAffinity
		{
			get
			{
				// start: 12  end: 13  Mask: 0001000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 120);
				var value2 = (value & 4096) >> 12;
				return (UInt32)value2;
			}
		}
		public UInt32 FreezeCount
		{
			get
			{
				// start: 13  end: 14  Mask: 0010000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 120);
				var value2 = (value & 8192) >> 13;
				return (UInt32)value2;
			}
		}
		public UInt32 TerminationApcRequest
		{
			get
			{
				// start: 14  end: 15  Mask: 0100000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 120);
				var value2 = (value & 16384) >> 14;
				return (UInt32)value2;
			}
		}
		public UInt32 AutoBoostEntriesExhausted
		{
			get
			{
				// start: 15  end: 16  Mask: 1000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 120);
				var value2 = (value & 32768) >> 15;
				return (UInt32)value2;
			}
		}
		public UInt32 KernelStackResident
		{
			get
			{
				// start: 16  end: 17  Mask: 10000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 120);
				var value2 = (value & 65536) >> 16;
				return (UInt32)value2;
			}
		}
		public UInt32 EtwStackTraceApcInserted
		{
			get
			{
				// start: 17  end: 25  Mask: 1111111100000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 120);
				var value2 = (value & 33423360) >> 17;
				return (UInt32)value2;
			}
		}
		public UInt32 ReservedFlags
		{
			get
			{
				// start: 25  end: 32  Mask: 11111110000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 120);
				var value2 = (value & 4261412864) >> 25;
				return (UInt32)value2;
			}
		}
		public Int32 ThreadFlags { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 120); } }
		public UInt32 Spare0 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 124); } }
		public UInt32 SystemCallNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 128); } }
		public UInt32 Spare1 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 132); } }
		public UInt64 FirstArgument { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 136); } }
		public UInt64 TrapFrame { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 144); } }
		public _KAPC_STATE ApcState
		{
			get
			{
				_KAPC_STATE returnValue = new _KAPC_STATE(_StructureData, _BufferOffset + 152);
				return returnValue;
			}
		}
		public Byte[] ApcStateFill
		{
			get
			{
				Byte[] returnValue = new Byte[43];
				for(int i=0; i<43; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 152];
				return returnValue;
			}
		}
		public Char Priority { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 195); } }
		public UInt32 UserIdealProcessor { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 196); } }
		public Int64 WaitStatus { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 200); } }
		public UInt64 WaitBlockList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 208); } }
		public _LIST_ENTRY WaitListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 216);
				return returnValue;
			}
		}
		public _SINGLE_LIST_ENTRY SwapListEntry
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 216);
				return returnValue;
			}
		}
		public UInt64 Queue { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 232); } }
		public UInt64 Teb { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 240); } }
		public UInt64 RelativeTimerBias { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 248); } }
		public _KTIMER Timer
		{
			get
			{
				_KTIMER returnValue = new _KTIMER(_StructureData, _BufferOffset + 256);
				return returnValue;
			}
		}
		public _KWAIT_BLOCK[] WaitBlock
		{
			get
			{
				_KWAIT_BLOCK[] returnValue = new _KWAIT_BLOCK[4];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<4; i++ )
					returnValue[i] = new _KWAIT_BLOCK(_StructureData, (i * size) + _BufferOffset + 320);
				return returnValue;
			}
		}
		public Byte[] WaitBlockFill4
		{
			get
			{
				Byte[] returnValue = new Byte[20];
				for(int i=0; i<20; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 320];
				return returnValue;
			}
		}
		public UInt32 ContextSwitches { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 340); } }
		public Byte[] WaitBlockFill5
		{
			get
			{
				Byte[] returnValue = new Byte[68];
				for(int i=0; i<68; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 320];
				return returnValue;
			}
		}
		public Byte State{ get { return _StructureData[_BufferOffset +388]; } }
		public Char NpxState { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 389); } }
		public Byte WaitIrql{ get { return _StructureData[_BufferOffset +390]; } }
		public Char WaitMode { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 391); } }
		public Byte[] WaitBlockFill6
		{
			get
			{
				Byte[] returnValue = new Byte[116];
				for(int i=0; i<116; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 320];
				return returnValue;
			}
		}
		public UInt32 WaitTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 436); } }
		public Byte[] WaitBlockFill7
		{
			get
			{
				Byte[] returnValue = new Byte[164];
				for(int i=0; i<164; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 320];
				return returnValue;
			}
		}
		public Int16 KernelApcDisable { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 484); } }
		public Int16 SpecialApcDisable { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 486); } }
		public UInt32 CombinedApcDisable { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 484); } }
		public Byte[] WaitBlockFill8
		{
			get
			{
				Byte[] returnValue = new Byte[40];
				for(int i=0; i<40; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 320];
				return returnValue;
			}
		}
		public UInt64 ThreadCounters { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 360); } }
		public Byte[] WaitBlockFill9
		{
			get
			{
				Byte[] returnValue = new Byte[88];
				for(int i=0; i<88; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 320];
				return returnValue;
			}
		}
		public UInt64 XStateSave { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 408); } }
		public Byte[] WaitBlockFill10
		{
			get
			{
				Byte[] returnValue = new Byte[136];
				for(int i=0; i<136; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 320];
				return returnValue;
			}
		}
		public UInt64 Win32Thread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 456); } }
		public Byte[] WaitBlockFill11
		{
			get
			{
				Byte[] returnValue = new Byte[176];
				for(int i=0; i<176; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 320];
				return returnValue;
			}
		}
		public UInt64 Ucb { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 496); } }
		public UInt64 Uch { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 504); } }
		public UInt64 TebMappedLowVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 512); } }
		public _LIST_ENTRY QueueListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 520);
				return returnValue;
			}
		}
		public UInt32 NextProcessor { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 536); } }
		public UInt32 NextProcessorNumber
		{
			get
			{
				// start: 0  end: 31  Mask: 1111111111111111111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 536);
				var value2 = (value & 2147483647) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 SharedReadyQueue
		{
			get
			{
				// start: 31  end: 32  Mask: 10000000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 536);
				var value2 = (value & 2147483648) >> 31;
				return (UInt32)value2;
			}
		}
		public Int32 QueuePriority { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 540); } }
		public UInt64 Process { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 544); } }
		public _GROUP_AFFINITY UserAffinity
		{
			get
			{
				_GROUP_AFFINITY returnValue = new _GROUP_AFFINITY(_StructureData, _BufferOffset + 552);
				return returnValue;
			}
		}
		public Byte[] UserAffinityFill
		{
			get
			{
				Byte[] returnValue = new Byte[10];
				for(int i=0; i<10; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 552];
				return returnValue;
			}
		}
		public Char PreviousMode { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 562); } }
		public Char BasePriority { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 563); } }
		public Char PriorityDecrement { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 564); } }
		public Byte ForegroundBoost
		{
			get
			{
				// start: 0  end: 4  Mask: 0000000000001111
				Byte value = _StructureData[_BufferOffset + 564];
				var value2 = (value & 15) >> 0;
				return (Byte)value2;
			}
		}
		public Byte UnusualBoost
		{
			get
			{
				// start: 4  end: 8  Mask: 0000000011110000
				Byte value = _StructureData[_BufferOffset + 564];
				var value2 = (value & 240) >> 4;
				return (Byte)value2;
			}
		}
		public Byte Preempted{ get { return _StructureData[_BufferOffset +565]; } }
		public Byte AdjustReason{ get { return _StructureData[_BufferOffset +566]; } }
		public Char AdjustIncrement { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 567); } }
		public _GROUP_AFFINITY Affinity
		{
			get
			{
				_GROUP_AFFINITY returnValue = new _GROUP_AFFINITY(_StructureData, _BufferOffset + 568);
				return returnValue;
			}
		}
		public Byte[] AffinityFill
		{
			get
			{
				Byte[] returnValue = new Byte[10];
				for(int i=0; i<10; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 568];
				return returnValue;
			}
		}
		public Byte ApcStateIndex{ get { return _StructureData[_BufferOffset +578]; } }
		public Byte WaitBlockCount{ get { return _StructureData[_BufferOffset +579]; } }
		public UInt32 IdealProcessor { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 580); } }
		public UInt64[] ApcStatePointer
		{
			get
			{
				UInt64[] returnValue = new UInt64[2];
				int size = 8;
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 584);
				return returnValue;
			}
		}
		public _KAPC_STATE SavedApcState
		{
			get
			{
				_KAPC_STATE returnValue = new _KAPC_STATE(_StructureData, _BufferOffset + 600);
				return returnValue;
			}
		}
		public Byte[] SavedApcStateFill
		{
			get
			{
				Byte[] returnValue = new Byte[43];
				for(int i=0; i<43; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 600];
				return returnValue;
			}
		}
		public Byte WaitReason{ get { return _StructureData[_BufferOffset +643]; } }
		public Char SuspendCount { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 644); } }
		public Char Saturation { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 645); } }
		public UInt16 SListFaultCount { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 646); } }
		public _KAPC SchedulerApc
		{
			get
			{
				_KAPC returnValue = new _KAPC(_StructureData, _BufferOffset + 648);
				return returnValue;
			}
		}
		public Byte[] SchedulerApcFill0
		{
			get
			{
				Byte[] returnValue = new Byte[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 648];
				return returnValue;
			}
		}
		public Byte ResourceIndex{ get { return _StructureData[_BufferOffset +649]; } }
		public Byte[] SchedulerApcFill1
		{
			get
			{
				Byte[] returnValue = new Byte[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 648];
				return returnValue;
			}
		}
		public Byte QuantumReset{ get { return _StructureData[_BufferOffset +651]; } }
		public Byte[] SchedulerApcFill2
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 648];
				return returnValue;
			}
		}
		public UInt32 KernelTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 652); } }
		public Byte[] SchedulerApcFill3
		{
			get
			{
				Byte[] returnValue = new Byte[64];
				for(int i=0; i<64; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 648];
				return returnValue;
			}
		}
		public UInt64 WaitPrcb { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 712); } }
		public Byte[] SchedulerApcFill4
		{
			get
			{
				Byte[] returnValue = new Byte[72];
				for(int i=0; i<72; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 648];
				return returnValue;
			}
		}
		public UInt64 LegoData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 720); } }
		public Byte[] SchedulerApcFill5
		{
			get
			{
				Byte[] returnValue = new Byte[83];
				for(int i=0; i<83; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 648];
				return returnValue;
			}
		}
		public Byte CallbackNestingLevel{ get { return _StructureData[_BufferOffset +731]; } }
		public UInt32 UserTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 732); } }
		public _KEVENT SuspendEvent
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 736);
				return returnValue;
			}
		}
		public _LIST_ENTRY ThreadListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 760);
				return returnValue;
			}
		}
		public _LIST_ENTRY MutantListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 776);
				return returnValue;
			}
		}
		public _SINGLE_LIST_ENTRY LockEntriesFreeList
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 792);
				return returnValue;
			}
		}
		public _KLOCK_ENTRY[] LockEntries
		{
			get
			{
				_KLOCK_ENTRY[] returnValue = new _KLOCK_ENTRY[6];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<6; i++ )
					returnValue[i] = new _KLOCK_ENTRY(_StructureData, (i * size) + _BufferOffset + 800);
				return returnValue;
			}
		}
		public _SINGLE_LIST_ENTRY PropagateBoostsEntry
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 1376);
				return returnValue;
			}
		}
		public _SINGLE_LIST_ENTRY IoSelfBoostsEntry
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 1384);
				return returnValue;
			}
		}
		public Byte[] PriorityFloorCounts
		{
			get
			{
				Byte[] returnValue = new Byte[16];
				for(int i=0; i<16; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 1392];
				return returnValue;
			}
		}
		public UInt32 PriorityFloorSummary { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1408); } }
		public Int32 AbCompletedIoBoostCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 1412); } }
		public Int16 AbReferenceCount { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 1416); } }
		public Byte AbFreeEntryCount{ get { return _StructureData[_BufferOffset +1418]; } }
		public Byte AbWaitEntryCount{ get { return _StructureData[_BufferOffset +1419]; } }
		public UInt32 ForegroundLossTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1420); } }
		public _LIST_ENTRY GlobalForegroundListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 1424);
				return returnValue;
			}
		}
		public _SINGLE_LIST_ENTRY ForegroundDpcStackListEntry
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 1424);
				return returnValue;
			}
		}
		public UInt64 InGlobalForegroundList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1432); } }
		public Int64 ReadOperationCount { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 1440); } }
		public Int64 WriteOperationCount { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 1448); } }
		public Int64 OtherOperationCount { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 1456); } }
		public Int64 ReadTransferCount { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 1464); } }
		public Int64 WriteTransferCount { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 1472); } }
		public Int64 OtherTransferCount { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 1480); } }
	}
	#endregion
	#region _KSTACK_CONTROL
 
	public class _KSTACK_CONTROL
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KSTACK_CONTROL(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KSTACK_CONTROL"": [ 48, {
				 ""StackBase"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""ActualLimit"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""StackExpansion"": [ 8, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""Previous"": [ 16, [ ""_KERNEL_STACK_SEGMENT"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 StackBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 ActualLimit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 StackExpansion
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 8);
				var value2 = (value & 1) >> 0;
				return (UInt64)value2;
			}
		}
		public _KERNEL_STACK_SEGMENT Previous
		{
			get
			{
				_KERNEL_STACK_SEGMENT returnValue = new _KERNEL_STACK_SEGMENT(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _KSPIN_LOCK_QUEUE
 
	public class _KSPIN_LOCK_QUEUE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KSPIN_LOCK_QUEUE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KSPIN_LOCK_QUEUE"": [ 16, {
				 ""Next"": [ 0, [ ""Pointer"", ""{\""target\"":\""_KSPIN_LOCK_QUEUE\""}"" ]],
				 ""Lock"": [ 8, [ ""Pointer"", ""{\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Next { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Lock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _FAST_MUTEX
 
	public class _FAST_MUTEX
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _FAST_MUTEX(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_FAST_MUTEX"": [ 56, {
				 ""Count"": [ 0, [ ""Int32"", ""null"" ]],
				 ""Owner"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Contention"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""Event"": [ 24, [ ""_KEVENT"", ""null"" ]],
				 ""OldIrql"": [ 48, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int32 Count { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 Owner { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 Contention { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public _KEVENT Event
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt32 OldIrql { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
	}
	#endregion
	#region _KEVENT
 
	public class _KEVENT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KEVENT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KEVENT"": [ 24, {
				 ""Header"": [ 0, [ ""_DISPATCHER_HEADER"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _DISPATCHER_HEADER Header
		{
			get
			{
				_DISPATCHER_HEADER returnValue = new _DISPATCHER_HEADER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_27674
 
	public class _UNNAMED_27674
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_27674(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_27674"": [ 16, {
				 ""Depth"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""Sequence"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":16,\""target\"":\""UInt64\""}"" ]],
				 ""Reserved"": [ 8, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""NextEntry"": [ 8, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":4,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Depth
		{
			get
			{
				// start: 0  end: 16  Mask: 1111111111111111
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 65535) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 Sequence
		{
			get
			{
				// start: 16  end: 64  Mask: 0000000000000000000000000000000011111111111111110000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294901760) >> 16;
				return (UInt64)value2;
			}
		}
		public UInt64 Reserved
		{
			get
			{
				// start: 0  end: 4  Mask: 0000000000001111
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 8);
				var value2 = (value & 15) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 NextEntry
		{
			get
			{
				// start: 4  end: 64  Mask: 0000000000000000000000000000000011111111111111111111111111110000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 8);
				var value2 = (value & 4294967280) >> 4;
				return (UInt64)value2;
			}
		}
	}
	#endregion
	#region _SLIST_HEADER
 
	public class _SLIST_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SLIST_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SLIST_HEADER"": [ 16, {
				 ""Alignment"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Region"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""HeaderX64"": [ 0, [ ""_UNNAMED_27674"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Alignment { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Region { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _UNNAMED_27674 HeaderX64
		{
			get
			{
				_UNNAMED_27674 returnValue = new _UNNAMED_27674(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _LOOKASIDE_LIST_EX
 
	public class _LOOKASIDE_LIST_EX
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _LOOKASIDE_LIST_EX(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 96; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_LOOKASIDE_LIST_EX"": [ 96, {
				 ""L"": [ 0, [ ""_GENERAL_LOOKASIDE_POOL"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _GENERAL_LOOKASIDE_POOL L
		{
			get
			{
				_GENERAL_LOOKASIDE_POOL returnValue = new _GENERAL_LOOKASIDE_POOL(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _SLIST_ENTRY
 
	public class _SLIST_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SLIST_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SLIST_ENTRY"": [ 16, {
				 ""Next"": [ 0, [ ""Pointer"", ""{\""target\"":\""_SLIST_ENTRY\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Next { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _NPAGED_LOOKASIDE_LIST
 
	public class _NPAGED_LOOKASIDE_LIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _NPAGED_LOOKASIDE_LIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 128; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_NPAGED_LOOKASIDE_LIST"": [ 128, {
				 ""L"": [ 0, [ ""_GENERAL_LOOKASIDE"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _GENERAL_LOOKASIDE L
		{
			get
			{
				_GENERAL_LOOKASIDE returnValue = new _GENERAL_LOOKASIDE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _PAGED_LOOKASIDE_LIST
 
	public class _PAGED_LOOKASIDE_LIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PAGED_LOOKASIDE_LIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 128; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PAGED_LOOKASIDE_LIST"": [ 128, {
				 ""L"": [ 0, [ ""_GENERAL_LOOKASIDE"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _GENERAL_LOOKASIDE L
		{
			get
			{
				_GENERAL_LOOKASIDE returnValue = new _GENERAL_LOOKASIDE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _IO_STATUS_BLOCK
 
	public class _IO_STATUS_BLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IO_STATUS_BLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IO_STATUS_BLOCK"": [ 16, {
				 ""Status"": [ 0, [ ""Int32"", ""null"" ]],
				 ""Pointer"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Information"": [ 8, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int32 Status { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 Pointer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Information { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _QUAD
 
	public class _QUAD
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _QUAD(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_QUAD"": [ 8, {
				 ""UseThisFieldToCopy"": [ 0, [ ""Int64"", ""null"" ]],
				 ""DoNotUseThisField"": [ 0, [ ""Double"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int64 UseThisFieldToCopy { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 0); } }
		public Double DoNotUseThisField { get { return BitConverter.ToDouble(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _WORK_QUEUE_ITEM
 
	public class _WORK_QUEUE_ITEM
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WORK_QUEUE_ITEM(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WORK_QUEUE_ITEM"": [ 32, {
				 ""List"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""WorkerRoutine"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Parameter"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY List
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 WorkerRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Parameter { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _EXT_DELETE_PARAMETERS
 
	public class _EXT_DELETE_PARAMETERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EXT_DELETE_PARAMETERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EXT_DELETE_PARAMETERS"": [ 24, {
				 ""Version"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Reserved"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""DeleteCallback"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DeleteContext"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Version { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Reserved { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 DeleteCallback { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 DeleteContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _EX_PUSH_LOCK
 
	public class _EX_PUSH_LOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EX_PUSH_LOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EX_PUSH_LOCK"": [ 8, {
				 ""Locked"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""Waiting"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt64\""}"" ]],
				 ""Waking"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt64\""}"" ]],
				 ""MultipleShared"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt64\""}"" ]],
				 ""Shared"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":4,\""target\"":\""UInt64\""}"" ]],
				 ""Value"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Ptr"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Locked
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 Waiting
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt64)value2;
			}
		}
		public UInt64 Waking
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt64)value2;
			}
		}
		public UInt64 MultipleShared
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8) >> 3;
				return (UInt64)value2;
			}
		}
		public UInt64 Shared
		{
			get
			{
				// start: 4  end: 64  Mask: 0000000000000000000000000000000011111111111111111111111111110000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967280) >> 4;
				return (UInt64)value2;
			}
		}
		public UInt64 Value { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Ptr { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _PP_LOOKASIDE_LIST
 
	public class _PP_LOOKASIDE_LIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PP_LOOKASIDE_LIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PP_LOOKASIDE_LIST"": [ 16, {
				 ""P"": [ 0, [ ""Pointer"", ""{\""target\"":\""_GENERAL_LOOKASIDE\""}"" ]],
				 ""L"": [ 8, [ ""Pointer"", ""{\""target\"":\""_GENERAL_LOOKASIDE\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 P { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 L { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _GENERAL_LOOKASIDE
 
	public class _GENERAL_LOOKASIDE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _GENERAL_LOOKASIDE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 128; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_GENERAL_LOOKASIDE"": [ 128, {
				 ""ListHead"": [ 0, [ ""_SLIST_HEADER"", ""null"" ]],
				 ""SingleListHead"": [ 0, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""Depth"": [ 16, [ ""UInt16"", ""null"" ]],
				 ""MaximumDepth"": [ 18, [ ""UInt16"", ""null"" ]],
				 ""TotalAllocates"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""AllocateMisses"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""AllocateHits"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""TotalFrees"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""FreeMisses"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""FreeHits"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""Type"": [ 36, [ ""Enumeration"", ""{\""enum_name\"":\""_POOL_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""Tag"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""Size"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""AllocateEx"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Allocate"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FreeEx"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Free"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ListEntry"": [ 64, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""LastTotalAllocates"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""LastAllocateMisses"": [ 84, [ ""UInt32"", ""null"" ]],
				 ""LastAllocateHits"": [ 84, [ ""UInt32"", ""null"" ]],
				 ""Future"": [ 88, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public _SLIST_HEADER ListHead
		{
			get
			{
				_SLIST_HEADER returnValue = new _SLIST_HEADER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _SINGLE_LIST_ENTRY SingleListHead
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt16 Depth { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 16); } }
		public UInt16 MaximumDepth { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 18); } }
		public UInt32 TotalAllocates { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 AllocateMisses { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 AllocateHits { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 TotalFrees { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 FreeMisses { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 FreeHits { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public _POOL_TYPE Type { get { return (_POOL_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public UInt32 Tag { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32 Size { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public UInt64 AllocateEx { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 Allocate { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 FreeEx { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 Free { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public UInt32 LastTotalAllocates { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 LastAllocateMisses { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
		public UInt32 LastAllocateHits { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
		public UInt32[] Future
		{
			get
			{
				UInt32[] returnValue = new UInt32[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 88);
				return returnValue;
			}
		}
	}
	#endregion
	#region _KNODE
 
	public class _KNODE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KNODE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 192; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KNODE"": [ 192, {
				 ""DeepIdleSet"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""SharedReadyQueueLeaders"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""ProximityId"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""NodeNumber"": [ 68, [ ""UInt16"", ""null"" ]],
				 ""PrimaryNodeNumber"": [ 70, [ ""UInt16"", ""null"" ]],
				 ""MaximumProcessors"": [ 72, [ ""Byte"", ""null"" ]],
				 ""Flags"": [ 73, [ ""_flags"", ""null"" ]],
				 ""Stride"": [ 74, [ ""Byte"", ""null"" ]],
				 ""LowIndex"": [ 75, [ ""Byte"", ""null"" ]],
				 ""Affinity"": [ 80, [ ""_GROUP_AFFINITY"", ""null"" ]],
				 ""IdleCpuSet"": [ 96, [ ""UInt64"", ""null"" ]],
				 ""IdleSmtSet"": [ 104, [ ""UInt64"", ""null"" ]],
				 ""NonParkedSet"": [ 128, [ ""UInt64"", ""null"" ]],
				 ""Seed"": [ 136, [ ""UInt32"", ""null"" ]],
				 ""Lowest"": [ 140, [ ""UInt32"", ""null"" ]],
				 ""Highest"": [ 144, [ ""UInt32"", ""null"" ]],
				 ""ParkLock"": [ 148, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 DeepIdleSet { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 SharedReadyQueueLeaders { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 ProximityId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt16 NodeNumber { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 68); } }
		public UInt16 PrimaryNodeNumber { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 70); } }
		public Byte MaximumProcessors{ get { return _StructureData[_BufferOffset +72]; } }
		public _flags Flags
		{
			get
			{
				_flags returnValue = new _flags(_StructureData, _BufferOffset + 73);
				return returnValue;
			}
		}
		public Byte Stride{ get { return _StructureData[_BufferOffset +74]; } }
		public Byte LowIndex{ get { return _StructureData[_BufferOffset +75]; } }
		public _GROUP_AFFINITY Affinity
		{
			get
			{
				_GROUP_AFFINITY returnValue = new _GROUP_AFFINITY(_StructureData, _BufferOffset + 80);
				return returnValue;
			}
		}
		public UInt64 IdleCpuSet { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt64 IdleSmtSet { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public UInt64 NonParkedSet { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 128); } }
		public UInt32 Seed { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 136); } }
		public UInt32 Lowest { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 140); } }
		public UInt32 Highest { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 144); } }
		public Int32 ParkLock { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 148); } }
	}
	#endregion
	#region _ENODE
 
	public class _ENODE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ENODE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1280; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ENODE"": [ 1280, {
				 ""Ncb"": [ 0, [ ""_KNODE"", ""null"" ]],
				 ""ExWorkQueues"": [ 192, [ ""Array"", ""{\""count\"":8,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""_EX_WORK_QUEUE\""}}"" ]],
				 ""ExWorkQueue"": [ 256, [ ""_EX_WORK_QUEUE"", ""null"" ]],
				 ""ExpThreadSetManagerEvent"": [ 976, [ ""_KEVENT"", ""null"" ]],
				 ""ExpDeadlockTimer"": [ 1000, [ ""_KTIMER"", ""null"" ]],
				 ""ExpThreadReaperEvent"": [ 1064, [ ""_KEVENT"", ""null"" ]],
				 ""WaitBlocks"": [ 1088, [ ""Array"", ""{\""count\"":3,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""ExpWorkerThreadBalanceManagerPtr"": [ 1232, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]],
				 ""ExpWorkerSeed"": [ 1240, [ ""UInt32"", ""null"" ]],
				 ""ExWorkerFullInit"": [ 1244, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""ExWorkerStructInit"": [ 1244, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""ExWorkerFlags"": [ 1244, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _KNODE Ncb
		{
			get
			{
				_KNODE returnValue = new _KNODE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64[] ExWorkQueues
		{
			get
			{
				UInt64[] returnValue = new UInt64[8];
				int size = 8;
				for(int i=0; i<8; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 192);
				return returnValue;
			}
		}
		public _EX_WORK_QUEUE ExWorkQueue
		{
			get
			{
				_EX_WORK_QUEUE returnValue = new _EX_WORK_QUEUE(_StructureData, _BufferOffset + 256);
				return returnValue;
			}
		}
		public _KEVENT ExpThreadSetManagerEvent
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 976);
				return returnValue;
			}
		}
		public _KTIMER ExpDeadlockTimer
		{
			get
			{
				_KTIMER returnValue = new _KTIMER(_StructureData, _BufferOffset + 1000);
				return returnValue;
			}
		}
		public _KEVENT ExpThreadReaperEvent
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 1064);
				return returnValue;
			}
		}
		public _KWAIT_BLOCK[] WaitBlocks
		{
			get
			{
				_KWAIT_BLOCK[] returnValue = new _KWAIT_BLOCK[3];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<3; i++ )
					returnValue[i] = new _KWAIT_BLOCK(_StructureData, (i * size) + _BufferOffset + 1088);
				return returnValue;
			}
		}
		public UInt64 ExpWorkerThreadBalanceManagerPtr { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1232); } }
		public UInt32 ExpWorkerSeed { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1240); } }
		public UInt32 ExWorkerFullInit
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1244);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 ExWorkerStructInit
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1244);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 ExWorkerFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1244); } }
	}
	#endregion
	#region _HANDLE_TABLE
 
	public class _HANDLE_TABLE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HANDLE_TABLE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 128; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HANDLE_TABLE"": [ 128, {
				 ""NextHandleNeedingPool"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ExtraInfoPages"": [ 4, [ ""Int32"", ""null"" ]],
				 ""TableCode"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""QuotaProcess"": [ 16, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""HandleTableList"": [ 24, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""UniqueProcessId"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""Flags"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""StrictFIFO"": [ 44, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""EnableHandleExceptions"": [ 44, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""Rundown"": [ 44, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""Duplicated"": [ 44, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""HandleContentionEvent"": [ 48, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""HandleTableLock"": [ 56, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""FreeLists"": [ 64, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""ActualEntry"": [ 64, [ ""Array"", ""{\""count\"":32,\""target\"":\""Byte\""}"" ]],
				 ""DebugInfo"": [ 96, [ ""Pointer"", ""{\""target\"":\""_HANDLE_TRACE_DEBUG_INFO\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 NextHandleNeedingPool { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Int32 ExtraInfoPages { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 TableCode { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 QuotaProcess { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public _LIST_ENTRY HandleTableList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt32 UniqueProcessId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public Byte StrictFIFO
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 44];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte EnableHandleExceptions
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 44];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte Rundown
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 44];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte Duplicated
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 44];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public _EX_PUSH_LOCK HandleContentionEvent
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public _EX_PUSH_LOCK HandleTableLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public _HANDLE_TABLE_FREE_LIST[] FreeLists
		{
			get
			{
				_HANDLE_TABLE_FREE_LIST[] returnValue = new _HANDLE_TABLE_FREE_LIST[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _HANDLE_TABLE_FREE_LIST(_StructureData, (i * size) + _BufferOffset + 64);
				return returnValue;
			}
		}
		public Byte[] ActualEntry
		{
			get
			{
				Byte[] returnValue = new Byte[32];
				for(int i=0; i<32; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 64];
				return returnValue;
			}
		}
		public UInt64 DebugInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
	}
	#endregion
	#region _HANDLE_TABLE_ENTRY_INFO
 
	public class _HANDLE_TABLE_ENTRY_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HANDLE_TABLE_ENTRY_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HANDLE_TABLE_ENTRY_INFO"": [ 4, {
				 ""AuditMask"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 AuditMask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _HANDLE_TABLE_ENTRY
 
	public class _HANDLE_TABLE_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HANDLE_TABLE_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HANDLE_TABLE_ENTRY"": [ 16, {
				 ""VolatileLowValue"": [ 0, [ ""Int64"", ""null"" ]],
				 ""LowValue"": [ 0, [ ""Int64"", ""null"" ]],
				 ""InfoTable"": [ 0, [ ""Pointer"", ""{\""target\"":\""_HANDLE_TABLE_ENTRY_INFO\""}"" ]],
				 ""Unlocked"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""RefCnt"": [ 0, [ ""BitField"", ""{\""end_bit\"":17,\""start_bit\"":1,\""target\"":\""UInt64\""}"" ]],
				 ""Attributes"": [ 0, [ ""BitField"", ""{\""end_bit\"":20,\""start_bit\"":17,\""target\"":\""UInt64\""}"" ]],
				 ""ObjectPointerBits"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":20,\""target\"":\""UInt64\""}"" ]],
				 ""HighValue"": [ 8, [ ""Int64"", ""null"" ]],
				 ""NextFreeHandleEntry"": [ 8, [ ""Pointer"", ""{\""target\"":\""_HANDLE_TABLE_ENTRY\""}"" ]],
				 ""LeafHandleValue"": [ 8, [ ""_EXHANDLE"", ""null"" ]],
				 ""GrantedAccessBits"": [ 8, [ ""BitField"", ""{\""end_bit\"":25,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""NoRightsUpgrade"": [ 8, [ ""BitField"", ""{\""end_bit\"":26,\""start_bit\"":25,\""target\"":\""UInt32\""}"" ]],
				 ""Spare"": [ 8, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":26,\""target\"":\""UInt32\""}"" ]],
				 ""TypeInfo"": [ 12, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int64 VolatileLowValue { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 0); } }
		public Int64 LowValue { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 InfoTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Unlocked
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 RefCnt
		{
			get
			{
				// start: 1  end: 17  Mask: 11111111111111110
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 131070) >> 1;
				return (UInt64)value2;
			}
		}
		public UInt64 Attributes
		{
			get
			{
				// start: 17  end: 20  Mask: 11100000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 917504) >> 17;
				return (UInt64)value2;
			}
		}
		public UInt64 ObjectPointerBits
		{
			get
			{
				// start: 20  end: 64  Mask: 0000000000000000000000000000000011111111111100000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4293918720) >> 20;
				return (UInt64)value2;
			}
		}
		public Int64 HighValue { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 NextFreeHandleEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _EXHANDLE LeafHandleValue
		{
			get
			{
				_EXHANDLE returnValue = new _EXHANDLE(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt32 GrantedAccessBits
		{
			get
			{
				// start: 0  end: 25  Mask: 1111111111111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 8);
				var value2 = (value & 33554431) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 NoRightsUpgrade
		{
			get
			{
				// start: 25  end: 26  Mask: 10000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 8);
				var value2 = (value & 33554432) >> 25;
				return (UInt32)value2;
			}
		}
		public UInt32 Spare
		{
			get
			{
				// start: 26  end: 32  Mask: 11111100000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 8);
				var value2 = (value & 4227858432) >> 26;
				return (UInt32)value2;
			}
		}
		public UInt32 TypeInfo { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
	}
	#endregion
	#region _EX_FAST_REF
 
	public class _EX_FAST_REF
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EX_FAST_REF(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EX_FAST_REF"": [ 8, {
				 ""Object"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""RefCnt"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""Value"": [ 0, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Object { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 RefCnt
		{
			get
			{
				// start: 0  end: 4  Mask: 0000000000001111
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 15) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 Value { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_27836
 
	public class _UNNAMED_27836
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_27836(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 44; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_27836"": [ 44, {
				 ""InitialPrivilegeSet"": [ 0, [ ""_INITIAL_PRIVILEGE_SET"", ""null"" ]],
				 ""PrivilegeSet"": [ 0, [ ""_PRIVILEGE_SET"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _INITIAL_PRIVILEGE_SET InitialPrivilegeSet
		{
			get
			{
				_INITIAL_PRIVILEGE_SET returnValue = new _INITIAL_PRIVILEGE_SET(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _PRIVILEGE_SET PrivilegeSet
		{
			get
			{
				_PRIVILEGE_SET returnValue = new _PRIVILEGE_SET(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ACCESS_STATE
 
	public class _ACCESS_STATE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ACCESS_STATE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 160; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ACCESS_STATE"": [ 160, {
				 ""OperationID"": [ 0, [ ""_LUID"", ""null"" ]],
				 ""SecurityEvaluated"": [ 8, [ ""Byte"", ""null"" ]],
				 ""GenerateAudit"": [ 9, [ ""Byte"", ""null"" ]],
				 ""GenerateOnClose"": [ 10, [ ""Byte"", ""null"" ]],
				 ""PrivilegesAllocated"": [ 11, [ ""Byte"", ""null"" ]],
				 ""Flags"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""RemainingDesiredAccess"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""PreviouslyGrantedAccess"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""OriginalDesiredAccess"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""SubjectSecurityContext"": [ 32, [ ""_SECURITY_SUBJECT_CONTEXT"", ""null"" ]],
				 ""SecurityDescriptor"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""AuxData"": [ 72, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Privileges"": [ 80, [ ""_UNNAMED_27836"", ""null"" ]],
				 ""AuditPrivileges"": [ 124, [ ""Byte"", ""null"" ]],
				 ""ObjectName"": [ 128, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""ObjectTypeName"": [ 144, [ ""_UNICODE_STRING"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LUID OperationID
		{
			get
			{
				_LUID returnValue = new _LUID(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public Byte SecurityEvaluated{ get { return _StructureData[_BufferOffset +8]; } }
		public Byte GenerateAudit{ get { return _StructureData[_BufferOffset +9]; } }
		public Byte GenerateOnClose{ get { return _StructureData[_BufferOffset +10]; } }
		public Byte PrivilegesAllocated{ get { return _StructureData[_BufferOffset +11]; } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 RemainingDesiredAccess { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 PreviouslyGrantedAccess { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 OriginalDesiredAccess { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public _SECURITY_SUBJECT_CONTEXT SubjectSecurityContext
		{
			get
			{
				_SECURITY_SUBJECT_CONTEXT returnValue = new _SECURITY_SUBJECT_CONTEXT(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt64 SecurityDescriptor { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 AuxData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public _UNNAMED_27836 Privileges
		{
			get
			{
				_UNNAMED_27836 returnValue = new _UNNAMED_27836(_StructureData, _BufferOffset + 80);
				return returnValue;
			}
		}
		public Byte AuditPrivileges{ get { return _StructureData[_BufferOffset +124]; } }
		public _UNICODE_STRING ObjectName
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 128);
				return returnValue;
			}
		}
		public _UNICODE_STRING ObjectTypeName
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 144);
				return returnValue;
			}
		}
	}
	#endregion
	#region _AUX_ACCESS_DATA
 
	public class _AUX_ACCESS_DATA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _AUX_ACCESS_DATA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 224; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_AUX_ACCESS_DATA"": [ 224, {
				 ""PrivilegesUsed"": [ 0, [ ""Pointer"", ""{\""target\"":\""_PRIVILEGE_SET\""}"" ]],
				 ""GenericMapping"": [ 8, [ ""_GENERIC_MAPPING"", ""null"" ]],
				 ""AccessesToAudit"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""MaximumAuditMask"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""TransactionId"": [ 32, [ ""_GUID"", ""null"" ]],
				 ""NewSecurityDescriptor"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ExistingSecurityDescriptor"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ParentSecurityDescriptor"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DeRefSecurityDescriptor"": [ 72, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SDLock"": [ 80, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""AccessReasons"": [ 88, [ ""_ACCESS_REASONS"", ""null"" ]],
				 ""GenerateStagingEvents"": [ 216, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 PrivilegesUsed { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _GENERIC_MAPPING GenericMapping
		{
			get
			{
				_GENERIC_MAPPING returnValue = new _GENERIC_MAPPING(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt32 AccessesToAudit { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 MaximumAuditMask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public _GUID TransactionId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt64 NewSecurityDescriptor { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 ExistingSecurityDescriptor { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 ParentSecurityDescriptor { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 DeRefSecurityDescriptor { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 SDLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public _ACCESS_REASONS AccessReasons
		{
			get
			{
				_ACCESS_REASONS returnValue = new _ACCESS_REASONS(_StructureData, _BufferOffset + 88);
				return returnValue;
			}
		}
		public Byte GenerateStagingEvents{ get { return _StructureData[_BufferOffset +216]; } }
	}
	#endregion
	#region _ETHREAD
 
	public class _ETHREAD
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETHREAD(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1912; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETHREAD"": [ 1912, {
				 ""Tcb"": [ 0, [ ""_KTHREAD"", ""null"" ]],
				 ""CreateTime"": [ 1488, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""ExitTime"": [ 1496, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""KeyedWaitChain"": [ 1496, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ChargeOnlySession"": [ 1512, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PostBlockList"": [ 1520, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ForwardLinkShadow"": [ 1520, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""StartAddress"": [ 1528, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""TerminationPort"": [ 1536, [ ""Pointer"", ""{\""target\"":\""_TERMINATION_PORT\""}"" ]],
				 ""ReaperLink"": [ 1536, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]],
				 ""KeyedWaitValue"": [ 1536, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ActiveTimerListLock"": [ 1544, [ ""UInt64"", ""null"" ]],
				 ""ActiveTimerListHead"": [ 1552, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Cid"": [ 1568, [ ""_CLIENT_ID"", ""null"" ]],
				 ""KeyedWaitSemaphore"": [ 1584, [ ""_KSEMAPHORE"", ""null"" ]],
				 ""AlpcWaitSemaphore"": [ 1584, [ ""_KSEMAPHORE"", ""null"" ]],
				 ""ClientSecurity"": [ 1616, [ ""_PS_CLIENT_SECURITY_CONTEXT"", ""null"" ]],
				 ""IrpList"": [ 1624, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""TopLevelIrp"": [ 1640, [ ""UInt64"", ""null"" ]],
				 ""DeviceToVerify"": [ 1648, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""Win32StartAddress"": [ 1656, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""LegacyPowerObject"": [ 1664, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ThreadListEntry"": [ 1672, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""RundownProtect"": [ 1688, [ ""_EX_RUNDOWN_REF"", ""null"" ]],
				 ""ThreadLock"": [ 1696, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""ReadClusterSize"": [ 1704, [ ""UInt32"", ""null"" ]],
				 ""MmLockOrdering"": [ 1708, [ ""Int32"", ""null"" ]],
				 ""CmLockOrdering"": [ 1712, [ ""Int32"", ""null"" ]],
				 ""CrossThreadFlags"": [ 1716, [ ""UInt32"", ""null"" ]],
				 ""Terminated"": [ 1716, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""ThreadInserted"": [ 1716, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""HideFromDebugger"": [ 1716, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""ActiveImpersonationInfo"": [ 1716, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""HardErrorsAreDisabled"": [ 1716, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""BreakOnTermination"": [ 1716, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""SkipCreationMsg"": [ 1716, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""SkipTerminationMsg"": [ 1716, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt32\""}"" ]],
				 ""CopyTokenOnOpen"": [ 1716, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]],
				 ""ThreadIoPriority"": [ 1716, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":9,\""target\"":\""UInt32\""}"" ]],
				 ""ThreadPagePriority"": [ 1716, [ ""BitField"", ""{\""end_bit\"":15,\""start_bit\"":12,\""target\"":\""UInt32\""}"" ]],
				 ""RundownFail"": [ 1716, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":15,\""target\"":\""UInt32\""}"" ]],
				 ""UmsForceQueueTermination"": [ 1716, [ ""BitField"", ""{\""end_bit\"":17,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""ReservedCrossThreadFlags"": [ 1716, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":17,\""target\"":\""UInt32\""}"" ]],
				 ""SameThreadPassiveFlags"": [ 1720, [ ""UInt32"", ""null"" ]],
				 ""ActiveExWorker"": [ 1720, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""MemoryMaker"": [ 1720, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""ClonedThread"": [ 1720, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""KeyedEventInUse"": [ 1720, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""SelfTerminate"": [ 1720, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""SameThreadApcFlags"": [ 1724, [ ""UInt32"", ""null"" ]],
				 ""HardFaultBehavior"": [ 1724, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""StartAddressInvalid"": [ 1724, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""EtwCalloutActive"": [ 1724, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""OwnsProcessWorkingSetExclusive"": [ 1724, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""OwnsProcessWorkingSetShared"": [ 1724, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""OwnsSystemCacheWorkingSetExclusive"": [ 1724, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""Byte\""}"" ]],
				 ""OwnsSystemCacheWorkingSetShared"": [ 1724, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""Byte\""}"" ]],
				 ""OwnsSessionWorkingSetExclusive"": [ 1724, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""Byte\""}"" ]],
				 ""OwnsSessionWorkingSetShared"": [ 1725, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""OwnsProcessAddressSpaceExclusive"": [ 1725, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""OwnsProcessAddressSpaceShared"": [ 1725, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""SuppressSymbolLoad"": [ 1725, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""Prefetching"": [ 1725, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""OwnsVadExclusive"": [ 1725, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""Byte\""}"" ]],
				 ""OwnsChangeControlAreaExclusive"": [ 1725, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""Byte\""}"" ]],
				 ""OwnsChangeControlAreaShared"": [ 1725, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""Byte\""}"" ]],
				 ""OwnsPagedPoolWorkingSetExclusive"": [ 1726, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""OwnsPagedPoolWorkingSetShared"": [ 1726, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""OwnsSystemPtesWorkingSetExclusive"": [ 1726, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""OwnsSystemPtesWorkingSetShared"": [ 1726, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""TrimTrigger"": [ 1726, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""Spare2"": [ 1726, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":6,\""target\"":\""Byte\""}"" ]],
				 ""SystemPagePriorityActive"": [ 1727, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""SystemPagePriority"": [ 1727, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""Spare3"": [ 1727, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""CacheManagerActive"": [ 1728, [ ""Byte"", ""null"" ]],
				 ""DisablePageFaultClustering"": [ 1729, [ ""Byte"", ""null"" ]],
				 ""ActiveFaultCount"": [ 1730, [ ""Byte"", ""null"" ]],
				 ""LockOrderState"": [ 1731, [ ""Byte"", ""null"" ]],
				 ""AlpcMessageId"": [ 1736, [ ""UInt64"", ""null"" ]],
				 ""AlpcMessage"": [ 1744, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""AlpcReceiveAttributeSet"": [ 1744, [ ""UInt32"", ""null"" ]],
				 ""ExitStatus"": [ 1752, [ ""Int32"", ""null"" ]],
				 ""AlpcWaitListEntry"": [ 1760, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""CacheManagerCount"": [ 1776, [ ""UInt32"", ""null"" ]],
				 ""IoBoostCount"": [ 1780, [ ""UInt32"", ""null"" ]],
				 ""BoostList"": [ 1784, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""DeboostList"": [ 1800, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""BoostListLock"": [ 1816, [ ""UInt64"", ""null"" ]],
				 ""IrpListLock"": [ 1824, [ ""UInt64"", ""null"" ]],
				 ""ReservedForSynchTracking"": [ 1832, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CmCallbackListHead"": [ 1840, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""ActivityId"": [ 1848, [ ""Pointer"", ""{\""target\"":\""_GUID\""}"" ]],
				 ""SeLearningModeListHead"": [ 1856, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""VerifierContext"": [ 1864, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""KernelStackReference"": [ 1872, [ ""UInt32"", ""null"" ]],
				 ""AdjustedClientToken"": [ 1880, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""UserFsBase"": [ 1888, [ ""UInt32"", ""null"" ]],
				 ""UserGsBase"": [ 1896, [ ""UInt64"", ""null"" ]],
				 ""PicoContext"": [ 1904, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public _KTHREAD Tcb
		{
			get
			{
				_KTHREAD returnValue = new _KTHREAD(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LARGE_INTEGER CreateTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 1488);
				return returnValue;
			}
		}
		public _LARGE_INTEGER ExitTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 1496);
				return returnValue;
			}
		}
		public _LIST_ENTRY KeyedWaitChain
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 1496);
				return returnValue;
			}
		}
		public UInt64 ChargeOnlySession { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1512); } }
		public _LIST_ENTRY PostBlockList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 1520);
				return returnValue;
			}
		}
		public UInt64 ForwardLinkShadow { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1520); } }
		public UInt64 StartAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1528); } }
		public UInt64 TerminationPort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1536); } }
		public UInt64 ReaperLink { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1536); } }
		public UInt64 KeyedWaitValue { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1536); } }
		public UInt64 ActiveTimerListLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1544); } }
		public _LIST_ENTRY ActiveTimerListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 1552);
				return returnValue;
			}
		}
		public _CLIENT_ID Cid
		{
			get
			{
				_CLIENT_ID returnValue = new _CLIENT_ID(_StructureData, _BufferOffset + 1568);
				return returnValue;
			}
		}
		public _KSEMAPHORE KeyedWaitSemaphore
		{
			get
			{
				_KSEMAPHORE returnValue = new _KSEMAPHORE(_StructureData, _BufferOffset + 1584);
				return returnValue;
			}
		}
		public _KSEMAPHORE AlpcWaitSemaphore
		{
			get
			{
				_KSEMAPHORE returnValue = new _KSEMAPHORE(_StructureData, _BufferOffset + 1584);
				return returnValue;
			}
		}
		public _PS_CLIENT_SECURITY_CONTEXT ClientSecurity
		{
			get
			{
				_PS_CLIENT_SECURITY_CONTEXT returnValue = new _PS_CLIENT_SECURITY_CONTEXT(_StructureData, _BufferOffset + 1616);
				return returnValue;
			}
		}
		public _LIST_ENTRY IrpList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 1624);
				return returnValue;
			}
		}
		public UInt64 TopLevelIrp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1640); } }
		public UInt64 DeviceToVerify { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1648); } }
		public UInt64 Win32StartAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1656); } }
		public UInt64 LegacyPowerObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1664); } }
		public _LIST_ENTRY ThreadListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 1672);
				return returnValue;
			}
		}
		public _EX_RUNDOWN_REF RundownProtect
		{
			get
			{
				_EX_RUNDOWN_REF returnValue = new _EX_RUNDOWN_REF(_StructureData, _BufferOffset + 1688);
				return returnValue;
			}
		}
		public _EX_PUSH_LOCK ThreadLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 1696);
				return returnValue;
			}
		}
		public UInt32 ReadClusterSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1704); } }
		public Int32 MmLockOrdering { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 1708); } }
		public Int32 CmLockOrdering { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 1712); } }
		public UInt32 CrossThreadFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1716); } }
		public UInt32 Terminated
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1716);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 ThreadInserted
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1716);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 HideFromDebugger
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1716);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 ActiveImpersonationInfo
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1716);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 HardErrorsAreDisabled
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1716);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 BreakOnTermination
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1716);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 SkipCreationMsg
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1716);
				var value2 = (value & 64) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 SkipTerminationMsg
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1716);
				var value2 = (value & 128) >> 7;
				return (UInt32)value2;
			}
		}
		public UInt32 CopyTokenOnOpen
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1716);
				var value2 = (value & 256) >> 8;
				return (UInt32)value2;
			}
		}
		public UInt32 ThreadIoPriority
		{
			get
			{
				// start: 9  end: 12  Mask: 0000111000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1716);
				var value2 = (value & 3584) >> 9;
				return (UInt32)value2;
			}
		}
		public UInt32 ThreadPagePriority
		{
			get
			{
				// start: 12  end: 15  Mask: 0111000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1716);
				var value2 = (value & 28672) >> 12;
				return (UInt32)value2;
			}
		}
		public UInt32 RundownFail
		{
			get
			{
				// start: 15  end: 16  Mask: 1000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1716);
				var value2 = (value & 32768) >> 15;
				return (UInt32)value2;
			}
		}
		public UInt32 UmsForceQueueTermination
		{
			get
			{
				// start: 16  end: 17  Mask: 10000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1716);
				var value2 = (value & 65536) >> 16;
				return (UInt32)value2;
			}
		}
		public UInt32 ReservedCrossThreadFlags
		{
			get
			{
				// start: 17  end: 32  Mask: 11111111111111100000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1716);
				var value2 = (value & 4294836224) >> 17;
				return (UInt32)value2;
			}
		}
		public UInt32 SameThreadPassiveFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1720); } }
		public UInt32 ActiveExWorker
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1720);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 MemoryMaker
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1720);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 ClonedThread
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1720);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 KeyedEventInUse
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1720);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 SelfTerminate
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1720);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 SameThreadApcFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1724); } }
		public Byte HardFaultBehavior
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 1724];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte StartAddressInvalid
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 1724];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte EtwCalloutActive
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 1724];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte OwnsProcessWorkingSetExclusive
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 1724];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte OwnsProcessWorkingSetShared
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				Byte value = _StructureData[_BufferOffset + 1724];
				var value2 = (value & 16) >> 4;
				return (Byte)value2;
			}
		}
		public Byte OwnsSystemCacheWorkingSetExclusive
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				Byte value = _StructureData[_BufferOffset + 1724];
				var value2 = (value & 32) >> 5;
				return (Byte)value2;
			}
		}
		public Byte OwnsSystemCacheWorkingSetShared
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				Byte value = _StructureData[_BufferOffset + 1724];
				var value2 = (value & 64) >> 6;
				return (Byte)value2;
			}
		}
		public Byte OwnsSessionWorkingSetExclusive
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				Byte value = _StructureData[_BufferOffset + 1724];
				var value2 = (value & 128) >> 7;
				return (Byte)value2;
			}
		}
		public Byte OwnsSessionWorkingSetShared
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 1725];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte OwnsProcessAddressSpaceExclusive
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 1725];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte OwnsProcessAddressSpaceShared
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 1725];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte SuppressSymbolLoad
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 1725];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte Prefetching
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				Byte value = _StructureData[_BufferOffset + 1725];
				var value2 = (value & 16) >> 4;
				return (Byte)value2;
			}
		}
		public Byte OwnsVadExclusive
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				Byte value = _StructureData[_BufferOffset + 1725];
				var value2 = (value & 32) >> 5;
				return (Byte)value2;
			}
		}
		public Byte OwnsChangeControlAreaExclusive
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				Byte value = _StructureData[_BufferOffset + 1725];
				var value2 = (value & 64) >> 6;
				return (Byte)value2;
			}
		}
		public Byte OwnsChangeControlAreaShared
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				Byte value = _StructureData[_BufferOffset + 1725];
				var value2 = (value & 128) >> 7;
				return (Byte)value2;
			}
		}
		public Byte OwnsPagedPoolWorkingSetExclusive
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 1726];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte OwnsPagedPoolWorkingSetShared
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 1726];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte OwnsSystemPtesWorkingSetExclusive
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 1726];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte OwnsSystemPtesWorkingSetShared
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 1726];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte TrimTrigger
		{
			get
			{
				// start: 4  end: 6  Mask: 0000000000110000
				Byte value = _StructureData[_BufferOffset + 1726];
				var value2 = (value & 48) >> 4;
				return (Byte)value2;
			}
		}
		public Byte Spare2
		{
			get
			{
				// start: 6  end: 8  Mask: 0000000011000000
				Byte value = _StructureData[_BufferOffset + 1726];
				var value2 = (value & 192) >> 6;
				return (Byte)value2;
			}
		}
		public Byte SystemPagePriorityActive
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 1727];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte SystemPagePriority
		{
			get
			{
				// start: 1  end: 4  Mask: 0000000000001110
				Byte value = _StructureData[_BufferOffset + 1727];
				var value2 = (value & 14) >> 1;
				return (Byte)value2;
			}
		}
		public Byte Spare3
		{
			get
			{
				// start: 4  end: 8  Mask: 0000000011110000
				Byte value = _StructureData[_BufferOffset + 1727];
				var value2 = (value & 240) >> 4;
				return (Byte)value2;
			}
		}
		public Byte CacheManagerActive{ get { return _StructureData[_BufferOffset +1728]; } }
		public Byte DisablePageFaultClustering{ get { return _StructureData[_BufferOffset +1729]; } }
		public Byte ActiveFaultCount{ get { return _StructureData[_BufferOffset +1730]; } }
		public Byte LockOrderState{ get { return _StructureData[_BufferOffset +1731]; } }
		public UInt64 AlpcMessageId { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1736); } }
		public UInt64 AlpcMessage { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1744); } }
		public UInt32 AlpcReceiveAttributeSet { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1744); } }
		public Int32 ExitStatus { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 1752); } }
		public _LIST_ENTRY AlpcWaitListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 1760);
				return returnValue;
			}
		}
		public UInt32 CacheManagerCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1776); } }
		public UInt32 IoBoostCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1780); } }
		public _LIST_ENTRY BoostList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 1784);
				return returnValue;
			}
		}
		public _LIST_ENTRY DeboostList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 1800);
				return returnValue;
			}
		}
		public UInt64 BoostListLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1816); } }
		public UInt64 IrpListLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1824); } }
		public UInt64 ReservedForSynchTracking { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1832); } }
		public _SINGLE_LIST_ENTRY CmCallbackListHead
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 1840);
				return returnValue;
			}
		}
		public UInt64 ActivityId { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1848); } }
		public _SINGLE_LIST_ENTRY SeLearningModeListHead
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 1856);
				return returnValue;
			}
		}
		public UInt64 VerifierContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1864); } }
		public UInt32 KernelStackReference { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1872); } }
		public UInt64 AdjustedClientToken { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1880); } }
		public UInt32 UserFsBase { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1888); } }
		public UInt64 UserGsBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1896); } }
		public UInt64 PicoContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1904); } }
	}
	#endregion
	#region _PAGEFAULT_HISTORY
 
	public class _PAGEFAULT_HISTORY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PAGEFAULT_HISTORY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PAGEFAULT_HISTORY"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _EPROCESS_QUOTA_BLOCK
 
	public class _EPROCESS_QUOTA_BLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EPROCESS_QUOTA_BLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EPROCESS_QUOTA_BLOCK"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _EPROCESS
 
	public class _EPROCESS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EPROCESS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1752; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EPROCESS"": [ 1752, {
				 ""Pcb"": [ 0, [ ""_KPROCESS"", ""null"" ]],
				 ""ProcessLock"": [ 712, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""CreateTime"": [ 720, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""RundownProtect"": [ 728, [ ""_EX_RUNDOWN_REF"", ""null"" ]],
				 ""UniqueProcessId"": [ 736, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ActiveProcessLinks"": [ 744, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Flags2"": [ 760, [ ""UInt32"", ""null"" ]],
				 ""JobNotReallyActive"": [ 760, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""AccountingFolded"": [ 760, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""NewProcessReported"": [ 760, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""ExitProcessReported"": [ 760, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""ReportCommitChanges"": [ 760, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""LastReportMemory"": [ 760, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""ForceWakeCharge"": [ 760, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""CrossSessionCreate"": [ 760, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt32\""}"" ]],
				 ""NeedsHandleRundown"": [ 760, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]],
				 ""RefTraceEnabled"": [ 760, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt32\""}"" ]],
				 ""DisableDynamicCode"": [ 760, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt32\""}"" ]],
				 ""EmptyJobEvaluated"": [ 760, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt32\""}"" ]],
				 ""DefaultPagePriority"": [ 760, [ ""BitField"", ""{\""end_bit\"":15,\""start_bit\"":12,\""target\"":\""UInt32\""}"" ]],
				 ""PrimaryTokenFrozen"": [ 760, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":15,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessVerifierTarget"": [ 760, [ ""BitField"", ""{\""end_bit\"":17,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""StackRandomizationDisabled"": [ 760, [ ""BitField"", ""{\""end_bit\"":18,\""start_bit\"":17,\""target\"":\""UInt32\""}"" ]],
				 ""AffinityPermanent"": [ 760, [ ""BitField"", ""{\""end_bit\"":19,\""start_bit\"":18,\""target\"":\""UInt32\""}"" ]],
				 ""AffinityUpdateEnable"": [ 760, [ ""BitField"", ""{\""end_bit\"":20,\""start_bit\"":19,\""target\"":\""UInt32\""}"" ]],
				 ""PropagateNode"": [ 760, [ ""BitField"", ""{\""end_bit\"":21,\""start_bit\"":20,\""target\"":\""UInt32\""}"" ]],
				 ""ExplicitAffinity"": [ 760, [ ""BitField"", ""{\""end_bit\"":22,\""start_bit\"":21,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessExecutionState"": [ 760, [ ""BitField"", ""{\""end_bit\"":24,\""start_bit\"":22,\""target\"":\""UInt32\""}"" ]],
				 ""DisallowStrippedImages"": [ 760, [ ""BitField"", ""{\""end_bit\"":25,\""start_bit\"":24,\""target\"":\""UInt32\""}"" ]],
				 ""HighEntropyASLREnabled"": [ 760, [ ""BitField"", ""{\""end_bit\"":26,\""start_bit\"":25,\""target\"":\""UInt32\""}"" ]],
				 ""ExtensionPointDisable"": [ 760, [ ""BitField"", ""{\""end_bit\"":27,\""start_bit\"":26,\""target\"":\""UInt32\""}"" ]],
				 ""ForceRelocateImages"": [ 760, [ ""BitField"", ""{\""end_bit\"":28,\""start_bit\"":27,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessStateChangeRequest"": [ 760, [ ""BitField"", ""{\""end_bit\"":30,\""start_bit\"":28,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessStateChangeInProgress"": [ 760, [ ""BitField"", ""{\""end_bit\"":31,\""start_bit\"":30,\""target\"":\""UInt32\""}"" ]],
				 ""DisallowWin32kSystemCalls"": [ 760, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":31,\""target\"":\""UInt32\""}"" ]],
				 ""Flags"": [ 764, [ ""UInt32"", ""null"" ]],
				 ""CreateReported"": [ 764, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""NoDebugInherit"": [ 764, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessExiting"": [ 764, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessDelete"": [ 764, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""ControlFlowGuardEnabled"": [ 764, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""VmDeleted"": [ 764, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""OutswapEnabled"": [ 764, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""Outswapped"": [ 764, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt32\""}"" ]],
				 ""ForkFailed"": [ 764, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]],
				 ""Wow64VaSpace4Gb"": [ 764, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt32\""}"" ]],
				 ""AddressSpaceInitialized"": [ 764, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":10,\""target\"":\""UInt32\""}"" ]],
				 ""SetTimerResolution"": [ 764, [ ""BitField"", ""{\""end_bit\"":13,\""start_bit\"":12,\""target\"":\""UInt32\""}"" ]],
				 ""BreakOnTermination"": [ 764, [ ""BitField"", ""{\""end_bit\"":14,\""start_bit\"":13,\""target\"":\""UInt32\""}"" ]],
				 ""DeprioritizeViews"": [ 764, [ ""BitField"", ""{\""end_bit\"":15,\""start_bit\"":14,\""target\"":\""UInt32\""}"" ]],
				 ""WriteWatch"": [ 764, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":15,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessInSession"": [ 764, [ ""BitField"", ""{\""end_bit\"":17,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""OverrideAddressSpace"": [ 764, [ ""BitField"", ""{\""end_bit\"":18,\""start_bit\"":17,\""target\"":\""UInt32\""}"" ]],
				 ""HasAddressSpace"": [ 764, [ ""BitField"", ""{\""end_bit\"":19,\""start_bit\"":18,\""target\"":\""UInt32\""}"" ]],
				 ""LaunchPrefetched"": [ 764, [ ""BitField"", ""{\""end_bit\"":20,\""start_bit\"":19,\""target\"":\""UInt32\""}"" ]],
				 ""Background"": [ 764, [ ""BitField"", ""{\""end_bit\"":21,\""start_bit\"":20,\""target\"":\""UInt32\""}"" ]],
				 ""VmTopDown"": [ 764, [ ""BitField"", ""{\""end_bit\"":22,\""start_bit\"":21,\""target\"":\""UInt32\""}"" ]],
				 ""ImageNotifyDone"": [ 764, [ ""BitField"", ""{\""end_bit\"":23,\""start_bit\"":22,\""target\"":\""UInt32\""}"" ]],
				 ""PdeUpdateNeeded"": [ 764, [ ""BitField"", ""{\""end_bit\"":24,\""start_bit\"":23,\""target\"":\""UInt32\""}"" ]],
				 ""VdmAllowed"": [ 764, [ ""BitField"", ""{\""end_bit\"":25,\""start_bit\"":24,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessRundown"": [ 764, [ ""BitField"", ""{\""end_bit\"":26,\""start_bit\"":25,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessInserted"": [ 764, [ ""BitField"", ""{\""end_bit\"":27,\""start_bit\"":26,\""target\"":\""UInt32\""}"" ]],
				 ""DefaultIoPriority"": [ 764, [ ""BitField"", ""{\""end_bit\"":30,\""start_bit\"":27,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessSelfDelete"": [ 764, [ ""BitField"", ""{\""end_bit\"":31,\""start_bit\"":30,\""target\"":\""UInt32\""}"" ]],
				 ""SetTimerResolutionLink"": [ 764, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":31,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessQuotaUsage"": [ 768, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt64\""}"" ]],
				 ""ProcessQuotaPeak"": [ 784, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt64\""}"" ]],
				 ""PeakVirtualSize"": [ 800, [ ""UInt64"", ""null"" ]],
				 ""VirtualSize"": [ 808, [ ""UInt64"", ""null"" ]],
				 ""SessionProcessLinks"": [ 816, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ExceptionPortData"": [ 832, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ExceptionPortValue"": [ 832, [ ""UInt64"", ""null"" ]],
				 ""ExceptionPortState"": [ 832, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""Token"": [ 840, [ ""_EX_FAST_REF"", ""null"" ]],
				 ""WorkingSetPage"": [ 848, [ ""UInt64"", ""null"" ]],
				 ""AddressCreationLock"": [ 856, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""PageTableCommitmentLock"": [ 864, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""RotateInProgress"": [ 872, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]],
				 ""ForkInProgress"": [ 880, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]],
				 ""CommitChargeJob"": [ 888, [ ""Pointer"", ""{\""target\"":\""_EJOB\""}"" ]],
				 ""CloneRoot"": [ 896, [ ""_RTL_AVL_TREE"", ""null"" ]],
				 ""NumberOfPrivatePages"": [ 904, [ ""UInt64"", ""null"" ]],
				 ""NumberOfLockedPages"": [ 912, [ ""UInt64"", ""null"" ]],
				 ""Win32Process"": [ 920, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Job"": [ 928, [ ""Pointer"", ""{\""target\"":\""_EJOB\""}"" ]],
				 ""SectionObject"": [ 936, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SectionBaseAddress"": [ 944, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Cookie"": [ 952, [ ""UInt32"", ""null"" ]],
				 ""WorkingSetWatch"": [ 960, [ ""Pointer"", ""{\""target\"":\""_PAGEFAULT_HISTORY\""}"" ]],
				 ""Win32WindowStation"": [ 968, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""InheritedFromUniqueProcessId"": [ 976, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""LdtInformation"": [ 984, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""OwnerProcessId"": [ 992, [ ""UInt64"", ""null"" ]],
				 ""Peb"": [ 1000, [ ""Pointer"", ""{\""target\"":\""_PEB\""}"" ]],
				 ""Session"": [ 1008, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""AweInfo"": [ 1016, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""QuotaBlock"": [ 1024, [ ""Pointer"", ""{\""target\"":\""_EPROCESS_QUOTA_BLOCK\""}"" ]],
				 ""ObjectTable"": [ 1032, [ ""Pointer"", ""{\""target\"":\""_HANDLE_TABLE\""}"" ]],
				 ""DebugPort"": [ 1040, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Wow64Process"": [ 1048, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DeviceMap"": [ 1056, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""EtwDataSource"": [ 1064, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PageDirectoryPte"": [ 1072, [ ""UInt64"", ""null"" ]],
				 ""ImageFileName"": [ 1080, [ ""Array"", ""{\""count\"":15,\""target\"":\""Byte\""}"" ]],
				 ""PriorityClass"": [ 1095, [ ""Byte"", ""null"" ]],
				 ""SecurityPort"": [ 1096, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SeAuditProcessCreationInfo"": [ 1104, [ ""_SE_AUDIT_PROCESS_CREATION_INFO"", ""null"" ]],
				 ""JobLinks"": [ 1112, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""HighestUserAddress"": [ 1128, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ThreadListHead"": [ 1136, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ActiveThreads"": [ 1152, [ ""UInt32"", ""null"" ]],
				 ""ImagePathHash"": [ 1156, [ ""UInt32"", ""null"" ]],
				 ""DefaultHardErrorProcessing"": [ 1160, [ ""UInt32"", ""null"" ]],
				 ""LastThreadExitStatus"": [ 1164, [ ""Int32"", ""null"" ]],
				 ""PrefetchTrace"": [ 1168, [ ""_EX_FAST_REF"", ""null"" ]],
				 ""LockedPagesList"": [ 1176, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ReadOperationCount"": [ 1184, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""WriteOperationCount"": [ 1192, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""OtherOperationCount"": [ 1200, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""ReadTransferCount"": [ 1208, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""WriteTransferCount"": [ 1216, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""OtherTransferCount"": [ 1224, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""CommitCharge"": [ 1232, [ ""UInt64"", ""null"" ]],
				 ""Vm"": [ 1240, [ ""_MMSUPPORT"", ""null"" ]],
				 ""MmProcessLinks"": [ 1472, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ModifiedPageCount"": [ 1488, [ ""UInt32"", ""null"" ]],
				 ""ExitStatus"": [ 1492, [ ""Int32"", ""null"" ]],
				 ""VadRoot"": [ 1496, [ ""_RTL_AVL_TREE"", ""null"" ]],
				 ""VadHint"": [ 1504, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""VadCount"": [ 1512, [ ""UInt64"", ""null"" ]],
				 ""VadPhysicalPages"": [ 1520, [ ""UInt64"", ""null"" ]],
				 ""VadPhysicalPagesLimit"": [ 1528, [ ""UInt64"", ""null"" ]],
				 ""AlpcContext"": [ 1536, [ ""_ALPC_PROCESS_CONTEXT"", ""null"" ]],
				 ""TimerResolutionLink"": [ 1568, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""TimerResolutionStackRecord"": [ 1584, [ ""Pointer"", ""{\""target\"":\""_PO_DIAG_STACK_RECORD\""}"" ]],
				 ""RequestedTimerResolution"": [ 1592, [ ""UInt32"", ""null"" ]],
				 ""SmallestTimerResolution"": [ 1596, [ ""UInt32"", ""null"" ]],
				 ""ExitTime"": [ 1600, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""InvertedFunctionTable"": [ 1608, [ ""Pointer"", ""{\""target\"":\""_INVERTED_FUNCTION_TABLE\""}"" ]],
				 ""InvertedFunctionTableLock"": [ 1616, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""ActiveThreadsHighWatermark"": [ 1624, [ ""UInt32"", ""null"" ]],
				 ""LargePrivateVadCount"": [ 1628, [ ""UInt32"", ""null"" ]],
				 ""ThreadListLock"": [ 1632, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""WnfContext"": [ 1640, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Spare0"": [ 1648, [ ""UInt64"", ""null"" ]],
				 ""SignatureLevel"": [ 1656, [ ""Byte"", ""null"" ]],
				 ""SectionSignatureLevel"": [ 1657, [ ""Byte"", ""null"" ]],
				 ""Protection"": [ 1658, [ ""_PS_PROTECTION"", ""null"" ]],
				 ""SpareByte20"": [ 1659, [ ""Array"", ""{\""count\"":1,\""target\"":\""Byte\""}"" ]],
				 ""Flags3"": [ 1660, [ ""UInt32"", ""null"" ]],
				 ""Minimal"": [ 1660, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""SvmReserved"": [ 1664, [ ""Int32"", ""null"" ]],
				 ""SvmReserved1"": [ 1672, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SvmReserved2"": [ 1680, [ ""UInt64"", ""null"" ]],
				 ""LastFreezeInterruptTime"": [ 1688, [ ""UInt64"", ""null"" ]],
				 ""DiskCounters"": [ 1696, [ ""Pointer"", ""{\""target\"":\""_PROCESS_DISK_COUNTERS\""}"" ]],
				 ""PicoContext"": [ 1704, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""KeepAliveCounter"": [ 1712, [ ""UInt32"", ""null"" ]],
				 ""NoWakeKeepAliveCounter"": [ 1716, [ ""UInt32"", ""null"" ]],
				 ""DeepFreezeStartTime"": [ 1720, [ ""UInt64"", ""null"" ]],
				 ""CommitChargeLimit"": [ 1728, [ ""UInt64"", ""null"" ]],
				 ""CommitChargePeak"": [ 1736, [ ""UInt64"", ""null"" ]],
				 ""HighPriorityFaultsAllowed"": [ 1744, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _KPROCESS Pcb
		{
			get
			{
				_KPROCESS returnValue = new _KPROCESS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _EX_PUSH_LOCK ProcessLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 712);
				return returnValue;
			}
		}
		public _LARGE_INTEGER CreateTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 720);
				return returnValue;
			}
		}
		public _EX_RUNDOWN_REF RundownProtect
		{
			get
			{
				_EX_RUNDOWN_REF returnValue = new _EX_RUNDOWN_REF(_StructureData, _BufferOffset + 728);
				return returnValue;
			}
		}
		public UInt64 UniqueProcessId { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 736); } }
		public _LIST_ENTRY ActiveProcessLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 744);
				return returnValue;
			}
		}
		public UInt32 Flags2 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 760); } }
		public UInt32 JobNotReallyActive
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 AccountingFolded
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 NewProcessReported
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 ExitProcessReported
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 ReportCommitChanges
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 LastReportMemory
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 ForceWakeCharge
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 64) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 CrossSessionCreate
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 128) >> 7;
				return (UInt32)value2;
			}
		}
		public UInt32 NeedsHandleRundown
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 256) >> 8;
				return (UInt32)value2;
			}
		}
		public UInt32 RefTraceEnabled
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 512) >> 9;
				return (UInt32)value2;
			}
		}
		public UInt32 DisableDynamicCode
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 1024) >> 10;
				return (UInt32)value2;
			}
		}
		public UInt32 EmptyJobEvaluated
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 2048) >> 11;
				return (UInt32)value2;
			}
		}
		public UInt32 DefaultPagePriority
		{
			get
			{
				// start: 12  end: 15  Mask: 0111000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 28672) >> 12;
				return (UInt32)value2;
			}
		}
		public UInt32 PrimaryTokenFrozen
		{
			get
			{
				// start: 15  end: 16  Mask: 1000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 32768) >> 15;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessVerifierTarget
		{
			get
			{
				// start: 16  end: 17  Mask: 10000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 65536) >> 16;
				return (UInt32)value2;
			}
		}
		public UInt32 StackRandomizationDisabled
		{
			get
			{
				// start: 17  end: 18  Mask: 100000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 131072) >> 17;
				return (UInt32)value2;
			}
		}
		public UInt32 AffinityPermanent
		{
			get
			{
				// start: 18  end: 19  Mask: 1000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 262144) >> 18;
				return (UInt32)value2;
			}
		}
		public UInt32 AffinityUpdateEnable
		{
			get
			{
				// start: 19  end: 20  Mask: 10000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 524288) >> 19;
				return (UInt32)value2;
			}
		}
		public UInt32 PropagateNode
		{
			get
			{
				// start: 20  end: 21  Mask: 100000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 1048576) >> 20;
				return (UInt32)value2;
			}
		}
		public UInt32 ExplicitAffinity
		{
			get
			{
				// start: 21  end: 22  Mask: 1000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 2097152) >> 21;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessExecutionState
		{
			get
			{
				// start: 22  end: 24  Mask: 110000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 12582912) >> 22;
				return (UInt32)value2;
			}
		}
		public UInt32 DisallowStrippedImages
		{
			get
			{
				// start: 24  end: 25  Mask: 1000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 16777216) >> 24;
				return (UInt32)value2;
			}
		}
		public UInt32 HighEntropyASLREnabled
		{
			get
			{
				// start: 25  end: 26  Mask: 10000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 33554432) >> 25;
				return (UInt32)value2;
			}
		}
		public UInt32 ExtensionPointDisable
		{
			get
			{
				// start: 26  end: 27  Mask: 100000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 67108864) >> 26;
				return (UInt32)value2;
			}
		}
		public UInt32 ForceRelocateImages
		{
			get
			{
				// start: 27  end: 28  Mask: 1000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 134217728) >> 27;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessStateChangeRequest
		{
			get
			{
				// start: 28  end: 30  Mask: 110000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 805306368) >> 28;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessStateChangeInProgress
		{
			get
			{
				// start: 30  end: 31  Mask: 1000000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 1073741824) >> 30;
				return (UInt32)value2;
			}
		}
		public UInt32 DisallowWin32kSystemCalls
		{
			get
			{
				// start: 31  end: 32  Mask: 10000000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 760);
				var value2 = (value & 2147483648) >> 31;
				return (UInt32)value2;
			}
		}
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 764); } }
		public UInt32 CreateReported
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 NoDebugInherit
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessExiting
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessDelete
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 ControlFlowGuardEnabled
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 VmDeleted
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 OutswapEnabled
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 64) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 Outswapped
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 128) >> 7;
				return (UInt32)value2;
			}
		}
		public UInt32 ForkFailed
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 256) >> 8;
				return (UInt32)value2;
			}
		}
		public UInt32 Wow64VaSpace4Gb
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 512) >> 9;
				return (UInt32)value2;
			}
		}
		public UInt32 AddressSpaceInitialized
		{
			get
			{
				// start: 10  end: 12  Mask: 0000110000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 3072) >> 10;
				return (UInt32)value2;
			}
		}
		public UInt32 SetTimerResolution
		{
			get
			{
				// start: 12  end: 13  Mask: 0001000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 4096) >> 12;
				return (UInt32)value2;
			}
		}
		public UInt32 BreakOnTermination
		{
			get
			{
				// start: 13  end: 14  Mask: 0010000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 8192) >> 13;
				return (UInt32)value2;
			}
		}
		public UInt32 DeprioritizeViews
		{
			get
			{
				// start: 14  end: 15  Mask: 0100000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 16384) >> 14;
				return (UInt32)value2;
			}
		}
		public UInt32 WriteWatch
		{
			get
			{
				// start: 15  end: 16  Mask: 1000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 32768) >> 15;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessInSession
		{
			get
			{
				// start: 16  end: 17  Mask: 10000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 65536) >> 16;
				return (UInt32)value2;
			}
		}
		public UInt32 OverrideAddressSpace
		{
			get
			{
				// start: 17  end: 18  Mask: 100000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 131072) >> 17;
				return (UInt32)value2;
			}
		}
		public UInt32 HasAddressSpace
		{
			get
			{
				// start: 18  end: 19  Mask: 1000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 262144) >> 18;
				return (UInt32)value2;
			}
		}
		public UInt32 LaunchPrefetched
		{
			get
			{
				// start: 19  end: 20  Mask: 10000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 524288) >> 19;
				return (UInt32)value2;
			}
		}
		public UInt32 Background
		{
			get
			{
				// start: 20  end: 21  Mask: 100000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 1048576) >> 20;
				return (UInt32)value2;
			}
		}
		public UInt32 VmTopDown
		{
			get
			{
				// start: 21  end: 22  Mask: 1000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 2097152) >> 21;
				return (UInt32)value2;
			}
		}
		public UInt32 ImageNotifyDone
		{
			get
			{
				// start: 22  end: 23  Mask: 10000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 4194304) >> 22;
				return (UInt32)value2;
			}
		}
		public UInt32 PdeUpdateNeeded
		{
			get
			{
				// start: 23  end: 24  Mask: 100000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 8388608) >> 23;
				return (UInt32)value2;
			}
		}
		public UInt32 VdmAllowed
		{
			get
			{
				// start: 24  end: 25  Mask: 1000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 16777216) >> 24;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessRundown
		{
			get
			{
				// start: 25  end: 26  Mask: 10000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 33554432) >> 25;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessInserted
		{
			get
			{
				// start: 26  end: 27  Mask: 100000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 67108864) >> 26;
				return (UInt32)value2;
			}
		}
		public UInt32 DefaultIoPriority
		{
			get
			{
				// start: 27  end: 30  Mask: 111000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 939524096) >> 27;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessSelfDelete
		{
			get
			{
				// start: 30  end: 31  Mask: 1000000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 1073741824) >> 30;
				return (UInt32)value2;
			}
		}
		public UInt32 SetTimerResolutionLink
		{
			get
			{
				// start: 31  end: 32  Mask: 10000000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 764);
				var value2 = (value & 2147483648) >> 31;
				return (UInt32)value2;
			}
		}
		public UInt64[] ProcessQuotaUsage
		{
			get
			{
				UInt64[] returnValue = new UInt64[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 768);
				return returnValue;
			}
		}
		public UInt64[] ProcessQuotaPeak
		{
			get
			{
				UInt64[] returnValue = new UInt64[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 784);
				return returnValue;
			}
		}
		public UInt64 PeakVirtualSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 800); } }
		public UInt64 VirtualSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 808); } }
		public _LIST_ENTRY SessionProcessLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 816);
				return returnValue;
			}
		}
		public UInt64 ExceptionPortData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 832); } }
		public UInt64 ExceptionPortValue { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 832); } }
		public UInt64 ExceptionPortState
		{
			get
			{
				// start: 0  end: 3  Mask: 0000000000000111
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 832);
				var value2 = (value & 7) >> 0;
				return (UInt64)value2;
			}
		}
		public _EX_FAST_REF Token
		{
			get
			{
				_EX_FAST_REF returnValue = new _EX_FAST_REF(_StructureData, _BufferOffset + 840);
				return returnValue;
			}
		}
		public UInt64 WorkingSetPage { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 848); } }
		public _EX_PUSH_LOCK AddressCreationLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 856);
				return returnValue;
			}
		}
		public _EX_PUSH_LOCK PageTableCommitmentLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 864);
				return returnValue;
			}
		}
		public UInt64 RotateInProgress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 872); } }
		public UInt64 ForkInProgress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 880); } }
		public UInt64 CommitChargeJob { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 888); } }
		public _RTL_AVL_TREE CloneRoot
		{
			get
			{
				_RTL_AVL_TREE returnValue = new _RTL_AVL_TREE(_StructureData, _BufferOffset + 896);
				return returnValue;
			}
		}
		public UInt64 NumberOfPrivatePages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 904); } }
		public UInt64 NumberOfLockedPages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 912); } }
		public UInt64 Win32Process { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 920); } }
		public UInt64 Job { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 928); } }
		public UInt64 SectionObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 936); } }
		public UInt64 SectionBaseAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 944); } }
		public UInt32 Cookie { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 952); } }
		public UInt64 WorkingSetWatch { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 960); } }
		public UInt64 Win32WindowStation { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 968); } }
		public UInt64 InheritedFromUniqueProcessId { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 976); } }
		public UInt64 LdtInformation { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 984); } }
		public UInt64 OwnerProcessId { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 992); } }
		public UInt64 Peb { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1000); } }
		public UInt64 Session { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1008); } }
		public UInt64 AweInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1016); } }
		public UInt64 QuotaBlock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1024); } }
		public UInt64 ObjectTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1032); } }
		public UInt64 DebugPort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1040); } }
		public UInt64 Wow64Process { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1048); } }
		public UInt64 DeviceMap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1056); } }
		public UInt64 EtwDataSource { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1064); } }
		public UInt64 PageDirectoryPte { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1072); } }
		public Byte[] ImageFileName
		{
			get
			{
				Byte[] returnValue = new Byte[15];
				for(int i=0; i<15; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 1080];
				return returnValue;
			}
		}
		public Byte PriorityClass{ get { return _StructureData[_BufferOffset +1095]; } }
		public UInt64 SecurityPort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1096); } }
		public _SE_AUDIT_PROCESS_CREATION_INFO SeAuditProcessCreationInfo
		{
			get
			{
				_SE_AUDIT_PROCESS_CREATION_INFO returnValue = new _SE_AUDIT_PROCESS_CREATION_INFO(_StructureData, _BufferOffset + 1104);
				return returnValue;
			}
		}
		public _LIST_ENTRY JobLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 1112);
				return returnValue;
			}
		}
		public UInt64 HighestUserAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1128); } }
		public _LIST_ENTRY ThreadListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 1136);
				return returnValue;
			}
		}
		public UInt32 ActiveThreads { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1152); } }
		public UInt32 ImagePathHash { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1156); } }
		public UInt32 DefaultHardErrorProcessing { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1160); } }
		public Int32 LastThreadExitStatus { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 1164); } }
		public _EX_FAST_REF PrefetchTrace
		{
			get
			{
				_EX_FAST_REF returnValue = new _EX_FAST_REF(_StructureData, _BufferOffset + 1168);
				return returnValue;
			}
		}
		public UInt64 LockedPagesList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1176); } }
		public _LARGE_INTEGER ReadOperationCount
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 1184);
				return returnValue;
			}
		}
		public _LARGE_INTEGER WriteOperationCount
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 1192);
				return returnValue;
			}
		}
		public _LARGE_INTEGER OtherOperationCount
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 1200);
				return returnValue;
			}
		}
		public _LARGE_INTEGER ReadTransferCount
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 1208);
				return returnValue;
			}
		}
		public _LARGE_INTEGER WriteTransferCount
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 1216);
				return returnValue;
			}
		}
		public _LARGE_INTEGER OtherTransferCount
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 1224);
				return returnValue;
			}
		}
		public UInt64 CommitCharge { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1232); } }
		public _MMSUPPORT Vm
		{
			get
			{
				_MMSUPPORT returnValue = new _MMSUPPORT(_StructureData, _BufferOffset + 1240);
				return returnValue;
			}
		}
		public _LIST_ENTRY MmProcessLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 1472);
				return returnValue;
			}
		}
		public UInt32 ModifiedPageCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1488); } }
		public Int32 ExitStatus { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 1492); } }
		public _RTL_AVL_TREE VadRoot
		{
			get
			{
				_RTL_AVL_TREE returnValue = new _RTL_AVL_TREE(_StructureData, _BufferOffset + 1496);
				return returnValue;
			}
		}
		public UInt64 VadHint { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1504); } }
		public UInt64 VadCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1512); } }
		public UInt64 VadPhysicalPages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1520); } }
		public UInt64 VadPhysicalPagesLimit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1528); } }
		public _ALPC_PROCESS_CONTEXT AlpcContext
		{
			get
			{
				_ALPC_PROCESS_CONTEXT returnValue = new _ALPC_PROCESS_CONTEXT(_StructureData, _BufferOffset + 1536);
				return returnValue;
			}
		}
		public _LIST_ENTRY TimerResolutionLink
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 1568);
				return returnValue;
			}
		}
		public UInt64 TimerResolutionStackRecord { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1584); } }
		public UInt32 RequestedTimerResolution { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1592); } }
		public UInt32 SmallestTimerResolution { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1596); } }
		public _LARGE_INTEGER ExitTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 1600);
				return returnValue;
			}
		}
		public UInt64 InvertedFunctionTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1608); } }
		public _EX_PUSH_LOCK InvertedFunctionTableLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 1616);
				return returnValue;
			}
		}
		public UInt32 ActiveThreadsHighWatermark { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1624); } }
		public UInt32 LargePrivateVadCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1628); } }
		public _EX_PUSH_LOCK ThreadListLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 1632);
				return returnValue;
			}
		}
		public UInt64 WnfContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1640); } }
		public UInt64 Spare0 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1648); } }
		public Byte SignatureLevel{ get { return _StructureData[_BufferOffset +1656]; } }
		public Byte SectionSignatureLevel{ get { return _StructureData[_BufferOffset +1657]; } }
		public _PS_PROTECTION Protection
		{
			get
			{
				_PS_PROTECTION returnValue = new _PS_PROTECTION(_StructureData, _BufferOffset + 1658);
				return returnValue;
			}
		}
		public Byte[] SpareByte20
		{
			get
			{
				Byte[] returnValue = new Byte[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 1659];
				return returnValue;
			}
		}
		public UInt32 Flags3 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1660); } }
		public UInt32 Minimal
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1660);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public Int32 SvmReserved { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 1664); } }
		public UInt64 SvmReserved1 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1672); } }
		public UInt64 SvmReserved2 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1680); } }
		public UInt64 LastFreezeInterruptTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1688); } }
		public UInt64 DiskCounters { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1696); } }
		public UInt64 PicoContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1704); } }
		public UInt32 KeepAliveCounter { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1712); } }
		public UInt32 NoWakeKeepAliveCounter { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1716); } }
		public UInt64 DeepFreezeStartTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1720); } }
		public UInt64 CommitChargeLimit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1728); } }
		public UInt64 CommitChargePeak { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1736); } }
		public UInt32 HighPriorityFaultsAllowed { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1744); } }
	}
	#endregion
	#region _KAFFINITY_EX
 
	public class _KAFFINITY_EX
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KAFFINITY_EX(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 168; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KAFFINITY_EX"": [ 168, {
				 ""Count"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Size"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Reserved"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Bitmap"": [ 8, [ ""Array"", ""{\""count\"":20,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Count { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 Size { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt32 Reserved { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64[] Bitmap
		{
			get
			{
				UInt64[] returnValue = new UInt64[20];
				for(int i=0; i<20; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _KSTACK_COUNT
 
	public class _KSTACK_COUNT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KSTACK_COUNT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KSTACK_COUNT"": [ 4, {
				 ""Value"": [ 0, [ ""Int32"", ""null"" ]],
				 ""State"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""StackCount"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public Int32 Value { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 State
		{
			get
			{
				// start: 0  end: 3  Mask: 0000000000000111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 7) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 StackCount
		{
			get
			{
				// start: 3  end: 32  Mask: 11111111111111111111111111111000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967288) >> 3;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _KPROCESS
 
	public class _KPROCESS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KPROCESS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 712; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KPROCESS"": [ 712, {
				 ""Header"": [ 0, [ ""_DISPATCHER_HEADER"", ""null"" ]],
				 ""ProfileListHead"": [ 24, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""DirectoryTableBase"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""ThreadListHead"": [ 48, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ProcessLock"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""Spare0"": [ 68, [ ""UInt32"", ""null"" ]],
				 ""Affinity"": [ 72, [ ""_KAFFINITY_EX"", ""null"" ]],
				 ""ReadyListHead"": [ 240, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""SwapListEntry"": [ 256, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""ActiveProcessors"": [ 264, [ ""_KAFFINITY_EX"", ""null"" ]],
				 ""AutoAlignment"": [ 432, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Int32\""}"" ]],
				 ""DisableBoost"": [ 432, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Int32\""}"" ]],
				 ""DisableQuantum"": [ 432, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Int32\""}"" ]],
				 ""AffinitySet"": [ 432, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Int32\""}"" ]],
				 ""DeepFreeze"": [ 432, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""TimerVirtualization"": [ 432, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""CheckStackExtents"": [ 432, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""ActiveGroupsMask"": [ 432, [ ""BitField"", ""{\""end_bit\"":27,\""start_bit\"":7,\""target\"":\""UInt32\""}"" ]],
				 ""ReservedFlags"": [ 432, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":27,\""target\"":\""Int32\""}"" ]],
				 ""ProcessFlags"": [ 432, [ ""Int32"", ""null"" ]],
				 ""BasePriority"": [ 436, [ ""Char"", ""null"" ]],
				 ""QuantumReset"": [ 437, [ ""Char"", ""null"" ]],
				 ""Visited"": [ 438, [ ""Byte"", ""null"" ]],
				 ""Flags"": [ 439, [ ""_KEXECUTE_OPTIONS"", ""null"" ]],
				 ""ThreadSeed"": [ 440, [ ""Array"", ""{\""count\"":20,\""target\"":\""UInt32\""}"" ]],
				 ""IdealNode"": [ 520, [ ""Array"", ""{\""count\"":20,\""target\"":\""UInt16\""}"" ]],
				 ""IdealGlobalNode"": [ 560, [ ""UInt16"", ""null"" ]],
				 ""Spare1"": [ 562, [ ""UInt16"", ""null"" ]],
				 ""StackCount"": [ 564, [ ""_KSTACK_COUNT"", ""null"" ]],
				 ""ProcessListEntry"": [ 568, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""CycleTime"": [ 584, [ ""UInt64"", ""null"" ]],
				 ""ContextSwitches"": [ 592, [ ""UInt64"", ""null"" ]],
				 ""SchedulingGroup"": [ 600, [ ""Pointer"", ""{\""target\"":\""_KSCHEDULING_GROUP\""}"" ]],
				 ""FreezeCount"": [ 608, [ ""UInt32"", ""null"" ]],
				 ""KernelTime"": [ 612, [ ""UInt32"", ""null"" ]],
				 ""UserTime"": [ 616, [ ""UInt32"", ""null"" ]],
				 ""LdtFreeSelectorHint"": [ 620, [ ""UInt16"", ""null"" ]],
				 ""LdtTableLength"": [ 622, [ ""UInt16"", ""null"" ]],
				 ""LdtSystemDescriptor"": [ 624, [ ""_KGDTENTRY64"", ""null"" ]],
				 ""LdtBaseAddress"": [ 640, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""LdtProcessLock"": [ 648, [ ""_FAST_MUTEX"", ""null"" ]],
				 ""InstrumentationCallback"": [ 704, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public _DISPATCHER_HEADER Header
		{
			get
			{
				_DISPATCHER_HEADER returnValue = new _DISPATCHER_HEADER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LIST_ENTRY ProfileListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt64 DirectoryTableBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public _LIST_ENTRY ThreadListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public UInt32 ProcessLock { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt32 Spare0 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 68); } }
		public _KAFFINITY_EX Affinity
		{
			get
			{
				_KAFFINITY_EX returnValue = new _KAFFINITY_EX(_StructureData, _BufferOffset + 72);
				return returnValue;
			}
		}
		public _LIST_ENTRY ReadyListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 240);
				return returnValue;
			}
		}
		public _SINGLE_LIST_ENTRY SwapListEntry
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 256);
				return returnValue;
			}
		}
		public _KAFFINITY_EX ActiveProcessors
		{
			get
			{
				_KAFFINITY_EX returnValue = new _KAFFINITY_EX(_StructureData, _BufferOffset + 264);
				return returnValue;
			}
		}
		public UInt32 AutoAlignment
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 432);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 DisableBoost
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 432);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 DisableQuantum
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 432);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 AffinitySet
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 432);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 DeepFreeze
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 432);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 TimerVirtualization
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 432);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 CheckStackExtents
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 432);
				var value2 = (value & 64) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 ActiveGroupsMask
		{
			get
			{
				// start: 7  end: 27  Mask: 111111111111111111110000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 432);
				var value2 = (value & 134217600) >> 7;
				return (UInt32)value2;
			}
		}
		public UInt32 ReservedFlags
		{
			get
			{
				// start: 27  end: 32  Mask: 11111000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 432);
				var value2 = (value & 4160749568) >> 27;
				return (UInt32)value2;
			}
		}
		public Int32 ProcessFlags { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 432); } }
		public Char BasePriority { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 436); } }
		public Char QuantumReset { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 437); } }
		public Byte Visited{ get { return _StructureData[_BufferOffset +438]; } }
		public _KEXECUTE_OPTIONS Flags
		{
			get
			{
				_KEXECUTE_OPTIONS returnValue = new _KEXECUTE_OPTIONS(_StructureData, _BufferOffset + 439);
				return returnValue;
			}
		}
		public UInt32[] ThreadSeed
		{
			get
			{
				UInt32[] returnValue = new UInt32[20];
				for(int i=0; i<20; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 440);
				return returnValue;
			}
		}
		public UInt16[] IdealNode
		{
			get
			{
				UInt16[] returnValue = new UInt16[20];
				for(int i=0; i<20; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 520);
				return returnValue;
			}
		}
		public UInt16 IdealGlobalNode { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 560); } }
		public UInt16 Spare1 { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 562); } }
		public _KSTACK_COUNT StackCount
		{
			get
			{
				_KSTACK_COUNT returnValue = new _KSTACK_COUNT(_StructureData, _BufferOffset + 564);
				return returnValue;
			}
		}
		public _LIST_ENTRY ProcessListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 568);
				return returnValue;
			}
		}
		public UInt64 CycleTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 584); } }
		public UInt64 ContextSwitches { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 592); } }
		public UInt64 SchedulingGroup { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 600); } }
		public UInt32 FreezeCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 608); } }
		public UInt32 KernelTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 612); } }
		public UInt32 UserTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 616); } }
		public UInt16 LdtFreeSelectorHint { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 620); } }
		public UInt16 LdtTableLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 622); } }
		public _KGDTENTRY64 LdtSystemDescriptor
		{
			get
			{
				_KGDTENTRY64 returnValue = new _KGDTENTRY64(_StructureData, _BufferOffset + 624);
				return returnValue;
			}
		}
		public UInt64 LdtBaseAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 640); } }
		public _FAST_MUTEX LdtProcessLock
		{
			get
			{
				_FAST_MUTEX returnValue = new _FAST_MUTEX(_StructureData, _BufferOffset + 648);
				return returnValue;
			}
		}
		public UInt64 InstrumentationCallback { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 704); } }
	}
	#endregion
	#region _UNNAMED_28222
 
	public class _UNNAMED_28222
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28222(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28222"": [ 8, {
				 ""MasterIrp"": [ 0, [ ""Pointer"", ""{\""target\"":\""_IRP\""}"" ]],
				 ""IrpCount"": [ 0, [ ""Int32"", ""null"" ]],
				 ""SystemBuffer"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 MasterIrp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public Int32 IrpCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 SystemBuffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_28228
 
	public class _UNNAMED_28228
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28228(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28228"": [ 16, {
				 ""UserApcRoutine"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""IssuingProcess"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""UserApcContext"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 UserApcRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 IssuingProcess { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 UserApcContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_28234
 
	public class _UNNAMED_28234
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28234(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28234"": [ 16, {
				 ""AsynchronousParameters"": [ 0, [ ""_UNNAMED_28228"", ""null"" ]],
				 ""AllocationSize"": [ 0, [ ""_LARGE_INTEGER"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_28228 AsynchronousParameters
		{
			get
			{
				_UNNAMED_28228 returnValue = new _UNNAMED_28228(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LARGE_INTEGER AllocationSize
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_28237
 
	public class _UNNAMED_28237
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28237(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 88; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28237"": [ 88, {
				 ""DeviceQueueEntry"": [ 0, [ ""_KDEVICE_QUEUE_ENTRY"", ""null"" ]],
				 ""DriverContext"": [ 0, [ ""Array"", ""{\""count\"":4,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]],
				 ""Thread"": [ 32, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]],
				 ""AuxiliaryBuffer"": [ 40, [ ""Pointer"", ""{\""target\"":\""char\""}"" ]],
				 ""ListEntry"": [ 48, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""CurrentStackLocation"": [ 64, [ ""Pointer"", ""{\""target\"":\""_IO_STACK_LOCATION\""}"" ]],
				 ""PacketType"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""OriginalFileObject"": [ 72, [ ""Pointer"", ""{\""target\"":\""_FILE_OBJECT\""}"" ]],
				 ""IrpExtension"": [ 80, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public _KDEVICE_QUEUE_ENTRY DeviceQueueEntry
		{
			get
			{
				_KDEVICE_QUEUE_ENTRY returnValue = new _KDEVICE_QUEUE_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64[] DriverContext
		{
			get
			{
				UInt64[] returnValue = new UInt64[4];
				int size = 8;
				for(int i=0; i<4; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Thread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 AuxiliaryBuffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public UInt64 CurrentStackLocation { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt32 PacketType { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt64 OriginalFileObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 IrpExtension { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
	}
	#endregion
	#region _UNNAMED_28253
 
	public class _UNNAMED_28253
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28253(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 88; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28253"": [ 88, {
				 ""Overlay"": [ 0, [ ""_UNNAMED_28237"", ""null"" ]],
				 ""Apc"": [ 0, [ ""_KAPC"", ""null"" ]],
				 ""CompletionKey"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_28237 Overlay
		{
			get
			{
				_UNNAMED_28237 returnValue = new _UNNAMED_28237(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _KAPC Apc
		{
			get
			{
				_KAPC returnValue = new _KAPC(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 CompletionKey { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _IRP
 
	public class _IRP
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IRP(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 208; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IRP"": [ 208, {
				 ""Type"": [ 0, [ ""Int16"", ""null"" ]],
				 ""Size"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""AllocationProcessorNumber"": [ 4, [ ""UInt16"", ""null"" ]],
				 ""Reserved"": [ 6, [ ""UInt16"", ""null"" ]],
				 ""MdlAddress"": [ 8, [ ""Pointer"", ""{\""target\"":\""_MDL\""}"" ]],
				 ""Flags"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""AssociatedIrp"": [ 24, [ ""_UNNAMED_28222"", ""null"" ]],
				 ""ThreadListEntry"": [ 32, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""IoStatus"": [ 48, [ ""_IO_STATUS_BLOCK"", ""null"" ]],
				 ""RequestorMode"": [ 64, [ ""Char"", ""null"" ]],
				 ""PendingReturned"": [ 65, [ ""Byte"", ""null"" ]],
				 ""StackCount"": [ 66, [ ""Char"", ""null"" ]],
				 ""CurrentLocation"": [ 67, [ ""Char"", ""null"" ]],
				 ""Cancel"": [ 68, [ ""Byte"", ""null"" ]],
				 ""CancelIrql"": [ 69, [ ""Byte"", ""null"" ]],
				 ""ApcEnvironment"": [ 70, [ ""Char"", ""null"" ]],
				 ""AllocationFlags"": [ 71, [ ""Byte"", ""null"" ]],
				 ""UserIosb"": [ 72, [ ""Pointer"", ""{\""target\"":\""_IO_STATUS_BLOCK\""}"" ]],
				 ""UserEvent"": [ 80, [ ""Pointer"", ""{\""target\"":\""_KEVENT\""}"" ]],
				 ""Overlay"": [ 88, [ ""_UNNAMED_28234"", ""null"" ]],
				 ""CancelRoutine"": [ 104, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""UserBuffer"": [ 112, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Tail"": [ 120, [ ""_UNNAMED_28253"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int16 Type { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 Size { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt16 AllocationProcessorNumber { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 4); } }
		public UInt16 Reserved { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
		public UInt64 MdlAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public _UNNAMED_28222 AssociatedIrp
		{
			get
			{
				_UNNAMED_28222 returnValue = new _UNNAMED_28222(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public _LIST_ENTRY ThreadListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public _IO_STATUS_BLOCK IoStatus
		{
			get
			{
				_IO_STATUS_BLOCK returnValue = new _IO_STATUS_BLOCK(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public Char RequestorMode { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 64); } }
		public Byte PendingReturned{ get { return _StructureData[_BufferOffset +65]; } }
		public Char StackCount { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 66); } }
		public Char CurrentLocation { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 67); } }
		public Byte Cancel{ get { return _StructureData[_BufferOffset +68]; } }
		public Byte CancelIrql{ get { return _StructureData[_BufferOffset +69]; } }
		public Char ApcEnvironment { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 70); } }
		public Byte AllocationFlags{ get { return _StructureData[_BufferOffset +71]; } }
		public UInt64 UserIosb { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 UserEvent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public _UNNAMED_28234 Overlay
		{
			get
			{
				_UNNAMED_28234 returnValue = new _UNNAMED_28234(_StructureData, _BufferOffset + 88);
				return returnValue;
			}
		}
		public UInt64 CancelRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public UInt64 UserBuffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 112); } }
		public _UNNAMED_28253 Tail
		{
			get
			{
				_UNNAMED_28253 returnValue = new _UNNAMED_28253(_StructureData, _BufferOffset + 120);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_28286
 
	public class _UNNAMED_28286
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28286(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28286"": [ 32, {
				 ""SecurityContext"": [ 0, [ ""Pointer"", ""{\""target\"":\""_IO_SECURITY_CONTEXT\""}"" ]],
				 ""Options"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""FileAttributes"": [ 16, [ ""UInt16"", ""null"" ]],
				 ""ShareAccess"": [ 18, [ ""UInt16"", ""null"" ]],
				 ""EaLength"": [ 24, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 SecurityContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 Options { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt16 FileAttributes { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 16); } }
		public UInt16 ShareAccess { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 18); } }
		public UInt32 EaLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _UNNAMED_28294
 
	public class _UNNAMED_28294
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28294(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28294"": [ 32, {
				 ""SecurityContext"": [ 0, [ ""Pointer"", ""{\""target\"":\""_IO_SECURITY_CONTEXT\""}"" ]],
				 ""Options"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Reserved"": [ 16, [ ""UInt16"", ""null"" ]],
				 ""ShareAccess"": [ 18, [ ""UInt16"", ""null"" ]],
				 ""Parameters"": [ 24, [ ""Pointer"", ""{\""target\"":\""_NAMED_PIPE_CREATE_PARAMETERS\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 SecurityContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 Options { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt16 Reserved { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 16); } }
		public UInt16 ShareAccess { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 18); } }
		public UInt64 Parameters { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _UNNAMED_28302
 
	public class _UNNAMED_28302
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28302(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28302"": [ 32, {
				 ""SecurityContext"": [ 0, [ ""Pointer"", ""{\""target\"":\""_IO_SECURITY_CONTEXT\""}"" ]],
				 ""Options"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Reserved"": [ 16, [ ""UInt16"", ""null"" ]],
				 ""ShareAccess"": [ 18, [ ""UInt16"", ""null"" ]],
				 ""Parameters"": [ 24, [ ""Pointer"", ""{\""target\"":\""_MAILSLOT_CREATE_PARAMETERS\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 SecurityContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 Options { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt16 Reserved { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 16); } }
		public UInt16 ShareAccess { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 18); } }
		public UInt64 Parameters { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _UNNAMED_28310
 
	public class _UNNAMED_28310
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28310(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28310"": [ 24, {
				 ""Length"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Key"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""ByteOffset"": [ 16, [ ""_LARGE_INTEGER"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Key { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public _LARGE_INTEGER ByteOffset
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_28314
 
	public class _UNNAMED_28314
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28314(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28314"": [ 32, {
				 ""Length"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""FileName"": [ 8, [ ""Pointer"", ""{\""target\"":\""_UNICODE_STRING\""}"" ]],
				 ""FileInformationClass"": [ 16, [ ""Enumeration"", ""{\""enum_name\"":\""_FILE_INFORMATION_CLASS\"",\""target\"":\""UInt32\""}"" ]],
				 ""FileIndex"": [ 24, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 FileName { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _FILE_INFORMATION_CLASS FileInformationClass { get { return (_FILE_INFORMATION_CLASS)BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 FileIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _UNNAMED_28320
 
	public class _UNNAMED_28320
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28320(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28320"": [ 16, {
				 ""Length"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""CompletionFilter"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 CompletionFilter { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_28323
 
	public class _UNNAMED_28323
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28323(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28323"": [ 16, {
				 ""Length"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""FileInformationClass"": [ 8, [ ""Enumeration"", ""{\""enum_name\"":\""_FILE_INFORMATION_CLASS\"",\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _FILE_INFORMATION_CLASS FileInformationClass { get { return (_FILE_INFORMATION_CLASS)BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_28326
 
	public class _UNNAMED_28326
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28326(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28326"": [ 32, {
				 ""Length"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""FileInformationClass"": [ 8, [ ""Enumeration"", ""{\""enum_name\"":\""_FILE_INFORMATION_CLASS\"",\""target\"":\""UInt32\""}"" ]],
				 ""FileObject"": [ 16, [ ""Pointer"", ""{\""target\"":\""_FILE_OBJECT\""}"" ]],
				 ""ReplaceIfExists"": [ 24, [ ""Byte"", ""null"" ]],
				 ""AdvanceOnly"": [ 25, [ ""Byte"", ""null"" ]],
				 ""ClusterCount"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""DeleteHandle"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _FILE_INFORMATION_CLASS FileInformationClass { get { return (_FILE_INFORMATION_CLASS)BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt64 FileObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public Byte ReplaceIfExists{ get { return _StructureData[_BufferOffset +24]; } }
		public Byte AdvanceOnly{ get { return _StructureData[_BufferOffset +25]; } }
		public UInt32 ClusterCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt64 DeleteHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _UNNAMED_28334
 
	public class _UNNAMED_28334
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28334(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28334"": [ 32, {
				 ""Length"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""EaList"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""EaListLength"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""EaIndex"": [ 24, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 EaList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 EaListLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 EaIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _UNNAMED_28339
 
	public class _UNNAMED_28339
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28339(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28339"": [ 4, {
				 ""Length"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_28341
 
	public class _UNNAMED_28341
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28341(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28341"": [ 16, {
				 ""Length"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""FsInformationClass"": [ 8, [ ""Enumeration"", ""{\""enum_name\"":\""_FSINFOCLASS\"",\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _FSINFOCLASS FsInformationClass { get { return (_FSINFOCLASS)BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_28344
 
	public class _UNNAMED_28344
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28344(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28344"": [ 32, {
				 ""OutputBufferLength"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""InputBufferLength"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""FsControlCode"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""Type3InputBuffer"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 OutputBufferLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 InputBufferLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 FsControlCode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt64 Type3InputBuffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _UNNAMED_28349
 
	public class _UNNAMED_28349
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28349(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28349"": [ 24, {
				 ""Length"": [ 0, [ ""Pointer"", ""{\""target\"":\""_LARGE_INTEGER\""}"" ]],
				 ""Key"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""ByteOffset"": [ 16, [ ""_LARGE_INTEGER"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Length { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 Key { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public _LARGE_INTEGER ByteOffset
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_28354
 
	public class _UNNAMED_28354
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28354(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28354"": [ 32, {
				 ""OutputBufferLength"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""InputBufferLength"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""IoControlCode"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""Type3InputBuffer"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 OutputBufferLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 InputBufferLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 IoControlCode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt64 Type3InputBuffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _UNNAMED_28359
 
	public class _UNNAMED_28359
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28359(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28359"": [ 16, {
				 ""SecurityInformation"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Length"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 SecurityInformation { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_28362
 
	public class _UNNAMED_28362
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28362(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28362"": [ 16, {
				 ""SecurityInformation"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""SecurityDescriptor"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 SecurityInformation { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 SecurityDescriptor { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_28365
 
	public class _UNNAMED_28365
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28365(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28365"": [ 16, {
				 ""Vpb"": [ 0, [ ""Pointer"", ""{\""target\"":\""_VPB\""}"" ]],
				 ""DeviceObject"": [ 8, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Vpb { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 DeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _SCSI_REQUEST_BLOCK
 
	public class _SCSI_REQUEST_BLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SCSI_REQUEST_BLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SCSI_REQUEST_BLOCK"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _UNNAMED_28370
 
	public class _UNNAMED_28370
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28370(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28370"": [ 8, {
				 ""Srb"": [ 0, [ ""Pointer"", ""{\""target\"":\""_SCSI_REQUEST_BLOCK\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Srb { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_28374
 
	public class _UNNAMED_28374
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28374(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28374"": [ 32, {
				 ""Length"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""StartSid"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SidList"": [ 16, [ ""Pointer"", ""{\""target\"":\""_FILE_GET_QUOTA_INFORMATION\""}"" ]],
				 ""SidListLength"": [ 24, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 StartSid { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 SidList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 SidListLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _UNNAMED_28381
 
	public class _UNNAMED_28381
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28381(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28381"": [ 4, {
				 ""Type"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""_DEVICE_RELATION_TYPE\"",\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public _DEVICE_RELATION_TYPE Type { get { return (_DEVICE_RELATION_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_28383
 
	public class _UNNAMED_28383
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28383(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28383"": [ 32, {
				 ""InterfaceType"": [ 0, [ ""Pointer"", ""{\""target\"":\""_GUID\""}"" ]],
				 ""Size"": [ 8, [ ""UInt16"", ""null"" ]],
				 ""Version"": [ 10, [ ""UInt16"", ""null"" ]],
				 ""Interface"": [ 16, [ ""Pointer"", ""{\""target\"":\""_INTERFACE\""}"" ]],
				 ""InterfaceSpecificData"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 InterfaceType { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt16 Size { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 8); } }
		public UInt16 Version { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 10); } }
		public UInt64 Interface { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 InterfaceSpecificData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _UNNAMED_28391
 
	public class _UNNAMED_28391
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28391(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28391"": [ 8, {
				 ""Capabilities"": [ 0, [ ""Pointer"", ""{\""target\"":\""_DEVICE_CAPABILITIES\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Capabilities { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_28395
 
	public class _UNNAMED_28395
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28395(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28395"": [ 8, {
				 ""IoResourceRequirementList"": [ 0, [ ""Pointer"", ""{\""target\"":\""_IO_RESOURCE_REQUIREMENTS_LIST\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 IoResourceRequirementList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_28399
 
	public class _UNNAMED_28399
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28399(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28399"": [ 32, {
				 ""WhichSpace"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Buffer"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Offset"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""Length"": [ 24, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 WhichSpace { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 Buffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 Offset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _UNNAMED_28404
 
	public class _UNNAMED_28404
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28404(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28404"": [ 1, {
				 ""Lock"": [ 0, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte Lock{ get { return _StructureData[_BufferOffset +0]; } }
	}
	#endregion
	#region _UNNAMED_28406
 
	public class _UNNAMED_28406
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28406(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28406"": [ 4, {
				 ""IdType"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""BUS_QUERY_ID_TYPE\"",\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public BUS_QUERY_ID_TYPE IdType { get { return (BUS_QUERY_ID_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_28408
 
	public class _UNNAMED_28408
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28408(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28408"": [ 16, {
				 ""DeviceTextType"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""DEVICE_TEXT_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""LocaleId"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public DEVICE_TEXT_TYPE DeviceTextType { get { return (DEVICE_TEXT_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 LocaleId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_28411
 
	public class _UNNAMED_28411
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28411(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28411"": [ 16, {
				 ""InPath"": [ 0, [ ""Byte"", ""null"" ]],
				 ""Reserved"": [ 1, [ ""Array"", ""{\""count\"":3,\""target\"":\""Byte\""}"" ]],
				 ""Type"": [ 8, [ ""Enumeration"", ""{\""enum_name\"":\""_DEVICE_USAGE_NOTIFICATION_TYPE\"",\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public Byte InPath{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte[] Reserved
		{
			get
			{
				Byte[] returnValue = new Byte[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 1];
				return returnValue;
			}
		}
		public _DEVICE_USAGE_NOTIFICATION_TYPE Type { get { return (_DEVICE_USAGE_NOTIFICATION_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_28415
 
	public class _UNNAMED_28415
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28415(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28415"": [ 4, {
				 ""PowerState"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""_SYSTEM_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public _SYSTEM_POWER_STATE PowerState { get { return (_SYSTEM_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_28417
 
	public class _UNNAMED_28417
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28417(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28417"": [ 8, {
				 ""PowerSequence"": [ 0, [ ""Pointer"", ""{\""target\"":\""_POWER_SEQUENCE\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 PowerSequence { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_28421
 
	public class _UNNAMED_28421
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28421(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28421"": [ 32, {
				 ""SystemContext"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""SystemPowerStateContext"": [ 0, [ ""_SYSTEM_POWER_STATE_CONTEXT"", ""null"" ]],
				 ""Type"": [ 8, [ ""Enumeration"", ""{\""enum_name\"":\""_POWER_STATE_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""State"": [ 16, [ ""_POWER_STATE"", ""null"" ]],
				 ""ShutdownType"": [ 24, [ ""Enumeration"", ""{\""enum_name\"":\""POWER_ACTION\"",\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 SystemContext { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _SYSTEM_POWER_STATE_CONTEXT SystemPowerStateContext
		{
			get
			{
				_SYSTEM_POWER_STATE_CONTEXT returnValue = new _SYSTEM_POWER_STATE_CONTEXT(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _POWER_STATE_TYPE Type { get { return (_POWER_STATE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public _POWER_STATE State
		{
			get
			{
				_POWER_STATE returnValue = new _POWER_STATE(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public POWER_ACTION ShutdownType { get { return (POWER_ACTION)BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _UNNAMED_28429
 
	public class _UNNAMED_28429
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28429(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28429"": [ 16, {
				 ""AllocatedResources"": [ 0, [ ""Pointer"", ""{\""target\"":\""_CM_RESOURCE_LIST\""}"" ]],
				 ""AllocatedResourcesTranslated"": [ 8, [ ""Pointer"", ""{\""target\"":\""_CM_RESOURCE_LIST\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 AllocatedResources { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 AllocatedResourcesTranslated { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_28434
 
	public class _UNNAMED_28434
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28434(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28434"": [ 32, {
				 ""ProviderId"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""DataPath"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""BufferSize"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""Buffer"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ProviderId { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 DataPath { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 BufferSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt64 Buffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _UNNAMED_28439
 
	public class _UNNAMED_28439
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28439(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28439"": [ 32, {
				 ""Argument1"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Argument2"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Argument3"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Argument4"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Argument1 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Argument2 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Argument3 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Argument4 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _UNNAMED_28444
 
	public class _UNNAMED_28444
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28444(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28444"": [ 32, {
				 ""Create"": [ 0, [ ""_UNNAMED_28286"", ""null"" ]],
				 ""CreatePipe"": [ 0, [ ""_UNNAMED_28294"", ""null"" ]],
				 ""CreateMailslot"": [ 0, [ ""_UNNAMED_28302"", ""null"" ]],
				 ""Read"": [ 0, [ ""_UNNAMED_28310"", ""null"" ]],
				 ""Write"": [ 0, [ ""_UNNAMED_28310"", ""null"" ]],
				 ""QueryDirectory"": [ 0, [ ""_UNNAMED_28314"", ""null"" ]],
				 ""NotifyDirectory"": [ 0, [ ""_UNNAMED_28320"", ""null"" ]],
				 ""QueryFile"": [ 0, [ ""_UNNAMED_28323"", ""null"" ]],
				 ""SetFile"": [ 0, [ ""_UNNAMED_28326"", ""null"" ]],
				 ""QueryEa"": [ 0, [ ""_UNNAMED_28334"", ""null"" ]],
				 ""SetEa"": [ 0, [ ""_UNNAMED_28339"", ""null"" ]],
				 ""QueryVolume"": [ 0, [ ""_UNNAMED_28341"", ""null"" ]],
				 ""SetVolume"": [ 0, [ ""_UNNAMED_28341"", ""null"" ]],
				 ""FileSystemControl"": [ 0, [ ""_UNNAMED_28344"", ""null"" ]],
				 ""LockControl"": [ 0, [ ""_UNNAMED_28349"", ""null"" ]],
				 ""DeviceIoControl"": [ 0, [ ""_UNNAMED_28354"", ""null"" ]],
				 ""QuerySecurity"": [ 0, [ ""_UNNAMED_28359"", ""null"" ]],
				 ""SetSecurity"": [ 0, [ ""_UNNAMED_28362"", ""null"" ]],
				 ""MountVolume"": [ 0, [ ""_UNNAMED_28365"", ""null"" ]],
				 ""VerifyVolume"": [ 0, [ ""_UNNAMED_28365"", ""null"" ]],
				 ""Scsi"": [ 0, [ ""_UNNAMED_28370"", ""null"" ]],
				 ""QueryQuota"": [ 0, [ ""_UNNAMED_28374"", ""null"" ]],
				 ""SetQuota"": [ 0, [ ""_UNNAMED_28339"", ""null"" ]],
				 ""QueryDeviceRelations"": [ 0, [ ""_UNNAMED_28381"", ""null"" ]],
				 ""QueryInterface"": [ 0, [ ""_UNNAMED_28383"", ""null"" ]],
				 ""DeviceCapabilities"": [ 0, [ ""_UNNAMED_28391"", ""null"" ]],
				 ""FilterResourceRequirements"": [ 0, [ ""_UNNAMED_28395"", ""null"" ]],
				 ""ReadWriteConfig"": [ 0, [ ""_UNNAMED_28399"", ""null"" ]],
				 ""SetLock"": [ 0, [ ""_UNNAMED_28404"", ""null"" ]],
				 ""QueryId"": [ 0, [ ""_UNNAMED_28406"", ""null"" ]],
				 ""QueryDeviceText"": [ 0, [ ""_UNNAMED_28408"", ""null"" ]],
				 ""UsageNotification"": [ 0, [ ""_UNNAMED_28411"", ""null"" ]],
				 ""WaitWake"": [ 0, [ ""_UNNAMED_28415"", ""null"" ]],
				 ""PowerSequence"": [ 0, [ ""_UNNAMED_28417"", ""null"" ]],
				 ""Power"": [ 0, [ ""_UNNAMED_28421"", ""null"" ]],
				 ""StartDevice"": [ 0, [ ""_UNNAMED_28429"", ""null"" ]],
				 ""WMI"": [ 0, [ ""_UNNAMED_28434"", ""null"" ]],
				 ""Others"": [ 0, [ ""_UNNAMED_28439"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_28286 Create
		{
			get
			{
				_UNNAMED_28286 returnValue = new _UNNAMED_28286(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28294 CreatePipe
		{
			get
			{
				_UNNAMED_28294 returnValue = new _UNNAMED_28294(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28302 CreateMailslot
		{
			get
			{
				_UNNAMED_28302 returnValue = new _UNNAMED_28302(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28310 Read
		{
			get
			{
				_UNNAMED_28310 returnValue = new _UNNAMED_28310(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28310 Write
		{
			get
			{
				_UNNAMED_28310 returnValue = new _UNNAMED_28310(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28314 QueryDirectory
		{
			get
			{
				_UNNAMED_28314 returnValue = new _UNNAMED_28314(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28320 NotifyDirectory
		{
			get
			{
				_UNNAMED_28320 returnValue = new _UNNAMED_28320(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28323 QueryFile
		{
			get
			{
				_UNNAMED_28323 returnValue = new _UNNAMED_28323(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28326 SetFile
		{
			get
			{
				_UNNAMED_28326 returnValue = new _UNNAMED_28326(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28334 QueryEa
		{
			get
			{
				_UNNAMED_28334 returnValue = new _UNNAMED_28334(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28339 SetEa
		{
			get
			{
				_UNNAMED_28339 returnValue = new _UNNAMED_28339(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28341 QueryVolume
		{
			get
			{
				_UNNAMED_28341 returnValue = new _UNNAMED_28341(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28341 SetVolume
		{
			get
			{
				_UNNAMED_28341 returnValue = new _UNNAMED_28341(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28344 FileSystemControl
		{
			get
			{
				_UNNAMED_28344 returnValue = new _UNNAMED_28344(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28349 LockControl
		{
			get
			{
				_UNNAMED_28349 returnValue = new _UNNAMED_28349(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28354 DeviceIoControl
		{
			get
			{
				_UNNAMED_28354 returnValue = new _UNNAMED_28354(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28359 QuerySecurity
		{
			get
			{
				_UNNAMED_28359 returnValue = new _UNNAMED_28359(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28362 SetSecurity
		{
			get
			{
				_UNNAMED_28362 returnValue = new _UNNAMED_28362(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28365 MountVolume
		{
			get
			{
				_UNNAMED_28365 returnValue = new _UNNAMED_28365(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28365 VerifyVolume
		{
			get
			{
				_UNNAMED_28365 returnValue = new _UNNAMED_28365(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28370 Scsi
		{
			get
			{
				_UNNAMED_28370 returnValue = new _UNNAMED_28370(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28374 QueryQuota
		{
			get
			{
				_UNNAMED_28374 returnValue = new _UNNAMED_28374(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28339 SetQuota
		{
			get
			{
				_UNNAMED_28339 returnValue = new _UNNAMED_28339(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28381 QueryDeviceRelations
		{
			get
			{
				_UNNAMED_28381 returnValue = new _UNNAMED_28381(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28383 QueryInterface
		{
			get
			{
				_UNNAMED_28383 returnValue = new _UNNAMED_28383(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28391 DeviceCapabilities
		{
			get
			{
				_UNNAMED_28391 returnValue = new _UNNAMED_28391(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28395 FilterResourceRequirements
		{
			get
			{
				_UNNAMED_28395 returnValue = new _UNNAMED_28395(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28399 ReadWriteConfig
		{
			get
			{
				_UNNAMED_28399 returnValue = new _UNNAMED_28399(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28404 SetLock
		{
			get
			{
				_UNNAMED_28404 returnValue = new _UNNAMED_28404(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28406 QueryId
		{
			get
			{
				_UNNAMED_28406 returnValue = new _UNNAMED_28406(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28408 QueryDeviceText
		{
			get
			{
				_UNNAMED_28408 returnValue = new _UNNAMED_28408(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28411 UsageNotification
		{
			get
			{
				_UNNAMED_28411 returnValue = new _UNNAMED_28411(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28415 WaitWake
		{
			get
			{
				_UNNAMED_28415 returnValue = new _UNNAMED_28415(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28417 PowerSequence
		{
			get
			{
				_UNNAMED_28417 returnValue = new _UNNAMED_28417(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28421 Power
		{
			get
			{
				_UNNAMED_28421 returnValue = new _UNNAMED_28421(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28429 StartDevice
		{
			get
			{
				_UNNAMED_28429 returnValue = new _UNNAMED_28429(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28434 WMI
		{
			get
			{
				_UNNAMED_28434 returnValue = new _UNNAMED_28434(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28439 Others
		{
			get
			{
				_UNNAMED_28439 returnValue = new _UNNAMED_28439(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _IO_STACK_LOCATION
 
	public class _IO_STACK_LOCATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IO_STACK_LOCATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IO_STACK_LOCATION"": [ 72, {
				 ""MajorFunction"": [ 0, [ ""Byte"", ""null"" ]],
				 ""MinorFunction"": [ 1, [ ""Byte"", ""null"" ]],
				 ""Flags"": [ 2, [ ""Byte"", ""null"" ]],
				 ""Control"": [ 3, [ ""Byte"", ""null"" ]],
				 ""Parameters"": [ 8, [ ""_UNNAMED_28444"", ""null"" ]],
				 ""DeviceObject"": [ 40, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""FileObject"": [ 48, [ ""Pointer"", ""{\""target\"":\""_FILE_OBJECT\""}"" ]],
				 ""CompletionRoutine"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Context"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public Byte MajorFunction{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte MinorFunction{ get { return _StructureData[_BufferOffset +1]; } }
		public Byte Flags{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte Control{ get { return _StructureData[_BufferOffset +3]; } }
		public _UNNAMED_28444 Parameters
		{
			get
			{
				_UNNAMED_28444 returnValue = new _UNNAMED_28444(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt64 DeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 FileObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 CompletionRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 Context { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
	}
	#endregion
	#region _UNNAMED_28494
 
	public class _UNNAMED_28494
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28494(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28494"": [ 72, {
				 ""ListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Wcb"": [ 0, [ ""_WAIT_CONTEXT_BLOCK"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _WAIT_CONTEXT_BLOCK Wcb
		{
			get
			{
				_WAIT_CONTEXT_BLOCK returnValue = new _WAIT_CONTEXT_BLOCK(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _DEVICE_OBJECT
 
	public class _DEVICE_OBJECT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DEVICE_OBJECT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 336; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DEVICE_OBJECT"": [ 336, {
				 ""Type"": [ 0, [ ""Int16"", ""null"" ]],
				 ""Size"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""ReferenceCount"": [ 4, [ ""Int32"", ""null"" ]],
				 ""DriverObject"": [ 8, [ ""Pointer"", ""{\""target\"":\""_DRIVER_OBJECT\""}"" ]],
				 ""NextDevice"": [ 16, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""AttachedDevice"": [ 24, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""CurrentIrp"": [ 32, [ ""Pointer"", ""{\""target\"":\""_IRP\""}"" ]],
				 ""Timer"": [ 40, [ ""Pointer"", ""{\""target\"":\""_IO_TIMER\""}"" ]],
				 ""Flags"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""Characteristics"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""Vpb"": [ 56, [ ""Pointer"", ""{\""target\"":\""_VPB\""}"" ]],
				 ""DeviceExtension"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DeviceType"": [ 72, [ ""UInt32"", ""null"" ]],
				 ""StackSize"": [ 76, [ ""Char"", ""null"" ]],
				 ""Queue"": [ 80, [ ""_UNNAMED_28494"", ""null"" ]],
				 ""AlignmentRequirement"": [ 152, [ ""UInt32"", ""null"" ]],
				 ""DeviceQueue"": [ 160, [ ""_KDEVICE_QUEUE"", ""null"" ]],
				 ""Dpc"": [ 200, [ ""_KDPC"", ""null"" ]],
				 ""ActiveThreadCount"": [ 264, [ ""UInt32"", ""null"" ]],
				 ""SecurityDescriptor"": [ 272, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DeviceLock"": [ 280, [ ""_KEVENT"", ""null"" ]],
				 ""SectorSize"": [ 304, [ ""UInt16"", ""null"" ]],
				 ""Spare1"": [ 306, [ ""UInt16"", ""null"" ]],
				 ""DeviceObjectExtension"": [ 312, [ ""Pointer"", ""{\""target\"":\""_DEVOBJ_EXTENSION\""}"" ]],
				 ""Reserved"": [ 320, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public Int16 Type { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 Size { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public Int32 ReferenceCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 DriverObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 NextDevice { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 AttachedDevice { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 CurrentIrp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 Timer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public UInt32 Characteristics { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public UInt64 Vpb { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 DeviceExtension { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt32 DeviceType { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 72); } }
		public Char StackSize { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 76); } }
		public _UNNAMED_28494 Queue
		{
			get
			{
				_UNNAMED_28494 returnValue = new _UNNAMED_28494(_StructureData, _BufferOffset + 80);
				return returnValue;
			}
		}
		public UInt32 AlignmentRequirement { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 152); } }
		public _KDEVICE_QUEUE DeviceQueue
		{
			get
			{
				_KDEVICE_QUEUE returnValue = new _KDEVICE_QUEUE(_StructureData, _BufferOffset + 160);
				return returnValue;
			}
		}
		public _KDPC Dpc
		{
			get
			{
				_KDPC returnValue = new _KDPC(_StructureData, _BufferOffset + 200);
				return returnValue;
			}
		}
		public UInt32 ActiveThreadCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 264); } }
		public UInt64 SecurityDescriptor { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 272); } }
		public _KEVENT DeviceLock
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 280);
				return returnValue;
			}
		}
		public UInt16 SectorSize { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 304); } }
		public UInt16 Spare1 { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 306); } }
		public UInt64 DeviceObjectExtension { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 312); } }
		public UInt64 Reserved { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 320); } }
	}
	#endregion
	#region _KDPC
 
	public class _KDPC
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KDPC(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KDPC"": [ 64, {
				 ""TargetInfoAsUlong"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Type"": [ 0, [ ""Byte"", ""null"" ]],
				 ""Importance"": [ 1, [ ""Byte"", ""null"" ]],
				 ""Number"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""DpcListEntry"": [ 8, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""ProcessorHistory"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""DeferredRoutine"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DeferredContext"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SystemArgument1"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SystemArgument2"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DpcData"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 TargetInfoAsUlong { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Byte Type{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte Importance{ get { return _StructureData[_BufferOffset +1]; } }
		public UInt16 Number { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public _SINGLE_LIST_ENTRY DpcListEntry
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt64 ProcessorHistory { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 DeferredRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 DeferredContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 SystemArgument1 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 SystemArgument2 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 DpcData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
	}
	#endregion
	#region _IO_DRIVER_CREATE_CONTEXT
 
	public class _IO_DRIVER_CREATE_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IO_DRIVER_CREATE_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IO_DRIVER_CREATE_CONTEXT"": [ 32, {
				 ""Size"": [ 0, [ ""Int16"", ""null"" ]],
				 ""ExtraCreateParameter"": [ 8, [ ""Pointer"", ""{\""target\"":\""_ECP_LIST\""}"" ]],
				 ""DeviceObjectHint"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""TxnParameters"": [ 24, [ ""Pointer"", ""{\""target\"":\""_TXN_PARAMETER_BLOCK\""}"" ]] }]
				 }
				)";
			}
		}
		public Int16 Size { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 0); } }
		public UInt64 ExtraCreateParameter { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 DeviceObjectHint { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 TxnParameters { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _IO_PRIORITY_INFO
 
	public class _IO_PRIORITY_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IO_PRIORITY_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IO_PRIORITY_INFO"": [ 16, {
				 ""Size"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ThreadPriority"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""PagePriority"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""IoPriority"": [ 12, [ ""Enumeration"", ""{\""enum_name\"":\""_IO_PRIORITY_HINT\"",\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Size { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 ThreadPriority { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 PagePriority { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public _IO_PRIORITY_HINT IoPriority { get { return (_IO_PRIORITY_HINT)BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
	}
	#endregion
	#region _OBJECT_HANDLE_INFORMATION
 
	public class _OBJECT_HANDLE_INFORMATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_HANDLE_INFORMATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_HANDLE_INFORMATION"": [ 8, {
				 ""HandleAttributes"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""GrantedAccess"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 HandleAttributes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 GrantedAccess { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _MDL
 
	public class _MDL
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MDL(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MDL"": [ 48, {
				 ""Next"": [ 0, [ ""Pointer"", ""{\""target\"":\""_MDL\""}"" ]],
				 ""Size"": [ 8, [ ""Int16"", ""null"" ]],
				 ""MdlFlags"": [ 10, [ ""Int16"", ""null"" ]],
				 ""AllocationProcessorNumber"": [ 12, [ ""UInt16"", ""null"" ]],
				 ""Reserved"": [ 14, [ ""UInt16"", ""null"" ]],
				 ""Process"": [ 16, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""MappedSystemVa"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""StartVa"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ByteCount"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""ByteOffset"": [ 44, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Next { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public Int16 Size { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 8); } }
		public Int16 MdlFlags { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 10); } }
		public UInt16 AllocationProcessorNumber { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 12); } }
		public UInt16 Reserved { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 14); } }
		public UInt64 Process { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 MappedSystemVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 StartVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt32 ByteCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32 ByteOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
	}
	#endregion
	#region _EVENT_DATA_DESCRIPTOR
 
	public class _EVENT_DATA_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EVENT_DATA_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EVENT_DATA_DESCRIPTOR"": [ 16, {
				 ""Ptr"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Size"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Reserved"": [ 12, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Ptr { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 Size { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Reserved { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
	}
	#endregion
	#region _EVENT_DESCRIPTOR
 
	public class _EVENT_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EVENT_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EVENT_DESCRIPTOR"": [ 16, {
				 ""Id"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Version"": [ 2, [ ""Byte"", ""null"" ]],
				 ""Channel"": [ 3, [ ""Byte"", ""null"" ]],
				 ""Level"": [ 4, [ ""Byte"", ""null"" ]],
				 ""Opcode"": [ 5, [ ""Byte"", ""null"" ]],
				 ""Task"": [ 6, [ ""UInt16"", ""null"" ]],
				 ""Keyword"": [ 8, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Id { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public Byte Version{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte Channel{ get { return _StructureData[_BufferOffset +3]; } }
		public Byte Level{ get { return _StructureData[_BufferOffset +4]; } }
		public Byte Opcode{ get { return _StructureData[_BufferOffset +5]; } }
		public UInt16 Task { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
		public UInt64 Keyword { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _EVENT_RECORD
 
	public class _EVENT_RECORD
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EVENT_RECORD(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 112; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EVENT_RECORD"": [ 112, {
				 ""EventHeader"": [ 0, [ ""_EVENT_HEADER"", ""null"" ]],
				 ""BufferContext"": [ 80, [ ""_ETW_BUFFER_CONTEXT"", ""null"" ]],
				 ""ExtendedDataCount"": [ 84, [ ""UInt16"", ""null"" ]],
				 ""UserDataLength"": [ 86, [ ""UInt16"", ""null"" ]],
				 ""ExtendedData"": [ 88, [ ""Pointer"", ""{\""target\"":\""_EVENT_HEADER_EXTENDED_DATA_ITEM\""}"" ]],
				 ""UserData"": [ 96, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""UserContext"": [ 104, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public _EVENT_HEADER EventHeader
		{
			get
			{
				_EVENT_HEADER returnValue = new _EVENT_HEADER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _ETW_BUFFER_CONTEXT BufferContext
		{
			get
			{
				_ETW_BUFFER_CONTEXT returnValue = new _ETW_BUFFER_CONTEXT(_StructureData, _BufferOffset + 80);
				return returnValue;
			}
		}
		public UInt16 ExtendedDataCount { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 84); } }
		public UInt16 UserDataLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 86); } }
		public UInt64 ExtendedData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 UserData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt64 UserContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
	}
	#endregion
	#region _PERFINFO_GROUPMASK
 
	public class _PERFINFO_GROUPMASK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PERFINFO_GROUPMASK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PERFINFO_GROUPMASK"": [ 32, {
				 ""Masks"": [ 0, [ ""Array"", ""{\""count\"":8,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32[] Masks
		{
			get
			{
				UInt32[] returnValue = new UInt32[8];
				for(int i=0; i<8; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _FILE_OBJECT
 
	public class _FILE_OBJECT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _FILE_OBJECT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 216; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_FILE_OBJECT"": [ 216, {
				 ""Type"": [ 0, [ ""Int16"", ""null"" ]],
				 ""Size"": [ 2, [ ""Int16"", ""null"" ]],
				 ""DeviceObject"": [ 8, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""Vpb"": [ 16, [ ""Pointer"", ""{\""target\"":\""_VPB\""}"" ]],
				 ""FsContext"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FsContext2"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SectionObjectPointer"": [ 40, [ ""Pointer"", ""{\""target\"":\""_SECTION_OBJECT_POINTERS\""}"" ]],
				 ""PrivateCacheMap"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FinalStatus"": [ 56, [ ""Int32"", ""null"" ]],
				 ""RelatedFileObject"": [ 64, [ ""Pointer"", ""{\""target\"":\""_FILE_OBJECT\""}"" ]],
				 ""LockOperation"": [ 72, [ ""Byte"", ""null"" ]],
				 ""DeletePending"": [ 73, [ ""Byte"", ""null"" ]],
				 ""ReadAccess"": [ 74, [ ""Byte"", ""null"" ]],
				 ""WriteAccess"": [ 75, [ ""Byte"", ""null"" ]],
				 ""DeleteAccess"": [ 76, [ ""Byte"", ""null"" ]],
				 ""SharedRead"": [ 77, [ ""Byte"", ""null"" ]],
				 ""SharedWrite"": [ 78, [ ""Byte"", ""null"" ]],
				 ""SharedDelete"": [ 79, [ ""Byte"", ""null"" ]],
				 ""Flags"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""FileName"": [ 88, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""CurrentByteOffset"": [ 104, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""Waiters"": [ 112, [ ""UInt32"", ""null"" ]],
				 ""Busy"": [ 116, [ ""UInt32"", ""null"" ]],
				 ""LastLock"": [ 120, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Lock"": [ 128, [ ""_KEVENT"", ""null"" ]],
				 ""Event"": [ 152, [ ""_KEVENT"", ""null"" ]],
				 ""CompletionContext"": [ 176, [ ""Pointer"", ""{\""target\"":\""_IO_COMPLETION_CONTEXT\""}"" ]],
				 ""IrpListLock"": [ 184, [ ""UInt64"", ""null"" ]],
				 ""IrpList"": [ 192, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""FileObjectExtension"": [ 208, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public Int16 Type { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 0); } }
		public Int16 Size { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 2); } }
		public UInt64 DeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Vpb { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 FsContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 FsContext2 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 SectionObjectPointer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 PrivateCacheMap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public Int32 FinalStatus { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 56); } }
		public UInt64 RelatedFileObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public Byte LockOperation{ get { return _StructureData[_BufferOffset +72]; } }
		public Byte DeletePending{ get { return _StructureData[_BufferOffset +73]; } }
		public Byte ReadAccess{ get { return _StructureData[_BufferOffset +74]; } }
		public Byte WriteAccess{ get { return _StructureData[_BufferOffset +75]; } }
		public Byte DeleteAccess{ get { return _StructureData[_BufferOffset +76]; } }
		public Byte SharedRead{ get { return _StructureData[_BufferOffset +77]; } }
		public Byte SharedWrite{ get { return _StructureData[_BufferOffset +78]; } }
		public Byte SharedDelete{ get { return _StructureData[_BufferOffset +79]; } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public _UNICODE_STRING FileName
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 88);
				return returnValue;
			}
		}
		public _LARGE_INTEGER CurrentByteOffset
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 104);
				return returnValue;
			}
		}
		public UInt32 Waiters { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 112); } }
		public UInt32 Busy { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 116); } }
		public UInt64 LastLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 120); } }
		public _KEVENT Lock
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 128);
				return returnValue;
			}
		}
		public _KEVENT Event
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 152);
				return returnValue;
			}
		}
		public UInt64 CompletionContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 176); } }
		public UInt64 IrpListLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 184); } }
		public _LIST_ENTRY IrpList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 192);
				return returnValue;
			}
		}
		public UInt64 FileObjectExtension { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 208); } }
	}
	#endregion
	#region _EX_RUNDOWN_REF
 
	public class _EX_RUNDOWN_REF
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EX_RUNDOWN_REF(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EX_RUNDOWN_REF"": [ 8, {
				 ""Count"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Ptr"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Count { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Ptr { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _MM_PAGE_ACCESS_INFO_HEADER
 
	public class _MM_PAGE_ACCESS_INFO_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MM_PAGE_ACCESS_INFO_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MM_PAGE_ACCESS_INFO_HEADER"": [ 72, {
				 ""Link"": [ 0, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""Type"": [ 8, [ ""Enumeration"", ""{\""enum_name\"":\""_MM_PAGE_ACCESS_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""EmptySequenceNumber"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""CurrentFileIndex"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""CreateTime"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""EmptyTime"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""TempEntry"": [ 24, [ ""Pointer"", ""{\""target\"":\""_MM_PAGE_ACCESS_INFO\""}"" ]],
				 ""PageEntry"": [ 32, [ ""Pointer"", ""{\""target\"":\""_MM_PAGE_ACCESS_INFO\""}"" ]],
				 ""FileEntry"": [ 40, [ ""Pointer"", ""{\""target\"":\""UInt64\""}"" ]],
				 ""FirstFileEntry"": [ 48, [ ""Pointer"", ""{\""target\"":\""UInt64\""}"" ]],
				 ""Process"": [ 56, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""SessionId"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""PageFrameEntry"": [ 32, [ ""Pointer"", ""{\""target\"":\""UInt64\""}"" ]],
				 ""LastPageFrameEntry"": [ 40, [ ""Pointer"", ""{\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public _SINGLE_LIST_ENTRY Link
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _MM_PAGE_ACCESS_TYPE Type { get { return (_MM_PAGE_ACCESS_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 EmptySequenceNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 CurrentFileIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt64 CreateTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 EmptyTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 TempEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 PageEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 FileEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 FirstFileEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 Process { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt32 SessionId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt64 PageFrameEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 LastPageFrameEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
	}
	#endregion
	#region _WHEA_ERROR_PACKET_V2
 
	public class _WHEA_ERROR_PACKET_V2
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_ERROR_PACKET_V2(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 80; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_ERROR_PACKET_V2"": [ 80, {
				 ""Signature"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Version"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Length"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Flags"": [ 12, [ ""_WHEA_ERROR_PACKET_FLAGS"", ""null"" ]],
				 ""ErrorType"": [ 16, [ ""Enumeration"", ""{\""enum_name\"":\""_WHEA_ERROR_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""ErrorSeverity"": [ 20, [ ""Enumeration"", ""{\""enum_name\"":\""_WHEA_ERROR_SEVERITY\"",\""target\"":\""UInt32\""}"" ]],
				 ""ErrorSourceId"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""ErrorSourceType"": [ 28, [ ""Enumeration"", ""{\""enum_name\"":\""_WHEA_ERROR_SOURCE_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""NotifyType"": [ 32, [ ""_GUID"", ""null"" ]],
				 ""Context"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""DataFormat"": [ 56, [ ""Enumeration"", ""{\""enum_name\"":\""_WHEA_ERROR_PACKET_DATA_FORMAT\"",\""target\"":\""UInt32\""}"" ]],
				 ""Reserved1"": [ 60, [ ""UInt32"", ""null"" ]],
				 ""DataOffset"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""DataLength"": [ 68, [ ""UInt32"", ""null"" ]],
				 ""PshedDataOffset"": [ 72, [ ""UInt32"", ""null"" ]],
				 ""PshedDataLength"": [ 76, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Signature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Version { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public _WHEA_ERROR_PACKET_FLAGS Flags
		{
			get
			{
				_WHEA_ERROR_PACKET_FLAGS returnValue = new _WHEA_ERROR_PACKET_FLAGS(_StructureData, _BufferOffset + 12);
				return returnValue;
			}
		}
		public _WHEA_ERROR_TYPE ErrorType { get { return (_WHEA_ERROR_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public _WHEA_ERROR_SEVERITY ErrorSeverity { get { return (_WHEA_ERROR_SEVERITY)BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 ErrorSourceId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public _WHEA_ERROR_SOURCE_TYPE ErrorSourceType { get { return (_WHEA_ERROR_SOURCE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public _GUID NotifyType
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt64 Context { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public _WHEA_ERROR_PACKET_DATA_FORMAT DataFormat { get { return (_WHEA_ERROR_PACKET_DATA_FORMAT)BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public UInt32 Reserved1 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
		public UInt32 DataOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt32 DataLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 68); } }
		public UInt32 PshedDataOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 72); } }
		public UInt32 PshedDataLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 76); } }
	}
	#endregion
	#region _WHEA_ERROR_RECORD
 
	public class _WHEA_ERROR_RECORD
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_ERROR_RECORD(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 200; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_ERROR_RECORD"": [ 200, {
				 ""Header"": [ 0, [ ""_WHEA_ERROR_RECORD_HEADER"", ""null"" ]],
				 ""SectionDescriptor"": [ 128, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public _WHEA_ERROR_RECORD_HEADER Header
		{
			get
			{
				_WHEA_ERROR_RECORD_HEADER returnValue = new _WHEA_ERROR_RECORD_HEADER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR[] SectionDescriptor
		{
			get
			{
				_WHEA_ERROR_RECORD_SECTION_DESCRIPTOR[] returnValue = new _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR(_StructureData, (i * size) + _BufferOffset + 128);
				return returnValue;
			}
		}
	}
	#endregion
	#region _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR
 
	public class _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_ERROR_RECORD_SECTION_DESCRIPTOR"": [ 72, {
				 ""SectionOffset"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""SectionLength"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Revision"": [ 8, [ ""_WHEA_REVISION"", ""null"" ]],
				 ""ValidBits"": [ 10, [ ""_WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS"", ""null"" ]],
				 ""Reserved"": [ 11, [ ""Byte"", ""null"" ]],
				 ""Flags"": [ 12, [ ""_WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS"", ""null"" ]],
				 ""SectionType"": [ 16, [ ""_GUID"", ""null"" ]],
				 ""FRUId"": [ 32, [ ""_GUID"", ""null"" ]],
				 ""SectionSeverity"": [ 48, [ ""Enumeration"", ""{\""enum_name\"":\""_WHEA_ERROR_SEVERITY\"",\""target\"":\""UInt32\""}"" ]],
				 ""FRUText"": [ 52, [ ""Array"", ""{\""count\"":20,\""target\"":\""Char\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 SectionOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 SectionLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _WHEA_REVISION Revision
		{
			get
			{
				_WHEA_REVISION returnValue = new _WHEA_REVISION(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS ValidBits
		{
			get
			{
				_WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS returnValue = new _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS(_StructureData, _BufferOffset + 10);
				return returnValue;
			}
		}
		public Byte Reserved{ get { return _StructureData[_BufferOffset +11]; } }
		public _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS Flags
		{
			get
			{
				_WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS returnValue = new _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS(_StructureData, _BufferOffset + 12);
				return returnValue;
			}
		}
		public _GUID SectionType
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _GUID FRUId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public _WHEA_ERROR_SEVERITY SectionSeverity { get { return (_WHEA_ERROR_SEVERITY)BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public Char[] FRUText
		{
			get
			{
				Char[] returnValue = new Char[20];
				for(int i=0; i<20; i++ )
					returnValue[i] = BitConverter.ToChar(_StructureData, (i * sizeof(Char)) + _BufferOffset + 52);
				return returnValue;
			}
		}
	}
	#endregion
	#region _FSRTL_ADVANCED_FCB_HEADER
 
	public class _FSRTL_ADVANCED_FCB_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _FSRTL_ADVANCED_FCB_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 104; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_FSRTL_ADVANCED_FCB_HEADER"": [ 104, {
				 ""NodeTypeCode"": [ 0, [ ""Int16"", ""null"" ]],
				 ""NodeByteSize"": [ 2, [ ""Int16"", ""null"" ]],
				 ""Flags"": [ 4, [ ""Byte"", ""null"" ]],
				 ""IsFastIoPossible"": [ 5, [ ""Byte"", ""null"" ]],
				 ""Flags2"": [ 6, [ ""Byte"", ""null"" ]],
				 ""Reserved"": [ 7, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""Version"": [ 7, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""Resource"": [ 8, [ ""Pointer"", ""{\""target\"":\""_ERESOURCE\""}"" ]],
				 ""PagingIoResource"": [ 16, [ ""Pointer"", ""{\""target\"":\""_ERESOURCE\""}"" ]],
				 ""AllocationSize"": [ 24, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""FileSize"": [ 32, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""ValidDataLength"": [ 40, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""FastMutex"": [ 48, [ ""Pointer"", ""{\""target\"":\""_FAST_MUTEX\""}"" ]],
				 ""FilterContexts"": [ 56, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""PushLock"": [ 72, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""FileContextSupportPointer"": [ 80, [ ""Pointer"", ""{\""target\"":\""void*\""}"" ]],
				 ""Oplock"": [ 88, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ReservedForRemote"": [ 88, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ReservedContext"": [ 96, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public Int16 NodeTypeCode { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 0); } }
		public Int16 NodeByteSize { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 2); } }
		public Byte Flags{ get { return _StructureData[_BufferOffset +4]; } }
		public Byte IsFastIoPossible{ get { return _StructureData[_BufferOffset +5]; } }
		public Byte Flags2{ get { return _StructureData[_BufferOffset +6]; } }
		public Byte Reserved
		{
			get
			{
				// start: 0  end: 4  Mask: 0000000000001111
				Byte value = _StructureData[_BufferOffset + 7];
				var value2 = (value & 15) >> 0;
				return (Byte)value2;
			}
		}
		public Byte Version
		{
			get
			{
				// start: 4  end: 8  Mask: 0000000011110000
				Byte value = _StructureData[_BufferOffset + 7];
				var value2 = (value & 240) >> 4;
				return (Byte)value2;
			}
		}
		public UInt64 Resource { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 PagingIoResource { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public _LARGE_INTEGER AllocationSize
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public _LARGE_INTEGER FileSize
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public _LARGE_INTEGER ValidDataLength
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public UInt64 FastMutex { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public _LIST_ENTRY FilterContexts
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public _EX_PUSH_LOCK PushLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 72);
				return returnValue;
			}
		}
		public UInt64 FileContextSupportPointer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 Oplock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 ReservedForRemote { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 ReservedContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
	}
	#endregion
	#region _iobuf
 
	public class _iobuf
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _iobuf(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_iobuf"": [ 48, {
				 ""_ptr"": [ 0, [ ""Pointer"", ""{\""target\"":\""char\""}"" ]],
				 ""_cnt"": [ 8, [ ""Int32"", ""null"" ]],
				 ""_base"": [ 16, [ ""Pointer"", ""{\""target\"":\""char\""}"" ]],
				 ""_flag"": [ 24, [ ""Int32"", ""null"" ]],
				 ""_file"": [ 28, [ ""Int32"", ""null"" ]],
				 ""_charbuf"": [ 32, [ ""Int32"", ""null"" ]],
				 ""_bufsiz"": [ 36, [ ""Int32"", ""null"" ]],
				 ""_tmpfname"": [ 40, [ ""Pointer"", ""{\""target\"":\""char\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 _ptr { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public Int32 _cnt { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 8); } }
		public UInt64 _base { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public Int32 _flag { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 24); } }
		public Int32 _file { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 28); } }
		public Int32 _charbuf { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 32); } }
		public Int32 _bufsiz { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 36); } }
		public UInt64 _tmpfname { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
	}
	#endregion
	#region _UNNAMED_28720
 
	public class _UNNAMED_28720
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28720(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28720"": [ 8, {
				 ""Long"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""VolatileLong"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Hard"": [ 0, [ ""_MMPTE_HARDWARE"", ""null"" ]],
				 ""Flush"": [ 0, [ ""_HARDWARE_PTE"", ""null"" ]],
				 ""Proto"": [ 0, [ ""_MMPTE_PROTOTYPE"", ""null"" ]],
				 ""Soft"": [ 0, [ ""_MMPTE_SOFTWARE"", ""null"" ]],
				 ""TimeStamp"": [ 0, [ ""_MMPTE_TIMESTAMP"", ""null"" ]],
				 ""Trans"": [ 0, [ ""_MMPTE_TRANSITION"", ""null"" ]],
				 ""Subsect"": [ 0, [ ""_MMPTE_SUBSECTION"", ""null"" ]],
				 ""List"": [ 0, [ ""_MMPTE_LIST"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Long { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 VolatileLong { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _MMPTE_HARDWARE Hard
		{
			get
			{
				_MMPTE_HARDWARE returnValue = new _MMPTE_HARDWARE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _HARDWARE_PTE Flush
		{
			get
			{
				_HARDWARE_PTE returnValue = new _HARDWARE_PTE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _MMPTE_PROTOTYPE Proto
		{
			get
			{
				_MMPTE_PROTOTYPE returnValue = new _MMPTE_PROTOTYPE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _MMPTE_SOFTWARE Soft
		{
			get
			{
				_MMPTE_SOFTWARE returnValue = new _MMPTE_SOFTWARE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _MMPTE_TIMESTAMP TimeStamp
		{
			get
			{
				_MMPTE_TIMESTAMP returnValue = new _MMPTE_TIMESTAMP(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _MMPTE_TRANSITION Trans
		{
			get
			{
				_MMPTE_TRANSITION returnValue = new _MMPTE_TRANSITION(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _MMPTE_SUBSECTION Subsect
		{
			get
			{
				_MMPTE_SUBSECTION returnValue = new _MMPTE_SUBSECTION(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _MMPTE_LIST List
		{
			get
			{
				_MMPTE_LIST returnValue = new _MMPTE_LIST(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MMPTE
 
	public class _MMPTE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMPTE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMPTE"": [ 8, {
				 ""u"": [ 0, [ ""_UNNAMED_28720"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_28720 u
		{
			get
			{
				_UNNAMED_28720 returnValue = new _UNNAMED_28720(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _EX_PUSH_LOCK_CACHE_AWARE
 
	public class _EX_PUSH_LOCK_CACHE_AWARE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EX_PUSH_LOCK_CACHE_AWARE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 256; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EX_PUSH_LOCK_CACHE_AWARE"": [ 256, {
				 ""Locks"": [ 0, [ ""Array"", ""{\""count\"":32,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""_EX_PUSH_LOCK\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt64[] Locks
		{
			get
			{
				UInt64[] returnValue = new UInt64[32];
				int size = 8;
				for(int i=0; i<32; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ERESOURCE
 
	public class _ERESOURCE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ERESOURCE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 104; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ERESOURCE"": [ 104, {
				 ""SystemResourcesList"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""OwnerTable"": [ 16, [ ""Pointer"", ""{\""target\"":\""_OWNER_ENTRY\""}"" ]],
				 ""ActiveCount"": [ 24, [ ""Int16"", ""null"" ]],
				 ""Flag"": [ 26, [ ""UInt16"", ""null"" ]],
				 ""ReservedLowFlags"": [ 26, [ ""Byte"", ""null"" ]],
				 ""WaiterPriority"": [ 27, [ ""Byte"", ""null"" ]],
				 ""SharedWaiters"": [ 32, [ ""Pointer"", ""{\""target\"":\""_KSEMAPHORE\""}"" ]],
				 ""ExclusiveWaiters"": [ 40, [ ""Pointer"", ""{\""target\"":\""_KEVENT\""}"" ]],
				 ""OwnerEntry"": [ 48, [ ""_OWNER_ENTRY"", ""null"" ]],
				 ""ActiveEntries"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""ContentionCount"": [ 68, [ ""UInt32"", ""null"" ]],
				 ""NumberOfSharedWaiters"": [ 72, [ ""UInt32"", ""null"" ]],
				 ""NumberOfExclusiveWaiters"": [ 76, [ ""UInt32"", ""null"" ]],
				 ""Reserved2"": [ 80, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Address"": [ 88, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CreatorBackTraceIndex"": [ 88, [ ""UInt64"", ""null"" ]],
				 ""SpinLock"": [ 96, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY SystemResourcesList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 OwnerTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public Int16 ActiveCount { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 24); } }
		public UInt16 Flag { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 26); } }
		public Byte ReservedLowFlags{ get { return _StructureData[_BufferOffset +26]; } }
		public Byte WaiterPriority{ get { return _StructureData[_BufferOffset +27]; } }
		public UInt64 SharedWaiters { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 ExclusiveWaiters { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public _OWNER_ENTRY OwnerEntry
		{
			get
			{
				_OWNER_ENTRY returnValue = new _OWNER_ENTRY(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public UInt32 ActiveEntries { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt32 ContentionCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 68); } }
		public UInt32 NumberOfSharedWaiters { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 72); } }
		public UInt32 NumberOfExclusiveWaiters { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 76); } }
		public UInt64 Reserved2 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 Address { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 CreatorBackTraceIndex { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 SpinLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
	}
	#endregion
	#region _MI_CACHED_PTE
 
	public class _MI_CACHED_PTE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MI_CACHED_PTE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MI_CACHED_PTE"": [ 8, {
				 ""GlobalTimeStamp"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""PteIndex"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Long"": [ 0, [ ""Int64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 GlobalTimeStamp { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 PteIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public Int64 Long { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _KLOCK_QUEUE_HANDLE
 
	public class _KLOCK_QUEUE_HANDLE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KLOCK_QUEUE_HANDLE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KLOCK_QUEUE_HANDLE"": [ 24, {
				 ""LockQueue"": [ 0, [ ""_KSPIN_LOCK_QUEUE"", ""null"" ]],
				 ""OldIrql"": [ 16, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _KSPIN_LOCK_QUEUE LockQueue
		{
			get
			{
				_KSPIN_LOCK_QUEUE returnValue = new _KSPIN_LOCK_QUEUE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public Byte OldIrql{ get { return _StructureData[_BufferOffset +16]; } }
	}
	#endregion
	#region _MMPFNLIST
 
	public class _MMPFNLIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMPFNLIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMPFNLIST"": [ 40, {
				 ""Total"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""ListName"": [ 8, [ ""Enumeration"", ""{\""enum_name\"":\""_MMLISTS\"",\""target\"":\""UInt32\""}"" ]],
				 ""Flink"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""Blink"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""Lock"": [ 32, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Total { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _MMLISTS ListName { get { return (_MMLISTS)BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt64 Flink { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Blink { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 Lock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _UNNAMED_28778
 
	public class _UNNAMED_28778
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28778(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28778"": [ 8, {
				 ""Flink"": [ 0, [ ""BitField"", ""{\""end_bit\"":36,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""NodeFlinkHigh"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":36,\""target\"":\""UInt64\""}"" ]],
				 ""WsIndex"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Event"": [ 0, [ ""Pointer"", ""{\""target\"":\""_KEVENT\""}"" ]],
				 ""Next"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""VolatileNext"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""KernelStackOwner"": [ 0, [ ""Pointer"", ""{\""target\"":\""_KTHREAD\""}"" ]],
				 ""NextStackPfn"": [ 0, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Flink
		{
			get
			{
				// start: 0  end: 36  Mask: 000011111111111111111111111111111111
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967295) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 NodeFlinkHigh
		{
			get
			{
				// start: 36  end: 64  Mask: 0000000000000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 36;
				return (UInt64)value2;
			}
		}
		public UInt64 WsIndex { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Event { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Next { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 VolatileNext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 KernelStackOwner { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _SINGLE_LIST_ENTRY NextStackPfn
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_28787
 
	public class _UNNAMED_28787
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28787(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28787"": [ 8, {
				 ""Blink"": [ 0, [ ""BitField"", ""{\""end_bit\"":36,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""NodeBlinkHigh"": [ 0, [ ""BitField"", ""{\""end_bit\"":56,\""start_bit\"":36,\""target\"":\""UInt64\""}"" ]],
				 ""TbFlushStamp"": [ 0, [ ""BitField"", ""{\""end_bit\"":60,\""start_bit\"":56,\""target\"":\""UInt64\""}"" ]],
				 ""SpareBlink"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":60,\""target\"":\""UInt64\""}"" ]],
				 ""ImageProtoPte"": [ 0, [ ""Pointer"", ""{\""target\"":\""_MMPTE\""}"" ]],
				 ""ShareCount"": [ 0, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Blink
		{
			get
			{
				// start: 0  end: 36  Mask: 000011111111111111111111111111111111
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967295) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 NodeBlinkHigh
		{
			get
			{
				// start: 36  end: 56  Mask: 00000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 36;
				return (UInt64)value2;
			}
		}
		public UInt64 TbFlushStamp
		{
			get
			{
				// start: 56  end: 60  Mask: 000000000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 56;
				return (UInt64)value2;
			}
		}
		public UInt64 SpareBlink
		{
			get
			{
				// start: 60  end: 64  Mask: 0000000000000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 60;
				return (UInt64)value2;
			}
		}
		public UInt64 ImageProtoPte { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 ShareCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_28795
 
	public class _UNNAMED_28795
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28795(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28795"": [ 4, {
				 ""ReferenceCount"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""VolatileReferenceCount"": [ 0, [ ""Int16"", ""null"" ]],
				 ""ShortFlags"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""VolatileShortFlags"": [ 2, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 ReferenceCount { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public Int16 VolatileReferenceCount { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 ShortFlags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt16 VolatileShortFlags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
	}
	#endregion
	#region _UNNAMED_28800
 
	public class _UNNAMED_28800
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28800(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28800"": [ 4, {
				 ""ReferenceCount"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""e1"": [ 2, [ ""_MMPFNENTRY"", ""null"" ]],
				 ""e2"": [ 0, [ ""_UNNAMED_28795"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 ReferenceCount { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public _MMPFNENTRY e1
		{
			get
			{
				_MMPFNENTRY returnValue = new _MMPFNENTRY(_StructureData, _BufferOffset + 2);
				return returnValue;
			}
		}
		public _UNNAMED_28795 e2
		{
			get
			{
				_UNNAMED_28795 returnValue = new _UNNAMED_28795(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_28805
 
	public class _UNNAMED_28805
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28805(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28805"": [ 8, {
				 ""PteFrame"": [ 0, [ ""BitField"", ""{\""end_bit\"":36,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""Channel"": [ 0, [ ""BitField"", ""{\""end_bit\"":38,\""start_bit\"":36,\""target\"":\""UInt64\""}"" ]],
				 ""Unused1"": [ 0, [ ""BitField"", ""{\""end_bit\"":39,\""start_bit\"":38,\""target\"":\""UInt64\""}"" ]],
				 ""Unused2"": [ 0, [ ""BitField"", ""{\""end_bit\"":40,\""start_bit\"":39,\""target\"":\""UInt64\""}"" ]],
				 ""Unused3"": [ 0, [ ""BitField"", ""{\""end_bit\"":53,\""start_bit\"":40,\""target\"":\""UInt64\""}"" ]],
				 ""PfnExists"": [ 0, [ ""BitField"", ""{\""end_bit\"":54,\""start_bit\"":53,\""target\"":\""UInt64\""}"" ]],
				 ""PageIdentity"": [ 0, [ ""BitField"", ""{\""end_bit\"":57,\""start_bit\"":54,\""target\"":\""UInt64\""}"" ]],
				 ""PrototypePte"": [ 0, [ ""BitField"", ""{\""end_bit\"":58,\""start_bit\"":57,\""target\"":\""UInt64\""}"" ]],
				 ""PageColor"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":58,\""target\"":\""UInt64\""}"" ]],
				 ""EntireField"": [ 0, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 PteFrame
		{
			get
			{
				// start: 0  end: 36  Mask: 000011111111111111111111111111111111
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967295) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 Channel
		{
			get
			{
				// start: 36  end: 38  Mask: 00000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 36;
				return (UInt64)value2;
			}
		}
		public UInt64 Unused1
		{
			get
			{
				// start: 38  end: 39  Mask: 000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 38;
				return (UInt64)value2;
			}
		}
		public UInt64 Unused2
		{
			get
			{
				// start: 39  end: 40  Mask: 0000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 39;
				return (UInt64)value2;
			}
		}
		public UInt64 Unused3
		{
			get
			{
				// start: 40  end: 53  Mask: 00000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 40;
				return (UInt64)value2;
			}
		}
		public UInt64 PfnExists
		{
			get
			{
				// start: 53  end: 54  Mask: 000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 53;
				return (UInt64)value2;
			}
		}
		public UInt64 PageIdentity
		{
			get
			{
				// start: 54  end: 57  Mask: 000000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 54;
				return (UInt64)value2;
			}
		}
		public UInt64 PrototypePte
		{
			get
			{
				// start: 57  end: 58  Mask: 0000000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 57;
				return (UInt64)value2;
			}
		}
		public UInt64 PageColor
		{
			get
			{
				// start: 58  end: 64  Mask: 0000000000000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 58;
				return (UInt64)value2;
			}
		}
		public UInt64 EntireField { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _MMPFN
 
	public class _MMPFN
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMPFN(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMPFN"": [ 48, {
				 ""u1"": [ 0, [ ""_UNNAMED_28778"", ""null"" ]],
				 ""u2"": [ 8, [ ""_UNNAMED_28787"", ""null"" ]],
				 ""PteAddress"": [ 16, [ ""Pointer"", ""{\""target\"":\""_MMPTE\""}"" ]],
				 ""VolatilePteAddress"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Lock"": [ 16, [ ""Int32"", ""null"" ]],
				 ""PteLong"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""u3"": [ 24, [ ""_UNNAMED_28800"", ""null"" ]],
				 ""NodeBlinkLow"": [ 28, [ ""UInt16"", ""null"" ]],
				 ""Unused"": [ 30, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""VaType"": [ 30, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""ViewCount"": [ 31, [ ""Byte"", ""null"" ]],
				 ""NodeFlinkLow"": [ 31, [ ""Byte"", ""null"" ]],
				 ""OriginalPte"": [ 32, [ ""_MMPTE"", ""null"" ]],
				 ""u4"": [ 40, [ ""_UNNAMED_28805"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_28778 u1
		{
			get
			{
				_UNNAMED_28778 returnValue = new _UNNAMED_28778(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_28787 u2
		{
			get
			{
				_UNNAMED_28787 returnValue = new _UNNAMED_28787(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt64 PteAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 VolatilePteAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public Int32 Lock { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 16); } }
		public UInt64 PteLong { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public _UNNAMED_28800 u3
		{
			get
			{
				_UNNAMED_28800 returnValue = new _UNNAMED_28800(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt16 NodeBlinkLow { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 28); } }
		public Byte Unused
		{
			get
			{
				// start: 0  end: 4  Mask: 0000000000001111
				Byte value = _StructureData[_BufferOffset + 30];
				var value2 = (value & 15) >> 0;
				return (Byte)value2;
			}
		}
		public Byte VaType
		{
			get
			{
				// start: 4  end: 8  Mask: 0000000011110000
				Byte value = _StructureData[_BufferOffset + 30];
				var value2 = (value & 240) >> 4;
				return (Byte)value2;
			}
		}
		public Byte ViewCount{ get { return _StructureData[_BufferOffset +31]; } }
		public Byte NodeFlinkLow{ get { return _StructureData[_BufferOffset +31]; } }
		public _MMPTE OriginalPte
		{
			get
			{
				_MMPTE returnValue = new _MMPTE(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public _UNNAMED_28805 u4
		{
			get
			{
				_UNNAMED_28805 returnValue = new _UNNAMED_28805(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MI_SYSTEM_PTE_TYPE
 
	public class _MI_SYSTEM_PTE_TYPE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MI_SYSTEM_PTE_TYPE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 104; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MI_SYSTEM_PTE_TYPE"": [ 104, {
				 ""Bitmap"": [ 0, [ ""_RTL_BITMAP_EX"", ""null"" ]],
				 ""BasePte"": [ 16, [ ""Pointer"", ""{\""target\"":\""_MMPTE\""}"" ]],
				 ""Flags"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""VaType"": [ 28, [ ""Enumeration"", ""{\""enum_name\"":\""_MI_SYSTEM_VA_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""FailureCount"": [ 32, [ ""Pointer"", ""{\""target\"":\""unsigned long\""}"" ]],
				 ""PteFailures"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""SpinLock"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""GlobalMutex"": [ 48, [ ""Pointer"", ""{\""target\"":\""_FAST_MUTEX\""}"" ]],
				 ""Vm"": [ 56, [ ""Pointer"", ""{\""target\"":\""_MMSUPPORT\""}"" ]],
				 ""TotalSystemPtes"": [ 64, [ ""UInt64"", ""null"" ]],
				 ""Hint"": [ 72, [ ""UInt64"", ""null"" ]],
				 ""CachedPtes"": [ 80, [ ""Pointer"", ""{\""target\"":\""_MI_CACHED_PTE\""}"" ]],
				 ""TotalFreeSystemPtes"": [ 88, [ ""UInt64"", ""null"" ]],
				 ""CachedPteCount"": [ 96, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _RTL_BITMAP_EX Bitmap
		{
			get
			{
				_RTL_BITMAP_EX returnValue = new _RTL_BITMAP_EX(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 BasePte { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public _MI_SYSTEM_VA_TYPE VaType { get { return (_MI_SYSTEM_VA_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt64 FailureCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt32 PteFailures { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt64 SpinLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 GlobalMutex { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 Vm { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 TotalSystemPtes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 Hint { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 CachedPtes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 TotalFreeSystemPtes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public Int32 CachedPteCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 96); } }
	}
	#endregion
	#region _UNNAMED_28850
 
	public class _UNNAMED_28850
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28850(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28850"": [ 8, {
				 ""VirtualAddress"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Long"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""e1"": [ 0, [ ""_MMWSLENTRY"", ""null"" ]],
				 ""e2"": [ 0, [ ""_MMWSLE_FREE_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 VirtualAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Long { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _MMWSLENTRY e1
		{
			get
			{
				_MMWSLENTRY returnValue = new _MMWSLENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _MMWSLE_FREE_ENTRY e2
		{
			get
			{
				_MMWSLE_FREE_ENTRY returnValue = new _MMWSLE_FREE_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MMWSLE
 
	public class _MMWSLE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMWSLE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMWSLE"": [ 8, {
				 ""u1"": [ 0, [ ""_UNNAMED_28850"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_28850 u1
		{
			get
			{
				_UNNAMED_28850 returnValue = new _UNNAMED_28850(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MMWSL
 
	public class _MMWSL
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMWSL(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 800; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMWSL"": [ 800, {
				 ""FirstFree"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""FirstDynamic"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""LastEntry"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""NextSlot"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""LastInitializedWsle"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""NextAgingSlot"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""NextAccessClearingSlot"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""LastAccessClearingRemainder"": [ 56, [ ""UInt32"", ""null"" ]],
				 ""LastAgingRemainder"": [ 60, [ ""UInt32"", ""null"" ]],
				 ""WsleSize"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""NonDirectCount"": [ 72, [ ""UInt64"", ""null"" ]],
				 ""LowestPagableAddress"": [ 80, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""NonDirectHash"": [ 88, [ ""Pointer"", ""{\""target\"":\""_MMWSLE_NONDIRECT_HASH\""}"" ]],
				 ""HashTableStart"": [ 96, [ ""Pointer"", ""{\""target\"":\""_MMWSLE_HASH\""}"" ]],
				 ""HighestPermittedHashAddress"": [ 104, [ ""Pointer"", ""{\""target\"":\""_MMWSLE_HASH\""}"" ]],
				 ""ActiveWsleCounts"": [ 112, [ ""Array"", ""{\""count\"":16,\""target\"":\""UInt64\""}"" ]],
				 ""ActiveWsles"": [ 240, [ ""Array"", ""{\""count\"":16,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""Wsle"": [ 496, [ ""Pointer"", ""{\""target\"":\""_MMWSLE\""}"" ]],
				 ""UserVaInfo"": [ 504, [ ""_MI_USER_VA_INFO"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 FirstFree { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 FirstDynamic { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 LastEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 NextSlot { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 LastInitializedWsle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 NextAgingSlot { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 NextAccessClearingSlot { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt32 LastAccessClearingRemainder { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public UInt32 LastAgingRemainder { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
		public UInt32 WsleSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt64 NonDirectCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 LowestPagableAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 NonDirectHash { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 HashTableStart { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt64 HighestPermittedHashAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public UInt64[] ActiveWsleCounts
		{
			get
			{
				UInt64[] returnValue = new UInt64[16];
				for(int i=0; i<16; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 112);
				return returnValue;
			}
		}
		public _MI_ACTIVE_WSLE_LISTHEAD[] ActiveWsles
		{
			get
			{
				_MI_ACTIVE_WSLE_LISTHEAD[] returnValue = new _MI_ACTIVE_WSLE_LISTHEAD[16];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<16; i++ )
					returnValue[i] = new _MI_ACTIVE_WSLE_LISTHEAD(_StructureData, (i * size) + _BufferOffset + 240);
				return returnValue;
			}
		}
		public UInt64 Wsle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 496); } }
		public _MI_USER_VA_INFO UserVaInfo
		{
			get
			{
				_MI_USER_VA_INFO returnValue = new _MI_USER_VA_INFO(_StructureData, _BufferOffset + 504);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MMSUPPORT
 
	public class _MMSUPPORT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMSUPPORT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 232; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMSUPPORT"": [ 232, {
				 ""ExitGate"": [ 0, [ ""Pointer"", ""{\""target\"":\""_KGATE\""}"" ]],
				 ""AccessLog"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""WorkingSetMutex"": [ 16, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""WorkingSetExpansionLinks"": [ 24, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""AgeDistribution"": [ 40, [ ""Array"", ""{\""count\"":7,\""target\"":\""UInt64\""}"" ]],
				 ""MinimumWorkingSetSize"": [ 96, [ ""UInt64"", ""null"" ]],
				 ""WorkingSetLeafSize"": [ 104, [ ""UInt64"", ""null"" ]],
				 ""WorkingSetLeafPrivateSize"": [ 112, [ ""UInt64"", ""null"" ]],
				 ""WorkingSetSize"": [ 120, [ ""UInt64"", ""null"" ]],
				 ""WorkingSetPrivateSize"": [ 128, [ ""UInt64"", ""null"" ]],
				 ""MaximumWorkingSetSize"": [ 136, [ ""UInt64"", ""null"" ]],
				 ""ChargedWslePages"": [ 144, [ ""UInt64"", ""null"" ]],
				 ""ActualWslePages"": [ 152, [ ""UInt64"", ""null"" ]],
				 ""WorkingSetSizeOverhead"": [ 160, [ ""UInt64"", ""null"" ]],
				 ""PeakWorkingSetSize"": [ 168, [ ""UInt64"", ""null"" ]],
				 ""HardFaultCount"": [ 176, [ ""UInt32"", ""null"" ]],
				 ""VmWorkingSetList"": [ 184, [ ""Pointer"", ""{\""target\"":\""_MMWSL\""}"" ]],
				 ""NextPageColor"": [ 192, [ ""UInt16"", ""null"" ]],
				 ""LastTrimStamp"": [ 194, [ ""UInt16"", ""null"" ]],
				 ""PageFaultCount"": [ 196, [ ""UInt32"", ""null"" ]],
				 ""TrimmedPageCount"": [ 200, [ ""UInt64"", ""null"" ]],
				 ""ForceTrimPages"": [ 208, [ ""UInt64"", ""null"" ]],
				 ""Flags"": [ 216, [ ""_MMSUPPORT_FLAGS"", ""null"" ]],
				 ""WsSwapSupport"": [ 224, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ExitGate { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 AccessLog { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _EX_PUSH_LOCK WorkingSetMutex
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _LIST_ENTRY WorkingSetExpansionLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt64[] AgeDistribution
		{
			get
			{
				UInt64[] returnValue = new UInt64[7];
				for(int i=0; i<7; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 40);
				return returnValue;
			}
		}
		public UInt64 MinimumWorkingSetSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt64 WorkingSetLeafSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public UInt64 WorkingSetLeafPrivateSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 112); } }
		public UInt64 WorkingSetSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 120); } }
		public UInt64 WorkingSetPrivateSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 128); } }
		public UInt64 MaximumWorkingSetSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 136); } }
		public UInt64 ChargedWslePages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 144); } }
		public UInt64 ActualWslePages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 152); } }
		public UInt64 WorkingSetSizeOverhead { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public UInt64 PeakWorkingSetSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 168); } }
		public UInt32 HardFaultCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 176); } }
		public UInt64 VmWorkingSetList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 184); } }
		public UInt16 NextPageColor { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 192); } }
		public UInt16 LastTrimStamp { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 194); } }
		public UInt32 PageFaultCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 196); } }
		public UInt64 TrimmedPageCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 200); } }
		public UInt64 ForceTrimPages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 208); } }
		public _MMSUPPORT_FLAGS Flags
		{
			get
			{
				_MMSUPPORT_FLAGS returnValue = new _MMSUPPORT_FLAGS(_StructureData, _BufferOffset + 216);
				return returnValue;
			}
		}
		public UInt64 WsSwapSupport { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 224); } }
	}
	#endregion
	#region _UNNAMED_28916
 
	public class _UNNAMED_28916
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28916(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28916"": [ 4, {
				 ""LongFlags"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Flags"": [ 0, [ ""_MMSECTION_FLAGS"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 LongFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _MMSECTION_FLAGS Flags
		{
			get
			{
				_MMSECTION_FLAGS returnValue = new _MMSECTION_FLAGS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_28920
 
	public class _UNNAMED_28920
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28920(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28920"": [ 16, {
				 ""NumberOfSystemCacheViews"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ImageRelocationStartBit"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""WritableUserReferences"": [ 4, [ ""Int32"", ""null"" ]],
				 ""ImageRelocationSizeIn64k"": [ 4, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""Unused"": [ 4, [ ""BitField"", ""{\""end_bit\"":28,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""CantMove"": [ 4, [ ""BitField"", ""{\""end_bit\"":29,\""start_bit\"":28,\""target\"":\""UInt32\""}"" ]],
				 ""BitMap"": [ 4, [ ""BitField"", ""{\""end_bit\"":31,\""start_bit\"":29,\""target\"":\""UInt32\""}"" ]],
				 ""ImageActive"": [ 4, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":31,\""target\"":\""UInt32\""}"" ]],
				 ""FlushInProgressCount"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""NumberOfSubsections"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""SeImageStub"": [ 8, [ ""Pointer"", ""{\""target\"":\""_MI_IMAGE_SECURITY_REFERENCE\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 NumberOfSystemCacheViews { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 ImageRelocationStartBit { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Int32 WritableUserReferences { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 ImageRelocationSizeIn64k
		{
			get
			{
				// start: 0  end: 16  Mask: 1111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 65535) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 Unused
		{
			get
			{
				// start: 16  end: 28  Mask: 1111111111110000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 268369920) >> 16;
				return (UInt32)value2;
			}
		}
		public UInt32 CantMove
		{
			get
			{
				// start: 28  end: 29  Mask: 10000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 268435456) >> 28;
				return (UInt32)value2;
			}
		}
		public UInt32 BitMap
		{
			get
			{
				// start: 29  end: 31  Mask: 1100000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 1610612736) >> 29;
				return (UInt32)value2;
			}
		}
		public UInt32 ImageActive
		{
			get
			{
				// start: 31  end: 32  Mask: 10000000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 2147483648) >> 31;
				return (UInt32)value2;
			}
		}
		public UInt32 FlushInProgressCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 NumberOfSubsections { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt64 SeImageStub { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_28934
 
	public class _UNNAMED_28934
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_28934(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_28934"": [ 16, {
				 ""e2"": [ 0, [ ""_UNNAMED_28920"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_28920 e2
		{
			get
			{
				_UNNAMED_28920 returnValue = new _UNNAMED_28920(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _CONTROL_AREA
 
	public class _CONTROL_AREA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CONTROL_AREA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 120; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CONTROL_AREA"": [ 120, {
				 ""Segment"": [ 0, [ ""Pointer"", ""{\""target\"":\""_SEGMENT\""}"" ]],
				 ""ListHead"": [ 8, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""NumberOfSectionReferences"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""NumberOfPfnReferences"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""NumberOfMappedViews"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""NumberOfUserReferences"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""u"": [ 56, [ ""_UNNAMED_28916"", ""null"" ]],
				 ""FilePointer"": [ 64, [ ""_EX_FAST_REF"", ""null"" ]],
				 ""ControlAreaLock"": [ 72, [ ""Int32"", ""null"" ]],
				 ""ModifiedWriteCount"": [ 76, [ ""UInt32"", ""null"" ]],
				 ""WaitList"": [ 80, [ ""Pointer"", ""{\""target\"":\""_MI_CONTROL_AREA_WAIT_BLOCK\""}"" ]],
				 ""u2"": [ 88, [ ""_UNNAMED_28934"", ""null"" ]],
				 ""LockedPages"": [ 104, [ ""UInt64"", ""null"" ]],
				 ""FileObjectLock"": [ 112, [ ""_EX_PUSH_LOCK"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Segment { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _LIST_ENTRY ListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt64 NumberOfSectionReferences { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 NumberOfPfnReferences { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 NumberOfMappedViews { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 NumberOfUserReferences { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public _UNNAMED_28916 u
		{
			get
			{
				_UNNAMED_28916 returnValue = new _UNNAMED_28916(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public _EX_FAST_REF FilePointer
		{
			get
			{
				_EX_FAST_REF returnValue = new _EX_FAST_REF(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public Int32 ControlAreaLock { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 72); } }
		public UInt32 ModifiedWriteCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 76); } }
		public UInt64 WaitList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public _UNNAMED_28934 u2
		{
			get
			{
				_UNNAMED_28934 returnValue = new _UNNAMED_28934(_StructureData, _BufferOffset + 88);
				return returnValue;
			}
		}
		public UInt64 LockedPages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public _EX_PUSH_LOCK FileObjectLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 112);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MM_STORE_KEY
 
	public class _MM_STORE_KEY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MM_STORE_KEY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MM_STORE_KEY"": [ 8, {
				 ""KeyLow"": [ 0, [ ""BitField"", ""{\""end_bit\"":60,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""KeyHigh"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":60,\""target\"":\""UInt64\""}"" ]],
				 ""EntireKey"": [ 0, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 KeyLow
		{
			get
			{
				// start: 0  end: 60  Mask: 000000000000000000000000000011111111111111111111111111111111
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967295) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 KeyHigh
		{
			get
			{
				// start: 60  end: 64  Mask: 0000000000000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 60;
				return (UInt64)value2;
			}
		}
		public UInt64 EntireKey { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _MMPAGING_FILE
 
	public class _MMPAGING_FILE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMPAGING_FILE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 224; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMPAGING_FILE"": [ 224, {
				 ""Size"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""MaximumSize"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""MinimumSize"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""FreeSpace"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""PeakUsage"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""HighestPage"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""FreeReservationSpace"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""LargestReserveCluster"": [ 56, [ ""UInt64"", ""null"" ]],
				 ""File"": [ 64, [ ""Pointer"", ""{\""target\"":\""_FILE_OBJECT\""}"" ]],
				 ""Entry"": [ 72, [ ""Array"", ""{\""count\"":2,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""_MMMOD_WRITER_MDL_ENTRY\""}}"" ]],
				 ""PfnsToFree"": [ 96, [ ""_SLIST_HEADER"", ""null"" ]],
				 ""PageFileName"": [ 112, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""Bitmaps"": [ 128, [ ""Pointer"", ""{\""target\"":\""_MI_PAGING_FILE_SPACE_BITMAPS\""}"" ]],
				 ""AllocationBitmapHint"": [ 136, [ ""UInt32"", ""null"" ]],
				 ""ReservationBitmapHint"": [ 140, [ ""UInt32"", ""null"" ]],
				 ""LargestNonReservedClusterSize"": [ 144, [ ""UInt32"", ""null"" ]],
				 ""RefreshClusterSize"": [ 148, [ ""UInt32"", ""null"" ]],
				 ""LastRefreshClusterSize"": [ 152, [ ""UInt32"", ""null"" ]],
				 ""ReservedClusterSizeAggregate"": [ 156, [ ""UInt32"", ""null"" ]],
				 ""ToBeEvictedCount"": [ 160, [ ""UInt32"", ""null"" ]],
				 ""HybridPriority"": [ 164, [ ""UInt32"", ""null"" ]],
				 ""PageFileNumber"": [ 168, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""BootPartition"": [ 168, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt16\""}"" ]],
				 ""WsSwapPagefile"": [ 168, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt16\""}"" ]],
				 ""NoReservations"": [ 168, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt16\""}"" ]],
				 ""Spare0"": [ 168, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":7,\""target\"":\""UInt16\""}"" ]],
				 ""AdriftMdls"": [ 170, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""Spare1"": [ 170, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""Spare2"": [ 171, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""PageHashPages"": [ 172, [ ""UInt32"", ""null"" ]],
				 ""PageHashPagesPeak"": [ 176, [ ""UInt32"", ""null"" ]],
				 ""PageHash"": [ 184, [ ""Pointer"", ""{\""target\"":\""unsigned long\""}"" ]],
				 ""FileHandle"": [ 192, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Lock"": [ 200, [ ""UInt64"", ""null"" ]],
				 ""LockOwner"": [ 208, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Size { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 MaximumSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 MinimumSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 FreeSpace { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 PeakUsage { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 HighestPage { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 FreeReservationSpace { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 LargestReserveCluster { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 File { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64[] Entry
		{
			get
			{
				UInt64[] returnValue = new UInt64[2];
				int size = 8;
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 72);
				return returnValue;
			}
		}
		public _SLIST_HEADER PfnsToFree
		{
			get
			{
				_SLIST_HEADER returnValue = new _SLIST_HEADER(_StructureData, _BufferOffset + 96);
				return returnValue;
			}
		}
		public _UNICODE_STRING PageFileName
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 112);
				return returnValue;
			}
		}
		public UInt64 Bitmaps { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 128); } }
		public UInt32 AllocationBitmapHint { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 136); } }
		public UInt32 ReservationBitmapHint { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 140); } }
		public UInt32 LargestNonReservedClusterSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 144); } }
		public UInt32 RefreshClusterSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 148); } }
		public UInt32 LastRefreshClusterSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 152); } }
		public UInt32 ReservedClusterSizeAggregate { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 156); } }
		public UInt32 ToBeEvictedCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 160); } }
		public UInt32 HybridPriority { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 164); } }
		public UInt16 PageFileNumber
		{
			get
			{
				// start: 0  end: 4  Mask: 0000000000001111
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 168);
				var value2 = (value & 15) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 BootPartition
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 168);
				var value2 = (value & 16) >> 4;
				return (UInt16)value2;
			}
		}
		public UInt16 WsSwapPagefile
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 168);
				var value2 = (value & 32) >> 5;
				return (UInt16)value2;
			}
		}
		public UInt16 NoReservations
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 168);
				var value2 = (value & 64) >> 6;
				return (UInt16)value2;
			}
		}
		public UInt16 Spare0
		{
			get
			{
				// start: 7  end: 16  Mask: 1111111110000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 168);
				var value2 = (value & 65408) >> 7;
				return (UInt16)value2;
			}
		}
		public Byte AdriftMdls
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 170];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte Spare1
		{
			get
			{
				// start: 1  end: 8  Mask: 0000000011111110
				Byte value = _StructureData[_BufferOffset + 170];
				var value2 = (value & 254) >> 1;
				return (Byte)value2;
			}
		}
		public Byte Spare2
		{
			get
			{
				// start: 0  end: 8  Mask: 0000000011111111
				Byte value = _StructureData[_BufferOffset + 171];
				var value2 = (value & 255) >> 0;
				return (Byte)value2;
			}
		}
		public UInt32 PageHashPages { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 172); } }
		public UInt32 PageHashPagesPeak { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 176); } }
		public UInt64 PageHash { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 184); } }
		public UInt64 FileHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 192); } }
		public UInt64 Lock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 200); } }
		public UInt64 LockOwner { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 208); } }
	}
	#endregion
	#region _MI_PAGING_FILE_SPACE_BITMAPS
 
	public class _MI_PAGING_FILE_SPACE_BITMAPS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MI_PAGING_FILE_SPACE_BITMAPS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MI_PAGING_FILE_SPACE_BITMAPS"": [ 48, {
				 ""RefCount"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Anchor"": [ 0, [ ""Pointer"", ""{\""target\"":\""_MI_PAGING_FILE_SPACE_BITMAPS\""}"" ]],
				 ""AllocationBitmap"": [ 8, [ ""_RTL_BITMAP"", ""null"" ]],
				 ""ReservationBitmap"": [ 24, [ ""_RTL_BITMAP"", ""null"" ]],
				 ""EvictStoreBitmap"": [ 40, [ ""Pointer"", ""{\""target\"":\""_RTL_BITMAP\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 RefCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 Anchor { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _RTL_BITMAP AllocationBitmap
		{
			get
			{
				_RTL_BITMAP returnValue = new _RTL_BITMAP(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _RTL_BITMAP ReservationBitmap
		{
			get
			{
				_RTL_BITMAP returnValue = new _RTL_BITMAP(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt64 EvictStoreBitmap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
	}
	#endregion
	#region tagSWITCH_CONTEXT
 
	public class tagSWITCH_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public tagSWITCH_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 96; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""tagSWITCH_CONTEXT"": [ 96, {
				 ""Attribute"": [ 0, [ ""tagSWITCH_CONTEXT_ATTRIBUTE"", ""null"" ]],
				 ""Data"": [ 24, [ ""tagSWITCH_CONTEXT_DATA"", ""null"" ]] }]
				 }
				)";
			}
		}
		public tagSWITCH_CONTEXT_ATTRIBUTE Attribute
		{
			get
			{
				tagSWITCH_CONTEXT_ATTRIBUTE returnValue = new tagSWITCH_CONTEXT_ATTRIBUTE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public tagSWITCH_CONTEXT_DATA Data
		{
			get
			{
				tagSWITCH_CONTEXT_DATA returnValue = new tagSWITCH_CONTEXT_DATA(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_29011
 
	public class _UNNAMED_29011
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_29011(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_29011"": [ 12, {
				 ""Failure"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""_CM_LOAD_FAILURE_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""Status"": [ 4, [ ""Int32"", ""null"" ]],
				 ""Point"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _CM_LOAD_FAILURE_TYPE Failure { get { return (_CM_LOAD_FAILURE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Int32 Status { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 Point { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_29015
 
	public class _UNNAMED_29015
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_29015(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_29015"": [ 24, {
				 ""Action"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Handle"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Status"": [ 16, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Action { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 Handle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public Int32 Status { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _UNNAMED_29019
 
	public class _UNNAMED_29019
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_29019(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_29019"": [ 8, {
				 ""CheckStack"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 CheckStack { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_29021
 
	public class _UNNAMED_29021
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_29021(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_29021"": [ 32, {
				 ""Cell"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""CellPoint"": [ 8, [ ""Pointer"", ""{\""target\"":\""_CELL_DATA\""}"" ]],
				 ""RootPoint"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Index"": [ 24, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Cell { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 CellPoint { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 RootPoint { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 Index { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _UNNAMED_29028
 
	public class _UNNAMED_29028
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_29028(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_29028"": [ 24, {
				 ""List"": [ 0, [ ""Pointer"", ""{\""target\"":\""_CELL_DATA\""}"" ]],
				 ""Index"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Cell"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""CellPoint"": [ 16, [ ""Pointer"", ""{\""target\"":\""_CELL_DATA\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 List { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 Index { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Cell { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt64 CellPoint { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _UNNAMED_29033
 
	public class _UNNAMED_29033
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_29033(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_29033"": [ 16, {
				 ""Space"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""MapPoint"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""BinPoint"": [ 8, [ ""Pointer"", ""{\""target\"":\""_HBIN\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Space { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 MapPoint { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 BinPoint { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_29039
 
	public class _UNNAMED_29039
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_29039(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_29039"": [ 16, {
				 ""Bin"": [ 0, [ ""Pointer"", ""{\""target\"":\""_HBIN\""}"" ]],
				 ""CellPoint"": [ 8, [ ""Pointer"", ""{\""target\"":\""_HCELL\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Bin { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 CellPoint { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_29044
 
	public class _UNNAMED_29044
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_29044(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_29044"": [ 4, {
				 ""FileOffset"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 FileOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _HIVE_LOAD_FAILURE
 
	public class _HIVE_LOAD_FAILURE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HIVE_LOAD_FAILURE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 352; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HIVE_LOAD_FAILURE"": [ 352, {
				 ""Hive"": [ 0, [ ""Pointer"", ""{\""target\"":\""_HHIVE\""}"" ]],
				 ""Index"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""RecoverableIndex"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""Locations"": [ 16, [ ""Array"", ""{\""count\"":8,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""RecoverableLocations"": [ 112, [ ""Array"", ""{\""count\"":8,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""RegistryIO"": [ 208, [ ""_UNNAMED_29015"", ""null"" ]],
				 ""CheckRegistry2"": [ 232, [ ""_UNNAMED_29019"", ""null"" ]],
				 ""CheckKey"": [ 240, [ ""_UNNAMED_29021"", ""null"" ]],
				 ""CheckValueList"": [ 272, [ ""_UNNAMED_29028"", ""null"" ]],
				 ""CheckHive"": [ 296, [ ""_UNNAMED_29033"", ""null"" ]],
				 ""CheckHive1"": [ 312, [ ""_UNNAMED_29033"", ""null"" ]],
				 ""CheckBin"": [ 328, [ ""_UNNAMED_29039"", ""null"" ]],
				 ""RecoverData"": [ 344, [ ""_UNNAMED_29044"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Hive { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 Index { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 RecoverableIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public _UNNAMED_29011[] Locations
		{
			get
			{
				_UNNAMED_29011[] returnValue = new _UNNAMED_29011[8];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<8; i++ )
					returnValue[i] = new _UNNAMED_29011(_StructureData, (i * size) + _BufferOffset + 16);
				return returnValue;
			}
		}
		public _UNNAMED_29011[] RecoverableLocations
		{
			get
			{
				_UNNAMED_29011[] returnValue = new _UNNAMED_29011[8];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<8; i++ )
					returnValue[i] = new _UNNAMED_29011(_StructureData, (i * size) + _BufferOffset + 112);
				return returnValue;
			}
		}
		public _UNNAMED_29015 RegistryIO
		{
			get
			{
				_UNNAMED_29015 returnValue = new _UNNAMED_29015(_StructureData, _BufferOffset + 208);
				return returnValue;
			}
		}
		public _UNNAMED_29019 CheckRegistry2
		{
			get
			{
				_UNNAMED_29019 returnValue = new _UNNAMED_29019(_StructureData, _BufferOffset + 232);
				return returnValue;
			}
		}
		public _UNNAMED_29021 CheckKey
		{
			get
			{
				_UNNAMED_29021 returnValue = new _UNNAMED_29021(_StructureData, _BufferOffset + 240);
				return returnValue;
			}
		}
		public _UNNAMED_29028 CheckValueList
		{
			get
			{
				_UNNAMED_29028 returnValue = new _UNNAMED_29028(_StructureData, _BufferOffset + 272);
				return returnValue;
			}
		}
		public _UNNAMED_29033 CheckHive
		{
			get
			{
				_UNNAMED_29033 returnValue = new _UNNAMED_29033(_StructureData, _BufferOffset + 296);
				return returnValue;
			}
		}
		public _UNNAMED_29033 CheckHive1
		{
			get
			{
				_UNNAMED_29033 returnValue = new _UNNAMED_29033(_StructureData, _BufferOffset + 312);
				return returnValue;
			}
		}
		public _UNNAMED_29039 CheckBin
		{
			get
			{
				_UNNAMED_29039 returnValue = new _UNNAMED_29039(_StructureData, _BufferOffset + 328);
				return returnValue;
			}
		}
		public _UNNAMED_29044 RecoverData
		{
			get
			{
				_UNNAMED_29044 returnValue = new _UNNAMED_29044(_StructureData, _BufferOffset + 344);
				return returnValue;
			}
		}
	}
	#endregion
	#region _PCW_COUNTER_DESCRIPTOR
 
	public class _PCW_COUNTER_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PCW_COUNTER_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PCW_COUNTER_DESCRIPTOR"": [ 8, {
				 ""Id"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""StructIndex"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Offset"": [ 4, [ ""UInt16"", ""null"" ]],
				 ""Size"": [ 6, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Id { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 StructIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt16 Offset { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 4); } }
		public UInt16 Size { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
	}
	#endregion
	#region _PCW_REGISTRATION
 
	public class _PCW_REGISTRATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PCW_REGISTRATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PCW_REGISTRATION"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _PCW_REGISTRATION_INFORMATION
 
	public class _PCW_REGISTRATION_INFORMATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PCW_REGISTRATION_INFORMATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PCW_REGISTRATION_INFORMATION"": [ 48, {
				 ""Version"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Name"": [ 8, [ ""Pointer"", ""{\""target\"":\""_UNICODE_STRING\""}"" ]],
				 ""CounterCount"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""Counters"": [ 24, [ ""Pointer"", ""{\""target\"":\""_PCW_COUNTER_DESCRIPTOR\""}"" ]],
				 ""Callback"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CallbackContext"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Version { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 Name { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 CounterCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt64 Counters { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 Callback { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 CallbackContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
	}
	#endregion
	#region _PCW_PROCESSOR_INFO
 
	public class _PCW_PROCESSOR_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PCW_PROCESSOR_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 184; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PCW_PROCESSOR_INFO"": [ 184, {
				 ""IdleTime"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""AvailableTime"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""UserTime"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""KernelTime"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""Interrupts"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""DpcTime"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""InterruptTime"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""ClockInterrupts"": [ 56, [ ""UInt32"", ""null"" ]],
				 ""DpcCount"": [ 60, [ ""UInt32"", ""null"" ]],
				 ""DpcRate"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""C1Time"": [ 72, [ ""UInt64"", ""null"" ]],
				 ""C2Time"": [ 80, [ ""UInt64"", ""null"" ]],
				 ""C3Time"": [ 88, [ ""UInt64"", ""null"" ]],
				 ""C1Transitions"": [ 96, [ ""UInt64"", ""null"" ]],
				 ""C2Transitions"": [ 104, [ ""UInt64"", ""null"" ]],
				 ""C3Transitions"": [ 112, [ ""UInt64"", ""null"" ]],
				 ""ParkingStatus"": [ 120, [ ""UInt32"", ""null"" ]],
				 ""CurrentFrequency"": [ 124, [ ""UInt32"", ""null"" ]],
				 ""PercentMaxFrequency"": [ 128, [ ""UInt32"", ""null"" ]],
				 ""StateFlags"": [ 132, [ ""UInt32"", ""null"" ]],
				 ""NominalThroughput"": [ 136, [ ""UInt32"", ""null"" ]],
				 ""ActiveThroughput"": [ 140, [ ""UInt32"", ""null"" ]],
				 ""ScaledThroughput"": [ 144, [ ""UInt64"", ""null"" ]],
				 ""ScaledKernelThroughput"": [ 152, [ ""UInt64"", ""null"" ]],
				 ""AverageIdleTime"": [ 160, [ ""UInt64"", ""null"" ]],
				 ""IdleBreakEvents"": [ 168, [ ""UInt64"", ""null"" ]],
				 ""PerformanceLimit"": [ 176, [ ""UInt32"", ""null"" ]],
				 ""PerformanceLimitFlags"": [ 180, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 IdleTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 AvailableTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 UserTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 KernelTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt32 Interrupts { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt64 DpcTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 InterruptTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt32 ClockInterrupts { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public UInt32 DpcCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
		public UInt32 DpcRate { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt64 C1Time { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 C2Time { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 C3Time { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 C1Transitions { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt64 C2Transitions { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public UInt64 C3Transitions { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 112); } }
		public UInt32 ParkingStatus { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 120); } }
		public UInt32 CurrentFrequency { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 124); } }
		public UInt32 PercentMaxFrequency { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 128); } }
		public UInt32 StateFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 132); } }
		public UInt32 NominalThroughput { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 136); } }
		public UInt32 ActiveThroughput { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 140); } }
		public UInt64 ScaledThroughput { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 144); } }
		public UInt64 ScaledKernelThroughput { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 152); } }
		public UInt64 AverageIdleTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public UInt64 IdleBreakEvents { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 168); } }
		public UInt32 PerformanceLimit { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 176); } }
		public UInt32 PerformanceLimitFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 180); } }
	}
	#endregion
	#region _PCW_INSTANCE
 
	public class _PCW_INSTANCE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PCW_INSTANCE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PCW_INSTANCE"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _PCW_DATA
 
	public class _PCW_DATA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PCW_DATA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PCW_DATA"": [ 16, {
				 ""Data"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Size"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Data { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 Size { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _PCW_BUFFER
 
	public class _PCW_BUFFER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PCW_BUFFER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PCW_BUFFER"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _SYNCH_COUNTERS
 
	public class _SYNCH_COUNTERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SYNCH_COUNTERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 184; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SYNCH_COUNTERS"": [ 184, {
				 ""SpinLockAcquireCount"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""SpinLockContentionCount"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""SpinLockSpinCount"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""IpiSendRequestBroadcastCount"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""IpiSendRequestRoutineCount"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""IpiSendSoftwareInterruptCount"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""ExInitializeResourceCount"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""ExReInitializeResourceCount"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""ExDeleteResourceCount"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""ExecutiveResourceAcquiresCount"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""ExecutiveResourceContentionsCount"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""ExecutiveResourceReleaseExclusiveCount"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""ExecutiveResourceReleaseSharedCount"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""ExecutiveResourceConvertsCount"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResExclusiveAttempts"": [ 56, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResExclusiveAcquiresExclusive"": [ 60, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResExclusiveAcquiresExclusiveRecursive"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResExclusiveWaits"": [ 68, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResExclusiveNotAcquires"": [ 72, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResSharedAttempts"": [ 76, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResSharedAcquiresExclusive"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResSharedAcquiresShared"": [ 84, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResSharedAcquiresSharedRecursive"": [ 88, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResSharedWaits"": [ 92, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResSharedNotAcquires"": [ 96, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResSharedStarveExclusiveAttempts"": [ 100, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResSharedStarveExclusiveAcquiresExclusive"": [ 104, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResSharedStarveExclusiveAcquiresShared"": [ 108, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResSharedStarveExclusiveAcquiresSharedRecursive"": [ 112, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResSharedStarveExclusiveWaits"": [ 116, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResSharedStarveExclusiveNotAcquires"": [ 120, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResSharedWaitForExclusiveAttempts"": [ 124, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResSharedWaitForExclusiveAcquiresExclusive"": [ 128, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResSharedWaitForExclusiveAcquiresShared"": [ 132, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResSharedWaitForExclusiveAcquiresSharedRecursive"": [ 136, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResSharedWaitForExclusiveWaits"": [ 140, [ ""UInt32"", ""null"" ]],
				 ""ExAcqResSharedWaitForExclusiveNotAcquires"": [ 144, [ ""UInt32"", ""null"" ]],
				 ""ExSetResOwnerPointerExclusive"": [ 148, [ ""UInt32"", ""null"" ]],
				 ""ExSetResOwnerPointerSharedNew"": [ 152, [ ""UInt32"", ""null"" ]],
				 ""ExSetResOwnerPointerSharedOld"": [ 156, [ ""UInt32"", ""null"" ]],
				 ""ExTryToAcqExclusiveAttempts"": [ 160, [ ""UInt32"", ""null"" ]],
				 ""ExTryToAcqExclusiveAcquires"": [ 164, [ ""UInt32"", ""null"" ]],
				 ""ExBoostExclusiveOwner"": [ 168, [ ""UInt32"", ""null"" ]],
				 ""ExBoostSharedOwners"": [ 172, [ ""UInt32"", ""null"" ]],
				 ""ExEtwSynchTrackingNotificationsCount"": [ 176, [ ""UInt32"", ""null"" ]],
				 ""ExEtwSynchTrackingNotificationsAccountedCount"": [ 180, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 SpinLockAcquireCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 SpinLockContentionCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 SpinLockSpinCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 IpiSendRequestBroadcastCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 IpiSendRequestRoutineCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 IpiSendSoftwareInterruptCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 ExInitializeResourceCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 ExReInitializeResourceCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 ExDeleteResourceCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 ExecutiveResourceAcquiresCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public UInt32 ExecutiveResourceContentionsCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32 ExecutiveResourceReleaseExclusiveCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public UInt32 ExecutiveResourceReleaseSharedCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public UInt32 ExecutiveResourceConvertsCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public UInt32 ExAcqResExclusiveAttempts { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public UInt32 ExAcqResExclusiveAcquiresExclusive { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
		public UInt32 ExAcqResExclusiveAcquiresExclusiveRecursive { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt32 ExAcqResExclusiveWaits { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 68); } }
		public UInt32 ExAcqResExclusiveNotAcquires { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 72); } }
		public UInt32 ExAcqResSharedAttempts { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 76); } }
		public UInt32 ExAcqResSharedAcquiresExclusive { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 ExAcqResSharedAcquiresShared { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
		public UInt32 ExAcqResSharedAcquiresSharedRecursive { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 88); } }
		public UInt32 ExAcqResSharedWaits { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 92); } }
		public UInt32 ExAcqResSharedNotAcquires { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 96); } }
		public UInt32 ExAcqResSharedStarveExclusiveAttempts { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 100); } }
		public UInt32 ExAcqResSharedStarveExclusiveAcquiresExclusive { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 104); } }
		public UInt32 ExAcqResSharedStarveExclusiveAcquiresShared { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 108); } }
		public UInt32 ExAcqResSharedStarveExclusiveAcquiresSharedRecursive { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 112); } }
		public UInt32 ExAcqResSharedStarveExclusiveWaits { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 116); } }
		public UInt32 ExAcqResSharedStarveExclusiveNotAcquires { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 120); } }
		public UInt32 ExAcqResSharedWaitForExclusiveAttempts { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 124); } }
		public UInt32 ExAcqResSharedWaitForExclusiveAcquiresExclusive { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 128); } }
		public UInt32 ExAcqResSharedWaitForExclusiveAcquiresShared { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 132); } }
		public UInt32 ExAcqResSharedWaitForExclusiveAcquiresSharedRecursive { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 136); } }
		public UInt32 ExAcqResSharedWaitForExclusiveWaits { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 140); } }
		public UInt32 ExAcqResSharedWaitForExclusiveNotAcquires { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 144); } }
		public UInt32 ExSetResOwnerPointerExclusive { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 148); } }
		public UInt32 ExSetResOwnerPointerSharedNew { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 152); } }
		public UInt32 ExSetResOwnerPointerSharedOld { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 156); } }
		public UInt32 ExTryToAcqExclusiveAttempts { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 160); } }
		public UInt32 ExTryToAcqExclusiveAcquires { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 164); } }
		public UInt32 ExBoostExclusiveOwner { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 168); } }
		public UInt32 ExBoostSharedOwners { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 172); } }
		public UInt32 ExEtwSynchTrackingNotificationsCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 176); } }
		public UInt32 ExEtwSynchTrackingNotificationsAccountedCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 180); } }
	}
	#endregion
	#region _ETW_PERF_COUNTERS
 
	public class _ETW_PERF_COUNTERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETW_PERF_COUNTERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETW_PERF_COUNTERS"": [ 24, {
				 ""TotalActiveSessions"": [ 0, [ ""Int32"", ""null"" ]],
				 ""TotalBufferMemoryNonPagedPool"": [ 4, [ ""Int32"", ""null"" ]],
				 ""TotalBufferMemoryPagedPool"": [ 8, [ ""Int32"", ""null"" ]],
				 ""TotalGuidsEnabled"": [ 12, [ ""Int32"", ""null"" ]],
				 ""TotalGuidsNotEnabled"": [ 16, [ ""Int32"", ""null"" ]],
				 ""TotalGuidsPreEnabled"": [ 20, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int32 TotalActiveSessions { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public Int32 TotalBufferMemoryNonPagedPool { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 4); } }
		public Int32 TotalBufferMemoryPagedPool { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 8); } }
		public Int32 TotalGuidsEnabled { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 12); } }
		public Int32 TotalGuidsNotEnabled { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 16); } }
		public Int32 TotalGuidsPreEnabled { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 20); } }
	}
	#endregion
	#region _ETW_SESSION_PERF_COUNTERS
 
	public class _ETW_SESSION_PERF_COUNTERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETW_SESSION_PERF_COUNTERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETW_SESSION_PERF_COUNTERS"": [ 24, {
				 ""BufferMemoryPagedPool"": [ 0, [ ""Int32"", ""null"" ]],
				 ""BufferMemoryNonPagedPool"": [ 4, [ ""Int32"", ""null"" ]],
				 ""EventsLoggedCount"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""EventsLost"": [ 16, [ ""Int32"", ""null"" ]],
				 ""NumConsumers"": [ 20, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int32 BufferMemoryPagedPool { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public Int32 BufferMemoryNonPagedPool { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 EventsLoggedCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public Int32 EventsLost { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 16); } }
		public Int32 NumConsumers { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 20); } }
	}
	#endregion
	#region _FILESYSTEM_DISK_COUNTERS
 
	public class _FILESYSTEM_DISK_COUNTERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _FILESYSTEM_DISK_COUNTERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_FILESYSTEM_DISK_COUNTERS"": [ 16, {
				 ""FsBytesRead"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""FsBytesWritten"": [ 8, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 FsBytesRead { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 FsBytesWritten { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _THERMAL_ZONE_COUNTERS
 
	public class _THERMAL_ZONE_COUNTERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _THERMAL_ZONE_COUNTERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_THERMAL_ZONE_COUNTERS"": [ 12, {
				 ""Temperature"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ThrottleLimit"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""ThrottleReasons"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Temperature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 ThrottleLimit { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 ThrottleReasons { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _CONTEXT32_UPDATE
 
	public class _CONTEXT32_UPDATE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CONTEXT32_UPDATE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CONTEXT32_UPDATE"": [ 4, {
				 ""NumberEntries"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 NumberEntries { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_29181
 
	public class _UNNAMED_29181
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_29181(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_29181"": [ 16, {
				 ""ReservedEax"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ReservedEbx"": [ 4, [ ""BitField"", ""{\""end_bit\"":24,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""InitialApicId"": [ 4, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":24,\""target\"":\""UInt32\""}"" ]],
				 ""ReservedEcx"": [ 8, [ ""BitField"", ""{\""end_bit\"":31,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""HypervisorPresent"": [ 8, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":31,\""target\"":\""UInt32\""}"" ]],
				 ""ReservedEdx"": [ 12, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 ReservedEax { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 ReservedEbx
		{
			get
			{
				// start: 0  end: 24  Mask: 111111111111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 16777215) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 InitialApicId
		{
			get
			{
				// start: 24  end: 32  Mask: 11111111000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 4278190080) >> 24;
				return (UInt32)value2;
			}
		}
		public UInt32 ReservedEcx
		{
			get
			{
				// start: 0  end: 31  Mask: 1111111111111111111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 8);
				var value2 = (value & 2147483647) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 HypervisorPresent
		{
			get
			{
				// start: 31  end: 32  Mask: 10000000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 8);
				var value2 = (value & 2147483648) >> 31;
				return (UInt32)value2;
			}
		}
		public UInt32 ReservedEdx { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
	}
	#endregion
	#region _HV_CPUID_RESULT
 
	public class _HV_CPUID_RESULT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HV_CPUID_RESULT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HV_CPUID_RESULT"": [ 16, {
				 ""Eax"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Ebx"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Ecx"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Edx"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""AsUINT32"": [ 0, [ ""Array"", ""{\""count\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""VersionAndFeatures"": [ 0, [ ""_UNNAMED_29181"", ""null"" ]],
				 ""HvVendorAndMaxFunction"": [ 0, [ ""_HV_VENDOR_AND_MAX_FUNCTION"", ""null"" ]],
				 ""HvInterface"": [ 0, [ ""_HV_HYPERVISOR_INTERFACE_INFO"", ""null"" ]],
				 ""MsHvVersion"": [ 0, [ ""_HV_HYPERVISOR_VERSION_INFO"", ""null"" ]],
				 ""MsHvFeatures"": [ 0, [ ""_HV_HYPERVISOR_FEATURES"", ""null"" ]],
				 ""MsHvEnlightenmentInformation"": [ 0, [ ""_HV_ENLIGHTENMENT_INFORMATION"", ""null"" ]],
				 ""MsHvImplementationLimits"": [ 0, [ ""_HV_IMPLEMENTATION_LIMITS"", ""null"" ]],
				 ""MsHvHardwareFeatures"": [ 0, [ ""_HV_HYPERVISOR_HARDWARE_FEATURES"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Eax { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Ebx { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 Ecx { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Edx { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32[] AsUINT32
		{
			get
			{
				UInt32[] returnValue = new UInt32[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_29181 VersionAndFeatures
		{
			get
			{
				_UNNAMED_29181 returnValue = new _UNNAMED_29181(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _HV_VENDOR_AND_MAX_FUNCTION HvVendorAndMaxFunction
		{
			get
			{
				_HV_VENDOR_AND_MAX_FUNCTION returnValue = new _HV_VENDOR_AND_MAX_FUNCTION(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _HV_HYPERVISOR_INTERFACE_INFO HvInterface
		{
			get
			{
				_HV_HYPERVISOR_INTERFACE_INFO returnValue = new _HV_HYPERVISOR_INTERFACE_INFO(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _HV_HYPERVISOR_VERSION_INFO MsHvVersion
		{
			get
			{
				_HV_HYPERVISOR_VERSION_INFO returnValue = new _HV_HYPERVISOR_VERSION_INFO(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _HV_HYPERVISOR_FEATURES MsHvFeatures
		{
			get
			{
				_HV_HYPERVISOR_FEATURES returnValue = new _HV_HYPERVISOR_FEATURES(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _HV_ENLIGHTENMENT_INFORMATION MsHvEnlightenmentInformation
		{
			get
			{
				_HV_ENLIGHTENMENT_INFORMATION returnValue = new _HV_ENLIGHTENMENT_INFORMATION(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _HV_IMPLEMENTATION_LIMITS MsHvImplementationLimits
		{
			get
			{
				_HV_IMPLEMENTATION_LIMITS returnValue = new _HV_IMPLEMENTATION_LIMITS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _HV_HYPERVISOR_HARDWARE_FEATURES MsHvHardwareFeatures
		{
			get
			{
				_HV_HYPERVISOR_HARDWARE_FEATURES returnValue = new _HV_HYPERVISOR_HARDWARE_FEATURES(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _HV_VENDOR_AND_MAX_FUNCTION
 
	public class _HV_VENDOR_AND_MAX_FUNCTION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HV_VENDOR_AND_MAX_FUNCTION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HV_VENDOR_AND_MAX_FUNCTION"": [ 16, {
				 ""MaxFunction"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""VendorName"": [ 4, [ ""Array"", ""{\""count\"":12,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 MaxFunction { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Byte[] VendorName
		{
			get
			{
				Byte[] returnValue = new Byte[12];
				for(int i=0; i<12; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 4];
				return returnValue;
			}
		}
	}
	#endregion
	#region _HV_HYPERVISOR_INTERFACE_INFO
 
	public class _HV_HYPERVISOR_INTERFACE_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HV_HYPERVISOR_INTERFACE_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HV_HYPERVISOR_INTERFACE_INFO"": [ 16, {
				 ""Interface"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ReservedEbx"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""ReservedEcx"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""ReservedEdx"": [ 12, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Interface { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 ReservedEbx { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 ReservedEcx { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 ReservedEdx { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
	}
	#endregion
	#region _HV_HYPERVISOR_VERSION_INFO
 
	public class _HV_HYPERVISOR_VERSION_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HV_HYPERVISOR_VERSION_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HV_HYPERVISOR_VERSION_INFO"": [ 16, {
				 ""BuildNumber"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""MinorVersion"": [ 4, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""MajorVersion"": [ 4, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""ServicePack"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""ServiceNumber"": [ 12, [ ""BitField"", ""{\""end_bit\"":24,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""ServiceBranch"": [ 12, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":24,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 BuildNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 MinorVersion
		{
			get
			{
				// start: 0  end: 16  Mask: 1111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 65535) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 MajorVersion
		{
			get
			{
				// start: 16  end: 32  Mask: 11111111111111110000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 4294901760) >> 16;
				return (UInt32)value2;
			}
		}
		public UInt32 ServicePack { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 ServiceNumber
		{
			get
			{
				// start: 0  end: 24  Mask: 111111111111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 12);
				var value2 = (value & 16777215) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 ServiceBranch
		{
			get
			{
				// start: 24  end: 32  Mask: 11111111000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 12);
				var value2 = (value & 4278190080) >> 24;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _HV_HYPERVISOR_FEATURES
 
	public class _HV_HYPERVISOR_FEATURES
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HV_HYPERVISOR_FEATURES(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HV_HYPERVISOR_FEATURES"": [ 16, {
				 ""PartitionPrivileges"": [ 0, [ ""_HV_PARTITION_PRIVILEGE_MASK"", ""null"" ]],
				 ""MaxSupportedCState"": [ 8, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""HpetNeededForC3PowerState"": [ 8, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""Reserved"": [ 8, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""MwaitAvailable"": [ 12, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""GuestDebuggingAvailable"": [ 12, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""PerformanceMonitorsAvailable"": [ 12, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""CpuDynamicPartitioningAvailable"": [ 12, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""XmmRegistersForFastHypercallAvailable"": [ 12, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""GuestIdleAvailable"": [ 12, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""HypervisorSleepStateSupportAvailable"": [ 12, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""NumaDistanceQueryAvailable"": [ 12, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt32\""}"" ]],
				 ""FrequencyMsrsAvailable"": [ 12, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]],
				 ""SyntheticMachineCheckAvailable"": [ 12, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt32\""}"" ]],
				 ""GuestCrashMsrsAvailable"": [ 12, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt32\""}"" ]],
				 ""DebugMsrsAvailable"": [ 12, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt32\""}"" ]],
				 ""Npiep1Available"": [ 12, [ ""BitField"", ""{\""end_bit\"":13,\""start_bit\"":12,\""target\"":\""UInt32\""}"" ]],
				 ""DisableHypervisorAvailable"": [ 12, [ ""BitField"", ""{\""end_bit\"":14,\""start_bit\"":13,\""target\"":\""UInt32\""}"" ]],
				 ""Reserved1"": [ 12, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":14,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public _HV_PARTITION_PRIVILEGE_MASK PartitionPrivileges
		{
			get
			{
				_HV_PARTITION_PRIVILEGE_MASK returnValue = new _HV_PARTITION_PRIVILEGE_MASK(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 MaxSupportedCState
		{
			get
			{
				// start: 0  end: 4  Mask: 0000000000001111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 8);
				var value2 = (value & 15) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 HpetNeededForC3PowerState
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 8);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 Reserved
		{
			get
			{
				// start: 5  end: 32  Mask: 11111111111111111111111111100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 8);
				var value2 = (value & 4294967264) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 MwaitAvailable
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 12);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 GuestDebuggingAvailable
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 12);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 PerformanceMonitorsAvailable
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 12);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 CpuDynamicPartitioningAvailable
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 12);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 XmmRegistersForFastHypercallAvailable
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 12);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 GuestIdleAvailable
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 12);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 HypervisorSleepStateSupportAvailable
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 12);
				var value2 = (value & 64) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 NumaDistanceQueryAvailable
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 12);
				var value2 = (value & 128) >> 7;
				return (UInt32)value2;
			}
		}
		public UInt32 FrequencyMsrsAvailable
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 12);
				var value2 = (value & 256) >> 8;
				return (UInt32)value2;
			}
		}
		public UInt32 SyntheticMachineCheckAvailable
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 12);
				var value2 = (value & 512) >> 9;
				return (UInt32)value2;
			}
		}
		public UInt32 GuestCrashMsrsAvailable
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 12);
				var value2 = (value & 1024) >> 10;
				return (UInt32)value2;
			}
		}
		public UInt32 DebugMsrsAvailable
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 12);
				var value2 = (value & 2048) >> 11;
				return (UInt32)value2;
			}
		}
		public UInt32 Npiep1Available
		{
			get
			{
				// start: 12  end: 13  Mask: 0001000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 12);
				var value2 = (value & 4096) >> 12;
				return (UInt32)value2;
			}
		}
		public UInt32 DisableHypervisorAvailable
		{
			get
			{
				// start: 13  end: 14  Mask: 0010000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 12);
				var value2 = (value & 8192) >> 13;
				return (UInt32)value2;
			}
		}
		public UInt32 Reserved1
		{
			get
			{
				// start: 14  end: 32  Mask: 11111111111111111100000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 12);
				var value2 = (value & 4294950912) >> 14;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _HV_HYPERVISOR_HARDWARE_FEATURES
 
	public class _HV_HYPERVISOR_HARDWARE_FEATURES
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HV_HYPERVISOR_HARDWARE_FEATURES(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HV_HYPERVISOR_HARDWARE_FEATURES"": [ 16, {
				 ""ApicOverlayAssistInUse"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""MsrBitmapsInUse"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""ArchitecturalPerformanceCountersInUse"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""SecondLevelAddressTranslationInUse"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""DmaRemappingInUse"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""InterruptRemappingInUse"": [ 0, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""MemoryPatrolScrubberPresent"": [ 0, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""Reserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":7,\""target\"":\""UInt32\""}"" ]],
				 ""ReservedEbx"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""ReservedEcx"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""ReservedEdx"": [ 12, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 ApicOverlayAssistInUse
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 MsrBitmapsInUse
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 ArchitecturalPerformanceCountersInUse
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 SecondLevelAddressTranslationInUse
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 DmaRemappingInUse
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 InterruptRemappingInUse
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 MemoryPatrolScrubberPresent
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 64) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 Reserved
		{
			get
			{
				// start: 7  end: 32  Mask: 11111111111111111111111110000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967168) >> 7;
				return (UInt32)value2;
			}
		}
		public UInt32 ReservedEbx { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 ReservedEcx { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 ReservedEdx { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
	}
	#endregion
	#region _HV_ENLIGHTENMENT_INFORMATION
 
	public class _HV_ENLIGHTENMENT_INFORMATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HV_ENLIGHTENMENT_INFORMATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HV_ENLIGHTENMENT_INFORMATION"": [ 16, {
				 ""UseHypercallForAddressSpaceSwitch"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""UseHypercallForLocalFlush"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""UseHypercallForRemoteFlush"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""UseApicMsrs"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""UseMsrForReset"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""UseRelaxedTiming"": [ 0, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""UseDmaRemapping"": [ 0, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""UseInterruptRemapping"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt32\""}"" ]],
				 ""UseX2ApicMsrs"": [ 0, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]],
				 ""DeprecateAutoEoi"": [ 0, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt32\""}"" ]],
				 ""Reserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":10,\""target\"":\""UInt32\""}"" ]],
				 ""LongSpinWaitCount"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""ReservedEcx"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""ReservedEdx"": [ 12, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 UseHypercallForAddressSpaceSwitch
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 UseHypercallForLocalFlush
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 UseHypercallForRemoteFlush
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 UseApicMsrs
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 UseMsrForReset
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 UseRelaxedTiming
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 UseDmaRemapping
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 64) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 UseInterruptRemapping
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 128) >> 7;
				return (UInt32)value2;
			}
		}
		public UInt32 UseX2ApicMsrs
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 256) >> 8;
				return (UInt32)value2;
			}
		}
		public UInt32 DeprecateAutoEoi
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 512) >> 9;
				return (UInt32)value2;
			}
		}
		public UInt32 Reserved
		{
			get
			{
				// start: 10  end: 32  Mask: 11111111111111111111110000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294966272) >> 10;
				return (UInt32)value2;
			}
		}
		public UInt32 LongSpinWaitCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 ReservedEcx { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 ReservedEdx { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
	}
	#endregion
	#region _HV_IMPLEMENTATION_LIMITS
 
	public class _HV_IMPLEMENTATION_LIMITS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HV_IMPLEMENTATION_LIMITS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HV_IMPLEMENTATION_LIMITS"": [ 16, {
				 ""MaxVirtualProcessorCount"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""MaxLogicalProcessorCount"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""MaxInterruptMappingCount"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""ReservedEdx"": [ 12, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 MaxVirtualProcessorCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 MaxLogicalProcessorCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 MaxInterruptMappingCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 ReservedEdx { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
	}
	#endregion
	#region _HV_PARTITION_PRIVILEGE_MASK
 
	public class _HV_PARTITION_PRIVILEGE_MASK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HV_PARTITION_PRIVILEGE_MASK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HV_PARTITION_PRIVILEGE_MASK"": [ 8, {
				 ""AsUINT64"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""AccessVpRunTimeMsr"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""AccessPartitionReferenceCounter"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt64\""}"" ]],
				 ""AccessSynicMsrs"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt64\""}"" ]],
				 ""AccessSyntheticTimerMsrs"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt64\""}"" ]],
				 ""AccessApicMsrs"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt64\""}"" ]],
				 ""AccessHypercallMsrs"": [ 0, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt64\""}"" ]],
				 ""AccessVpIndex"": [ 0, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt64\""}"" ]],
				 ""AccessResetMsr"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt64\""}"" ]],
				 ""AccessStatsMsr"": [ 0, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt64\""}"" ]],
				 ""AccessPartitionReferenceTsc"": [ 0, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt64\""}"" ]],
				 ""AccessGuestIdleMsr"": [ 0, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt64\""}"" ]],
				 ""AccessFrequencyMsrs"": [ 0, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt64\""}"" ]],
				 ""AccessDebugMsrs"": [ 0, [ ""BitField"", ""{\""end_bit\"":13,\""start_bit\"":12,\""target\"":\""UInt64\""}"" ]],
				 ""Reserved1"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":13,\""target\"":\""UInt64\""}"" ]],
				 ""CreatePartitions"": [ 0, [ ""BitField"", ""{\""end_bit\"":33,\""start_bit\"":32,\""target\"":\""UInt64\""}"" ]],
				 ""AccessPartitionId"": [ 0, [ ""BitField"", ""{\""end_bit\"":34,\""start_bit\"":33,\""target\"":\""UInt64\""}"" ]],
				 ""AccessMemoryPool"": [ 0, [ ""BitField"", ""{\""end_bit\"":35,\""start_bit\"":34,\""target\"":\""UInt64\""}"" ]],
				 ""AdjustMessageBuffers"": [ 0, [ ""BitField"", ""{\""end_bit\"":36,\""start_bit\"":35,\""target\"":\""UInt64\""}"" ]],
				 ""PostMessages"": [ 0, [ ""BitField"", ""{\""end_bit\"":37,\""start_bit\"":36,\""target\"":\""UInt64\""}"" ]],
				 ""SignalEvents"": [ 0, [ ""BitField"", ""{\""end_bit\"":38,\""start_bit\"":37,\""target\"":\""UInt64\""}"" ]],
				 ""CreatePort"": [ 0, [ ""BitField"", ""{\""end_bit\"":39,\""start_bit\"":38,\""target\"":\""UInt64\""}"" ]],
				 ""ConnectPort"": [ 0, [ ""BitField"", ""{\""end_bit\"":40,\""start_bit\"":39,\""target\"":\""UInt64\""}"" ]],
				 ""AccessStats"": [ 0, [ ""BitField"", ""{\""end_bit\"":41,\""start_bit\"":40,\""target\"":\""UInt64\""}"" ]],
				 ""Reserved2"": [ 0, [ ""BitField"", ""{\""end_bit\"":43,\""start_bit\"":41,\""target\"":\""UInt64\""}"" ]],
				 ""Debugging"": [ 0, [ ""BitField"", ""{\""end_bit\"":44,\""start_bit\"":43,\""target\"":\""UInt64\""}"" ]],
				 ""CpuManagement"": [ 0, [ ""BitField"", ""{\""end_bit\"":45,\""start_bit\"":44,\""target\"":\""UInt64\""}"" ]],
				 ""ConfigureProfiler"": [ 0, [ ""BitField"", ""{\""end_bit\"":46,\""start_bit\"":45,\""target\"":\""UInt64\""}"" ]],
				 ""EnableExpandedStackwalking"": [ 0, [ ""BitField"", ""{\""end_bit\"":47,\""start_bit\"":46,\""target\"":\""UInt64\""}"" ]],
				 ""Reserved3"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":47,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 AsUINT64 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 AccessVpRunTimeMsr
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 AccessPartitionReferenceCounter
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt64)value2;
			}
		}
		public UInt64 AccessSynicMsrs
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt64)value2;
			}
		}
		public UInt64 AccessSyntheticTimerMsrs
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8) >> 3;
				return (UInt64)value2;
			}
		}
		public UInt64 AccessApicMsrs
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16) >> 4;
				return (UInt64)value2;
			}
		}
		public UInt64 AccessHypercallMsrs
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 32) >> 5;
				return (UInt64)value2;
			}
		}
		public UInt64 AccessVpIndex
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 64) >> 6;
				return (UInt64)value2;
			}
		}
		public UInt64 AccessResetMsr
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 128) >> 7;
				return (UInt64)value2;
			}
		}
		public UInt64 AccessStatsMsr
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 256) >> 8;
				return (UInt64)value2;
			}
		}
		public UInt64 AccessPartitionReferenceTsc
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 512) >> 9;
				return (UInt64)value2;
			}
		}
		public UInt64 AccessGuestIdleMsr
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1024) >> 10;
				return (UInt64)value2;
			}
		}
		public UInt64 AccessFrequencyMsrs
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2048) >> 11;
				return (UInt64)value2;
			}
		}
		public UInt64 AccessDebugMsrs
		{
			get
			{
				// start: 12  end: 13  Mask: 0001000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4096) >> 12;
				return (UInt64)value2;
			}
		}
		public UInt64 Reserved1
		{
			get
			{
				// start: 13  end: 32  Mask: 11111111111111111110000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294959104) >> 13;
				return (UInt64)value2;
			}
		}
		public UInt64 CreatePartitions
		{
			get
			{
				// start: 32  end: 33  Mask: 000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 32;
				return (UInt64)value2;
			}
		}
		public UInt64 AccessPartitionId
		{
			get
			{
				// start: 33  end: 34  Mask: 0000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 33;
				return (UInt64)value2;
			}
		}
		public UInt64 AccessMemoryPool
		{
			get
			{
				// start: 34  end: 35  Mask: 00000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 34;
				return (UInt64)value2;
			}
		}
		public UInt64 AdjustMessageBuffers
		{
			get
			{
				// start: 35  end: 36  Mask: 000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 35;
				return (UInt64)value2;
			}
		}
		public UInt64 PostMessages
		{
			get
			{
				// start: 36  end: 37  Mask: 0000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 36;
				return (UInt64)value2;
			}
		}
		public UInt64 SignalEvents
		{
			get
			{
				// start: 37  end: 38  Mask: 00000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 37;
				return (UInt64)value2;
			}
		}
		public UInt64 CreatePort
		{
			get
			{
				// start: 38  end: 39  Mask: 000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 38;
				return (UInt64)value2;
			}
		}
		public UInt64 ConnectPort
		{
			get
			{
				// start: 39  end: 40  Mask: 0000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 39;
				return (UInt64)value2;
			}
		}
		public UInt64 AccessStats
		{
			get
			{
				// start: 40  end: 41  Mask: 00000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 40;
				return (UInt64)value2;
			}
		}
		public UInt64 Reserved2
		{
			get
			{
				// start: 41  end: 43  Mask: 0000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 41;
				return (UInt64)value2;
			}
		}
		public UInt64 Debugging
		{
			get
			{
				// start: 43  end: 44  Mask: 00000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 43;
				return (UInt64)value2;
			}
		}
		public UInt64 CpuManagement
		{
			get
			{
				// start: 44  end: 45  Mask: 000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 44;
				return (UInt64)value2;
			}
		}
		public UInt64 ConfigureProfiler
		{
			get
			{
				// start: 45  end: 46  Mask: 0000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 45;
				return (UInt64)value2;
			}
		}
		public UInt64 EnableExpandedStackwalking
		{
			get
			{
				// start: 46  end: 47  Mask: 00000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 46;
				return (UInt64)value2;
			}
		}
		public UInt64 Reserved3
		{
			get
			{
				// start: 47  end: 64  Mask: 0000000000000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 47;
				return (UInt64)value2;
			}
		}
	}
	#endregion
	#region _KTIMER_TABLE
 
	public class _KTIMER_TABLE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KTIMER_TABLE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8704; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KTIMER_TABLE"": [ 8704, {
				 ""TimerExpiry"": [ 0, [ ""Array"", ""{\""count\"":64,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""_KTIMER\""}}"" ]],
				 ""TimerEntries"": [ 512, [ ""Array"", ""{\""count\"":256,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt64[] TimerExpiry
		{
			get
			{
				UInt64[] returnValue = new UInt64[64];
				int size = 8;
				for(int i=0; i<64; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 0);
				return returnValue;
			}
		}
		public _KTIMER_TABLE_ENTRY[] TimerEntries
		{
			get
			{
				_KTIMER_TABLE_ENTRY[] returnValue = new _KTIMER_TABLE_ENTRY[256];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<256; i++ )
					returnValue[i] = new _KTIMER_TABLE_ENTRY(_StructureData, (i * size) + _BufferOffset + 512);
				return returnValue;
			}
		}
	}
	#endregion
	#region _KTIMER_TABLE_ENTRY
 
	public class _KTIMER_TABLE_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KTIMER_TABLE_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KTIMER_TABLE_ENTRY"": [ 32, {
				 ""Lock"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Entry"": [ 8, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Time"": [ 24, [ ""_ULARGE_INTEGER"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Lock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _LIST_ENTRY Entry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _ULARGE_INTEGER Time
		{
			get
			{
				_ULARGE_INTEGER returnValue = new _ULARGE_INTEGER(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
	}
	#endregion
	#region _XSTATE_SAVE
 
	public class _XSTATE_SAVE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _XSTATE_SAVE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_XSTATE_SAVE"": [ 56, {
				 ""Prev"": [ 0, [ ""Pointer"", ""{\""target\"":\""_XSTATE_SAVE\""}"" ]],
				 ""Thread"": [ 8, [ ""Pointer"", ""{\""target\"":\""_KTHREAD\""}"" ]],
				 ""Level"": [ 16, [ ""Byte"", ""null"" ]],
				 ""XStateContext"": [ 24, [ ""_XSTATE_CONTEXT"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Prev { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Thread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public Byte Level{ get { return _StructureData[_BufferOffset +16]; } }
		public _XSTATE_CONTEXT XStateContext
		{
			get
			{
				_XSTATE_CONTEXT returnValue = new _XSTATE_CONTEXT(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
	}
	#endregion
	#region _XSAVE_AREA
 
	public class _XSAVE_AREA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _XSAVE_AREA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 576; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_XSAVE_AREA"": [ 576, {
				 ""LegacyState"": [ 0, [ ""_XSAVE_FORMAT"", ""null"" ]],
				 ""Header"": [ 512, [ ""_XSAVE_AREA_HEADER"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _XSAVE_FORMAT LegacyState
		{
			get
			{
				_XSAVE_FORMAT returnValue = new _XSAVE_FORMAT(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _XSAVE_AREA_HEADER Header
		{
			get
			{
				_XSAVE_AREA_HEADER returnValue = new _XSAVE_AREA_HEADER(_StructureData, _BufferOffset + 512);
				return returnValue;
			}
		}
	}
	#endregion
	#region _KSHARED_READY_QUEUE
 
	public class _KSHARED_READY_QUEUE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KSHARED_READY_QUEUE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 616; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KSHARED_READY_QUEUE"": [ 616, {
				 ""Lock"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""ReadySummary"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""ReadyListHead"": [ 16, [ ""Array"", ""{\""count\"":32,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""RunningSummary"": [ 528, [ ""Array"", ""{\""count\"":64,\""target\"":\""Char\""}"" ]],
				 ""Span"": [ 592, [ ""UInt32"", ""null"" ]],
				 ""LowProcIndex"": [ 596, [ ""UInt32"", ""null"" ]],
				 ""QueueIndex"": [ 600, [ ""UInt32"", ""null"" ]],
				 ""ProcCount"": [ 604, [ ""UInt32"", ""null"" ]],
				 ""Affinity"": [ 608, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Lock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 ReadySummary { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public _LIST_ENTRY[] ReadyListHead
		{
			get
			{
				_LIST_ENTRY[] returnValue = new _LIST_ENTRY[32];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<32; i++ )
					returnValue[i] = new _LIST_ENTRY(_StructureData, (i * size) + _BufferOffset + 16);
				return returnValue;
			}
		}
		public Char[] RunningSummary
		{
			get
			{
				Char[] returnValue = new Char[64];
				for(int i=0; i<64; i++ )
					returnValue[i] = BitConverter.ToChar(_StructureData, (i * sizeof(Char)) + _BufferOffset + 528);
				return returnValue;
			}
		}
		public UInt32 Span { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 592); } }
		public UInt32 LowProcIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 596); } }
		public UInt32 QueueIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 600); } }
		public UInt32 ProcCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 604); } }
		public UInt64 Affinity { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 608); } }
	}
	#endregion
	#region _KEXCEPTION_FRAME
 
	public class _KEXCEPTION_FRAME
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KEXCEPTION_FRAME(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 320; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KEXCEPTION_FRAME"": [ 320, {
				 ""P1Home"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""P2Home"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""P3Home"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""P4Home"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""P5"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""Spare1"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""Xmm6"": [ 48, [ ""_M128A"", ""null"" ]],
				 ""Xmm7"": [ 64, [ ""_M128A"", ""null"" ]],
				 ""Xmm8"": [ 80, [ ""_M128A"", ""null"" ]],
				 ""Xmm9"": [ 96, [ ""_M128A"", ""null"" ]],
				 ""Xmm10"": [ 112, [ ""_M128A"", ""null"" ]],
				 ""Xmm11"": [ 128, [ ""_M128A"", ""null"" ]],
				 ""Xmm12"": [ 144, [ ""_M128A"", ""null"" ]],
				 ""Xmm13"": [ 160, [ ""_M128A"", ""null"" ]],
				 ""Xmm14"": [ 176, [ ""_M128A"", ""null"" ]],
				 ""Xmm15"": [ 192, [ ""_M128A"", ""null"" ]],
				 ""TrapFrame"": [ 208, [ ""UInt64"", ""null"" ]],
				 ""OutputBuffer"": [ 216, [ ""UInt64"", ""null"" ]],
				 ""OutputLength"": [ 224, [ ""UInt64"", ""null"" ]],
				 ""Spare2"": [ 232, [ ""UInt64"", ""null"" ]],
				 ""MxCsr"": [ 240, [ ""UInt64"", ""null"" ]],
				 ""Rbp"": [ 248, [ ""UInt64"", ""null"" ]],
				 ""Rbx"": [ 256, [ ""UInt64"", ""null"" ]],
				 ""Rdi"": [ 264, [ ""UInt64"", ""null"" ]],
				 ""Rsi"": [ 272, [ ""UInt64"", ""null"" ]],
				 ""R12"": [ 280, [ ""UInt64"", ""null"" ]],
				 ""R13"": [ 288, [ ""UInt64"", ""null"" ]],
				 ""R14"": [ 296, [ ""UInt64"", ""null"" ]],
				 ""R15"": [ 304, [ ""UInt64"", ""null"" ]],
				 ""Return"": [ 312, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 P1Home { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 P2Home { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 P3Home { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 P4Home { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 P5 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 Spare1 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public _M128A Xmm6
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public _M128A Xmm7
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public _M128A Xmm8
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 80);
				return returnValue;
			}
		}
		public _M128A Xmm9
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 96);
				return returnValue;
			}
		}
		public _M128A Xmm10
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 112);
				return returnValue;
			}
		}
		public _M128A Xmm11
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 128);
				return returnValue;
			}
		}
		public _M128A Xmm12
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 144);
				return returnValue;
			}
		}
		public _M128A Xmm13
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 160);
				return returnValue;
			}
		}
		public _M128A Xmm14
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 176);
				return returnValue;
			}
		}
		public _M128A Xmm15
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 192);
				return returnValue;
			}
		}
		public UInt64 TrapFrame { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 208); } }
		public UInt64 OutputBuffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 216); } }
		public UInt64 OutputLength { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 224); } }
		public UInt64 Spare2 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 232); } }
		public UInt64 MxCsr { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 240); } }
		public UInt64 Rbp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 248); } }
		public UInt64 Rbx { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 256); } }
		public UInt64 Rdi { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 264); } }
		public UInt64 Rsi { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 272); } }
		public UInt64 R12 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 280); } }
		public UInt64 R13 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 288); } }
		public UInt64 R14 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 296); } }
		public UInt64 R15 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 304); } }
		public UInt64 Return { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 312); } }
	}
	#endregion
	#region _KTRAP_FRAME
 
	public class _KTRAP_FRAME
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KTRAP_FRAME(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 400; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KTRAP_FRAME"": [ 400, {
				 ""P1Home"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""P2Home"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""P3Home"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""P4Home"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""P5"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""PreviousMode"": [ 40, [ ""Char"", ""null"" ]],
				 ""PreviousIrql"": [ 41, [ ""Byte"", ""null"" ]],
				 ""FaultIndicator"": [ 42, [ ""Byte"", ""null"" ]],
				 ""ExceptionActive"": [ 43, [ ""Byte"", ""null"" ]],
				 ""MxCsr"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""Rax"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""Rcx"": [ 56, [ ""UInt64"", ""null"" ]],
				 ""Rdx"": [ 64, [ ""UInt64"", ""null"" ]],
				 ""R8"": [ 72, [ ""UInt64"", ""null"" ]],
				 ""R9"": [ 80, [ ""UInt64"", ""null"" ]],
				 ""R10"": [ 88, [ ""UInt64"", ""null"" ]],
				 ""R11"": [ 96, [ ""UInt64"", ""null"" ]],
				 ""GsBase"": [ 104, [ ""UInt64"", ""null"" ]],
				 ""GsSwap"": [ 104, [ ""UInt64"", ""null"" ]],
				 ""Xmm0"": [ 112, [ ""_M128A"", ""null"" ]],
				 ""Xmm1"": [ 128, [ ""_M128A"", ""null"" ]],
				 ""Xmm2"": [ 144, [ ""_M128A"", ""null"" ]],
				 ""Xmm3"": [ 160, [ ""_M128A"", ""null"" ]],
				 ""Xmm4"": [ 176, [ ""_M128A"", ""null"" ]],
				 ""Xmm5"": [ 192, [ ""_M128A"", ""null"" ]],
				 ""FaultAddress"": [ 208, [ ""UInt64"", ""null"" ]],
				 ""ContextRecord"": [ 208, [ ""UInt64"", ""null"" ]],
				 ""TimeStampCKCL"": [ 208, [ ""UInt64"", ""null"" ]],
				 ""Dr0"": [ 216, [ ""UInt64"", ""null"" ]],
				 ""Dr1"": [ 224, [ ""UInt64"", ""null"" ]],
				 ""Dr2"": [ 232, [ ""UInt64"", ""null"" ]],
				 ""Dr3"": [ 240, [ ""UInt64"", ""null"" ]],
				 ""Dr6"": [ 248, [ ""UInt64"", ""null"" ]],
				 ""Dr7"": [ 256, [ ""UInt64"", ""null"" ]],
				 ""DebugControl"": [ 264, [ ""UInt64"", ""null"" ]],
				 ""LastBranchToRip"": [ 272, [ ""UInt64"", ""null"" ]],
				 ""LastBranchFromRip"": [ 280, [ ""UInt64"", ""null"" ]],
				 ""LastExceptionToRip"": [ 288, [ ""UInt64"", ""null"" ]],
				 ""LastExceptionFromRip"": [ 296, [ ""UInt64"", ""null"" ]],
				 ""LastBranchControl"": [ 264, [ ""UInt64"", ""null"" ]],
				 ""LastBranchMSR"": [ 272, [ ""UInt32"", ""null"" ]],
				 ""SegDs"": [ 304, [ ""UInt16"", ""null"" ]],
				 ""SegEs"": [ 306, [ ""UInt16"", ""null"" ]],
				 ""SegFs"": [ 308, [ ""UInt16"", ""null"" ]],
				 ""SegGs"": [ 310, [ ""UInt16"", ""null"" ]],
				 ""TrapFrame"": [ 312, [ ""UInt64"", ""null"" ]],
				 ""Rbx"": [ 320, [ ""UInt64"", ""null"" ]],
				 ""Rdi"": [ 328, [ ""UInt64"", ""null"" ]],
				 ""Rsi"": [ 336, [ ""UInt64"", ""null"" ]],
				 ""Rbp"": [ 344, [ ""UInt64"", ""null"" ]],
				 ""ErrorCode"": [ 352, [ ""UInt64"", ""null"" ]],
				 ""ExceptionFrame"": [ 352, [ ""UInt64"", ""null"" ]],
				 ""TimeStampKlog"": [ 352, [ ""UInt64"", ""null"" ]],
				 ""Rip"": [ 360, [ ""UInt64"", ""null"" ]],
				 ""SegCs"": [ 368, [ ""UInt16"", ""null"" ]],
				 ""Fill0"": [ 370, [ ""Byte"", ""null"" ]],
				 ""Logging"": [ 371, [ ""Byte"", ""null"" ]],
				 ""Fill1"": [ 372, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt16\""}"" ]],
				 ""EFlags"": [ 376, [ ""UInt32"", ""null"" ]],
				 ""Fill2"": [ 380, [ ""UInt32"", ""null"" ]],
				 ""Rsp"": [ 384, [ ""UInt64"", ""null"" ]],
				 ""SegSs"": [ 392, [ ""UInt16"", ""null"" ]],
				 ""Fill3"": [ 394, [ ""UInt16"", ""null"" ]],
				 ""Fill4"": [ 396, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 P1Home { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 P2Home { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 P3Home { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 P4Home { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 P5 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public Char PreviousMode { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 40); } }
		public Byte PreviousIrql{ get { return _StructureData[_BufferOffset +41]; } }
		public Byte FaultIndicator{ get { return _StructureData[_BufferOffset +42]; } }
		public Byte ExceptionActive{ get { return _StructureData[_BufferOffset +43]; } }
		public UInt32 MxCsr { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public UInt64 Rax { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 Rcx { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 Rdx { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 R8 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 R9 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 R10 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 R11 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt64 GsBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public UInt64 GsSwap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public _M128A Xmm0
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 112);
				return returnValue;
			}
		}
		public _M128A Xmm1
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 128);
				return returnValue;
			}
		}
		public _M128A Xmm2
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 144);
				return returnValue;
			}
		}
		public _M128A Xmm3
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 160);
				return returnValue;
			}
		}
		public _M128A Xmm4
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 176);
				return returnValue;
			}
		}
		public _M128A Xmm5
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 192);
				return returnValue;
			}
		}
		public UInt64 FaultAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 208); } }
		public UInt64 ContextRecord { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 208); } }
		public UInt64 TimeStampCKCL { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 208); } }
		public UInt64 Dr0 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 216); } }
		public UInt64 Dr1 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 224); } }
		public UInt64 Dr2 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 232); } }
		public UInt64 Dr3 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 240); } }
		public UInt64 Dr6 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 248); } }
		public UInt64 Dr7 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 256); } }
		public UInt64 DebugControl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 264); } }
		public UInt64 LastBranchToRip { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 272); } }
		public UInt64 LastBranchFromRip { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 280); } }
		public UInt64 LastExceptionToRip { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 288); } }
		public UInt64 LastExceptionFromRip { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 296); } }
		public UInt64 LastBranchControl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 264); } }
		public UInt32 LastBranchMSR { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 272); } }
		public UInt16 SegDs { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 304); } }
		public UInt16 SegEs { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 306); } }
		public UInt16 SegFs { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 308); } }
		public UInt16 SegGs { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 310); } }
		public UInt64 TrapFrame { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 312); } }
		public UInt64 Rbx { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 320); } }
		public UInt64 Rdi { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 328); } }
		public UInt64 Rsi { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 336); } }
		public UInt64 Rbp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 344); } }
		public UInt64 ErrorCode { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 352); } }
		public UInt64 ExceptionFrame { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 352); } }
		public UInt64 TimeStampKlog { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 352); } }
		public UInt64 Rip { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 360); } }
		public UInt16 SegCs { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 368); } }
		public Byte Fill0{ get { return _StructureData[_BufferOffset +370]; } }
		public Byte Logging{ get { return _StructureData[_BufferOffset +371]; } }
		public UInt16[] Fill1
		{
			get
			{
				UInt16[] returnValue = new UInt16[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 372);
				return returnValue;
			}
		}
		public UInt32 EFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 376); } }
		public UInt32 Fill2 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 380); } }
		public UInt64 Rsp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 384); } }
		public UInt16 SegSs { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 392); } }
		public UInt16 Fill3 { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 394); } }
		public UInt32 Fill4 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 396); } }
	}
	#endregion
	#region _MCGEN_TRACE_CONTEXT
 
	public class _MCGEN_TRACE_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MCGEN_TRACE_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MCGEN_TRACE_CONTEXT"": [ 72, {
				 ""RegistrationHandle"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Logger"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""MatchAnyKeyword"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""MatchAllKeyword"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""Flags"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""IsEnabled"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""Level"": [ 40, [ ""Byte"", ""null"" ]],
				 ""Reserve"": [ 41, [ ""Byte"", ""null"" ]],
				 ""EnableBitsCount"": [ 42, [ ""UInt16"", ""null"" ]],
				 ""EnableBitMask"": [ 48, [ ""Pointer"", ""{\""target\"":\""unsigned long\""}"" ]],
				 ""EnableKeyWords"": [ 56, [ ""Pointer"", ""{\""target\"":\""UInt64\""}"" ]],
				 ""EnableLevel"": [ 64, [ ""Pointer"", ""{\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 RegistrationHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Logger { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 MatchAnyKeyword { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 MatchAllKeyword { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 IsEnabled { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public Byte Level{ get { return _StructureData[_BufferOffset +40]; } }
		public Byte Reserve{ get { return _StructureData[_BufferOffset +41]; } }
		public UInt16 EnableBitsCount { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 42); } }
		public UInt64 EnableBitMask { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 EnableKeyWords { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 EnableLevel { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
	}
	#endregion
	#region _EVENT_FILTER_DESCRIPTOR
 
	public class _EVENT_FILTER_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EVENT_FILTER_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EVENT_FILTER_DESCRIPTOR"": [ 16, {
				 ""Ptr"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Size"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Type"": [ 12, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Ptr { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 Size { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Type { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
	}
	#endregion
	#region _SID
 
	public class _SID
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SID(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SID"": [ 12, {
				 ""Revision"": [ 0, [ ""Byte"", ""null"" ]],
				 ""SubAuthorityCount"": [ 1, [ ""Byte"", ""null"" ]],
				 ""IdentifierAuthority"": [ 2, [ ""_SID_IDENTIFIER_AUTHORITY"", ""null"" ]],
				 ""SubAuthority"": [ 8, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public Byte Revision{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte SubAuthorityCount{ get { return _StructureData[_BufferOffset +1]; } }
		public _SID_IDENTIFIER_AUTHORITY IdentifierAuthority
		{
			get
			{
				_SID_IDENTIFIER_AUTHORITY returnValue = new _SID_IDENTIFIER_AUTHORITY(_StructureData, _BufferOffset + 2);
				return returnValue;
			}
		}
		public UInt32[] SubAuthority
		{
			get
			{
				UInt32[] returnValue = new UInt32[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _PNP_DEVICE_COMPLETION_QUEUE
 
	public class _PNP_DEVICE_COMPLETION_QUEUE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PNP_DEVICE_COMPLETION_QUEUE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 80; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PNP_DEVICE_COMPLETION_QUEUE"": [ 80, {
				 ""DispatchedList"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""DispatchedCount"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""CompletedList"": [ 24, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""CompletedSemaphore"": [ 40, [ ""_KSEMAPHORE"", ""null"" ]],
				 ""SpinLock"": [ 72, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY DispatchedList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 DispatchedCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public _LIST_ENTRY CompletedList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public _KSEMAPHORE CompletedSemaphore
		{
			get
			{
				_KSEMAPHORE returnValue = new _KSEMAPHORE(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public UInt64 SpinLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
	}
	#endregion
	#region _KSEMAPHORE
 
	public class _KSEMAPHORE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KSEMAPHORE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KSEMAPHORE"": [ 32, {
				 ""Header"": [ 0, [ ""_DISPATCHER_HEADER"", ""null"" ]],
				 ""Limit"": [ 24, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _DISPATCHER_HEADER Header
		{
			get
			{
				_DISPATCHER_HEADER returnValue = new _DISPATCHER_HEADER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public Int32 Limit { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _DEVOBJ_EXTENSION
 
	public class _DEVOBJ_EXTENSION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DEVOBJ_EXTENSION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 96; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DEVOBJ_EXTENSION"": [ 96, {
				 ""Type"": [ 0, [ ""Int16"", ""null"" ]],
				 ""Size"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""DeviceObject"": [ 8, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""PowerFlags"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""Dope"": [ 24, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT_POWER_EXTENSION\""}"" ]],
				 ""ExtensionFlags"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""DeviceNode"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""AttachedTo"": [ 48, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""StartIoCount"": [ 56, [ ""Int32"", ""null"" ]],
				 ""StartIoKey"": [ 60, [ ""Int32"", ""null"" ]],
				 ""StartIoFlags"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""Vpb"": [ 72, [ ""Pointer"", ""{\""target\"":\""_VPB\""}"" ]],
				 ""DependencyNode"": [ 80, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""VerifierContext"": [ 88, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public Int16 Type { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 Size { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt64 DeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 PowerFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt64 Dope { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt32 ExtensionFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt64 DeviceNode { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 AttachedTo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public Int32 StartIoCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 56); } }
		public Int32 StartIoKey { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 60); } }
		public UInt32 StartIoFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt64 Vpb { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 DependencyNode { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 VerifierContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
	}
	#endregion
	#region _UNNAMED_29477
 
	public class _UNNAMED_29477
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_29477(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_29477"": [ 8, {
				 ""LegacyDeviceNode"": [ 0, [ ""Pointer"", ""{\""target\"":\""_DEVICE_NODE\""}"" ]],
				 ""PendingDeviceRelations"": [ 0, [ ""Pointer"", ""{\""target\"":\""_DEVICE_RELATIONS\""}"" ]],
				 ""Information"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 LegacyDeviceNode { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 PendingDeviceRelations { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Information { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_29485
 
	public class _UNNAMED_29485
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_29485(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_29485"": [ 8, {
				 ""NextResourceDeviceNode"": [ 0, [ ""Pointer"", ""{\""target\"":\""_DEVICE_NODE\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 NextResourceDeviceNode { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_29487
 
	public class _UNNAMED_29487
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_29487(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_29487"": [ 32, {
				 ""DockStatus"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""PROFILE_STATUS\"",\""target\"":\""UInt32\""}"" ]],
				 ""ListEntry"": [ 8, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""SerialNumber"": [ 24, [ ""Pointer"", ""{\""target\"":\""UInt16\""}"" ]] }]
				 }
				)";
			}
		}
		public PROFILE_STATUS DockStatus { get { return (PROFILE_STATUS)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt64 SerialNumber { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _DEVICE_NODE
 
	public class _DEVICE_NODE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DEVICE_NODE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 712; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DEVICE_NODE"": [ 712, {
				 ""Sibling"": [ 0, [ ""Pointer"", ""{\""target\"":\""_DEVICE_NODE\""}"" ]],
				 ""Child"": [ 8, [ ""Pointer"", ""{\""target\"":\""_DEVICE_NODE\""}"" ]],
				 ""Parent"": [ 16, [ ""Pointer"", ""{\""target\"":\""_DEVICE_NODE\""}"" ]],
				 ""LastChild"": [ 24, [ ""Pointer"", ""{\""target\"":\""_DEVICE_NODE\""}"" ]],
				 ""PhysicalDeviceObject"": [ 32, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""InstancePath"": [ 40, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""ServiceName"": [ 56, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""PendingIrp"": [ 72, [ ""Pointer"", ""{\""target\"":\""_IRP\""}"" ]],
				 ""FxDevice"": [ 80, [ ""Pointer"", ""{\""target\"":\""_POP_FX_DEVICE\""}"" ]],
				 ""FxDeviceLock"": [ 88, [ ""Int32"", ""null"" ]],
				 ""FxRemoveEvent"": [ 96, [ ""_KEVENT"", ""null"" ]],
				 ""FxActivationCount"": [ 120, [ ""Int32"", ""null"" ]],
				 ""FxSleepCount"": [ 124, [ ""Int32"", ""null"" ]],
				 ""Plugin"": [ 128, [ ""Pointer"", ""{\""target\"":\""_POP_FX_PLUGIN\""}"" ]],
				 ""Level"": [ 136, [ ""UInt32"", ""null"" ]],
				 ""CurrentPowerState"": [ 140, [ ""_POWER_STATE"", ""null"" ]],
				 ""Notify"": [ 144, [ ""_PO_DEVICE_NOTIFY"", ""null"" ]],
				 ""PoIrpManager"": [ 248, [ ""_PO_IRP_MANAGER"", ""null"" ]],
				 ""UniqueId"": [ 280, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""PowerFlags"": [ 296, [ ""UInt32"", ""null"" ]],
				 ""State"": [ 300, [ ""Enumeration"", ""{\""enum_name\"":\""_PNP_DEVNODE_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""PreviousState"": [ 304, [ ""Enumeration"", ""{\""enum_name\"":\""_PNP_DEVNODE_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""StateHistory"": [ 308, [ ""Array"", ""{\""size\"":80,\""target\"":\""Enumeration\"",\""target_args\"":{\""enum_name\"":\""_PNP_DEVNODE_STATE\"",\""target\"":\""UInt32\""}}"" ]],
				 ""StateHistoryEntry"": [ 388, [ ""UInt32"", ""null"" ]],
				 ""CompletionStatus"": [ 392, [ ""Int32"", ""null"" ]],
				 ""Flags"": [ 396, [ ""UInt32"", ""null"" ]],
				 ""UserFlags"": [ 400, [ ""UInt32"", ""null"" ]],
				 ""Problem"": [ 404, [ ""UInt32"", ""null"" ]],
				 ""ProblemStatus"": [ 408, [ ""Int32"", ""null"" ]],
				 ""ResourceList"": [ 416, [ ""Pointer"", ""{\""target\"":\""_CM_RESOURCE_LIST\""}"" ]],
				 ""ResourceListTranslated"": [ 424, [ ""Pointer"", ""{\""target\"":\""_CM_RESOURCE_LIST\""}"" ]],
				 ""DuplicatePDO"": [ 432, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""ResourceRequirements"": [ 440, [ ""Pointer"", ""{\""target\"":\""_IO_RESOURCE_REQUIREMENTS_LIST\""}"" ]],
				 ""InterfaceType"": [ 448, [ ""Enumeration"", ""{\""enum_name\"":\""_INTERFACE_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""BusNumber"": [ 452, [ ""UInt32"", ""null"" ]],
				 ""ChildInterfaceType"": [ 456, [ ""Enumeration"", ""{\""enum_name\"":\""_INTERFACE_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""ChildBusNumber"": [ 460, [ ""UInt32"", ""null"" ]],
				 ""ChildBusTypeIndex"": [ 464, [ ""UInt16"", ""null"" ]],
				 ""RemovalPolicy"": [ 466, [ ""Byte"", ""null"" ]],
				 ""HardwareRemovalPolicy"": [ 467, [ ""Byte"", ""null"" ]],
				 ""TargetDeviceNotify"": [ 472, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""DeviceArbiterList"": [ 488, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""DeviceTranslatorList"": [ 504, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""NoTranslatorMask"": [ 520, [ ""UInt16"", ""null"" ]],
				 ""QueryTranslatorMask"": [ 522, [ ""UInt16"", ""null"" ]],
				 ""NoArbiterMask"": [ 524, [ ""UInt16"", ""null"" ]],
				 ""QueryArbiterMask"": [ 526, [ ""UInt16"", ""null"" ]],
				 ""OverUsed1"": [ 528, [ ""_UNNAMED_29477"", ""null"" ]],
				 ""OverUsed2"": [ 536, [ ""_UNNAMED_29485"", ""null"" ]],
				 ""BootResources"": [ 544, [ ""Pointer"", ""{\""target\"":\""_CM_RESOURCE_LIST\""}"" ]],
				 ""BootResourcesTranslated"": [ 552, [ ""Pointer"", ""{\""target\"":\""_CM_RESOURCE_LIST\""}"" ]],
				 ""CapabilityFlags"": [ 560, [ ""UInt32"", ""null"" ]],
				 ""DockInfo"": [ 568, [ ""_UNNAMED_29487"", ""null"" ]],
				 ""DisableableDepends"": [ 600, [ ""UInt32"", ""null"" ]],
				 ""PendedSetInterfaceState"": [ 608, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""LegacyBusListEntry"": [ 624, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""DriverUnloadRetryCount"": [ 640, [ ""UInt32"", ""null"" ]],
				 ""PreviousParent"": [ 648, [ ""Pointer"", ""{\""target\"":\""_DEVICE_NODE\""}"" ]],
				 ""DeletedChildren"": [ 656, [ ""UInt32"", ""null"" ]],
				 ""NumaNodeIndex"": [ 660, [ ""UInt32"", ""null"" ]],
				 ""ContainerID"": [ 664, [ ""_GUID"", ""null"" ]],
				 ""OverrideFlags"": [ 680, [ ""Byte"", ""null"" ]],
				 ""DeviceIdsHash"": [ 684, [ ""UInt32"", ""null"" ]],
				 ""RequiresUnloadedDriver"": [ 688, [ ""Byte"", ""null"" ]],
				 ""PendingEjectRelations"": [ 696, [ ""Pointer"", ""{\""target\"":\""_PENDING_RELATIONS_LIST_ENTRY\""}"" ]],
				 ""StateFlags"": [ 704, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Sibling { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Child { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Parent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 LastChild { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 PhysicalDeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public _UNICODE_STRING InstancePath
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public _UNICODE_STRING ServiceName
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public UInt64 PendingIrp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 FxDevice { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public Int32 FxDeviceLock { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 88); } }
		public _KEVENT FxRemoveEvent
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 96);
				return returnValue;
			}
		}
		public Int32 FxActivationCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 120); } }
		public Int32 FxSleepCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 124); } }
		public UInt64 Plugin { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 128); } }
		public UInt32 Level { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 136); } }
		public _POWER_STATE CurrentPowerState
		{
			get
			{
				_POWER_STATE returnValue = new _POWER_STATE(_StructureData, _BufferOffset + 140);
				return returnValue;
			}
		}
		public _PO_DEVICE_NOTIFY Notify
		{
			get
			{
				_PO_DEVICE_NOTIFY returnValue = new _PO_DEVICE_NOTIFY(_StructureData, _BufferOffset + 144);
				return returnValue;
			}
		}
		public _PO_IRP_MANAGER PoIrpManager
		{
			get
			{
				_PO_IRP_MANAGER returnValue = new _PO_IRP_MANAGER(_StructureData, _BufferOffset + 248);
				return returnValue;
			}
		}
		public _UNICODE_STRING UniqueId
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 280);
				return returnValue;
			}
		}
		public UInt32 PowerFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 296); } }
		public _PNP_DEVNODE_STATE State { get { return (_PNP_DEVNODE_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 300); } }
		public _PNP_DEVNODE_STATE PreviousState { get { return (_PNP_DEVNODE_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 304); } }
		public _PNP_DEVNODE_STATE[] StateHistory
		{
			get
			{
				_PNP_DEVNODE_STATE[] returnValue = new _PNP_DEVNODE_STATE[20];
				int size = 4;
				for(int i=0; i<20; i++ )
					returnValue[i] = (_PNP_DEVNODE_STATE)BitConverter.ToUInt32(_StructureData, (i * size) + _BufferOffset + 308);
				return returnValue;
			}
		}
		public UInt32 StateHistoryEntry { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 388); } }
		public Int32 CompletionStatus { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 392); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 396); } }
		public UInt32 UserFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 400); } }
		public UInt32 Problem { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 404); } }
		public Int32 ProblemStatus { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 408); } }
		public UInt64 ResourceList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 416); } }
		public UInt64 ResourceListTranslated { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 424); } }
		public UInt64 DuplicatePDO { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 432); } }
		public UInt64 ResourceRequirements { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 440); } }
		public _INTERFACE_TYPE InterfaceType { get { return (_INTERFACE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 448); } }
		public UInt32 BusNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 452); } }
		public _INTERFACE_TYPE ChildInterfaceType { get { return (_INTERFACE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 456); } }
		public UInt32 ChildBusNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 460); } }
		public UInt16 ChildBusTypeIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 464); } }
		public Byte RemovalPolicy{ get { return _StructureData[_BufferOffset +466]; } }
		public Byte HardwareRemovalPolicy{ get { return _StructureData[_BufferOffset +467]; } }
		public _LIST_ENTRY TargetDeviceNotify
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 472);
				return returnValue;
			}
		}
		public _LIST_ENTRY DeviceArbiterList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 488);
				return returnValue;
			}
		}
		public _LIST_ENTRY DeviceTranslatorList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 504);
				return returnValue;
			}
		}
		public UInt16 NoTranslatorMask { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 520); } }
		public UInt16 QueryTranslatorMask { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 522); } }
		public UInt16 NoArbiterMask { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 524); } }
		public UInt16 QueryArbiterMask { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 526); } }
		public _UNNAMED_29477 OverUsed1
		{
			get
			{
				_UNNAMED_29477 returnValue = new _UNNAMED_29477(_StructureData, _BufferOffset + 528);
				return returnValue;
			}
		}
		public _UNNAMED_29485 OverUsed2
		{
			get
			{
				_UNNAMED_29485 returnValue = new _UNNAMED_29485(_StructureData, _BufferOffset + 536);
				return returnValue;
			}
		}
		public UInt64 BootResources { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 544); } }
		public UInt64 BootResourcesTranslated { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 552); } }
		public UInt32 CapabilityFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 560); } }
		public _UNNAMED_29487 DockInfo
		{
			get
			{
				_UNNAMED_29487 returnValue = new _UNNAMED_29487(_StructureData, _BufferOffset + 568);
				return returnValue;
			}
		}
		public UInt32 DisableableDepends { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 600); } }
		public _LIST_ENTRY PendedSetInterfaceState
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 608);
				return returnValue;
			}
		}
		public _LIST_ENTRY LegacyBusListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 624);
				return returnValue;
			}
		}
		public UInt32 DriverUnloadRetryCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 640); } }
		public UInt64 PreviousParent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 648); } }
		public UInt32 DeletedChildren { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 656); } }
		public UInt32 NumaNodeIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 660); } }
		public _GUID ContainerID
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 664);
				return returnValue;
			}
		}
		public Byte OverrideFlags{ get { return _StructureData[_BufferOffset +680]; } }
		public UInt32 DeviceIdsHash { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 684); } }
		public Byte RequiresUnloadedDriver{ get { return _StructureData[_BufferOffset +688]; } }
		public UInt64 PendingEjectRelations { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 696); } }
		public UInt32 StateFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 704); } }
	}
	#endregion
	#region _GROUP_AFFINITY
 
	public class _GROUP_AFFINITY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _GROUP_AFFINITY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_GROUP_AFFINITY"": [ 16, {
				 ""Mask"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Group"": [ 8, [ ""UInt16"", ""null"" ]],
				 ""Reserved"": [ 10, [ ""Array"", ""{\""count\"":3,\""target\"":\""UInt16\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Mask { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt16 Group { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 8); } }
		public UInt16[] Reserved
		{
			get
			{
				UInt16[] returnValue = new UInt16[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 10);
				return returnValue;
			}
		}
	}
	#endregion
	#region _PNP_ASSIGN_RESOURCES_CONTEXT
 
	public class _PNP_ASSIGN_RESOURCES_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PNP_ASSIGN_RESOURCES_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PNP_ASSIGN_RESOURCES_CONTEXT"": [ 16, {
				 ""IncludeFailedDevices"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""DeviceCount"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""DeviceList"": [ 8, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""_DEVICE_OBJECT\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 IncludeFailedDevices { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 DeviceCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64[] DeviceList
		{
			get
			{
				UInt64[] returnValue = new UInt64[1];
				int size = 8;
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _PNP_RESOURCE_REQUEST
 
	public class _PNP_RESOURCE_REQUEST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PNP_RESOURCE_REQUEST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PNP_RESOURCE_REQUEST"": [ 64, {
				 ""PhysicalDevice"": [ 0, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""Flags"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""AllocationType"": [ 12, [ ""Enumeration"", ""{\""enum_name\"":\""_ARBITER_REQUEST_SOURCE\"",\""target\"":\""UInt32\""}"" ]],
				 ""Priority"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""Position"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""ResourceRequirements"": [ 24, [ ""Pointer"", ""{\""target\"":\""_IO_RESOURCE_REQUIREMENTS_LIST\""}"" ]],
				 ""ReqList"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ResourceAssignment"": [ 40, [ ""Pointer"", ""{\""target\"":\""_CM_RESOURCE_LIST\""}"" ]],
				 ""TranslatedResourceAssignment"": [ 48, [ ""Pointer"", ""{\""target\"":\""_CM_RESOURCE_LIST\""}"" ]],
				 ""Status"": [ 56, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 PhysicalDevice { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public _ARBITER_REQUEST_SOURCE AllocationType { get { return (_ARBITER_REQUEST_SOURCE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 Priority { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 Position { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt64 ResourceRequirements { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 ReqList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 ResourceAssignment { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 TranslatedResourceAssignment { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public Int32 Status { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 56); } }
	}
	#endregion
	#region _IO_RESOURCE_REQUIREMENTS_LIST
 
	public class _IO_RESOURCE_REQUIREMENTS_LIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IO_RESOURCE_REQUIREMENTS_LIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IO_RESOURCE_REQUIREMENTS_LIST"": [ 72, {
				 ""ListSize"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""InterfaceType"": [ 4, [ ""Enumeration"", ""{\""enum_name\"":\""_INTERFACE_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""BusNumber"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""SlotNumber"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""Reserved"": [ 16, [ ""Array"", ""{\""count\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""AlternativeLists"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""List"": [ 32, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 ListSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _INTERFACE_TYPE InterfaceType { get { return (_INTERFACE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 BusNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 SlotNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32[] Reserved
		{
			get
			{
				UInt32[] returnValue = new UInt32[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt32 AlternativeLists { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public _IO_RESOURCE_LIST[] List
		{
			get
			{
				_IO_RESOURCE_LIST[] returnValue = new _IO_RESOURCE_LIST[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _IO_RESOURCE_LIST(_StructureData, (i * size) + _BufferOffset + 32);
				return returnValue;
			}
		}
	}
	#endregion
	#region _EXCEPTION_RECORD64
 
	public class _EXCEPTION_RECORD64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EXCEPTION_RECORD64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 152; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EXCEPTION_RECORD64"": [ 152, {
				 ""ExceptionCode"": [ 0, [ ""Int32"", ""null"" ]],
				 ""ExceptionFlags"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""ExceptionRecord"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""ExceptionAddress"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""NumberParameters"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""__unusedAlignment"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""ExceptionInformation"": [ 32, [ ""Array"", ""{\""count\"":15,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public Int32 ExceptionCode { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 ExceptionFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 ExceptionRecord { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 ExceptionAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 NumberParameters { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 __unusedAlignment { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt64[] ExceptionInformation
		{
			get
			{
				UInt64[] returnValue = new UInt64[15];
				for(int i=0; i<15; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 32);
				return returnValue;
			}
		}
	}
	#endregion
	#region _EXCEPTION_RECORD32
 
	public class _EXCEPTION_RECORD32
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EXCEPTION_RECORD32(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 80; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EXCEPTION_RECORD32"": [ 80, {
				 ""ExceptionCode"": [ 0, [ ""Int32"", ""null"" ]],
				 ""ExceptionFlags"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""ExceptionRecord"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""ExceptionAddress"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""NumberParameters"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""ExceptionInformation"": [ 20, [ ""Array"", ""{\""count\"":15,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public Int32 ExceptionCode { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 ExceptionFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 ExceptionRecord { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 ExceptionAddress { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 NumberParameters { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32[] ExceptionInformation
		{
			get
			{
				UInt32[] returnValue = new UInt32[15];
				for(int i=0; i<15; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 20);
				return returnValue;
			}
		}
	}
	#endregion
	#region _DBGKM_EXCEPTION64
 
	public class _DBGKM_EXCEPTION64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKM_EXCEPTION64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 160; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKM_EXCEPTION64"": [ 160, {
				 ""ExceptionRecord"": [ 0, [ ""_EXCEPTION_RECORD64"", ""null"" ]],
				 ""FirstChance"": [ 152, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _EXCEPTION_RECORD64 ExceptionRecord
		{
			get
			{
				_EXCEPTION_RECORD64 returnValue = new _EXCEPTION_RECORD64(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 FirstChance { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 152); } }
	}
	#endregion
	#region _DBGKM_EXCEPTION32
 
	public class _DBGKM_EXCEPTION32
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKM_EXCEPTION32(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 84; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKM_EXCEPTION32"": [ 84, {
				 ""ExceptionRecord"": [ 0, [ ""_EXCEPTION_RECORD32"", ""null"" ]],
				 ""FirstChance"": [ 80, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _EXCEPTION_RECORD32 ExceptionRecord
		{
			get
			{
				_EXCEPTION_RECORD32 returnValue = new _EXCEPTION_RECORD32(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 FirstChance { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
	}
	#endregion
	#region _X86_KTRAP_FRAME
 
	public class _X86_KTRAP_FRAME
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _X86_KTRAP_FRAME(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 140; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_X86_KTRAP_FRAME"": [ 140, {
				 ""DbgEbp"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""DbgEip"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""DbgArgMark"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""DbgArgPointer"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""TempSegCs"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""TempEsp"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""Dr0"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""Dr1"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""Dr2"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""Dr3"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""Dr6"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""Dr7"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""SegGs"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""SegEs"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""SegDs"": [ 56, [ ""UInt32"", ""null"" ]],
				 ""Edx"": [ 60, [ ""UInt32"", ""null"" ]],
				 ""Ecx"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""Eax"": [ 68, [ ""UInt32"", ""null"" ]],
				 ""PreviousPreviousMode"": [ 72, [ ""Byte"", ""null"" ]],
				 ""EntropyQueueDpc"": [ 73, [ ""Byte"", ""null"" ]],
				 ""Reserved"": [ 74, [ ""Array"", ""{\""count\"":2,\""target\"":\""Byte\""}"" ]],
				 ""ExceptionList"": [ 76, [ ""UInt32"", ""null"" ]],
				 ""SegFs"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""Edi"": [ 84, [ ""UInt32"", ""null"" ]],
				 ""Esi"": [ 88, [ ""UInt32"", ""null"" ]],
				 ""Ebx"": [ 92, [ ""UInt32"", ""null"" ]],
				 ""Ebp"": [ 96, [ ""UInt32"", ""null"" ]],
				 ""ErrCode"": [ 100, [ ""UInt32"", ""null"" ]],
				 ""Eip"": [ 104, [ ""UInt32"", ""null"" ]],
				 ""SegCs"": [ 108, [ ""UInt32"", ""null"" ]],
				 ""EFlags"": [ 112, [ ""UInt32"", ""null"" ]],
				 ""HardwareEsp"": [ 116, [ ""UInt32"", ""null"" ]],
				 ""HardwareSegSs"": [ 120, [ ""UInt32"", ""null"" ]],
				 ""V86Es"": [ 124, [ ""UInt32"", ""null"" ]],
				 ""V86Ds"": [ 128, [ ""UInt32"", ""null"" ]],
				 ""V86Fs"": [ 132, [ ""UInt32"", ""null"" ]],
				 ""V86Gs"": [ 136, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 DbgEbp { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 DbgEip { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 DbgArgMark { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 DbgArgPointer { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 TempSegCs { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 TempEsp { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 Dr0 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 Dr1 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 Dr2 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 Dr3 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public UInt32 Dr6 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32 Dr7 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public UInt32 SegGs { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public UInt32 SegEs { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public UInt32 SegDs { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public UInt32 Edx { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
		public UInt32 Ecx { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt32 Eax { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 68); } }
		public Byte PreviousPreviousMode{ get { return _StructureData[_BufferOffset +72]; } }
		public Byte EntropyQueueDpc{ get { return _StructureData[_BufferOffset +73]; } }
		public Byte[] Reserved
		{
			get
			{
				Byte[] returnValue = new Byte[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 74];
				return returnValue;
			}
		}
		public UInt32 ExceptionList { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 76); } }
		public UInt32 SegFs { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 Edi { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
		public UInt32 Esi { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 88); } }
		public UInt32 Ebx { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 92); } }
		public UInt32 Ebp { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 96); } }
		public UInt32 ErrCode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 100); } }
		public UInt32 Eip { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 104); } }
		public UInt32 SegCs { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 108); } }
		public UInt32 EFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 112); } }
		public UInt32 HardwareEsp { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 116); } }
		public UInt32 HardwareSegSs { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 120); } }
		public UInt32 V86Es { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 124); } }
		public UInt32 V86Ds { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 128); } }
		public UInt32 V86Fs { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 132); } }
		public UInt32 V86Gs { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 136); } }
	}
	#endregion
	#region _X86_KTRAP_FRAME_BLUE
 
	public class _X86_KTRAP_FRAME_BLUE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _X86_KTRAP_FRAME_BLUE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 140; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_X86_KTRAP_FRAME_BLUE"": [ 140, {
				 ""DbgEbp"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""DbgEip"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""DbgArgMark"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""TempSegCs"": [ 12, [ ""UInt16"", ""null"" ]],
				 ""Logging"": [ 14, [ ""Byte"", ""null"" ]],
				 ""FrameType"": [ 15, [ ""Byte"", ""null"" ]],
				 ""TempEsp"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""Dr0"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""Dr1"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""Dr2"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""Dr3"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""Dr6"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""Dr7"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""SegGs"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""SegEs"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""SegDs"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""Edx"": [ 56, [ ""UInt32"", ""null"" ]],
				 ""Ecx"": [ 60, [ ""UInt32"", ""null"" ]],
				 ""Eax"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""PreviousPreviousMode"": [ 68, [ ""Byte"", ""null"" ]],
				 ""EntropyQueueDpc"": [ 69, [ ""Byte"", ""null"" ]],
				 ""Reserved"": [ 70, [ ""Array"", ""{\""count\"":2,\""target\"":\""Byte\""}"" ]],
				 ""MxCsr"": [ 72, [ ""UInt32"", ""null"" ]],
				 ""ExceptionList"": [ 76, [ ""UInt32"", ""null"" ]],
				 ""SegFs"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""Edi"": [ 84, [ ""UInt32"", ""null"" ]],
				 ""Esi"": [ 88, [ ""UInt32"", ""null"" ]],
				 ""Ebx"": [ 92, [ ""UInt32"", ""null"" ]],
				 ""Ebp"": [ 96, [ ""UInt32"", ""null"" ]],
				 ""ErrCode"": [ 100, [ ""UInt32"", ""null"" ]],
				 ""Eip"": [ 104, [ ""UInt32"", ""null"" ]],
				 ""SegCs"": [ 108, [ ""UInt32"", ""null"" ]],
				 ""EFlags"": [ 112, [ ""UInt32"", ""null"" ]],
				 ""HardwareEsp"": [ 116, [ ""UInt32"", ""null"" ]],
				 ""HardwareSegSs"": [ 120, [ ""UInt32"", ""null"" ]],
				 ""V86Es"": [ 124, [ ""UInt32"", ""null"" ]],
				 ""V86Ds"": [ 128, [ ""UInt32"", ""null"" ]],
				 ""V86Fs"": [ 132, [ ""UInt32"", ""null"" ]],
				 ""V86Gs"": [ 136, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 DbgEbp { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 DbgEip { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 DbgArgMark { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt16 TempSegCs { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 12); } }
		public Byte Logging{ get { return _StructureData[_BufferOffset +14]; } }
		public Byte FrameType{ get { return _StructureData[_BufferOffset +15]; } }
		public UInt32 TempEsp { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 Dr0 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 Dr1 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 Dr2 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 Dr3 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 Dr6 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public UInt32 Dr7 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32 SegGs { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public UInt32 SegEs { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public UInt32 SegDs { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public UInt32 Edx { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public UInt32 Ecx { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
		public UInt32 Eax { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public Byte PreviousPreviousMode{ get { return _StructureData[_BufferOffset +68]; } }
		public Byte EntropyQueueDpc{ get { return _StructureData[_BufferOffset +69]; } }
		public Byte[] Reserved
		{
			get
			{
				Byte[] returnValue = new Byte[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 70];
				return returnValue;
			}
		}
		public UInt32 MxCsr { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 72); } }
		public UInt32 ExceptionList { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 76); } }
		public UInt32 SegFs { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 Edi { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
		public UInt32 Esi { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 88); } }
		public UInt32 Ebx { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 92); } }
		public UInt32 Ebp { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 96); } }
		public UInt32 ErrCode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 100); } }
		public UInt32 Eip { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 104); } }
		public UInt32 SegCs { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 108); } }
		public UInt32 EFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 112); } }
		public UInt32 HardwareEsp { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 116); } }
		public UInt32 HardwareSegSs { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 120); } }
		public UInt32 V86Es { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 124); } }
		public UInt32 V86Ds { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 128); } }
		public UInt32 V86Fs { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 132); } }
		public UInt32 V86Gs { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 136); } }
	}
	#endregion
	#region _DBGKD_LOAD_SYMBOLS64
 
	public class _DBGKD_LOAD_SYMBOLS64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_LOAD_SYMBOLS64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_LOAD_SYMBOLS64"": [ 40, {
				 ""PathNameLength"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""BaseOfDll"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""ProcessId"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""CheckSum"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""SizeOfImage"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""UnloadSymbols"": [ 32, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 PathNameLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 BaseOfDll { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 ProcessId { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 CheckSum { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 SizeOfImage { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public Byte UnloadSymbols{ get { return _StructureData[_BufferOffset +32]; } }
	}
	#endregion
	#region _DBGKD_LOAD_SYMBOLS32
 
	public class _DBGKD_LOAD_SYMBOLS32
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_LOAD_SYMBOLS32(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_LOAD_SYMBOLS32"": [ 24, {
				 ""PathNameLength"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""BaseOfDll"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""ProcessId"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""CheckSum"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""SizeOfImage"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""UnloadSymbols"": [ 20, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 PathNameLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 BaseOfDll { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 ProcessId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 CheckSum { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 SizeOfImage { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public Byte UnloadSymbols{ get { return _StructureData[_BufferOffset +20]; } }
	}
	#endregion
	#region _DBGKD_READ_MEMORY64
 
	public class _DBGKD_READ_MEMORY64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_READ_MEMORY64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_READ_MEMORY64"": [ 16, {
				 ""TargetBaseAddress"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""TransferCount"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""ActualBytesRead"": [ 12, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 TargetBaseAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 TransferCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 ActualBytesRead { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
	}
	#endregion
	#region _DBGKD_READ_MEMORY32
 
	public class _DBGKD_READ_MEMORY32
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_READ_MEMORY32(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_READ_MEMORY32"": [ 12, {
				 ""TargetBaseAddress"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""TransferCount"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""ActualBytesRead"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 TargetBaseAddress { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 TransferCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 ActualBytesRead { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _DBGKD_WRITE_MEMORY64
 
	public class _DBGKD_WRITE_MEMORY64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_WRITE_MEMORY64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_WRITE_MEMORY64"": [ 16, {
				 ""TargetBaseAddress"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""TransferCount"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""ActualBytesWritten"": [ 12, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 TargetBaseAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 TransferCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 ActualBytesWritten { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
	}
	#endregion
	#region _DBGKD_WRITE_MEMORY32
 
	public class _DBGKD_WRITE_MEMORY32
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_WRITE_MEMORY32(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_WRITE_MEMORY32"": [ 12, {
				 ""TargetBaseAddress"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""TransferCount"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""ActualBytesWritten"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 TargetBaseAddress { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 TransferCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 ActualBytesWritten { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _DBGKD_WRITE_BREAKPOINT64
 
	public class _DBGKD_WRITE_BREAKPOINT64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_WRITE_BREAKPOINT64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_WRITE_BREAKPOINT64"": [ 16, {
				 ""BreakPointAddress"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""BreakPointHandle"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 BreakPointAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 BreakPointHandle { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _DBGKD_WRITE_BREAKPOINT32
 
	public class _DBGKD_WRITE_BREAKPOINT32
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_WRITE_BREAKPOINT32(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_WRITE_BREAKPOINT32"": [ 8, {
				 ""BreakPointAddress"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""BreakPointHandle"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 BreakPointAddress { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 BreakPointHandle { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _DBGKD_READ_WRITE_IO64
 
	public class _DBGKD_READ_WRITE_IO64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_READ_WRITE_IO64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_READ_WRITE_IO64"": [ 16, {
				 ""IoAddress"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""DataSize"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""DataValue"": [ 12, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 IoAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 DataSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 DataValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
	}
	#endregion
	#region _DBGKD_READ_WRITE_IO32
 
	public class _DBGKD_READ_WRITE_IO32
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_READ_WRITE_IO32(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_READ_WRITE_IO32"": [ 12, {
				 ""DataSize"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""IoAddress"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""DataValue"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 DataSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 IoAddress { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 DataValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _DBGKD_READ_WRITE_IO_EXTENDED64
 
	public class _DBGKD_READ_WRITE_IO_EXTENDED64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_READ_WRITE_IO_EXTENDED64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_READ_WRITE_IO_EXTENDED64"": [ 32, {
				 ""DataSize"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""InterfaceType"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""BusNumber"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""AddressSpace"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""IoAddress"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""DataValue"": [ 24, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 DataSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 InterfaceType { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 BusNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 AddressSpace { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt64 IoAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 DataValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _DBGKD_READ_WRITE_IO_EXTENDED32
 
	public class _DBGKD_READ_WRITE_IO_EXTENDED32
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_READ_WRITE_IO_EXTENDED32(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_READ_WRITE_IO_EXTENDED32"": [ 24, {
				 ""DataSize"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""InterfaceType"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""BusNumber"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""AddressSpace"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""IoAddress"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""DataValue"": [ 20, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 DataSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 InterfaceType { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 BusNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 AddressSpace { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 IoAddress { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 DataValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
	}
	#endregion
	#region _DBGKD_SET_SPECIAL_CALL32
 
	public class _DBGKD_SET_SPECIAL_CALL32
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_SET_SPECIAL_CALL32(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_SET_SPECIAL_CALL32"": [ 4, {
				 ""SpecialCall"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 SpecialCall { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _DBGKD_SET_SPECIAL_CALL64
 
	public class _DBGKD_SET_SPECIAL_CALL64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_SET_SPECIAL_CALL64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_SET_SPECIAL_CALL64"": [ 8, {
				 ""SpecialCall"": [ 0, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 SpecialCall { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _DBGKD_SET_INTERNAL_BREAKPOINT32
 
	public class _DBGKD_SET_INTERNAL_BREAKPOINT32
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_SET_INTERNAL_BREAKPOINT32(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_SET_INTERNAL_BREAKPOINT32"": [ 8, {
				 ""BreakpointAddress"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Flags"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 BreakpointAddress { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _DBGKD_SET_INTERNAL_BREAKPOINT64
 
	public class _DBGKD_SET_INTERNAL_BREAKPOINT64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_SET_INTERNAL_BREAKPOINT64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_SET_INTERNAL_BREAKPOINT64"": [ 16, {
				 ""BreakpointAddress"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Flags"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 BreakpointAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _DBGKD_GET_INTERNAL_BREAKPOINT64
 
	public class _DBGKD_GET_INTERNAL_BREAKPOINT64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_GET_INTERNAL_BREAKPOINT64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_GET_INTERNAL_BREAKPOINT64"": [ 32, {
				 ""BreakpointAddress"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Flags"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Calls"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""MaxCallsPerPeriod"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""MinInstructions"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""MaxInstructions"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""TotalInstructions"": [ 28, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 BreakpointAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Calls { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 MaxCallsPerPeriod { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 MinInstructions { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 MaxInstructions { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 TotalInstructions { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
	}
	#endregion
	#region _DBGKD_GET_INTERNAL_BREAKPOINT32
 
	public class _DBGKD_GET_INTERNAL_BREAKPOINT32
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_GET_INTERNAL_BREAKPOINT32(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 28; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_GET_INTERNAL_BREAKPOINT32"": [ 28, {
				 ""BreakpointAddress"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Flags"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Calls"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""MaxCallsPerPeriod"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""MinInstructions"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""MaxInstructions"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""TotalInstructions"": [ 24, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 BreakpointAddress { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 Calls { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 MaxCallsPerPeriod { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 MinInstructions { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 MaxInstructions { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 TotalInstructions { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _UNNAMED_29779
 
	public class _UNNAMED_29779
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_29779(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_29779"": [ 40, {
				 ""ReadMemory"": [ 0, [ ""_DBGKD_READ_MEMORY64"", ""null"" ]],
				 ""WriteMemory"": [ 0, [ ""_DBGKD_WRITE_MEMORY64"", ""null"" ]],
				 ""GetContext"": [ 0, [ ""_DBGKD_GET_CONTEXT"", ""null"" ]],
				 ""SetContext"": [ 0, [ ""_DBGKD_SET_CONTEXT"", ""null"" ]],
				 ""WriteBreakPoint"": [ 0, [ ""_DBGKD_WRITE_BREAKPOINT64"", ""null"" ]],
				 ""RestoreBreakPoint"": [ 0, [ ""_DBGKD_RESTORE_BREAKPOINT"", ""null"" ]],
				 ""Continue"": [ 0, [ ""_DBGKD_CONTINUE"", ""null"" ]],
				 ""Continue2"": [ 0, [ ""_DBGKD_CONTINUE2"", ""null"" ]],
				 ""ReadWriteIo"": [ 0, [ ""_DBGKD_READ_WRITE_IO64"", ""null"" ]],
				 ""ReadWriteIoExtended"": [ 0, [ ""_DBGKD_READ_WRITE_IO_EXTENDED64"", ""null"" ]],
				 ""QuerySpecialCalls"": [ 0, [ ""_DBGKD_QUERY_SPECIAL_CALLS"", ""null"" ]],
				 ""SetSpecialCall"": [ 0, [ ""_DBGKD_SET_SPECIAL_CALL64"", ""null"" ]],
				 ""SetInternalBreakpoint"": [ 0, [ ""_DBGKD_SET_INTERNAL_BREAKPOINT64"", ""null"" ]],
				 ""GetInternalBreakpoint"": [ 0, [ ""_DBGKD_GET_INTERNAL_BREAKPOINT64"", ""null"" ]],
				 ""GetVersion64"": [ 0, [ ""_DBGKD_GET_VERSION64"", ""null"" ]],
				 ""BreakPointEx"": [ 0, [ ""_DBGKD_BREAKPOINTEX"", ""null"" ]],
				 ""ReadWriteMsr"": [ 0, [ ""_DBGKD_READ_WRITE_MSR"", ""null"" ]],
				 ""SearchMemory"": [ 0, [ ""_DBGKD_SEARCH_MEMORY"", ""null"" ]],
				 ""GetSetBusData"": [ 0, [ ""_DBGKD_GET_SET_BUS_DATA"", ""null"" ]],
				 ""FillMemory"": [ 0, [ ""_DBGKD_FILL_MEMORY"", ""null"" ]],
				 ""QueryMemory"": [ 0, [ ""_DBGKD_QUERY_MEMORY"", ""null"" ]],
				 ""SwitchPartition"": [ 0, [ ""_DBGKD_SWITCH_PARTITION"", ""null"" ]],
				 ""GetContextEx"": [ 0, [ ""_DBGKD_CONTEXT_EX"", ""null"" ]],
				 ""SetContextEx"": [ 0, [ ""_DBGKD_CONTEXT_EX"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _DBGKD_READ_MEMORY64 ReadMemory
		{
			get
			{
				_DBGKD_READ_MEMORY64 returnValue = new _DBGKD_READ_MEMORY64(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_WRITE_MEMORY64 WriteMemory
		{
			get
			{
				_DBGKD_WRITE_MEMORY64 returnValue = new _DBGKD_WRITE_MEMORY64(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_GET_CONTEXT GetContext
		{
			get
			{
				_DBGKD_GET_CONTEXT returnValue = new _DBGKD_GET_CONTEXT(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_SET_CONTEXT SetContext
		{
			get
			{
				_DBGKD_SET_CONTEXT returnValue = new _DBGKD_SET_CONTEXT(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_WRITE_BREAKPOINT64 WriteBreakPoint
		{
			get
			{
				_DBGKD_WRITE_BREAKPOINT64 returnValue = new _DBGKD_WRITE_BREAKPOINT64(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_RESTORE_BREAKPOINT RestoreBreakPoint
		{
			get
			{
				_DBGKD_RESTORE_BREAKPOINT returnValue = new _DBGKD_RESTORE_BREAKPOINT(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_CONTINUE Continue
		{
			get
			{
				_DBGKD_CONTINUE returnValue = new _DBGKD_CONTINUE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_CONTINUE2 Continue2
		{
			get
			{
				_DBGKD_CONTINUE2 returnValue = new _DBGKD_CONTINUE2(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_READ_WRITE_IO64 ReadWriteIo
		{
			get
			{
				_DBGKD_READ_WRITE_IO64 returnValue = new _DBGKD_READ_WRITE_IO64(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_READ_WRITE_IO_EXTENDED64 ReadWriteIoExtended
		{
			get
			{
				_DBGKD_READ_WRITE_IO_EXTENDED64 returnValue = new _DBGKD_READ_WRITE_IO_EXTENDED64(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_QUERY_SPECIAL_CALLS QuerySpecialCalls
		{
			get
			{
				_DBGKD_QUERY_SPECIAL_CALLS returnValue = new _DBGKD_QUERY_SPECIAL_CALLS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_SET_SPECIAL_CALL64 SetSpecialCall
		{
			get
			{
				_DBGKD_SET_SPECIAL_CALL64 returnValue = new _DBGKD_SET_SPECIAL_CALL64(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_SET_INTERNAL_BREAKPOINT64 SetInternalBreakpoint
		{
			get
			{
				_DBGKD_SET_INTERNAL_BREAKPOINT64 returnValue = new _DBGKD_SET_INTERNAL_BREAKPOINT64(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_GET_INTERNAL_BREAKPOINT64 GetInternalBreakpoint
		{
			get
			{
				_DBGKD_GET_INTERNAL_BREAKPOINT64 returnValue = new _DBGKD_GET_INTERNAL_BREAKPOINT64(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_GET_VERSION64 GetVersion64
		{
			get
			{
				_DBGKD_GET_VERSION64 returnValue = new _DBGKD_GET_VERSION64(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_BREAKPOINTEX BreakPointEx
		{
			get
			{
				_DBGKD_BREAKPOINTEX returnValue = new _DBGKD_BREAKPOINTEX(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_READ_WRITE_MSR ReadWriteMsr
		{
			get
			{
				_DBGKD_READ_WRITE_MSR returnValue = new _DBGKD_READ_WRITE_MSR(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_SEARCH_MEMORY SearchMemory
		{
			get
			{
				_DBGKD_SEARCH_MEMORY returnValue = new _DBGKD_SEARCH_MEMORY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_GET_SET_BUS_DATA GetSetBusData
		{
			get
			{
				_DBGKD_GET_SET_BUS_DATA returnValue = new _DBGKD_GET_SET_BUS_DATA(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_FILL_MEMORY FillMemory
		{
			get
			{
				_DBGKD_FILL_MEMORY returnValue = new _DBGKD_FILL_MEMORY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_QUERY_MEMORY QueryMemory
		{
			get
			{
				_DBGKD_QUERY_MEMORY returnValue = new _DBGKD_QUERY_MEMORY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_SWITCH_PARTITION SwitchPartition
		{
			get
			{
				_DBGKD_SWITCH_PARTITION returnValue = new _DBGKD_SWITCH_PARTITION(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_CONTEXT_EX GetContextEx
		{
			get
			{
				_DBGKD_CONTEXT_EX returnValue = new _DBGKD_CONTEXT_EX(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_CONTEXT_EX SetContextEx
		{
			get
			{
				_DBGKD_CONTEXT_EX returnValue = new _DBGKD_CONTEXT_EX(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _DBGKD_MANIPULATE_STATE64
 
	public class _DBGKD_MANIPULATE_STATE64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_MANIPULATE_STATE64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_MANIPULATE_STATE64"": [ 56, {
				 ""ApiNumber"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ProcessorLevel"": [ 4, [ ""UInt16"", ""null"" ]],
				 ""Processor"": [ 6, [ ""UInt16"", ""null"" ]],
				 ""ReturnStatus"": [ 8, [ ""Int32"", ""null"" ]],
				 ""u"": [ 16, [ ""_UNNAMED_29779"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 ApiNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt16 ProcessorLevel { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 4); } }
		public UInt16 Processor { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
		public Int32 ReturnStatus { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 8); } }
		public _UNNAMED_29779 u
		{
			get
			{
				_UNNAMED_29779 returnValue = new _UNNAMED_29779(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_29825
 
	public class _UNNAMED_29825
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_29825(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_29825"": [ 40, {
				 ""ReadMemory"": [ 0, [ ""_DBGKD_READ_MEMORY32"", ""null"" ]],
				 ""WriteMemory"": [ 0, [ ""_DBGKD_WRITE_MEMORY32"", ""null"" ]],
				 ""ReadMemory64"": [ 0, [ ""_DBGKD_READ_MEMORY64"", ""null"" ]],
				 ""WriteMemory64"": [ 0, [ ""_DBGKD_WRITE_MEMORY64"", ""null"" ]],
				 ""GetContext"": [ 0, [ ""_DBGKD_GET_CONTEXT"", ""null"" ]],
				 ""SetContext"": [ 0, [ ""_DBGKD_SET_CONTEXT"", ""null"" ]],
				 ""WriteBreakPoint"": [ 0, [ ""_DBGKD_WRITE_BREAKPOINT32"", ""null"" ]],
				 ""RestoreBreakPoint"": [ 0, [ ""_DBGKD_RESTORE_BREAKPOINT"", ""null"" ]],
				 ""Continue"": [ 0, [ ""_DBGKD_CONTINUE"", ""null"" ]],
				 ""Continue2"": [ 0, [ ""_DBGKD_CONTINUE2"", ""null"" ]],
				 ""ReadWriteIo"": [ 0, [ ""_DBGKD_READ_WRITE_IO32"", ""null"" ]],
				 ""ReadWriteIoExtended"": [ 0, [ ""_DBGKD_READ_WRITE_IO_EXTENDED32"", ""null"" ]],
				 ""QuerySpecialCalls"": [ 0, [ ""_DBGKD_QUERY_SPECIAL_CALLS"", ""null"" ]],
				 ""SetSpecialCall"": [ 0, [ ""_DBGKD_SET_SPECIAL_CALL32"", ""null"" ]],
				 ""SetInternalBreakpoint"": [ 0, [ ""_DBGKD_SET_INTERNAL_BREAKPOINT32"", ""null"" ]],
				 ""GetInternalBreakpoint"": [ 0, [ ""_DBGKD_GET_INTERNAL_BREAKPOINT32"", ""null"" ]],
				 ""GetVersion32"": [ 0, [ ""_DBGKD_GET_VERSION32"", ""null"" ]],
				 ""BreakPointEx"": [ 0, [ ""_DBGKD_BREAKPOINTEX"", ""null"" ]],
				 ""ReadWriteMsr"": [ 0, [ ""_DBGKD_READ_WRITE_MSR"", ""null"" ]],
				 ""SearchMemory"": [ 0, [ ""_DBGKD_SEARCH_MEMORY"", ""null"" ]],
				 ""GetContextEx"": [ 0, [ ""_DBGKD_CONTEXT_EX"", ""null"" ]],
				 ""SetContextEx"": [ 0, [ ""_DBGKD_CONTEXT_EX"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _DBGKD_READ_MEMORY32 ReadMemory
		{
			get
			{
				_DBGKD_READ_MEMORY32 returnValue = new _DBGKD_READ_MEMORY32(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_WRITE_MEMORY32 WriteMemory
		{
			get
			{
				_DBGKD_WRITE_MEMORY32 returnValue = new _DBGKD_WRITE_MEMORY32(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_READ_MEMORY64 ReadMemory64
		{
			get
			{
				_DBGKD_READ_MEMORY64 returnValue = new _DBGKD_READ_MEMORY64(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_WRITE_MEMORY64 WriteMemory64
		{
			get
			{
				_DBGKD_WRITE_MEMORY64 returnValue = new _DBGKD_WRITE_MEMORY64(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_GET_CONTEXT GetContext
		{
			get
			{
				_DBGKD_GET_CONTEXT returnValue = new _DBGKD_GET_CONTEXT(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_SET_CONTEXT SetContext
		{
			get
			{
				_DBGKD_SET_CONTEXT returnValue = new _DBGKD_SET_CONTEXT(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_WRITE_BREAKPOINT32 WriteBreakPoint
		{
			get
			{
				_DBGKD_WRITE_BREAKPOINT32 returnValue = new _DBGKD_WRITE_BREAKPOINT32(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_RESTORE_BREAKPOINT RestoreBreakPoint
		{
			get
			{
				_DBGKD_RESTORE_BREAKPOINT returnValue = new _DBGKD_RESTORE_BREAKPOINT(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_CONTINUE Continue
		{
			get
			{
				_DBGKD_CONTINUE returnValue = new _DBGKD_CONTINUE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_CONTINUE2 Continue2
		{
			get
			{
				_DBGKD_CONTINUE2 returnValue = new _DBGKD_CONTINUE2(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_READ_WRITE_IO32 ReadWriteIo
		{
			get
			{
				_DBGKD_READ_WRITE_IO32 returnValue = new _DBGKD_READ_WRITE_IO32(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_READ_WRITE_IO_EXTENDED32 ReadWriteIoExtended
		{
			get
			{
				_DBGKD_READ_WRITE_IO_EXTENDED32 returnValue = new _DBGKD_READ_WRITE_IO_EXTENDED32(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_QUERY_SPECIAL_CALLS QuerySpecialCalls
		{
			get
			{
				_DBGKD_QUERY_SPECIAL_CALLS returnValue = new _DBGKD_QUERY_SPECIAL_CALLS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_SET_SPECIAL_CALL32 SetSpecialCall
		{
			get
			{
				_DBGKD_SET_SPECIAL_CALL32 returnValue = new _DBGKD_SET_SPECIAL_CALL32(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_SET_INTERNAL_BREAKPOINT32 SetInternalBreakpoint
		{
			get
			{
				_DBGKD_SET_INTERNAL_BREAKPOINT32 returnValue = new _DBGKD_SET_INTERNAL_BREAKPOINT32(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_GET_INTERNAL_BREAKPOINT32 GetInternalBreakpoint
		{
			get
			{
				_DBGKD_GET_INTERNAL_BREAKPOINT32 returnValue = new _DBGKD_GET_INTERNAL_BREAKPOINT32(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_GET_VERSION32 GetVersion32
		{
			get
			{
				_DBGKD_GET_VERSION32 returnValue = new _DBGKD_GET_VERSION32(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_BREAKPOINTEX BreakPointEx
		{
			get
			{
				_DBGKD_BREAKPOINTEX returnValue = new _DBGKD_BREAKPOINTEX(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_READ_WRITE_MSR ReadWriteMsr
		{
			get
			{
				_DBGKD_READ_WRITE_MSR returnValue = new _DBGKD_READ_WRITE_MSR(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_SEARCH_MEMORY SearchMemory
		{
			get
			{
				_DBGKD_SEARCH_MEMORY returnValue = new _DBGKD_SEARCH_MEMORY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_CONTEXT_EX GetContextEx
		{
			get
			{
				_DBGKD_CONTEXT_EX returnValue = new _DBGKD_CONTEXT_EX(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _DBGKD_CONTEXT_EX SetContextEx
		{
			get
			{
				_DBGKD_CONTEXT_EX returnValue = new _DBGKD_CONTEXT_EX(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _DBGKD_MANIPULATE_STATE32
 
	public class _DBGKD_MANIPULATE_STATE32
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_MANIPULATE_STATE32(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 52; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_MANIPULATE_STATE32"": [ 52, {
				 ""ApiNumber"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ProcessorLevel"": [ 4, [ ""UInt16"", ""null"" ]],
				 ""Processor"": [ 6, [ ""UInt16"", ""null"" ]],
				 ""ReturnStatus"": [ 8, [ ""Int32"", ""null"" ]],
				 ""u"": [ 12, [ ""_UNNAMED_29825"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 ApiNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt16 ProcessorLevel { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 4); } }
		public UInt16 Processor { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
		public Int32 ReturnStatus { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 8); } }
		public _UNNAMED_29825 u
		{
			get
			{
				_UNNAMED_29825 returnValue = new _UNNAMED_29825(_StructureData, _BufferOffset + 12);
				return returnValue;
			}
		}
	}
	#endregion
	#region _DBGKD_READ_WRITE_MSR
 
	public class _DBGKD_READ_WRITE_MSR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_READ_WRITE_MSR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_READ_WRITE_MSR"": [ 12, {
				 ""Msr"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""DataValueLow"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""DataValueHigh"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Msr { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 DataValueLow { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 DataValueHigh { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _DBGKD_BREAKPOINTEX
 
	public class _DBGKD_BREAKPOINTEX
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_BREAKPOINTEX(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_BREAKPOINTEX"": [ 8, {
				 ""BreakPointCount"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ContinueStatus"": [ 4, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 BreakPointCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Int32 ContinueStatus { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _DBGKD_SEARCH_MEMORY
 
	public class _DBGKD_SEARCH_MEMORY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_SEARCH_MEMORY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_SEARCH_MEMORY"": [ 24, {
				 ""SearchAddress"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""FoundAddress"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""SearchLength"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""PatternLength"": [ 16, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 SearchAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 FoundAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 SearchLength { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 PatternLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _DBGKD_RESTORE_BREAKPOINT
 
	public class _DBGKD_RESTORE_BREAKPOINT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_RESTORE_BREAKPOINT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_RESTORE_BREAKPOINT"": [ 4, {
				 ""BreakPointHandle"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 BreakPointHandle { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _DBGKD_CONTINUE
 
	public class _DBGKD_CONTINUE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_CONTINUE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_CONTINUE"": [ 4, {
				 ""ContinueStatus"": [ 0, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int32 ContinueStatus { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _DBGKD_CONTINUE2
 
	public class _DBGKD_CONTINUE2
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_CONTINUE2(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_CONTINUE2"": [ 32, {
				 ""ContinueStatus"": [ 0, [ ""Int32"", ""null"" ]],
				 ""ControlSet"": [ 4, [ ""_AMD64_DBGKD_CONTROL_SET"", ""null"" ]],
				 ""AnyControlSet"": [ 4, [ ""_DBGKD_ANY_CONTROL_SET"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int32 ContinueStatus { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public _AMD64_DBGKD_CONTROL_SET ControlSet
		{
			get
			{
				_AMD64_DBGKD_CONTROL_SET returnValue = new _AMD64_DBGKD_CONTROL_SET(_StructureData, _BufferOffset + 4);
				return returnValue;
			}
		}
		public _DBGKD_ANY_CONTROL_SET AnyControlSet
		{
			get
			{
				_DBGKD_ANY_CONTROL_SET returnValue = new _DBGKD_ANY_CONTROL_SET(_StructureData, _BufferOffset + 4);
				return returnValue;
			}
		}
	}
	#endregion
	#region _PPM_IDLE_SYNCHRONIZATION_STATE
 
	public class _PPM_IDLE_SYNCHRONIZATION_STATE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PPM_IDLE_SYNCHRONIZATION_STATE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PPM_IDLE_SYNCHRONIZATION_STATE"": [ 4, {
				 ""AsLong"": [ 0, [ ""Int32"", ""null"" ]],
				 ""RefCount"": [ 0, [ ""BitField"", ""{\""end_bit\"":24,\""start_bit\"":0,\""target\"":\""Int32\""}"" ]],
				 ""State"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":24,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public Int32 AsLong { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 RefCount
		{
			get
			{
				// start: 0  end: 24  Mask: 111111111111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16777215) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 State
		{
			get
			{
				// start: 24  end: 32  Mask: 11111111000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4278190080) >> 24;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _PROCESSOR_POWER_STATE
 
	public class _PROCESSOR_POWER_STATE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROCESSOR_POWER_STATE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 480; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROCESSOR_POWER_STATE"": [ 480, {
				 ""IdleStates"": [ 0, [ ""Pointer"", ""{\""target\"":\""_PPM_IDLE_STATES\""}"" ]],
				 ""IdleAccounting"": [ 8, [ ""Pointer"", ""{\""target\"":\""_PROC_IDLE_ACCOUNTING\""}"" ]],
				 ""IdleTimeLast"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""IdleTimeTotal"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""IdleTimeEntry"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""Reserved"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""IdlePolicy"": [ 48, [ ""_PROC_IDLE_POLICY"", ""null"" ]],
				 ""Synchronization"": [ 56, [ ""_PPM_IDLE_SYNCHRONIZATION_STATE"", ""null"" ]],
				 ""PerfFeedback"": [ 64, [ ""_PROC_FEEDBACK"", ""null"" ]],
				 ""Hypervisor"": [ 176, [ ""Enumeration"", ""{\""enum_name\"":\""_PROC_HYPERVISOR_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""LastSysTime"": [ 180, [ ""UInt32"", ""null"" ]],
				 ""WmiDispatchPtr"": [ 184, [ ""UInt64"", ""null"" ]],
				 ""WmiInterfaceEnabled"": [ 192, [ ""Int32"", ""null"" ]],
				 ""FFHThrottleStateInfo"": [ 200, [ ""_PPM_FFH_THROTTLE_STATE_INFO"", ""null"" ]],
				 ""PerfActionDpc"": [ 232, [ ""_KDPC"", ""null"" ]],
				 ""PerfActionMask"": [ 296, [ ""Int32"", ""null"" ]],
				 ""HvIdleCheck"": [ 304, [ ""_PROC_IDLE_SNAP"", ""null"" ]],
				 ""PerfCheck"": [ 320, [ ""_PROC_PERF_SNAP"", ""null"" ]],
				 ""Domain"": [ 384, [ ""Pointer"", ""{\""target\"":\""_PROC_PERF_DOMAIN\""}"" ]],
				 ""PerfConstraint"": [ 392, [ ""Pointer"", ""{\""target\"":\""_PROC_PERF_CONSTRAINT\""}"" ]],
				 ""Concurrency"": [ 400, [ ""Pointer"", ""{\""target\"":\""_PPM_CONCURRENCY_ACCOUNTING\""}"" ]],
				 ""Load"": [ 408, [ ""Pointer"", ""{\""target\"":\""_PROC_PERF_LOAD\""}"" ]],
				 ""PerfHistory"": [ 416, [ ""Pointer"", ""{\""target\"":\""_PROC_PERF_HISTORY\""}"" ]],
				 ""GuaranteedPerformancePercent"": [ 424, [ ""Byte"", ""null"" ]],
				 ""HvTargetState"": [ 425, [ ""Byte"", ""null"" ]],
				 ""Parked"": [ 426, [ ""Byte"", ""null"" ]],
				 ""OverUtilized"": [ 427, [ ""Byte"", ""null"" ]],
				 ""LatestPerformancePercent"": [ 428, [ ""UInt32"", ""null"" ]],
				 ""LatestAffinitizedPercent"": [ 432, [ ""UInt32"", ""null"" ]],
				 ""ExpectedUtility"": [ 436, [ ""UInt32"", ""null"" ]],
				 ""Utility"": [ 440, [ ""Array"", ""{\""count\"":3,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 IdleStates { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 IdleAccounting { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 IdleTimeLast { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 IdleTimeTotal { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 IdleTimeEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 Reserved { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public _PROC_IDLE_POLICY IdlePolicy
		{
			get
			{
				_PROC_IDLE_POLICY returnValue = new _PROC_IDLE_POLICY(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public _PPM_IDLE_SYNCHRONIZATION_STATE Synchronization
		{
			get
			{
				_PPM_IDLE_SYNCHRONIZATION_STATE returnValue = new _PPM_IDLE_SYNCHRONIZATION_STATE(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public _PROC_FEEDBACK PerfFeedback
		{
			get
			{
				_PROC_FEEDBACK returnValue = new _PROC_FEEDBACK(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public _PROC_HYPERVISOR_STATE Hypervisor { get { return (_PROC_HYPERVISOR_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 176); } }
		public UInt32 LastSysTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 180); } }
		public UInt64 WmiDispatchPtr { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 184); } }
		public Int32 WmiInterfaceEnabled { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 192); } }
		public _PPM_FFH_THROTTLE_STATE_INFO FFHThrottleStateInfo
		{
			get
			{
				_PPM_FFH_THROTTLE_STATE_INFO returnValue = new _PPM_FFH_THROTTLE_STATE_INFO(_StructureData, _BufferOffset + 200);
				return returnValue;
			}
		}
		public _KDPC PerfActionDpc
		{
			get
			{
				_KDPC returnValue = new _KDPC(_StructureData, _BufferOffset + 232);
				return returnValue;
			}
		}
		public Int32 PerfActionMask { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 296); } }
		public _PROC_IDLE_SNAP HvIdleCheck
		{
			get
			{
				_PROC_IDLE_SNAP returnValue = new _PROC_IDLE_SNAP(_StructureData, _BufferOffset + 304);
				return returnValue;
			}
		}
		public _PROC_PERF_SNAP PerfCheck
		{
			get
			{
				_PROC_PERF_SNAP returnValue = new _PROC_PERF_SNAP(_StructureData, _BufferOffset + 320);
				return returnValue;
			}
		}
		public UInt64 Domain { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 384); } }
		public UInt64 PerfConstraint { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 392); } }
		public UInt64 Concurrency { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 400); } }
		public UInt64 Load { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 408); } }
		public UInt64 PerfHistory { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 416); } }
		public Byte GuaranteedPerformancePercent{ get { return _StructureData[_BufferOffset +424]; } }
		public Byte HvTargetState{ get { return _StructureData[_BufferOffset +425]; } }
		public Byte Parked{ get { return _StructureData[_BufferOffset +426]; } }
		public Byte OverUtilized{ get { return _StructureData[_BufferOffset +427]; } }
		public UInt32 LatestPerformancePercent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 428); } }
		public UInt32 LatestAffinitizedPercent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 432); } }
		public UInt32 ExpectedUtility { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 436); } }
		public _PROC_PERF_UTILITY[] Utility
		{
			get
			{
				_PROC_PERF_UTILITY[] returnValue = new _PROC_PERF_UTILITY[3];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<3; i++ )
					returnValue[i] = new _PROC_PERF_UTILITY(_StructureData, (i * size) + _BufferOffset + 440);
				return returnValue;
			}
		}
	}
	#endregion
	#region _PROC_PERF_UTILITY
 
	public class _PROC_PERF_UTILITY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROC_PERF_UTILITY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROC_PERF_UTILITY"": [ 12, {
				 ""Affinitized"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Performance"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Total"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Affinitized { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Performance { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 Total { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _CPU_INFO
 
	public class _CPU_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CPU_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CPU_INFO"": [ 16, {
				 ""AsUINT32"": [ 0, [ ""Array"", ""{\""count\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""Eax"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Ebx"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Ecx"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Edx"": [ 12, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32[] AsUINT32
		{
			get
			{
				UInt32[] returnValue = new UInt32[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 Eax { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Ebx { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 Ecx { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Edx { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
	}
	#endregion
	#region _POP_FX_COMPONENT_FLAGS
 
	public class _POP_FX_COMPONENT_FLAGS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_FX_COMPONENT_FLAGS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_FX_COMPONENT_FLAGS"": [ 8, {
				 ""Value"": [ 0, [ ""Int32"", ""null"" ]],
				 ""Value2"": [ 4, [ ""Int32"", ""null"" ]],
				 ""RefCount"": [ 0, [ ""BitField"", ""{\""end_bit\"":30,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""Idling"": [ 0, [ ""BitField"", ""{\""end_bit\"":31,\""start_bit\"":30,\""target\"":\""UInt32\""}"" ]],
				 ""Active"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":31,\""target\"":\""UInt32\""}"" ]],
				 ""CriticalIdleOverride"": [ 4, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""ResidentOverride"": [ 4, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""CompleteIdleStatePending"": [ 4, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""Reserved"": [ 4, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public Int32 Value { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public Int32 Value2 { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 RefCount
		{
			get
			{
				// start: 0  end: 30  Mask: 111111111111111111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1073741823) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 Idling
		{
			get
			{
				// start: 30  end: 31  Mask: 1000000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1073741824) >> 30;
				return (UInt32)value2;
			}
		}
		public UInt32 Active
		{
			get
			{
				// start: 31  end: 32  Mask: 10000000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2147483648) >> 31;
				return (UInt32)value2;
			}
		}
		public UInt32 CriticalIdleOverride
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 ResidentOverride
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 CompleteIdleStatePending
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 Reserved
		{
			get
			{
				// start: 3  end: 32  Mask: 11111111111111111111111111111000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 4294967288) >> 3;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _POP_FX_DEVICE_STATUS
 
	public class _POP_FX_DEVICE_STATUS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_FX_DEVICE_STATUS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_FX_DEVICE_STATUS"": [ 4, {
				 ""Value"": [ 0, [ ""Int32"", ""null"" ]],
				 ""SystemTransition"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""PepD0Notify"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""IdleTimerOn"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""IgnoreIdleTimeout"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""IrpInUse"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""IrpPending"": [ 0, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""DPNRDeviceNotified"": [ 0, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""DPNRReceivedFromPep"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt32\""}"" ]],
				 ""Reserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public Int32 Value { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 SystemTransition
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 PepD0Notify
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 IdleTimerOn
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 IgnoreIdleTimeout
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 IrpInUse
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 IrpPending
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 DPNRDeviceNotified
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 64) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 DPNRReceivedFromPep
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 128) >> 7;
				return (UInt32)value2;
			}
		}
		public UInt32 Reserved
		{
			get
			{
				// start: 8  end: 32  Mask: 11111111111111111111111100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967040) >> 8;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _POP_RW_LOCK
 
	public class _POP_RW_LOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_RW_LOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_RW_LOCK"": [ 16, {
				 ""Lock"": [ 0, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""Thread"": [ 8, [ ""Pointer"", ""{\""target\"":\""_KTHREAD\""}"" ]] }]
				 }
				)";
			}
		}
		public _EX_PUSH_LOCK Lock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Thread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _VOLUME_CACHE_MAP
 
	public class _VOLUME_CACHE_MAP
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VOLUME_CACHE_MAP(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 208; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VOLUME_CACHE_MAP"": [ 208, {
				 ""NodeTypeCode"": [ 0, [ ""Int16"", ""null"" ]],
				 ""NodeByteCode"": [ 2, [ ""Int16"", ""null"" ]],
				 ""UseCount"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""DeviceObject"": [ 8, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""VolumeCacheMapLinks"": [ 16, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""DirtyPages"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""LogHandleContext"": [ 40, [ ""_LOG_HANDLE_CONTEXT"", ""null"" ]],
				 ""Flags"": [ 192, [ ""UInt32"", ""null"" ]],
				 ""PagesQueuedToDisk"": [ 196, [ ""UInt32"", ""null"" ]],
				 ""LoggedPagesQueuedToDisk"": [ 200, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int16 NodeTypeCode { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 0); } }
		public Int16 NodeByteCode { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 2); } }
		public UInt32 UseCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 DeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _LIST_ENTRY VolumeCacheMapLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt64 DirtyPages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public _LOG_HANDLE_CONTEXT LogHandleContext
		{
			get
			{
				_LOG_HANDLE_CONTEXT returnValue = new _LOG_HANDLE_CONTEXT(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 192); } }
		public UInt32 PagesQueuedToDisk { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 196); } }
		public UInt32 LoggedPagesQueuedToDisk { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 200); } }
	}
	#endregion
	#region _SHARED_CACHE_MAP
 
	public class _SHARED_CACHE_MAP
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SHARED_CACHE_MAP(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 520; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SHARED_CACHE_MAP"": [ 520, {
				 ""NodeTypeCode"": [ 0, [ ""Int16"", ""null"" ]],
				 ""NodeByteSize"": [ 2, [ ""Int16"", ""null"" ]],
				 ""OpenCount"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""FileSize"": [ 8, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""BcbList"": [ 16, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""SectionSize"": [ 32, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""ValidDataLength"": [ 40, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""ValidDataGoal"": [ 48, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""InitialVacbs"": [ 56, [ ""Array"", ""{\""count\"":4,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""_VACB\""}}"" ]],
				 ""Vacbs"": [ 88, [ ""Pointer"", ""{\""target\"":\""_VACB*\""}"" ]],
				 ""FileObjectFastRef"": [ 96, [ ""_EX_FAST_REF"", ""null"" ]],
				 ""VacbLock"": [ 104, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""DirtyPages"": [ 112, [ ""UInt32"", ""null"" ]],
				 ""LoggedStreamLinks"": [ 120, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""SharedCacheMapLinks"": [ 136, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Flags"": [ 152, [ ""UInt32"", ""null"" ]],
				 ""Status"": [ 156, [ ""Int32"", ""null"" ]],
				 ""Mbcb"": [ 160, [ ""Pointer"", ""{\""target\"":\""_MBCB\""}"" ]],
				 ""Section"": [ 168, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CreateEvent"": [ 176, [ ""Pointer"", ""{\""target\"":\""_KEVENT\""}"" ]],
				 ""WaitOnActiveCount"": [ 184, [ ""Pointer"", ""{\""target\"":\""_KEVENT\""}"" ]],
				 ""PagesToWrite"": [ 192, [ ""UInt32"", ""null"" ]],
				 ""BeyondLastFlush"": [ 200, [ ""Int64"", ""null"" ]],
				 ""Callbacks"": [ 208, [ ""Pointer"", ""{\""target\"":\""_CACHE_MANAGER_CALLBACKS\""}"" ]],
				 ""LazyWriteContext"": [ 216, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PrivateList"": [ 224, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""V1"": [ 240, [ ""_LOGGED_STREAM_CALLBACK_V1"", ""null"" ]],
				 ""V2"": [ 240, [ ""_LOGGED_STREAM_CALLBACK_V2"", ""null"" ]],
				 ""LargestLSN"": [ 256, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""DirtyPageThreshold"": [ 264, [ ""UInt32"", ""null"" ]],
				 ""LazyWritePassCount"": [ 268, [ ""UInt32"", ""null"" ]],
				 ""UninitializeEvent"": [ 272, [ ""Pointer"", ""{\""target\"":\""_CACHE_UNINITIALIZE_EVENT\""}"" ]],
				 ""BcbLock"": [ 280, [ ""_FAST_MUTEX"", ""null"" ]],
				 ""LastUnmapBehindOffset"": [ 336, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""Event"": [ 344, [ ""_KEVENT"", ""null"" ]],
				 ""HighWaterMappingOffset"": [ 368, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""PrivateCacheMap"": [ 376, [ ""_PRIVATE_CACHE_MAP"", ""null"" ]],
				 ""WriteBehindWorkQueueEntry"": [ 496, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""VolumeCacheMap"": [ 504, [ ""Pointer"", ""{\""target\"":\""_VOLUME_CACHE_MAP\""}"" ]],
				 ""ProcImagePathHash"": [ 512, [ ""UInt32"", ""null"" ]],
				 ""WritesInProgress"": [ 516, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int16 NodeTypeCode { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 0); } }
		public Int16 NodeByteSize { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 2); } }
		public UInt32 OpenCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _LARGE_INTEGER FileSize
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _LIST_ENTRY BcbList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _LARGE_INTEGER SectionSize
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public _LARGE_INTEGER ValidDataLength
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public _LARGE_INTEGER ValidDataGoal
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public UInt64[] InitialVacbs
		{
			get
			{
				UInt64[] returnValue = new UInt64[4];
				int size = 8;
				for(int i=0; i<4; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 56);
				return returnValue;
			}
		}
		public UInt64 Vacbs { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public _EX_FAST_REF FileObjectFastRef
		{
			get
			{
				_EX_FAST_REF returnValue = new _EX_FAST_REF(_StructureData, _BufferOffset + 96);
				return returnValue;
			}
		}
		public _EX_PUSH_LOCK VacbLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 104);
				return returnValue;
			}
		}
		public UInt32 DirtyPages { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 112); } }
		public _LIST_ENTRY LoggedStreamLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 120);
				return returnValue;
			}
		}
		public _LIST_ENTRY SharedCacheMapLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 136);
				return returnValue;
			}
		}
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 152); } }
		public Int32 Status { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 156); } }
		public UInt64 Mbcb { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public UInt64 Section { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 168); } }
		public UInt64 CreateEvent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 176); } }
		public UInt64 WaitOnActiveCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 184); } }
		public UInt32 PagesToWrite { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 192); } }
		public Int64 BeyondLastFlush { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 200); } }
		public UInt64 Callbacks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 208); } }
		public UInt64 LazyWriteContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 216); } }
		public _LIST_ENTRY PrivateList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 224);
				return returnValue;
			}
		}
		public _LOGGED_STREAM_CALLBACK_V1 V1
		{
			get
			{
				_LOGGED_STREAM_CALLBACK_V1 returnValue = new _LOGGED_STREAM_CALLBACK_V1(_StructureData, _BufferOffset + 240);
				return returnValue;
			}
		}
		public _LOGGED_STREAM_CALLBACK_V2 V2
		{
			get
			{
				_LOGGED_STREAM_CALLBACK_V2 returnValue = new _LOGGED_STREAM_CALLBACK_V2(_StructureData, _BufferOffset + 240);
				return returnValue;
			}
		}
		public _LARGE_INTEGER LargestLSN
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 256);
				return returnValue;
			}
		}
		public UInt32 DirtyPageThreshold { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 264); } }
		public UInt32 LazyWritePassCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 268); } }
		public UInt64 UninitializeEvent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 272); } }
		public _FAST_MUTEX BcbLock
		{
			get
			{
				_FAST_MUTEX returnValue = new _FAST_MUTEX(_StructureData, _BufferOffset + 280);
				return returnValue;
			}
		}
		public _LARGE_INTEGER LastUnmapBehindOffset
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 336);
				return returnValue;
			}
		}
		public _KEVENT Event
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 344);
				return returnValue;
			}
		}
		public _LARGE_INTEGER HighWaterMappingOffset
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 368);
				return returnValue;
			}
		}
		public _PRIVATE_CACHE_MAP PrivateCacheMap
		{
			get
			{
				_PRIVATE_CACHE_MAP returnValue = new _PRIVATE_CACHE_MAP(_StructureData, _BufferOffset + 376);
				return returnValue;
			}
		}
		public UInt64 WriteBehindWorkQueueEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 496); } }
		public UInt64 VolumeCacheMap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 504); } }
		public UInt32 ProcImagePathHash { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 512); } }
		public UInt32 WritesInProgress { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 516); } }
	}
	#endregion
	#region _UNNAMED_30029
 
	public class _UNNAMED_30029
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30029(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30029"": [ 16, {
				 ""FileOffset"": [ 0, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""ActiveCount"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Links"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LARGE_INTEGER FileOffset
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt16 ActiveCount { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public _LIST_ENTRY Links
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _VACB
 
	public class _VACB
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VACB(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VACB"": [ 40, {
				 ""BaseAddress"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SharedCacheMap"": [ 8, [ ""Pointer"", ""{\""target\"":\""_SHARED_CACHE_MAP\""}"" ]],
				 ""Overlay"": [ 16, [ ""_UNNAMED_30029"", ""null"" ]],
				 ""ArrayHead"": [ 32, [ ""Pointer"", ""{\""target\"":\""_VACB_ARRAY_HEADER\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 BaseAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 SharedCacheMap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _UNNAMED_30029 Overlay
		{
			get
			{
				_UNNAMED_30029 returnValue = new _UNNAMED_30029(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt64 ArrayHead { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _UNNAMED_30040
 
	public class _UNNAMED_30040
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30040(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30040"": [ 8, {
				 ""FileObject"": [ 0, [ ""Pointer"", ""{\""target\"":\""_FILE_OBJECT\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 FileObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_30042
 
	public class _UNNAMED_30042
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30042(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30042"": [ 8, {
				 ""SharedCacheMap"": [ 0, [ ""Pointer"", ""{\""target\"":\""_SHARED_CACHE_MAP\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 SharedCacheMap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_30044
 
	public class _UNNAMED_30044
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30044(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30044"": [ 8, {
				 ""Event"": [ 0, [ ""Pointer"", ""{\""target\"":\""_KEVENT\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Event { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_30046
 
	public class _UNNAMED_30046
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30046(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30046"": [ 4, {
				 ""Reason"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Reason { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_30048
 
	public class _UNNAMED_30048
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30048(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30048"": [ 48, {
				 ""SharedCacheMap"": [ 0, [ ""Pointer"", ""{\""target\"":\""_SHARED_CACHE_MAP\""}"" ]],
				 ""IoStatus"": [ 8, [ ""Pointer"", ""{\""target\"":\""_IO_STATUS_BLOCK\""}"" ]],
				 ""CallerWaitEvent"": [ 16, [ ""_KEVENT"", ""null"" ]],
				 ""IsLowPriWriteBehind"": [ 40, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 SharedCacheMap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 IoStatus { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _KEVENT CallerWaitEvent
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public Byte IsLowPriWriteBehind{ get { return _StructureData[_BufferOffset +40]; } }
	}
	#endregion
	#region _UNNAMED_30053
 
	public class _UNNAMED_30053
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30053(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30053"": [ 48, {
				 ""Read"": [ 0, [ ""_UNNAMED_30040"", ""null"" ]],
				 ""Write"": [ 0, [ ""_UNNAMED_30042"", ""null"" ]],
				 ""Event"": [ 0, [ ""_UNNAMED_30044"", ""null"" ]],
				 ""Notification"": [ 0, [ ""_UNNAMED_30046"", ""null"" ]],
				 ""LowPriWrite"": [ 0, [ ""_UNNAMED_30048"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_30040 Read
		{
			get
			{
				_UNNAMED_30040 returnValue = new _UNNAMED_30040(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_30042 Write
		{
			get
			{
				_UNNAMED_30042 returnValue = new _UNNAMED_30042(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_30044 Event
		{
			get
			{
				_UNNAMED_30044 returnValue = new _UNNAMED_30044(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_30046 Notification
		{
			get
			{
				_UNNAMED_30046 returnValue = new _UNNAMED_30046(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_30048 LowPriWrite
		{
			get
			{
				_UNNAMED_30048 returnValue = new _UNNAMED_30048(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _WORK_QUEUE_ENTRY
 
	public class _WORK_QUEUE_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WORK_QUEUE_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WORK_QUEUE_ENTRY"": [ 72, {
				 ""WorkQueueLinks"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Parameters"": [ 16, [ ""_UNNAMED_30053"", ""null"" ]],
				 ""Function"": [ 64, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY WorkQueueLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_30053 Parameters
		{
			get
			{
				_UNNAMED_30053 returnValue = new _UNNAMED_30053(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public Byte Function{ get { return _StructureData[_BufferOffset +64]; } }
	}
	#endregion
	#region _CC_EXTERNAL_CACHE_INFO
 
	public class _CC_EXTERNAL_CACHE_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CC_EXTERNAL_CACHE_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CC_EXTERNAL_CACHE_INFO"": [ 48, {
				 ""Callback"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DirtyPageStatistics"": [ 8, [ ""_DIRTY_PAGE_STATISTICS"", ""null"" ]],
				 ""Links"": [ 32, [ ""_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Callback { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _DIRTY_PAGE_STATISTICS DirtyPageStatistics
		{
			get
			{
				_DIRTY_PAGE_STATISTICS returnValue = new _DIRTY_PAGE_STATISTICS(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _LIST_ENTRY Links
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
	}
	#endregion
	#region _LOG_HANDLE_CONTEXT
 
	public class _LOG_HANDLE_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _LOG_HANDLE_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 152; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_LOG_HANDLE_CONTEXT"": [ 152, {
				 ""LogHandle"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FlushToLsnRoutine"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""QueryLogHandleInfoRoutine"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DirtyPageStatistics"": [ 24, [ ""_DIRTY_PAGE_STATISTICS"", ""null"" ]],
				 ""DirtyPageThresholds"": [ 48, [ ""_DIRTY_PAGE_THRESHOLDS"", ""null"" ]],
				 ""AdditionalPagesToWrite"": [ 104, [ ""UInt32"", ""null"" ]],
				 ""CcLWScanDPThreshold"": [ 108, [ ""UInt32"", ""null"" ]],
				 ""LargestLsnForCurrentLWScan"": [ 112, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""RelatedFileObject"": [ 120, [ ""Pointer"", ""{\""target\"":\""_FILE_OBJECT\""}"" ]],
				 ""LargestLsnFileObjectKey"": [ 128, [ ""UInt64"", ""null"" ]],
				 ""LastLWTimeStamp"": [ 136, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""Flags"": [ 144, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 LogHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 FlushToLsnRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 QueryLogHandleInfoRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public _DIRTY_PAGE_STATISTICS DirtyPageStatistics
		{
			get
			{
				_DIRTY_PAGE_STATISTICS returnValue = new _DIRTY_PAGE_STATISTICS(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public _DIRTY_PAGE_THRESHOLDS DirtyPageThresholds
		{
			get
			{
				_DIRTY_PAGE_THRESHOLDS returnValue = new _DIRTY_PAGE_THRESHOLDS(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public UInt32 AdditionalPagesToWrite { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 104); } }
		public UInt32 CcLWScanDPThreshold { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 108); } }
		public _LARGE_INTEGER LargestLsnForCurrentLWScan
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 112);
				return returnValue;
			}
		}
		public UInt64 RelatedFileObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 120); } }
		public UInt64 LargestLsnFileObjectKey { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 128); } }
		public _LARGE_INTEGER LastLWTimeStamp
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 136);
				return returnValue;
			}
		}
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 144); } }
	}
	#endregion
	#region _MBCB
 
	public class _MBCB
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MBCB(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 192; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MBCB"": [ 192, {
				 ""NodeTypeCode"": [ 0, [ ""Int16"", ""null"" ]],
				 ""NodeIsInZone"": [ 2, [ ""Int16"", ""null"" ]],
				 ""PagesToWrite"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""DirtyPages"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Reserved"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""BitmapRanges"": [ 16, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ResumeWritePage"": [ 32, [ ""Int64"", ""null"" ]],
				 ""MostRecentlyDirtiedPage"": [ 40, [ ""Int64"", ""null"" ]],
				 ""BitmapRange1"": [ 48, [ ""_BITMAP_RANGE"", ""null"" ]],
				 ""BitmapRange2"": [ 96, [ ""_BITMAP_RANGE"", ""null"" ]],
				 ""BitmapRange3"": [ 144, [ ""_BITMAP_RANGE"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int16 NodeTypeCode { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 0); } }
		public Int16 NodeIsInZone { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 2); } }
		public UInt32 PagesToWrite { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 DirtyPages { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Reserved { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public _LIST_ENTRY BitmapRanges
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public Int64 ResumeWritePage { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 32); } }
		public Int64 MostRecentlyDirtiedPage { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 40); } }
		public _BITMAP_RANGE BitmapRange1
		{
			get
			{
				_BITMAP_RANGE returnValue = new _BITMAP_RANGE(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public _BITMAP_RANGE BitmapRange2
		{
			get
			{
				_BITMAP_RANGE returnValue = new _BITMAP_RANGE(_StructureData, _BufferOffset + 96);
				return returnValue;
			}
		}
		public _BITMAP_RANGE BitmapRange3
		{
			get
			{
				_BITMAP_RANGE returnValue = new _BITMAP_RANGE(_StructureData, _BufferOffset + 144);
				return returnValue;
			}
		}
	}
	#endregion
	#region _BITMAP_RANGE
 
	public class _BITMAP_RANGE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _BITMAP_RANGE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_BITMAP_RANGE"": [ 48, {
				 ""Links"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""BasePage"": [ 16, [ ""Int64"", ""null"" ]],
				 ""FirstDirtyPage"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""LastDirtyPage"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""DirtyPages"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""Bitmap"": [ 40, [ ""Pointer"", ""{\""target\"":\""unsigned long\""}"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY Links
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public Int64 BasePage { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 FirstDirtyPage { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 LastDirtyPage { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 DirtyPages { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt64 Bitmap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
	}
	#endregion
	#region VACB_LEVEL_ALLOCATION_LIST
 
	public class VACB_LEVEL_ALLOCATION_LIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public VACB_LEVEL_ALLOCATION_LIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""VACB_LEVEL_ALLOCATION_LIST"": [ 32, {
				 ""VacbLevelList"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""VacbLevelWithBcbListHeads"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""VacbLevelsAllocated"": [ 24, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY VacbLevelList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 VacbLevelWithBcbListHeads { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 VacbLevelsAllocated { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _VACB_LEVEL_REFERENCE
 
	public class _VACB_LEVEL_REFERENCE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VACB_LEVEL_REFERENCE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VACB_LEVEL_REFERENCE"": [ 8, {
				 ""Reference"": [ 0, [ ""Int32"", ""null"" ]],
				 ""SpecialReference"": [ 4, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int32 Reference { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public Int32 SpecialReference { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _CACHE_UNINITIALIZE_EVENT
 
	public class _CACHE_UNINITIALIZE_EVENT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CACHE_UNINITIALIZE_EVENT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CACHE_UNINITIALIZE_EVENT"": [ 32, {
				 ""Next"": [ 0, [ ""Pointer"", ""{\""target\"":\""_CACHE_UNINITIALIZE_EVENT\""}"" ]],
				 ""Event"": [ 8, [ ""_KEVENT"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Next { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _KEVENT Event
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _HEAP_LIST_LOOKUP
 
	public class _HEAP_LIST_LOOKUP
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HEAP_LIST_LOOKUP(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HEAP_LIST_LOOKUP"": [ 56, {
				 ""ExtendedLookup"": [ 0, [ ""Pointer"", ""{\""target\"":\""_HEAP_LIST_LOOKUP\""}"" ]],
				 ""ArraySize"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""ExtraItem"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""ItemCount"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""OutOfRangeItems"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""BaseIndex"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""ListHead"": [ 32, [ ""Pointer"", ""{\""target\"":\""_LIST_ENTRY\""}"" ]],
				 ""ListsInUseUlong"": [ 40, [ ""Pointer"", ""{\""target\"":\""unsigned long\""}"" ]],
				 ""ListHints"": [ 48, [ ""Pointer"", ""{\""target\"":\""_LIST_ENTRY*\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ExtendedLookup { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 ArraySize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 ExtraItem { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 ItemCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 OutOfRangeItems { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 BaseIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt64 ListHead { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 ListsInUseUlong { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 ListHints { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
	}
	#endregion
	#region _HEAP
 
	public class _HEAP
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HEAP(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 664; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HEAP"": [ 664, {
				 ""Entry"": [ 0, [ ""_HEAP_ENTRY"", ""null"" ]],
				 ""SegmentSignature"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""SegmentFlags"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""SegmentListEntry"": [ 24, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Heap"": [ 40, [ ""Pointer"", ""{\""target\"":\""_HEAP\""}"" ]],
				 ""BaseAddress"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""NumberOfPages"": [ 56, [ ""UInt32"", ""null"" ]],
				 ""FirstEntry"": [ 64, [ ""Pointer"", ""{\""target\"":\""_HEAP_ENTRY\""}"" ]],
				 ""LastValidEntry"": [ 72, [ ""Pointer"", ""{\""target\"":\""_HEAP_ENTRY\""}"" ]],
				 ""NumberOfUnCommittedPages"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""NumberOfUnCommittedRanges"": [ 84, [ ""UInt32"", ""null"" ]],
				 ""SegmentAllocatorBackTraceIndex"": [ 88, [ ""UInt16"", ""null"" ]],
				 ""Reserved"": [ 90, [ ""UInt16"", ""null"" ]],
				 ""UCRSegmentList"": [ 96, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Flags"": [ 112, [ ""UInt32"", ""null"" ]],
				 ""ForceFlags"": [ 116, [ ""UInt32"", ""null"" ]],
				 ""CompatibilityFlags"": [ 120, [ ""UInt32"", ""null"" ]],
				 ""EncodeFlagMask"": [ 124, [ ""UInt32"", ""null"" ]],
				 ""Encoding"": [ 128, [ ""_HEAP_ENTRY"", ""null"" ]],
				 ""Interceptor"": [ 144, [ ""UInt32"", ""null"" ]],
				 ""VirtualMemoryThreshold"": [ 148, [ ""UInt32"", ""null"" ]],
				 ""Signature"": [ 152, [ ""UInt32"", ""null"" ]],
				 ""SegmentReserve"": [ 160, [ ""UInt64"", ""null"" ]],
				 ""SegmentCommit"": [ 168, [ ""UInt64"", ""null"" ]],
				 ""DeCommitFreeBlockThreshold"": [ 176, [ ""UInt64"", ""null"" ]],
				 ""DeCommitTotalFreeThreshold"": [ 184, [ ""UInt64"", ""null"" ]],
				 ""TotalFreeSize"": [ 192, [ ""UInt64"", ""null"" ]],
				 ""MaximumAllocationSize"": [ 200, [ ""UInt64"", ""null"" ]],
				 ""ProcessHeapsListIndex"": [ 208, [ ""UInt16"", ""null"" ]],
				 ""HeaderValidateLength"": [ 210, [ ""UInt16"", ""null"" ]],
				 ""HeaderValidateCopy"": [ 216, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""NextAvailableTagIndex"": [ 224, [ ""UInt16"", ""null"" ]],
				 ""MaximumTagIndex"": [ 226, [ ""UInt16"", ""null"" ]],
				 ""TagEntries"": [ 232, [ ""Pointer"", ""{\""target\"":\""_HEAP_TAG_ENTRY\""}"" ]],
				 ""UCRList"": [ 240, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""AlignRound"": [ 256, [ ""UInt64"", ""null"" ]],
				 ""AlignMask"": [ 264, [ ""UInt64"", ""null"" ]],
				 ""VirtualAllocdBlocks"": [ 272, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""SegmentList"": [ 288, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""AllocatorBackTraceIndex"": [ 304, [ ""UInt16"", ""null"" ]],
				 ""NonDedicatedListLength"": [ 308, [ ""UInt32"", ""null"" ]],
				 ""BlocksIndex"": [ 312, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""UCRIndex"": [ 320, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PseudoTagEntries"": [ 328, [ ""Pointer"", ""{\""target\"":\""_HEAP_PSEUDO_TAG_ENTRY\""}"" ]],
				 ""FreeLists"": [ 336, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""LockVariable"": [ 352, [ ""Pointer"", ""{\""target\"":\""_HEAP_LOCK\""}"" ]],
				 ""CommitRoutine"": [ 360, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FrontEndHeap"": [ 368, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FrontHeapLockCount"": [ 376, [ ""UInt16"", ""null"" ]],
				 ""FrontEndHeapType"": [ 378, [ ""Byte"", ""null"" ]],
				 ""RequestedFrontEndHeapType"": [ 379, [ ""Byte"", ""null"" ]],
				 ""FrontEndHeapUsageData"": [ 384, [ ""Pointer"", ""{\""target\"":\""UInt16\""}"" ]],
				 ""FrontEndHeapMaximumIndex"": [ 392, [ ""UInt16"", ""null"" ]],
				 ""FrontEndHeapStatusBitmap"": [ 394, [ ""Array"", ""{\""count\"":129,\""target\"":\""Byte\""}"" ]],
				 ""Counters"": [ 528, [ ""_HEAP_COUNTERS"", ""null"" ]],
				 ""TuningParameters"": [ 648, [ ""_HEAP_TUNING_PARAMETERS"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _HEAP_ENTRY Entry
		{
			get
			{
				_HEAP_ENTRY returnValue = new _HEAP_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 SegmentSignature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 SegmentFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public _LIST_ENTRY SegmentListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt64 Heap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 BaseAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt32 NumberOfPages { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public UInt64 FirstEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 LastValidEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt32 NumberOfUnCommittedPages { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 NumberOfUnCommittedRanges { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
		public UInt16 SegmentAllocatorBackTraceIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 88); } }
		public UInt16 Reserved { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 90); } }
		public _LIST_ENTRY UCRSegmentList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 96);
				return returnValue;
			}
		}
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 112); } }
		public UInt32 ForceFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 116); } }
		public UInt32 CompatibilityFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 120); } }
		public UInt32 EncodeFlagMask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 124); } }
		public _HEAP_ENTRY Encoding
		{
			get
			{
				_HEAP_ENTRY returnValue = new _HEAP_ENTRY(_StructureData, _BufferOffset + 128);
				return returnValue;
			}
		}
		public UInt32 Interceptor { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 144); } }
		public UInt32 VirtualMemoryThreshold { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 148); } }
		public UInt32 Signature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 152); } }
		public UInt64 SegmentReserve { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public UInt64 SegmentCommit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 168); } }
		public UInt64 DeCommitFreeBlockThreshold { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 176); } }
		public UInt64 DeCommitTotalFreeThreshold { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 184); } }
		public UInt64 TotalFreeSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 192); } }
		public UInt64 MaximumAllocationSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 200); } }
		public UInt16 ProcessHeapsListIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 208); } }
		public UInt16 HeaderValidateLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 210); } }
		public UInt64 HeaderValidateCopy { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 216); } }
		public UInt16 NextAvailableTagIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 224); } }
		public UInt16 MaximumTagIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 226); } }
		public UInt64 TagEntries { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 232); } }
		public _LIST_ENTRY UCRList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 240);
				return returnValue;
			}
		}
		public UInt64 AlignRound { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 256); } }
		public UInt64 AlignMask { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 264); } }
		public _LIST_ENTRY VirtualAllocdBlocks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 272);
				return returnValue;
			}
		}
		public _LIST_ENTRY SegmentList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 288);
				return returnValue;
			}
		}
		public UInt16 AllocatorBackTraceIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 304); } }
		public UInt32 NonDedicatedListLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 308); } }
		public UInt64 BlocksIndex { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 312); } }
		public UInt64 UCRIndex { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 320); } }
		public UInt64 PseudoTagEntries { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 328); } }
		public _LIST_ENTRY FreeLists
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 336);
				return returnValue;
			}
		}
		public UInt64 LockVariable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 352); } }
		public UInt64 CommitRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 360); } }
		public UInt64 FrontEndHeap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 368); } }
		public UInt16 FrontHeapLockCount { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 376); } }
		public Byte FrontEndHeapType{ get { return _StructureData[_BufferOffset +378]; } }
		public Byte RequestedFrontEndHeapType{ get { return _StructureData[_BufferOffset +379]; } }
		public UInt64 FrontEndHeapUsageData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 384); } }
		public UInt16 FrontEndHeapMaximumIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 392); } }
		public Byte[] FrontEndHeapStatusBitmap
		{
			get
			{
				Byte[] returnValue = new Byte[129];
				for(int i=0; i<129; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 394];
				return returnValue;
			}
		}
		public _HEAP_COUNTERS Counters
		{
			get
			{
				_HEAP_COUNTERS returnValue = new _HEAP_COUNTERS(_StructureData, _BufferOffset + 528);
				return returnValue;
			}
		}
		public _HEAP_TUNING_PARAMETERS TuningParameters
		{
			get
			{
				_HEAP_TUNING_PARAMETERS returnValue = new _HEAP_TUNING_PARAMETERS(_StructureData, _BufferOffset + 648);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_30197
 
	public class _UNNAMED_30197
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30197(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 104; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30197"": [ 104, {
				 ""CriticalSection"": [ 0, [ ""_RTL_CRITICAL_SECTION"", ""null"" ]],
				 ""Resource"": [ 0, [ ""_ERESOURCE"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _RTL_CRITICAL_SECTION CriticalSection
		{
			get
			{
				_RTL_CRITICAL_SECTION returnValue = new _RTL_CRITICAL_SECTION(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _ERESOURCE Resource
		{
			get
			{
				_ERESOURCE returnValue = new _ERESOURCE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _HEAP_LOCK
 
	public class _HEAP_LOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HEAP_LOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 104; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HEAP_LOCK"": [ 104, {
				 ""Lock"": [ 0, [ ""_UNNAMED_30197"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_30197 Lock
		{
			get
			{
				_UNNAMED_30197 returnValue = new _UNNAMED_30197(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _HEAP_ENTRY
 
	public class _HEAP_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HEAP_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HEAP_ENTRY"": [ 16, {
				 ""PreviousBlockPrivateData"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Size"": [ 8, [ ""UInt16"", ""null"" ]],
				 ""Flags"": [ 10, [ ""Byte"", ""null"" ]],
				 ""SmallTagIndex"": [ 11, [ ""Byte"", ""null"" ]],
				 ""SubSegmentCode"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""PreviousSize"": [ 12, [ ""UInt16"", ""null"" ]],
				 ""SegmentOffset"": [ 14, [ ""Byte"", ""null"" ]],
				 ""LFHFlags"": [ 14, [ ""Byte"", ""null"" ]],
				 ""UnusedBytes"": [ 15, [ ""Byte"", ""null"" ]],
				 ""CompactHeader"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""Reserved"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FunctionIndex"": [ 8, [ ""UInt16"", ""null"" ]],
				 ""ContextValue"": [ 10, [ ""UInt16"", ""null"" ]],
				 ""InterceptorValue"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""UnusedBytesLength"": [ 12, [ ""UInt16"", ""null"" ]],
				 ""EntryOffset"": [ 14, [ ""Byte"", ""null"" ]],
				 ""ExtendedBlockSignature"": [ 15, [ ""Byte"", ""null"" ]],
				 ""ReservedForAlignment"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Code1"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Code2"": [ 12, [ ""UInt16"", ""null"" ]],
				 ""Code3"": [ 14, [ ""Byte"", ""null"" ]],
				 ""Code4"": [ 15, [ ""Byte"", ""null"" ]],
				 ""Code234"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""AgregateCode"": [ 8, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 PreviousBlockPrivateData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt16 Size { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 8); } }
		public Byte Flags{ get { return _StructureData[_BufferOffset +10]; } }
		public Byte SmallTagIndex{ get { return _StructureData[_BufferOffset +11]; } }
		public UInt32 SubSegmentCode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt16 PreviousSize { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 12); } }
		public Byte SegmentOffset{ get { return _StructureData[_BufferOffset +14]; } }
		public Byte LFHFlags{ get { return _StructureData[_BufferOffset +14]; } }
		public Byte UnusedBytes{ get { return _StructureData[_BufferOffset +15]; } }
		public UInt64 CompactHeader { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Reserved { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt16 FunctionIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 8); } }
		public UInt16 ContextValue { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 10); } }
		public UInt32 InterceptorValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt16 UnusedBytesLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 12); } }
		public Byte EntryOffset{ get { return _StructureData[_BufferOffset +14]; } }
		public Byte ExtendedBlockSignature{ get { return _StructureData[_BufferOffset +15]; } }
		public UInt64 ReservedForAlignment { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 Code1 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt16 Code2 { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 12); } }
		public Byte Code3{ get { return _StructureData[_BufferOffset +14]; } }
		public Byte Code4{ get { return _StructureData[_BufferOffset +15]; } }
		public UInt32 Code234 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt64 AgregateCode { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _HEAP_SEGMENT
 
	public class _HEAP_SEGMENT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HEAP_SEGMENT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 112; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HEAP_SEGMENT"": [ 112, {
				 ""Entry"": [ 0, [ ""_HEAP_ENTRY"", ""null"" ]],
				 ""SegmentSignature"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""SegmentFlags"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""SegmentListEntry"": [ 24, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Heap"": [ 40, [ ""Pointer"", ""{\""target\"":\""_HEAP\""}"" ]],
				 ""BaseAddress"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""NumberOfPages"": [ 56, [ ""UInt32"", ""null"" ]],
				 ""FirstEntry"": [ 64, [ ""Pointer"", ""{\""target\"":\""_HEAP_ENTRY\""}"" ]],
				 ""LastValidEntry"": [ 72, [ ""Pointer"", ""{\""target\"":\""_HEAP_ENTRY\""}"" ]],
				 ""NumberOfUnCommittedPages"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""NumberOfUnCommittedRanges"": [ 84, [ ""UInt32"", ""null"" ]],
				 ""SegmentAllocatorBackTraceIndex"": [ 88, [ ""UInt16"", ""null"" ]],
				 ""Reserved"": [ 90, [ ""UInt16"", ""null"" ]],
				 ""UCRSegmentList"": [ 96, [ ""_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _HEAP_ENTRY Entry
		{
			get
			{
				_HEAP_ENTRY returnValue = new _HEAP_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 SegmentSignature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 SegmentFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public _LIST_ENTRY SegmentListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt64 Heap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 BaseAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt32 NumberOfPages { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public UInt64 FirstEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 LastValidEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt32 NumberOfUnCommittedPages { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 NumberOfUnCommittedRanges { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
		public UInt16 SegmentAllocatorBackTraceIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 88); } }
		public UInt16 Reserved { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 90); } }
		public _LIST_ENTRY UCRSegmentList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 96);
				return returnValue;
			}
		}
	}
	#endregion
	#region _HEAP_VIRTUAL_ALLOC_ENTRY
 
	public class _HEAP_VIRTUAL_ALLOC_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HEAP_VIRTUAL_ALLOC_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HEAP_VIRTUAL_ALLOC_ENTRY"": [ 64, {
				 ""Entry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ExtraStuff"": [ 16, [ ""_HEAP_ENTRY_EXTRA"", ""null"" ]],
				 ""CommitSize"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""ReserveSize"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""BusyBlock"": [ 48, [ ""_HEAP_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY Entry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _HEAP_ENTRY_EXTRA ExtraStuff
		{
			get
			{
				_HEAP_ENTRY_EXTRA returnValue = new _HEAP_ENTRY_EXTRA(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt64 CommitSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 ReserveSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public _HEAP_ENTRY BusyBlock
		{
			get
			{
				_HEAP_ENTRY returnValue = new _HEAP_ENTRY(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
	}
	#endregion
	#region _HEAP_FREE_ENTRY
 
	public class _HEAP_FREE_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HEAP_FREE_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HEAP_FREE_ENTRY"": [ 32, {
				 ""PreviousBlockPrivateData"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Size"": [ 8, [ ""UInt16"", ""null"" ]],
				 ""Flags"": [ 10, [ ""Byte"", ""null"" ]],
				 ""SmallTagIndex"": [ 11, [ ""Byte"", ""null"" ]],
				 ""SubSegmentCode"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""PreviousSize"": [ 12, [ ""UInt16"", ""null"" ]],
				 ""SegmentOffset"": [ 14, [ ""Byte"", ""null"" ]],
				 ""LFHFlags"": [ 14, [ ""Byte"", ""null"" ]],
				 ""UnusedBytes"": [ 15, [ ""Byte"", ""null"" ]],
				 ""CompactHeader"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""Reserved"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FunctionIndex"": [ 8, [ ""UInt16"", ""null"" ]],
				 ""ContextValue"": [ 10, [ ""UInt16"", ""null"" ]],
				 ""InterceptorValue"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""UnusedBytesLength"": [ 12, [ ""UInt16"", ""null"" ]],
				 ""EntryOffset"": [ 14, [ ""Byte"", ""null"" ]],
				 ""ExtendedBlockSignature"": [ 15, [ ""Byte"", ""null"" ]],
				 ""ReservedForAlignment"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Code1"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Code2"": [ 12, [ ""UInt16"", ""null"" ]],
				 ""Code3"": [ 14, [ ""Byte"", ""null"" ]],
				 ""Code4"": [ 15, [ ""Byte"", ""null"" ]],
				 ""Code234"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""AgregateCode"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""FreeList"": [ 16, [ ""_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 PreviousBlockPrivateData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt16 Size { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 8); } }
		public Byte Flags{ get { return _StructureData[_BufferOffset +10]; } }
		public Byte SmallTagIndex{ get { return _StructureData[_BufferOffset +11]; } }
		public UInt32 SubSegmentCode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt16 PreviousSize { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 12); } }
		public Byte SegmentOffset{ get { return _StructureData[_BufferOffset +14]; } }
		public Byte LFHFlags{ get { return _StructureData[_BufferOffset +14]; } }
		public Byte UnusedBytes{ get { return _StructureData[_BufferOffset +15]; } }
		public UInt64 CompactHeader { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Reserved { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt16 FunctionIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 8); } }
		public UInt16 ContextValue { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 10); } }
		public UInt32 InterceptorValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt16 UnusedBytesLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 12); } }
		public Byte EntryOffset{ get { return _StructureData[_BufferOffset +14]; } }
		public Byte ExtendedBlockSignature{ get { return _StructureData[_BufferOffset +15]; } }
		public UInt64 ReservedForAlignment { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 Code1 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt16 Code2 { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 12); } }
		public Byte Code3{ get { return _StructureData[_BufferOffset +14]; } }
		public Byte Code4{ get { return _StructureData[_BufferOffset +15]; } }
		public UInt32 Code234 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt64 AgregateCode { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _LIST_ENTRY FreeList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_30274
 
	public class _UNNAMED_30274
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30274(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30274"": [ 4, {
				 ""DataLength"": [ 0, [ ""Int16"", ""null"" ]],
				 ""TotalLength"": [ 2, [ ""Int16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int16 DataLength { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 0); } }
		public Int16 TotalLength { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 2); } }
	}
	#endregion
	#region _UNNAMED_30277
 
	public class _UNNAMED_30277
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30277(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30277"": [ 4, {
				 ""s1"": [ 0, [ ""_UNNAMED_30274"", ""null"" ]],
				 ""Length"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_30274 s1
		{
			get
			{
				_UNNAMED_30274 returnValue = new _UNNAMED_30274(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_30280
 
	public class _UNNAMED_30280
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30280(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30280"": [ 4, {
				 ""Type"": [ 0, [ ""Int16"", ""null"" ]],
				 ""DataInfoOffset"": [ 2, [ ""Int16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int16 Type { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 0); } }
		public Int16 DataInfoOffset { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 2); } }
	}
	#endregion
	#region _UNNAMED_30283
 
	public class _UNNAMED_30283
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30283(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30283"": [ 4, {
				 ""s2"": [ 0, [ ""_UNNAMED_30280"", ""null"" ]],
				 ""ZeroInit"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_30280 s2
		{
			get
			{
				_UNNAMED_30280 returnValue = new _UNNAMED_30280(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 ZeroInit { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _PORT_MESSAGE
 
	public class _PORT_MESSAGE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PORT_MESSAGE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PORT_MESSAGE"": [ 40, {
				 ""u1"": [ 0, [ ""_UNNAMED_30277"", ""null"" ]],
				 ""u2"": [ 4, [ ""_UNNAMED_30283"", ""null"" ]],
				 ""ClientId"": [ 8, [ ""_CLIENT_ID"", ""null"" ]],
				 ""DoNotUseThisField"": [ 8, [ ""Double"", ""null"" ]],
				 ""MessageId"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""ClientViewSize"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""CallbackId"": [ 32, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_30277 u1
		{
			get
			{
				_UNNAMED_30277 returnValue = new _UNNAMED_30277(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_30283 u2
		{
			get
			{
				_UNNAMED_30283 returnValue = new _UNNAMED_30283(_StructureData, _BufferOffset + 4);
				return returnValue;
			}
		}
		public _CLIENT_ID ClientId
		{
			get
			{
				_CLIENT_ID returnValue = new _CLIENT_ID(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public Double DoNotUseThisField { get { return BitConverter.ToDouble(_StructureData, _BufferOffset + 8); } }
		public UInt32 MessageId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt64 ClientViewSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt32 CallbackId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _ALPC_MESSAGE_ATTRIBUTES
 
	public class _ALPC_MESSAGE_ATTRIBUTES
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ALPC_MESSAGE_ATTRIBUTES(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ALPC_MESSAGE_ATTRIBUTES"": [ 8, {
				 ""AllocatedAttributes"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ValidAttributes"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 AllocatedAttributes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 ValidAttributes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _ALPC_HANDLE_ENTRY
 
	public class _ALPC_HANDLE_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ALPC_HANDLE_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ALPC_HANDLE_ENTRY"": [ 8, {
				 ""Object"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Object { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _BLOB_TYPE
 
	public class _BLOB_TYPE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _BLOB_TYPE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_BLOB_TYPE"": [ 48, {
				 ""ResourceId"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""_BLOB_ID\"",\""target\"":\""UInt32\""}"" ]],
				 ""PoolTag"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""LookasideIndex"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Flags"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""Counters"": [ 16, [ ""Pointer"", ""{\""target\"":\""_BLOB_COUNTERS\""}"" ]],
				 ""DeleteProcedure"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DestroyProcedure"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""UsualSize"": [ 40, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _BLOB_ID ResourceId { get { return (_BLOB_ID)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 PoolTag { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 LookasideIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt64 Counters { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 DeleteProcedure { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 DestroyProcedure { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 UsualSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
	}
	#endregion
	#region _UNNAMED_30312
 
	public class _UNNAMED_30312
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30312(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30312"": [ 1, {
				 ""ReferenceCache"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""Lookaside"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""Initializing"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""Deleted"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public Byte ReferenceCache
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte Lookaside
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte Initializing
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte Deleted
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
	}
	#endregion
	#region _UNNAMED_30317
 
	public class _UNNAMED_30317
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30317(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30317"": [ 1, {
				 ""s1"": [ 0, [ ""_UNNAMED_30312"", ""null"" ]],
				 ""Flags"": [ 0, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_30312 s1
		{
			get
			{
				_UNNAMED_30312 returnValue = new _UNNAMED_30312(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public Byte Flags{ get { return _StructureData[_BufferOffset +0]; } }
	}
	#endregion
	#region _BLOB
 
	public class _BLOB
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _BLOB(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_BLOB"": [ 48, {
				 ""ResourceList"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""FreeListEntry"": [ 0, [ ""_SLIST_ENTRY"", ""null"" ]],
				 ""u1"": [ 16, [ ""_UNNAMED_30317"", ""null"" ]],
				 ""ResourceId"": [ 17, [ ""Byte"", ""null"" ]],
				 ""CachedReferences"": [ 18, [ ""Int16"", ""null"" ]],
				 ""ReferenceCount"": [ 24, [ ""Int64"", ""null"" ]],
				 ""Lock"": [ 32, [ ""_EX_PUSH_LOCK"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ResourceList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _SLIST_ENTRY FreeListEntry
		{
			get
			{
				_SLIST_ENTRY returnValue = new _SLIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_30317 u1
		{
			get
			{
				_UNNAMED_30317 returnValue = new _UNNAMED_30317(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public Byte ResourceId{ get { return _StructureData[_BufferOffset +17]; } }
		public Int16 CachedReferences { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 18); } }
		public Int64 ReferenceCount { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 24); } }
		public _EX_PUSH_LOCK Lock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_30328
 
	public class _UNNAMED_30328
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30328(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30328"": [ 4, {
				 ""Internal"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""Secure"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Internal
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 Secure
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _UNNAMED_30331
 
	public class _UNNAMED_30331
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30331(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30331"": [ 4, {
				 ""s1"": [ 0, [ ""_UNNAMED_30328"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_30328 s1
		{
			get
			{
				_UNNAMED_30328 returnValue = new _UNNAMED_30328(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _KALPC_SECTION
 
	public class _KALPC_SECTION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KALPC_SECTION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KALPC_SECTION"": [ 72, {
				 ""SectionObject"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Size"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""HandleTable"": [ 16, [ ""Pointer"", ""{\""target\"":\""_ALPC_HANDLE_TABLE\""}"" ]],
				 ""SectionHandle"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""OwnerProcess"": [ 32, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""OwnerPort"": [ 40, [ ""Pointer"", ""{\""target\"":\""_ALPC_PORT\""}"" ]],
				 ""u1"": [ 48, [ ""_UNNAMED_30331"", ""null"" ]],
				 ""NumberOfRegions"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""RegionListHead"": [ 56, [ ""_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 SectionObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Size { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 HandleTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 SectionHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 OwnerProcess { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 OwnerPort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public _UNNAMED_30331 u1
		{
			get
			{
				_UNNAMED_30331 returnValue = new _UNNAMED_30331(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public UInt32 NumberOfRegions { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public _LIST_ENTRY RegionListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_30347
 
	public class _UNNAMED_30347
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30347(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30347"": [ 4, {
				 ""Secure"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Secure
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _UNNAMED_30349
 
	public class _UNNAMED_30349
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30349(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30349"": [ 4, {
				 ""s1"": [ 0, [ ""_UNNAMED_30347"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_30347 s1
		{
			get
			{
				_UNNAMED_30347 returnValue = new _UNNAMED_30347(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _KALPC_REGION
 
	public class _KALPC_REGION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KALPC_REGION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 88; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KALPC_REGION"": [ 88, {
				 ""RegionListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Section"": [ 16, [ ""Pointer"", ""{\""target\"":\""_KALPC_SECTION\""}"" ]],
				 ""Offset"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""Size"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""ViewSize"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""u1"": [ 48, [ ""_UNNAMED_30349"", ""null"" ]],
				 ""NumberOfViews"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""ViewListHead"": [ 56, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ReadOnlyView"": [ 72, [ ""Pointer"", ""{\""target\"":\""_KALPC_VIEW\""}"" ]],
				 ""ReadWriteView"": [ 80, [ ""Pointer"", ""{\""target\"":\""_KALPC_VIEW\""}"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY RegionListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Section { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Offset { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 Size { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 ViewSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public _UNNAMED_30349 u1
		{
			get
			{
				_UNNAMED_30349 returnValue = new _UNNAMED_30349(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public UInt32 NumberOfViews { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public _LIST_ENTRY ViewListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public UInt64 ReadOnlyView { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 ReadWriteView { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
	}
	#endregion
	#region _UNNAMED_30365
 
	public class _UNNAMED_30365
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30365(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30365"": [ 4, {
				 ""WriteAccess"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""AutoRelease"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""ForceUnlink"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 WriteAccess
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 AutoRelease
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 ForceUnlink
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _UNNAMED_30369
 
	public class _UNNAMED_30369
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30369(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30369"": [ 4, {
				 ""s1"": [ 0, [ ""_UNNAMED_30365"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_30365 s1
		{
			get
			{
				_UNNAMED_30365 returnValue = new _UNNAMED_30365(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _KALPC_VIEW
 
	public class _KALPC_VIEW
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KALPC_VIEW(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 96; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KALPC_VIEW"": [ 96, {
				 ""ViewListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Region"": [ 16, [ ""Pointer"", ""{\""target\"":\""_KALPC_REGION\""}"" ]],
				 ""OwnerPort"": [ 24, [ ""Pointer"", ""{\""target\"":\""_ALPC_PORT\""}"" ]],
				 ""OwnerProcess"": [ 32, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""Address"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Size"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""SecureViewHandle"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""WriteAccessHandle"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""u1"": [ 72, [ ""_UNNAMED_30369"", ""null"" ]],
				 ""NumberOfOwnerMessages"": [ 76, [ ""UInt32"", ""null"" ]],
				 ""ProcessViewListEntry"": [ 80, [ ""_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ViewListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Region { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 OwnerPort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 OwnerProcess { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 Address { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 Size { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 SecureViewHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 WriteAccessHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public _UNNAMED_30369 u1
		{
			get
			{
				_UNNAMED_30369 returnValue = new _UNNAMED_30369(_StructureData, _BufferOffset + 72);
				return returnValue;
			}
		}
		public UInt32 NumberOfOwnerMessages { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 76); } }
		public _LIST_ENTRY ProcessViewListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 80);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ALPC_COMMUNICATION_INFO
 
	public class _ALPC_COMMUNICATION_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ALPC_COMMUNICATION_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ALPC_COMMUNICATION_INFO"": [ 72, {
				 ""ConnectionPort"": [ 0, [ ""Pointer"", ""{\""target\"":\""_ALPC_PORT\""}"" ]],
				 ""ServerCommunicationPort"": [ 8, [ ""Pointer"", ""{\""target\"":\""_ALPC_PORT\""}"" ]],
				 ""ClientCommunicationPort"": [ 16, [ ""Pointer"", ""{\""target\"":\""_ALPC_PORT\""}"" ]],
				 ""CommunicationList"": [ 24, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""HandleTable"": [ 40, [ ""_ALPC_HANDLE_TABLE"", ""null"" ]],
				 ""CloseMessage"": [ 64, [ ""Pointer"", ""{\""target\"":\""_KALPC_MESSAGE\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ConnectionPort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 ServerCommunicationPort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 ClientCommunicationPort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public _LIST_ENTRY CommunicationList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public _ALPC_HANDLE_TABLE HandleTable
		{
			get
			{
				_ALPC_HANDLE_TABLE returnValue = new _ALPC_HANDLE_TABLE(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public UInt64 CloseMessage { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
	}
	#endregion
	#region _CALLBACK_OBJECT
 
	public class _CALLBACK_OBJECT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CALLBACK_OBJECT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CALLBACK_OBJECT"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _UNNAMED_30392
 
	public class _UNNAMED_30392
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30392(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30392"": [ 4, {
				 ""Initialized"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""Type"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""ConnectionPending"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""ConnectionRefused"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""Disconnected"": [ 0, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""Closed"": [ 0, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""NoFlushOnClose"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt32\""}"" ]],
				 ""ReturnExtendedInfo"": [ 0, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]],
				 ""Waitable"": [ 0, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt32\""}"" ]],
				 ""DynamicSecurity"": [ 0, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt32\""}"" ]],
				 ""Wow64CompletionList"": [ 0, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt32\""}"" ]],
				 ""Lpc"": [ 0, [ ""BitField"", ""{\""end_bit\"":13,\""start_bit\"":12,\""target\"":\""UInt32\""}"" ]],
				 ""LpcToLpc"": [ 0, [ ""BitField"", ""{\""end_bit\"":14,\""start_bit\"":13,\""target\"":\""UInt32\""}"" ]],
				 ""HasCompletionList"": [ 0, [ ""BitField"", ""{\""end_bit\"":15,\""start_bit\"":14,\""target\"":\""UInt32\""}"" ]],
				 ""HadCompletionList"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":15,\""target\"":\""UInt32\""}"" ]],
				 ""EnableCompletionList"": [ 0, [ ""BitField"", ""{\""end_bit\"":17,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Initialized
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 Type
		{
			get
			{
				// start: 1  end: 3  Mask: 0000000000000110
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 6) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 ConnectionPending
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 ConnectionRefused
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 Disconnected
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 Closed
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 64) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 NoFlushOnClose
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 128) >> 7;
				return (UInt32)value2;
			}
		}
		public UInt32 ReturnExtendedInfo
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 256) >> 8;
				return (UInt32)value2;
			}
		}
		public UInt32 Waitable
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 512) >> 9;
				return (UInt32)value2;
			}
		}
		public UInt32 DynamicSecurity
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1024) >> 10;
				return (UInt32)value2;
			}
		}
		public UInt32 Wow64CompletionList
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2048) >> 11;
				return (UInt32)value2;
			}
		}
		public UInt32 Lpc
		{
			get
			{
				// start: 12  end: 13  Mask: 0001000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4096) >> 12;
				return (UInt32)value2;
			}
		}
		public UInt32 LpcToLpc
		{
			get
			{
				// start: 13  end: 14  Mask: 0010000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8192) >> 13;
				return (UInt32)value2;
			}
		}
		public UInt32 HasCompletionList
		{
			get
			{
				// start: 14  end: 15  Mask: 0100000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16384) >> 14;
				return (UInt32)value2;
			}
		}
		public UInt32 HadCompletionList
		{
			get
			{
				// start: 15  end: 16  Mask: 1000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 32768) >> 15;
				return (UInt32)value2;
			}
		}
		public UInt32 EnableCompletionList
		{
			get
			{
				// start: 16  end: 17  Mask: 10000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 65536) >> 16;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _UNNAMED_30409
 
	public class _UNNAMED_30409
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30409(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30409"": [ 4, {
				 ""s1"": [ 0, [ ""_UNNAMED_30392"", ""null"" ]],
				 ""State"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_30392 s1
		{
			get
			{
				_UNNAMED_30392 returnValue = new _UNNAMED_30392(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 State { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _ALPC_PORT
 
	public class _ALPC_PORT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ALPC_PORT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 448; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ALPC_PORT"": [ 448, {
				 ""PortListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""CommunicationInfo"": [ 16, [ ""Pointer"", ""{\""target\"":\""_ALPC_COMMUNICATION_INFO\""}"" ]],
				 ""OwnerProcess"": [ 24, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""CompletionPort"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CompletionKey"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CompletionPacketLookaside"": [ 48, [ ""Pointer"", ""{\""target\"":\""_ALPC_COMPLETION_PACKET_LOOKASIDE\""}"" ]],
				 ""PortContext"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""StaticSecurity"": [ 64, [ ""_SECURITY_CLIENT_CONTEXT"", ""null"" ]],
				 ""IncomingQueueLock"": [ 136, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""MainQueue"": [ 144, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""LargeMessageQueue"": [ 160, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""PendingQueueLock"": [ 176, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""PendingQueue"": [ 184, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""WaitQueueLock"": [ 200, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""WaitQueue"": [ 208, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Semaphore"": [ 224, [ ""Pointer"", ""{\""target\"":\""_KSEMAPHORE\""}"" ]],
				 ""DummyEvent"": [ 224, [ ""Pointer"", ""{\""target\"":\""_KEVENT\""}"" ]],
				 ""PortAttributes"": [ 232, [ ""_ALPC_PORT_ATTRIBUTES"", ""null"" ]],
				 ""ResourceListLock"": [ 304, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""ResourceListHead"": [ 312, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""PortObjectLock"": [ 328, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""CompletionList"": [ 336, [ ""Pointer"", ""{\""target\"":\""_ALPC_COMPLETION_LIST\""}"" ]],
				 ""CallbackObject"": [ 344, [ ""Pointer"", ""{\""target\"":\""_CALLBACK_OBJECT\""}"" ]],
				 ""CallbackContext"": [ 352, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CanceledQueue"": [ 360, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""SequenceNo"": [ 376, [ ""Int32"", ""null"" ]],
				 ""ReferenceNo"": [ 380, [ ""Int32"", ""null"" ]],
				 ""ReferenceNoWait"": [ 384, [ ""Pointer"", ""{\""target\"":\""_PALPC_PORT_REFERENCE_WAIT_BLOCK\""}"" ]],
				 ""u1"": [ 392, [ ""_UNNAMED_30409"", ""null"" ]],
				 ""TargetQueuePort"": [ 400, [ ""Pointer"", ""{\""target\"":\""_ALPC_PORT\""}"" ]],
				 ""TargetSequencePort"": [ 408, [ ""Pointer"", ""{\""target\"":\""_ALPC_PORT\""}"" ]],
				 ""CachedMessage"": [ 416, [ ""Pointer"", ""{\""target\"":\""_KALPC_MESSAGE\""}"" ]],
				 ""MainQueueLength"": [ 424, [ ""UInt32"", ""null"" ]],
				 ""LargeMessageQueueLength"": [ 428, [ ""UInt32"", ""null"" ]],
				 ""PendingQueueLength"": [ 432, [ ""UInt32"", ""null"" ]],
				 ""CanceledQueueLength"": [ 436, [ ""UInt32"", ""null"" ]],
				 ""WaitQueueLength"": [ 440, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY PortListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 CommunicationInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 OwnerProcess { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 CompletionPort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 CompletionKey { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 CompletionPacketLookaside { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 PortContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public _SECURITY_CLIENT_CONTEXT StaticSecurity
		{
			get
			{
				_SECURITY_CLIENT_CONTEXT returnValue = new _SECURITY_CLIENT_CONTEXT(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public _EX_PUSH_LOCK IncomingQueueLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 136);
				return returnValue;
			}
		}
		public _LIST_ENTRY MainQueue
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 144);
				return returnValue;
			}
		}
		public _LIST_ENTRY LargeMessageQueue
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 160);
				return returnValue;
			}
		}
		public _EX_PUSH_LOCK PendingQueueLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 176);
				return returnValue;
			}
		}
		public _LIST_ENTRY PendingQueue
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 184);
				return returnValue;
			}
		}
		public _EX_PUSH_LOCK WaitQueueLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 200);
				return returnValue;
			}
		}
		public _LIST_ENTRY WaitQueue
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 208);
				return returnValue;
			}
		}
		public UInt64 Semaphore { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 224); } }
		public UInt64 DummyEvent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 224); } }
		public _ALPC_PORT_ATTRIBUTES PortAttributes
		{
			get
			{
				_ALPC_PORT_ATTRIBUTES returnValue = new _ALPC_PORT_ATTRIBUTES(_StructureData, _BufferOffset + 232);
				return returnValue;
			}
		}
		public _EX_PUSH_LOCK ResourceListLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 304);
				return returnValue;
			}
		}
		public _LIST_ENTRY ResourceListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 312);
				return returnValue;
			}
		}
		public _EX_PUSH_LOCK PortObjectLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 328);
				return returnValue;
			}
		}
		public UInt64 CompletionList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 336); } }
		public UInt64 CallbackObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 344); } }
		public UInt64 CallbackContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 352); } }
		public _LIST_ENTRY CanceledQueue
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 360);
				return returnValue;
			}
		}
		public Int32 SequenceNo { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 376); } }
		public Int32 ReferenceNo { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 380); } }
		public UInt64 ReferenceNoWait { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 384); } }
		public _UNNAMED_30409 u1
		{
			get
			{
				_UNNAMED_30409 returnValue = new _UNNAMED_30409(_StructureData, _BufferOffset + 392);
				return returnValue;
			}
		}
		public UInt64 TargetQueuePort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 400); } }
		public UInt64 TargetSequencePort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 408); } }
		public UInt64 CachedMessage { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 416); } }
		public UInt32 MainQueueLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 424); } }
		public UInt32 LargeMessageQueueLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 428); } }
		public UInt32 PendingQueueLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 432); } }
		public UInt32 CanceledQueueLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 436); } }
		public UInt32 WaitQueueLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 440); } }
	}
	#endregion
	#region _ALPC_COMPLETION_LIST
 
	public class _ALPC_COMPLETION_LIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ALPC_COMPLETION_LIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 160; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ALPC_COMPLETION_LIST"": [ 160, {
				 ""Entry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""OwnerProcess"": [ 16, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""CompletionListLock"": [ 24, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""Mdl"": [ 32, [ ""Pointer"", ""{\""target\"":\""_MDL\""}"" ]],
				 ""UserVa"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""UserLimit"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DataUserVa"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SystemVa"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""TotalSize"": [ 72, [ ""UInt64"", ""null"" ]],
				 ""Header"": [ 80, [ ""Pointer"", ""{\""target\"":\""_ALPC_COMPLETION_LIST_HEADER\""}"" ]],
				 ""List"": [ 88, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ListSize"": [ 96, [ ""UInt64"", ""null"" ]],
				 ""Bitmap"": [ 104, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""BitmapSize"": [ 112, [ ""UInt64"", ""null"" ]],
				 ""Data"": [ 120, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DataSize"": [ 128, [ ""UInt64"", ""null"" ]],
				 ""BitmapLimit"": [ 136, [ ""UInt32"", ""null"" ]],
				 ""BitmapNextHint"": [ 140, [ ""UInt32"", ""null"" ]],
				 ""ConcurrencyCount"": [ 144, [ ""UInt32"", ""null"" ]],
				 ""AttributeFlags"": [ 148, [ ""UInt32"", ""null"" ]],
				 ""AttributeSize"": [ 152, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY Entry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 OwnerProcess { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public _EX_PUSH_LOCK CompletionListLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt64 Mdl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 UserVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 UserLimit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 DataUserVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 SystemVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 TotalSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 Header { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 List { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 ListSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt64 Bitmap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public UInt64 BitmapSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 112); } }
		public UInt64 Data { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 120); } }
		public UInt64 DataSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 128); } }
		public UInt32 BitmapLimit { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 136); } }
		public UInt32 BitmapNextHint { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 140); } }
		public UInt32 ConcurrencyCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 144); } }
		public UInt32 AttributeFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 148); } }
		public UInt32 AttributeSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 152); } }
	}
	#endregion
	#region _OBJECT_ATTRIBUTES
 
	public class _OBJECT_ATTRIBUTES
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_ATTRIBUTES(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_ATTRIBUTES"": [ 48, {
				 ""Length"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""RootDirectory"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ObjectName"": [ 16, [ ""Pointer"", ""{\""target\"":\""_UNICODE_STRING\""}"" ]],
				 ""Attributes"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""SecurityDescriptor"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SecurityQualityOfService"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 RootDirectory { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 ObjectName { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 Attributes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt64 SecurityDescriptor { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 SecurityQualityOfService { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
	}
	#endregion
	#region _OBJECT_TYPE
 
	public class _OBJECT_TYPE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_TYPE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 216; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_TYPE"": [ 216, {
				 ""TypeList"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Name"": [ 16, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""DefaultObject"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Index"": [ 40, [ ""Byte"", ""null"" ]],
				 ""TotalNumberOfObjects"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""TotalNumberOfHandles"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""HighWaterNumberOfObjects"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""HighWaterNumberOfHandles"": [ 56, [ ""UInt32"", ""null"" ]],
				 ""TypeInfo"": [ 64, [ ""_OBJECT_TYPE_INITIALIZER"", ""null"" ]],
				 ""TypeLock"": [ 184, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""Key"": [ 192, [ ""UInt32"", ""null"" ]],
				 ""CallbackList"": [ 200, [ ""_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY TypeList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNICODE_STRING Name
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt64 DefaultObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public Byte Index{ get { return _StructureData[_BufferOffset +40]; } }
		public UInt32 TotalNumberOfObjects { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public UInt32 TotalNumberOfHandles { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public UInt32 HighWaterNumberOfObjects { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public UInt32 HighWaterNumberOfHandles { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public _OBJECT_TYPE_INITIALIZER TypeInfo
		{
			get
			{
				_OBJECT_TYPE_INITIALIZER returnValue = new _OBJECT_TYPE_INITIALIZER(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public _EX_PUSH_LOCK TypeLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 184);
				return returnValue;
			}
		}
		public UInt32 Key { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 192); } }
		public _LIST_ENTRY CallbackList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 200);
				return returnValue;
			}
		}
	}
	#endregion
	#region _PALPC_PORT_REFERENCE_WAIT_BLOCK
 
	public class _PALPC_PORT_REFERENCE_WAIT_BLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PALPC_PORT_REFERENCE_WAIT_BLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PALPC_PORT_REFERENCE_WAIT_BLOCK"": [ 32, {
				 ""DesiredReferenceNoEvent"": [ 0, [ ""_KEVENT"", ""null"" ]],
				 ""DesiredReferenceNo"": [ 24, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _KEVENT DesiredReferenceNoEvent
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public Int32 DesiredReferenceNo { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _PORT_MESSAGE32
 
	public class _PORT_MESSAGE32
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PORT_MESSAGE32(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PORT_MESSAGE32"": [ 24, {
				 ""u1"": [ 0, [ ""_UNNAMED_30277"", ""null"" ]],
				 ""u2"": [ 4, [ ""_UNNAMED_30283"", ""null"" ]],
				 ""ClientId"": [ 8, [ ""_CLIENT_ID32"", ""null"" ]],
				 ""DoNotUseThisField"": [ 8, [ ""Double"", ""null"" ]],
				 ""MessageId"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""ClientViewSize"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""CallbackId"": [ 20, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_30277 u1
		{
			get
			{
				_UNNAMED_30277 returnValue = new _UNNAMED_30277(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_30283 u2
		{
			get
			{
				_UNNAMED_30283 returnValue = new _UNNAMED_30283(_StructureData, _BufferOffset + 4);
				return returnValue;
			}
		}
		public _CLIENT_ID32 ClientId
		{
			get
			{
				_CLIENT_ID32 returnValue = new _CLIENT_ID32(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public Double DoNotUseThisField { get { return BitConverter.ToDouble(_StructureData, _BufferOffset + 8); } }
		public UInt32 MessageId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 ClientViewSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 CallbackId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
	}
	#endregion
	#region _UNNAMED_30515
 
	public class _UNNAMED_30515
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30515(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30515"": [ 4, {
				 ""QueueType"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""QueuePortType"": [ 0, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""Canceled"": [ 0, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""Ready"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt32\""}"" ]],
				 ""ReleaseMessage"": [ 0, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]],
				 ""SharedQuota"": [ 0, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt32\""}"" ]],
				 ""ReplyWaitReply"": [ 0, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt32\""}"" ]],
				 ""OwnerPortReference"": [ 0, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt32\""}"" ]],
				 ""ReserveReference"": [ 0, [ ""BitField"", ""{\""end_bit\"":13,\""start_bit\"":12,\""target\"":\""UInt32\""}"" ]],
				 ""ReceiverReference"": [ 0, [ ""BitField"", ""{\""end_bit\"":14,\""start_bit\"":13,\""target\"":\""UInt32\""}"" ]],
				 ""ViewAttributeRetrieved"": [ 0, [ ""BitField"", ""{\""end_bit\"":15,\""start_bit\"":14,\""target\"":\""UInt32\""}"" ]],
				 ""InDispatch"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":15,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 QueueType
		{
			get
			{
				// start: 0  end: 2  Mask: 0000000000000011
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 3) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 QueuePortType
		{
			get
			{
				// start: 2  end: 6  Mask: 0000000000111100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 60) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 Canceled
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 64) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 Ready
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 128) >> 7;
				return (UInt32)value2;
			}
		}
		public UInt32 ReleaseMessage
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 256) >> 8;
				return (UInt32)value2;
			}
		}
		public UInt32 SharedQuota
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 512) >> 9;
				return (UInt32)value2;
			}
		}
		public UInt32 ReplyWaitReply
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1024) >> 10;
				return (UInt32)value2;
			}
		}
		public UInt32 OwnerPortReference
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2048) >> 11;
				return (UInt32)value2;
			}
		}
		public UInt32 ReserveReference
		{
			get
			{
				// start: 12  end: 13  Mask: 0001000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4096) >> 12;
				return (UInt32)value2;
			}
		}
		public UInt32 ReceiverReference
		{
			get
			{
				// start: 13  end: 14  Mask: 0010000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8192) >> 13;
				return (UInt32)value2;
			}
		}
		public UInt32 ViewAttributeRetrieved
		{
			get
			{
				// start: 14  end: 15  Mask: 0100000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16384) >> 14;
				return (UInt32)value2;
			}
		}
		public UInt32 InDispatch
		{
			get
			{
				// start: 15  end: 16  Mask: 1000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 32768) >> 15;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _UNNAMED_30528
 
	public class _UNNAMED_30528
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30528(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30528"": [ 4, {
				 ""s1"": [ 0, [ ""_UNNAMED_30515"", ""null"" ]],
				 ""State"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_30515 s1
		{
			get
			{
				_UNNAMED_30515 returnValue = new _UNNAMED_30515(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 State { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _KALPC_MESSAGE
 
	public class _KALPC_MESSAGE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KALPC_MESSAGE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 256; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KALPC_MESSAGE"": [ 256, {
				 ""Entry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""PortQueue"": [ 16, [ ""Pointer"", ""{\""target\"":\""_ALPC_PORT\""}"" ]],
				 ""OwnerPort"": [ 24, [ ""Pointer"", ""{\""target\"":\""_ALPC_PORT\""}"" ]],
				 ""WaitingThread"": [ 32, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]],
				 ""u1"": [ 40, [ ""_UNNAMED_30528"", ""null"" ]],
				 ""SequenceNo"": [ 44, [ ""Int32"", ""null"" ]],
				 ""QuotaProcess"": [ 48, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""QuotaBlock"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CancelSequencePort"": [ 56, [ ""Pointer"", ""{\""target\"":\""_ALPC_PORT\""}"" ]],
				 ""CancelQueuePort"": [ 64, [ ""Pointer"", ""{\""target\"":\""_ALPC_PORT\""}"" ]],
				 ""CancelSequenceNo"": [ 72, [ ""Int32"", ""null"" ]],
				 ""CancelListEntry"": [ 80, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Reserve"": [ 96, [ ""Pointer"", ""{\""target\"":\""_KALPC_RESERVE\""}"" ]],
				 ""MessageAttributes"": [ 104, [ ""_KALPC_MESSAGE_ATTRIBUTES"", ""null"" ]],
				 ""DataUserVa"": [ 160, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CommunicationInfo"": [ 168, [ ""Pointer"", ""{\""target\"":\""_ALPC_COMMUNICATION_INFO\""}"" ]],
				 ""ConnectionPort"": [ 176, [ ""Pointer"", ""{\""target\"":\""_ALPC_PORT\""}"" ]],
				 ""ServerThread"": [ 184, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]],
				 ""WakeReference"": [ 192, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ExtensionBuffer"": [ 200, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ExtensionBufferSize"": [ 208, [ ""UInt64"", ""null"" ]],
				 ""PortMessage"": [ 216, [ ""_PORT_MESSAGE"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY Entry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 PortQueue { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 OwnerPort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 WaitingThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public _UNNAMED_30528 u1
		{
			get
			{
				_UNNAMED_30528 returnValue = new _UNNAMED_30528(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public Int32 SequenceNo { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 44); } }
		public UInt64 QuotaProcess { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 QuotaBlock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 CancelSequencePort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 CancelQueuePort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public Int32 CancelSequenceNo { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 72); } }
		public _LIST_ENTRY CancelListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 80);
				return returnValue;
			}
		}
		public UInt64 Reserve { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public _KALPC_MESSAGE_ATTRIBUTES MessageAttributes
		{
			get
			{
				_KALPC_MESSAGE_ATTRIBUTES returnValue = new _KALPC_MESSAGE_ATTRIBUTES(_StructureData, _BufferOffset + 104);
				return returnValue;
			}
		}
		public UInt64 DataUserVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public UInt64 CommunicationInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 168); } }
		public UInt64 ConnectionPort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 176); } }
		public UInt64 ServerThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 184); } }
		public UInt64 WakeReference { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 192); } }
		public UInt64 ExtensionBuffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 200); } }
		public UInt64 ExtensionBufferSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 208); } }
		public _PORT_MESSAGE PortMessage
		{
			get
			{
				_PORT_MESSAGE returnValue = new _PORT_MESSAGE(_StructureData, _BufferOffset + 216);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ALPC_DISPATCH_CONTEXT
 
	public class _ALPC_DISPATCH_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ALPC_DISPATCH_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ALPC_DISPATCH_CONTEXT"": [ 56, {
				 ""PortObject"": [ 0, [ ""Pointer"", ""{\""target\"":\""_ALPC_PORT\""}"" ]],
				 ""Message"": [ 8, [ ""Pointer"", ""{\""target\"":\""_KALPC_MESSAGE\""}"" ]],
				 ""CommunicationInfo"": [ 16, [ ""Pointer"", ""{\""target\"":\""_ALPC_COMMUNICATION_INFO\""}"" ]],
				 ""TargetThread"": [ 24, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]],
				 ""TargetPort"": [ 32, [ ""Pointer"", ""{\""target\"":\""_ALPC_PORT\""}"" ]],
				 ""Flags"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""TotalLength"": [ 44, [ ""UInt16"", ""null"" ]],
				 ""Type"": [ 46, [ ""UInt16"", ""null"" ]],
				 ""DataInfoOffset"": [ 48, [ ""UInt16"", ""null"" ]],
				 ""SignalCompletion"": [ 50, [ ""Byte"", ""null"" ]],
				 ""PostedToCompletionList"": [ 51, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 PortObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Message { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 CommunicationInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 TargetThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 TargetPort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt16 TotalLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 44); } }
		public UInt16 Type { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 46); } }
		public UInt16 DataInfoOffset { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 48); } }
		public Byte SignalCompletion{ get { return _StructureData[_BufferOffset +50]; } }
		public Byte PostedToCompletionList{ get { return _StructureData[_BufferOffset +51]; } }
	}
	#endregion
	#region _REMOTE_PORT_VIEW
 
	public class _REMOTE_PORT_VIEW
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _REMOTE_PORT_VIEW(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_REMOTE_PORT_VIEW"": [ 24, {
				 ""Length"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ViewSize"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""ViewBase"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 ViewSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 ViewBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _KALPC_RESERVE
 
	public class _KALPC_RESERVE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KALPC_RESERVE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KALPC_RESERVE"": [ 40, {
				 ""OwnerPort"": [ 0, [ ""Pointer"", ""{\""target\"":\""_ALPC_PORT\""}"" ]],
				 ""HandleTable"": [ 8, [ ""Pointer"", ""{\""target\"":\""_ALPC_HANDLE_TABLE\""}"" ]],
				 ""Handle"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Message"": [ 24, [ ""Pointer"", ""{\""target\"":\""_KALPC_MESSAGE\""}"" ]],
				 ""Active"": [ 32, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 OwnerPort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 HandleTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Handle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Message { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public Int32 Active { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _KALPC_HANDLE_DATA
 
	public class _KALPC_HANDLE_DATA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KALPC_HANDLE_DATA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KALPC_HANDLE_DATA"": [ 48, {
				 ""Flags"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ObjectType"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""DuplicateContext"": [ 8, [ ""_OB_DUPLICATE_OBJECT_STATE"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 ObjectType { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _OB_DUPLICATE_OBJECT_STATE DuplicateContext
		{
			get
			{
				_OB_DUPLICATE_OBJECT_STATE returnValue = new _OB_DUPLICATE_OBJECT_STATE(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _KALPC_MESSAGE_ATTRIBUTES
 
	public class _KALPC_MESSAGE_ATTRIBUTES
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KALPC_MESSAGE_ATTRIBUTES(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KALPC_MESSAGE_ATTRIBUTES"": [ 56, {
				 ""ClientContext"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ServerContext"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PortContext"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CancelPortContext"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SecurityData"": [ 32, [ ""Pointer"", ""{\""target\"":\""_KALPC_SECURITY_DATA\""}"" ]],
				 ""View"": [ 40, [ ""Pointer"", ""{\""target\"":\""_KALPC_VIEW\""}"" ]],
				 ""HandleData"": [ 48, [ ""Pointer"", ""{\""target\"":\""_KALPC_HANDLE_DATA\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ClientContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 ServerContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 PortContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 CancelPortContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 SecurityData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 View { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 HandleData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
	}
	#endregion
	#region _UNNAMED_30592
 
	public class _UNNAMED_30592
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30592(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30592"": [ 4, {
				 ""Revoked"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""Impersonated"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Revoked
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 Impersonated
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _UNNAMED_30595
 
	public class _UNNAMED_30595
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30595(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30595"": [ 4, {
				 ""s1"": [ 0, [ ""_UNNAMED_30592"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_30592 s1
		{
			get
			{
				_UNNAMED_30592 returnValue = new _UNNAMED_30592(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _KALPC_SECURITY_DATA
 
	public class _KALPC_SECURITY_DATA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KALPC_SECURITY_DATA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 112; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KALPC_SECURITY_DATA"": [ 112, {
				 ""HandleTable"": [ 0, [ ""Pointer"", ""{\""target\"":\""_ALPC_HANDLE_TABLE\""}"" ]],
				 ""ContextHandle"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""OwningProcess"": [ 16, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""OwnerPort"": [ 24, [ ""Pointer"", ""{\""target\"":\""_ALPC_PORT\""}"" ]],
				 ""DynamicSecurity"": [ 32, [ ""_SECURITY_CLIENT_CONTEXT"", ""null"" ]],
				 ""u1"": [ 104, [ ""_UNNAMED_30595"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 HandleTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 ContextHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 OwningProcess { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 OwnerPort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public _SECURITY_CLIENT_CONTEXT DynamicSecurity
		{
			get
			{
				_SECURITY_CLIENT_CONTEXT returnValue = new _SECURITY_CLIENT_CONTEXT(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public _UNNAMED_30595 u1
		{
			get
			{
				_UNNAMED_30595 returnValue = new _UNNAMED_30595(_StructureData, _BufferOffset + 104);
				return returnValue;
			}
		}
	}
	#endregion
	#region _IO_MINI_COMPLETION_PACKET_USER
 
	public class _IO_MINI_COMPLETION_PACKET_USER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IO_MINI_COMPLETION_PACKET_USER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 80; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IO_MINI_COMPLETION_PACKET_USER"": [ 80, {
				 ""ListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""PacketType"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""KeyContext"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ApcContext"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""IoStatus"": [ 40, [ ""Int32"", ""null"" ]],
				 ""IoStatusInformation"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""MiniPacketCallback"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Context"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Allocated"": [ 72, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 PacketType { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt64 KeyContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 ApcContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public Int32 IoStatus { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 40); } }
		public UInt64 IoStatusInformation { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 MiniPacketCallback { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 Context { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public Byte Allocated{ get { return _StructureData[_BufferOffset +72]; } }
	}
	#endregion
	#region _IOP_IRP_EXTENSION
 
	public class _IOP_IRP_EXTENSION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IOP_IRP_EXTENSION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IOP_IRP_EXTENSION"": [ 40, {
				 ""ExtensionFlags"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Allocated"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""PropagateId"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt16\""}"" ]],
				 ""TimeStamped"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt16\""}"" ]],
				 ""SpareBits"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":3,\""target\"":\""UInt16\""}"" ]],
				 ""TypesAllocated"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""GenericExtension"": [ 4, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""VerifierContext"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ActivityId"": [ 16, [ ""_GUID"", ""null"" ]],
				 ""Timestamp"": [ 32, [ ""_LARGE_INTEGER"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 ExtensionFlags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 Allocated
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 PropagateId
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt16)value2;
			}
		}
		public UInt16 TimeStamped
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt16)value2;
			}
		}
		public UInt16 SpareBits
		{
			get
			{
				// start: 3  end: 16  Mask: 1111111111111000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 65528) >> 3;
				return (UInt16)value2;
			}
		}
		public UInt16 TypesAllocated { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public Byte[] GenericExtension
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 4];
				return returnValue;
			}
		}
		public UInt64 VerifierContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _GUID ActivityId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _LARGE_INTEGER Timestamp
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
	}
	#endregion
	#region _DRIVER_OBJECT
 
	public class _DRIVER_OBJECT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DRIVER_OBJECT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 336; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DRIVER_OBJECT"": [ 336, {
				 ""Type"": [ 0, [ ""Int16"", ""null"" ]],
				 ""Size"": [ 2, [ ""Int16"", ""null"" ]],
				 ""DeviceObject"": [ 8, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""Flags"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""DriverStart"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DriverSize"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""DriverSection"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DriverExtension"": [ 48, [ ""Pointer"", ""{\""target\"":\""_DRIVER_EXTENSION\""}"" ]],
				 ""DriverName"": [ 56, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""HardwareDatabase"": [ 72, [ ""Pointer"", ""{\""target\"":\""_UNICODE_STRING\""}"" ]],
				 ""FastIoDispatch"": [ 80, [ ""Pointer"", ""{\""target\"":\""_FAST_IO_DISPATCH\""}"" ]],
				 ""DriverInit"": [ 88, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DriverStartIo"": [ 96, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DriverUnload"": [ 104, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""MajorFunction"": [ 112, [ ""Array"", ""{\""count\"":28,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]] }]
				 }
				)";
			}
		}
		public Int16 Type { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 0); } }
		public Int16 Size { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 2); } }
		public UInt64 DeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt64 DriverStart { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt32 DriverSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt64 DriverSection { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 DriverExtension { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public _UNICODE_STRING DriverName
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public UInt64 HardwareDatabase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 FastIoDispatch { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 DriverInit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 DriverStartIo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt64 DriverUnload { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public UInt64[] MajorFunction
		{
			get
			{
				UInt64[] returnValue = new UInt64[28];
				int size = 8;
				for(int i=0; i<28; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 112);
				return returnValue;
			}
		}
	}
	#endregion
	#region _FILE_SEGMENT_ELEMENT
 
	public class _FILE_SEGMENT_ELEMENT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _FILE_SEGMENT_ELEMENT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_FILE_SEGMENT_ELEMENT"": [ 8, {
				 ""Buffer"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Alignment"": [ 0, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Buffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Alignment { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _RELATIVE_SYMLINK_INFO
 
	public class _RELATIVE_SYMLINK_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RELATIVE_SYMLINK_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RELATIVE_SYMLINK_INFO"": [ 32, {
				 ""ExposedNamespaceLength"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Flags"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""DeviceNameLength"": [ 4, [ ""UInt16"", ""null"" ]],
				 ""Reserved"": [ 6, [ ""UInt16"", ""null"" ]],
				 ""InteriorMountPoint"": [ 8, [ ""Pointer"", ""{\""target\"":\""_RELATIVE_SYMLINK_INFO\""}"" ]],
				 ""OpenedName"": [ 16, [ ""_UNICODE_STRING"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 ExposedNamespaceLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 Flags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt16 DeviceNameLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 4); } }
		public UInt16 Reserved { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
		public UInt64 InteriorMountPoint { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _UNICODE_STRING OpenedName
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ECP_LIST
 
	public class _ECP_LIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ECP_LIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ECP_LIST"": [ 24, {
				 ""Signature"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Flags"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""EcpList"": [ 8, [ ""_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Signature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _LIST_ENTRY EcpList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _IOP_FILE_OBJECT_EXTENSION
 
	public class _IOP_FILE_OBJECT_EXTENSION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IOP_FILE_OBJECT_EXTENSION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IOP_FILE_OBJECT_EXTENSION"": [ 72, {
				 ""FoExtFlags"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""FoExtPerTypeExtension"": [ 8, [ ""Array"", ""{\""count\"":7,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]],
				 ""FoIoPriorityHint"": [ 64, [ ""Enumeration"", ""{\""enum_name\"":\""_IOP_PRIORITY_HINT\"",\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 FoExtFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64[] FoExtPerTypeExtension
		{
			get
			{
				UInt64[] returnValue = new UInt64[7];
				int size = 8;
				for(int i=0; i<7; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 8);
				return returnValue;
			}
		}
		public _IOP_PRIORITY_HINT FoIoPriorityHint { get { return (_IOP_PRIORITY_HINT)BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
	}
	#endregion
	#region _OPEN_PACKET
 
	public class _OPEN_PACKET
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OPEN_PACKET(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 184; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OPEN_PACKET"": [ 184, {
				 ""Type"": [ 0, [ ""Int16"", ""null"" ]],
				 ""Size"": [ 2, [ ""Int16"", ""null"" ]],
				 ""FileObject"": [ 8, [ ""Pointer"", ""{\""target\"":\""_FILE_OBJECT\""}"" ]],
				 ""FinalStatus"": [ 16, [ ""Int32"", ""null"" ]],
				 ""Information"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""ParseCheck"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""RelatedFileObject"": [ 40, [ ""Pointer"", ""{\""target\"":\""_FILE_OBJECT\""}"" ]],
				 ""ReferencedDeviceObject"": [ 40, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""OriginalAttributes"": [ 48, [ ""Pointer"", ""{\""target\"":\""_OBJECT_ATTRIBUTES\""}"" ]],
				 ""AllocationSize"": [ 56, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""CreateOptions"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""FileAttributes"": [ 68, [ ""UInt16"", ""null"" ]],
				 ""ShareAccess"": [ 70, [ ""UInt16"", ""null"" ]],
				 ""EaBuffer"": [ 72, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""EaLength"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""Options"": [ 84, [ ""UInt32"", ""null"" ]],
				 ""Disposition"": [ 88, [ ""UInt32"", ""null"" ]],
				 ""BasicInformation"": [ 96, [ ""Pointer"", ""{\""target\"":\""_FILE_BASIC_INFORMATION\""}"" ]],
				 ""NetworkInformation"": [ 104, [ ""Pointer"", ""{\""target\"":\""_FILE_NETWORK_OPEN_INFORMATION\""}"" ]],
				 ""CreateFileType"": [ 112, [ ""Enumeration"", ""{\""enum_name\"":\""_CREATE_FILE_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""MailslotOrPipeParameters"": [ 120, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Override"": [ 128, [ ""Byte"", ""null"" ]],
				 ""QueryOnly"": [ 129, [ ""Byte"", ""null"" ]],
				 ""DeleteOnly"": [ 130, [ ""Byte"", ""null"" ]],
				 ""FullAttributes"": [ 131, [ ""Byte"", ""null"" ]],
				 ""LocalFileObject"": [ 136, [ ""Pointer"", ""{\""target\"":\""_DUMMY_FILE_OBJECT\""}"" ]],
				 ""InternalFlags"": [ 144, [ ""UInt32"", ""null"" ]],
				 ""AccessMode"": [ 148, [ ""Char"", ""null"" ]],
				 ""DriverCreateContext"": [ 152, [ ""_IO_DRIVER_CREATE_CONTEXT"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int16 Type { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 0); } }
		public Int16 Size { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 2); } }
		public UInt64 FileObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public Int32 FinalStatus { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 16); } }
		public UInt64 Information { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt32 ParseCheck { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt64 RelatedFileObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 ReferencedDeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 OriginalAttributes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public _LARGE_INTEGER AllocationSize
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public UInt32 CreateOptions { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt16 FileAttributes { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 68); } }
		public UInt16 ShareAccess { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 70); } }
		public UInt64 EaBuffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt32 EaLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 Options { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
		public UInt32 Disposition { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 88); } }
		public UInt64 BasicInformation { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt64 NetworkInformation { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public _CREATE_FILE_TYPE CreateFileType { get { return (_CREATE_FILE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 112); } }
		public UInt64 MailslotOrPipeParameters { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 120); } }
		public Byte Override{ get { return _StructureData[_BufferOffset +128]; } }
		public Byte QueryOnly{ get { return _StructureData[_BufferOffset +129]; } }
		public Byte DeleteOnly{ get { return _StructureData[_BufferOffset +130]; } }
		public Byte FullAttributes{ get { return _StructureData[_BufferOffset +131]; } }
		public UInt64 LocalFileObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 136); } }
		public UInt32 InternalFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 144); } }
		public Char AccessMode { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 148); } }
		public _IO_DRIVER_CREATE_CONTEXT DriverCreateContext
		{
			get
			{
				_IO_DRIVER_CREATE_CONTEXT returnValue = new _IO_DRIVER_CREATE_CONTEXT(_StructureData, _BufferOffset + 152);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ETW_SYSTEMTIME
 
	public class _ETW_SYSTEMTIME
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETW_SYSTEMTIME(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETW_SYSTEMTIME"": [ 16, {
				 ""Year"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Month"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""DayOfWeek"": [ 4, [ ""UInt16"", ""null"" ]],
				 ""Day"": [ 6, [ ""UInt16"", ""null"" ]],
				 ""Hour"": [ 8, [ ""UInt16"", ""null"" ]],
				 ""Minute"": [ 10, [ ""UInt16"", ""null"" ]],
				 ""Second"": [ 12, [ ""UInt16"", ""null"" ]],
				 ""Milliseconds"": [ 14, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Year { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 Month { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt16 DayOfWeek { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 4); } }
		public UInt16 Day { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
		public UInt16 Hour { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 8); } }
		public UInt16 Minute { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 10); } }
		public UInt16 Second { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 12); } }
		public UInt16 Milliseconds { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 14); } }
	}
	#endregion
	#region _TIME_FIELDS
 
	public class _TIME_FIELDS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _TIME_FIELDS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_TIME_FIELDS"": [ 16, {
				 ""Year"": [ 0, [ ""Int16"", ""null"" ]],
				 ""Month"": [ 2, [ ""Int16"", ""null"" ]],
				 ""Day"": [ 4, [ ""Int16"", ""null"" ]],
				 ""Hour"": [ 6, [ ""Int16"", ""null"" ]],
				 ""Minute"": [ 8, [ ""Int16"", ""null"" ]],
				 ""Second"": [ 10, [ ""Int16"", ""null"" ]],
				 ""Milliseconds"": [ 12, [ ""Int16"", ""null"" ]],
				 ""Weekday"": [ 14, [ ""Int16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int16 Year { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 0); } }
		public Int16 Month { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 2); } }
		public Int16 Day { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 4); } }
		public Int16 Hour { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 6); } }
		public Int16 Minute { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 8); } }
		public Int16 Second { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 10); } }
		public Int16 Milliseconds { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 12); } }
		public Int16 Weekday { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 14); } }
	}
	#endregion
	#region _UNNAMED_30726
 
	public class _UNNAMED_30726
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_30726(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_30726"": [ 4, {
				 ""MajorVersion"": [ 0, [ ""Byte"", ""null"" ]],
				 ""MinorVersion"": [ 1, [ ""Byte"", ""null"" ]],
				 ""SubVersion"": [ 2, [ ""Byte"", ""null"" ]],
				 ""SubMinorVersion"": [ 3, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte MajorVersion{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte MinorVersion{ get { return _StructureData[_BufferOffset +1]; } }
		public Byte SubVersion{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte SubMinorVersion{ get { return _StructureData[_BufferOffset +3]; } }
	}
	#endregion
	#region _TRACE_LOGFILE_HEADER
 
	public class _TRACE_LOGFILE_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _TRACE_LOGFILE_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 280; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_TRACE_LOGFILE_HEADER"": [ 280, {
				 ""BufferSize"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Version"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""VersionDetail"": [ 4, [ ""_UNNAMED_30726"", ""null"" ]],
				 ""ProviderVersion"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""NumberOfProcessors"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""EndTime"": [ 16, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""TimerResolution"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""MaximumFileSize"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""LogFileMode"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""BuffersWritten"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""LogInstanceGuid"": [ 40, [ ""_GUID"", ""null"" ]],
				 ""StartBuffers"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""PointerSize"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""EventsLost"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""CpuSpeedInMHz"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""LoggerName"": [ 56, [ ""Pointer"", ""{\""target\"":\""UInt16\""}"" ]],
				 ""LogFileName"": [ 64, [ ""Pointer"", ""{\""target\"":\""UInt16\""}"" ]],
				 ""TimeZone"": [ 72, [ ""_RTL_TIME_ZONE_INFORMATION"", ""null"" ]],
				 ""BootTime"": [ 248, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""PerfFreq"": [ 256, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""StartTime"": [ 264, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""ReservedFlags"": [ 272, [ ""UInt32"", ""null"" ]],
				 ""BuffersLost"": [ 276, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 BufferSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Version { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _UNNAMED_30726 VersionDetail
		{
			get
			{
				_UNNAMED_30726 returnValue = new _UNNAMED_30726(_StructureData, _BufferOffset + 4);
				return returnValue;
			}
		}
		public UInt32 ProviderVersion { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 NumberOfProcessors { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public _LARGE_INTEGER EndTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt32 TimerResolution { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 MaximumFileSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 LogFileMode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 BuffersWritten { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public _GUID LogInstanceGuid
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public UInt32 StartBuffers { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32 PointerSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public UInt32 EventsLost { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public UInt32 CpuSpeedInMHz { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public UInt64 LoggerName { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 LogFileName { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public _RTL_TIME_ZONE_INFORMATION TimeZone
		{
			get
			{
				_RTL_TIME_ZONE_INFORMATION returnValue = new _RTL_TIME_ZONE_INFORMATION(_StructureData, _BufferOffset + 72);
				return returnValue;
			}
		}
		public _LARGE_INTEGER BootTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 248);
				return returnValue;
			}
		}
		public _LARGE_INTEGER PerfFreq
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 256);
				return returnValue;
			}
		}
		public _LARGE_INTEGER StartTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 264);
				return returnValue;
			}
		}
		public UInt32 ReservedFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 272); } }
		public UInt32 BuffersLost { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 276); } }
	}
	#endregion
	#region _ETW_STACK_CACHE
 
	public class _ETW_STACK_CACHE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETW_STACK_CACHE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETW_STACK_CACHE"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _WMI_LOGGER_CONTEXT
 
	public class _WMI_LOGGER_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WMI_LOGGER_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 888; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WMI_LOGGER_CONTEXT"": [ 888, {
				 ""LoggerId"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""BufferSize"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""MaximumEventSize"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""LoggerMode"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""AcceptNewEvents"": [ 16, [ ""Int32"", ""null"" ]],
				 ""EventMarker"": [ 20, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""ErrorMarker"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""SizeMask"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""GetCpuClock"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""LoggerThread"": [ 48, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]],
				 ""LoggerStatus"": [ 56, [ ""Int32"", ""null"" ]],
				 ""FailureReason"": [ 60, [ ""UInt32"", ""null"" ]],
				 ""BufferQueue"": [ 64, [ ""_ETW_BUFFER_QUEUE"", ""null"" ]],
				 ""OverflowQueue"": [ 88, [ ""_ETW_BUFFER_QUEUE"", ""null"" ]],
				 ""GlobalList"": [ 112, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ProviderBinaryList"": [ 128, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""BatchedBufferList"": [ 144, [ ""Pointer"", ""{\""target\"":\""_WMI_BUFFER_HEADER\""}"" ]],
				 ""CurrentBuffer"": [ 144, [ ""_EX_FAST_REF"", ""null"" ]],
				 ""LoggerName"": [ 152, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""LogFileName"": [ 168, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""LogFilePattern"": [ 184, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""NewLogFileName"": [ 200, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""ClockType"": [ 216, [ ""UInt32"", ""null"" ]],
				 ""LastFlushedBuffer"": [ 220, [ ""UInt32"", ""null"" ]],
				 ""FlushTimer"": [ 224, [ ""UInt32"", ""null"" ]],
				 ""FlushThreshold"": [ 228, [ ""UInt32"", ""null"" ]],
				 ""ByteOffset"": [ 232, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""MinimumBuffers"": [ 240, [ ""UInt32"", ""null"" ]],
				 ""BuffersAvailable"": [ 244, [ ""Int32"", ""null"" ]],
				 ""NumberOfBuffers"": [ 248, [ ""Int32"", ""null"" ]],
				 ""MaximumBuffers"": [ 252, [ ""UInt32"", ""null"" ]],
				 ""EventsLost"": [ 256, [ ""UInt32"", ""null"" ]],
				 ""PeakBuffersCount"": [ 260, [ ""Int32"", ""null"" ]],
				 ""BuffersWritten"": [ 264, [ ""UInt32"", ""null"" ]],
				 ""LogBuffersLost"": [ 268, [ ""UInt32"", ""null"" ]],
				 ""RealTimeBuffersDelivered"": [ 272, [ ""UInt32"", ""null"" ]],
				 ""RealTimeBuffersLost"": [ 276, [ ""UInt32"", ""null"" ]],
				 ""SequencePtr"": [ 280, [ ""Pointer"", ""{\""target\"":\""long\""}"" ]],
				 ""LocalSequence"": [ 288, [ ""UInt32"", ""null"" ]],
				 ""InstanceGuid"": [ 292, [ ""_GUID"", ""null"" ]],
				 ""MaximumFileSize"": [ 308, [ ""UInt32"", ""null"" ]],
				 ""FileCounter"": [ 312, [ ""Int32"", ""null"" ]],
				 ""PoolType"": [ 316, [ ""Enumeration"", ""{\""enum_name\"":\""_POOL_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""ReferenceTime"": [ 320, [ ""_ETW_REF_CLOCK"", ""null"" ]],
				 ""CollectionOn"": [ 336, [ ""Int32"", ""null"" ]],
				 ""ProviderInfoSize"": [ 340, [ ""UInt32"", ""null"" ]],
				 ""Consumers"": [ 344, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""NumConsumers"": [ 360, [ ""UInt32"", ""null"" ]],
				 ""TransitionConsumer"": [ 368, [ ""Pointer"", ""{\""target\"":\""_ETW_REALTIME_CONSUMER\""}"" ]],
				 ""RealtimeLogfileHandle"": [ 376, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""RealtimeLogfileName"": [ 384, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""RealtimeWriteOffset"": [ 400, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""RealtimeReadOffset"": [ 408, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""RealtimeLogfileSize"": [ 416, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""RealtimeLogfileUsage"": [ 424, [ ""UInt64"", ""null"" ]],
				 ""RealtimeMaximumFileSize"": [ 432, [ ""UInt64"", ""null"" ]],
				 ""RealtimeBuffersSaved"": [ 440, [ ""UInt32"", ""null"" ]],
				 ""RealtimeReferenceTime"": [ 448, [ ""_ETW_REF_CLOCK"", ""null"" ]],
				 ""NewRTEventsLost"": [ 464, [ ""Enumeration"", ""{\""enum_name\"":\""_ETW_RT_EVENT_LOSS\"",\""target\"":\""UInt32\""}"" ]],
				 ""LoggerEvent"": [ 472, [ ""_KEVENT"", ""null"" ]],
				 ""FlushEvent"": [ 496, [ ""_KEVENT"", ""null"" ]],
				 ""FlushTimeOutTimer"": [ 520, [ ""_KTIMER"", ""null"" ]],
				 ""LoggerDpc"": [ 584, [ ""_KDPC"", ""null"" ]],
				 ""LoggerMutex"": [ 648, [ ""_KMUTANT"", ""null"" ]],
				 ""LoggerLock"": [ 704, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""BufferListSpinLock"": [ 712, [ ""UInt64"", ""null"" ]],
				 ""BufferListPushLock"": [ 712, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""ClientSecurityContext"": [ 720, [ ""_SECURITY_CLIENT_CONTEXT"", ""null"" ]],
				 ""SecurityDescriptor"": [ 792, [ ""_EX_FAST_REF"", ""null"" ]],
				 ""StartTime"": [ 800, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""LogFileHandle"": [ 808, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""BufferSequenceNumber"": [ 816, [ ""Int64"", ""null"" ]],
				 ""Flags"": [ 824, [ ""UInt32"", ""null"" ]],
				 ""Persistent"": [ 824, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""AutoLogger"": [ 824, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""FsReady"": [ 824, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""RealTime"": [ 824, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""Wow"": [ 824, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""KernelTrace"": [ 824, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""NoMoreEnable"": [ 824, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""StackTracing"": [ 824, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt32\""}"" ]],
				 ""ErrorLogged"": [ 824, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]],
				 ""RealtimeLoggerContextFreed"": [ 824, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt32\""}"" ]],
				 ""PebsTracing"": [ 824, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt32\""}"" ]],
				 ""PmcCounters"": [ 824, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt32\""}"" ]],
				 ""PageAlignBuffers"": [ 824, [ ""BitField"", ""{\""end_bit\"":13,\""start_bit\"":12,\""target\"":\""UInt32\""}"" ]],
				 ""SpareFlags1"": [ 824, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":13,\""target\"":\""UInt32\""}"" ]],
				 ""SystemLoggerIndex"": [ 824, [ ""BitField"", ""{\""end_bit\"":24,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""StackCaching"": [ 824, [ ""BitField"", ""{\""end_bit\"":25,\""start_bit\"":24,\""target\"":\""UInt32\""}"" ]],
				 ""SpareFlags2"": [ 824, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":25,\""target\"":\""UInt32\""}"" ]],
				 ""RequestFlag"": [ 828, [ ""UInt32"", ""null"" ]],
				 ""DbgRequestNewFie"": [ 828, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""DbgRequestUpdateFile"": [ 828, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""DbgRequestFlush"": [ 828, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""DbgRequestDisableRealtime"": [ 828, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""DbgRequestDisconnectConsumer"": [ 828, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""DbgRequestConnectConsumer"": [ 828, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""DbgRequestNotifyConsumer"": [ 828, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""DbgRequestUpdateHeader"": [ 828, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt32\""}"" ]],
				 ""DbgRequestDefferdFlush"": [ 828, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]],
				 ""DbgRequestDefferdFlushTimer"": [ 828, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt32\""}"" ]],
				 ""DbgRequestFlushTimer"": [ 828, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt32\""}"" ]],
				 ""DbgRequestUpdateDebugger"": [ 828, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt32\""}"" ]],
				 ""DbgSpareRequestFlags"": [ 828, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":12,\""target\"":\""UInt32\""}"" ]],
				 ""HookIdMap"": [ 832, [ ""_RTL_BITMAP"", ""null"" ]],
				 ""StackCache"": [ 848, [ ""Pointer"", ""{\""target\"":\""_ETW_STACK_CACHE\""}"" ]],
				 ""PmcData"": [ 856, [ ""Pointer"", ""{\""target\"":\""_ETW_PMC_SUPPORT\""}"" ]],
				 ""WinRtProviderBinaryList"": [ 864, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ScratchArray"": [ 880, [ ""Pointer"", ""{\""target\"":\""_WMI_BUFFER_HEADER*\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 LoggerId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 BufferSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 MaximumEventSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 LoggerMode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public Int32 AcceptNewEvents { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32[] EventMarker
		{
			get
			{
				UInt32[] returnValue = new UInt32[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 20);
				return returnValue;
			}
		}
		public UInt32 ErrorMarker { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 SizeMask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt64 GetCpuClock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 LoggerThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public Int32 LoggerStatus { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 56); } }
		public UInt32 FailureReason { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
		public _ETW_BUFFER_QUEUE BufferQueue
		{
			get
			{
				_ETW_BUFFER_QUEUE returnValue = new _ETW_BUFFER_QUEUE(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public _ETW_BUFFER_QUEUE OverflowQueue
		{
			get
			{
				_ETW_BUFFER_QUEUE returnValue = new _ETW_BUFFER_QUEUE(_StructureData, _BufferOffset + 88);
				return returnValue;
			}
		}
		public _LIST_ENTRY GlobalList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 112);
				return returnValue;
			}
		}
		public _LIST_ENTRY ProviderBinaryList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 128);
				return returnValue;
			}
		}
		public UInt64 BatchedBufferList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 144); } }
		public _EX_FAST_REF CurrentBuffer
		{
			get
			{
				_EX_FAST_REF returnValue = new _EX_FAST_REF(_StructureData, _BufferOffset + 144);
				return returnValue;
			}
		}
		public _UNICODE_STRING LoggerName
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 152);
				return returnValue;
			}
		}
		public _UNICODE_STRING LogFileName
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 168);
				return returnValue;
			}
		}
		public _UNICODE_STRING LogFilePattern
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 184);
				return returnValue;
			}
		}
		public _UNICODE_STRING NewLogFileName
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 200);
				return returnValue;
			}
		}
		public UInt32 ClockType { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 216); } }
		public UInt32 LastFlushedBuffer { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 220); } }
		public UInt32 FlushTimer { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 224); } }
		public UInt32 FlushThreshold { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 228); } }
		public _LARGE_INTEGER ByteOffset
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 232);
				return returnValue;
			}
		}
		public UInt32 MinimumBuffers { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 240); } }
		public Int32 BuffersAvailable { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 244); } }
		public Int32 NumberOfBuffers { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 248); } }
		public UInt32 MaximumBuffers { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 252); } }
		public UInt32 EventsLost { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 256); } }
		public Int32 PeakBuffersCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 260); } }
		public UInt32 BuffersWritten { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 264); } }
		public UInt32 LogBuffersLost { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 268); } }
		public UInt32 RealTimeBuffersDelivered { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 272); } }
		public UInt32 RealTimeBuffersLost { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 276); } }
		public UInt64 SequencePtr { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 280); } }
		public UInt32 LocalSequence { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 288); } }
		public _GUID InstanceGuid
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 292);
				return returnValue;
			}
		}
		public UInt32 MaximumFileSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 308); } }
		public Int32 FileCounter { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 312); } }
		public _POOL_TYPE PoolType { get { return (_POOL_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 316); } }
		public _ETW_REF_CLOCK ReferenceTime
		{
			get
			{
				_ETW_REF_CLOCK returnValue = new _ETW_REF_CLOCK(_StructureData, _BufferOffset + 320);
				return returnValue;
			}
		}
		public Int32 CollectionOn { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 336); } }
		public UInt32 ProviderInfoSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 340); } }
		public _LIST_ENTRY Consumers
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 344);
				return returnValue;
			}
		}
		public UInt32 NumConsumers { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 360); } }
		public UInt64 TransitionConsumer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 368); } }
		public UInt64 RealtimeLogfileHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 376); } }
		public _UNICODE_STRING RealtimeLogfileName
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 384);
				return returnValue;
			}
		}
		public _LARGE_INTEGER RealtimeWriteOffset
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 400);
				return returnValue;
			}
		}
		public _LARGE_INTEGER RealtimeReadOffset
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 408);
				return returnValue;
			}
		}
		public _LARGE_INTEGER RealtimeLogfileSize
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 416);
				return returnValue;
			}
		}
		public UInt64 RealtimeLogfileUsage { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 424); } }
		public UInt64 RealtimeMaximumFileSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 432); } }
		public UInt32 RealtimeBuffersSaved { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 440); } }
		public _ETW_REF_CLOCK RealtimeReferenceTime
		{
			get
			{
				_ETW_REF_CLOCK returnValue = new _ETW_REF_CLOCK(_StructureData, _BufferOffset + 448);
				return returnValue;
			}
		}
		public _ETW_RT_EVENT_LOSS NewRTEventsLost { get { return (_ETW_RT_EVENT_LOSS)BitConverter.ToUInt32(_StructureData, _BufferOffset + 464); } }
		public _KEVENT LoggerEvent
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 472);
				return returnValue;
			}
		}
		public _KEVENT FlushEvent
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 496);
				return returnValue;
			}
		}
		public _KTIMER FlushTimeOutTimer
		{
			get
			{
				_KTIMER returnValue = new _KTIMER(_StructureData, _BufferOffset + 520);
				return returnValue;
			}
		}
		public _KDPC LoggerDpc
		{
			get
			{
				_KDPC returnValue = new _KDPC(_StructureData, _BufferOffset + 584);
				return returnValue;
			}
		}
		public _KMUTANT LoggerMutex
		{
			get
			{
				_KMUTANT returnValue = new _KMUTANT(_StructureData, _BufferOffset + 648);
				return returnValue;
			}
		}
		public _EX_PUSH_LOCK LoggerLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 704);
				return returnValue;
			}
		}
		public UInt64 BufferListSpinLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 712); } }
		public _EX_PUSH_LOCK BufferListPushLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 712);
				return returnValue;
			}
		}
		public _SECURITY_CLIENT_CONTEXT ClientSecurityContext
		{
			get
			{
				_SECURITY_CLIENT_CONTEXT returnValue = new _SECURITY_CLIENT_CONTEXT(_StructureData, _BufferOffset + 720);
				return returnValue;
			}
		}
		public _EX_FAST_REF SecurityDescriptor
		{
			get
			{
				_EX_FAST_REF returnValue = new _EX_FAST_REF(_StructureData, _BufferOffset + 792);
				return returnValue;
			}
		}
		public _LARGE_INTEGER StartTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 800);
				return returnValue;
			}
		}
		public UInt64 LogFileHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 808); } }
		public Int64 BufferSequenceNumber { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 816); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 824); } }
		public UInt32 Persistent
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 824);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 AutoLogger
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 824);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 FsReady
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 824);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 RealTime
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 824);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 Wow
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 824);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 KernelTrace
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 824);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 NoMoreEnable
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 824);
				var value2 = (value & 64) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 StackTracing
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 824);
				var value2 = (value & 128) >> 7;
				return (UInt32)value2;
			}
		}
		public UInt32 ErrorLogged
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 824);
				var value2 = (value & 256) >> 8;
				return (UInt32)value2;
			}
		}
		public UInt32 RealtimeLoggerContextFreed
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 824);
				var value2 = (value & 512) >> 9;
				return (UInt32)value2;
			}
		}
		public UInt32 PebsTracing
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 824);
				var value2 = (value & 1024) >> 10;
				return (UInt32)value2;
			}
		}
		public UInt32 PmcCounters
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 824);
				var value2 = (value & 2048) >> 11;
				return (UInt32)value2;
			}
		}
		public UInt32 PageAlignBuffers
		{
			get
			{
				// start: 12  end: 13  Mask: 0001000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 824);
				var value2 = (value & 4096) >> 12;
				return (UInt32)value2;
			}
		}
		public UInt32 SpareFlags1
		{
			get
			{
				// start: 13  end: 16  Mask: 1110000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 824);
				var value2 = (value & 57344) >> 13;
				return (UInt32)value2;
			}
		}
		public UInt32 SystemLoggerIndex
		{
			get
			{
				// start: 16  end: 24  Mask: 111111110000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 824);
				var value2 = (value & 16711680) >> 16;
				return (UInt32)value2;
			}
		}
		public UInt32 StackCaching
		{
			get
			{
				// start: 24  end: 25  Mask: 1000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 824);
				var value2 = (value & 16777216) >> 24;
				return (UInt32)value2;
			}
		}
		public UInt32 SpareFlags2
		{
			get
			{
				// start: 25  end: 32  Mask: 11111110000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 824);
				var value2 = (value & 4261412864) >> 25;
				return (UInt32)value2;
			}
		}
		public UInt32 RequestFlag { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 828); } }
		public UInt32 DbgRequestNewFie
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 828);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 DbgRequestUpdateFile
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 828);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 DbgRequestFlush
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 828);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 DbgRequestDisableRealtime
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 828);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 DbgRequestDisconnectConsumer
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 828);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 DbgRequestConnectConsumer
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 828);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 DbgRequestNotifyConsumer
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 828);
				var value2 = (value & 64) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 DbgRequestUpdateHeader
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 828);
				var value2 = (value & 128) >> 7;
				return (UInt32)value2;
			}
		}
		public UInt32 DbgRequestDefferdFlush
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 828);
				var value2 = (value & 256) >> 8;
				return (UInt32)value2;
			}
		}
		public UInt32 DbgRequestDefferdFlushTimer
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 828);
				var value2 = (value & 512) >> 9;
				return (UInt32)value2;
			}
		}
		public UInt32 DbgRequestFlushTimer
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 828);
				var value2 = (value & 1024) >> 10;
				return (UInt32)value2;
			}
		}
		public UInt32 DbgRequestUpdateDebugger
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 828);
				var value2 = (value & 2048) >> 11;
				return (UInt32)value2;
			}
		}
		public UInt32 DbgSpareRequestFlags
		{
			get
			{
				// start: 12  end: 32  Mask: 11111111111111111111000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 828);
				var value2 = (value & 4294963200) >> 12;
				return (UInt32)value2;
			}
		}
		public _RTL_BITMAP HookIdMap
		{
			get
			{
				_RTL_BITMAP returnValue = new _RTL_BITMAP(_StructureData, _BufferOffset + 832);
				return returnValue;
			}
		}
		public UInt64 StackCache { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 848); } }
		public UInt64 PmcData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 856); } }
		public _LIST_ENTRY WinRtProviderBinaryList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 864);
				return returnValue;
			}
		}
		public UInt64 ScratchArray { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 880); } }
	}
	#endregion
	#region _HAL_PMC_COUNTERS
 
	public class _HAL_PMC_COUNTERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HAL_PMC_COUNTERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HAL_PMC_COUNTERS"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _ETW_PMC_SUPPORT
 
	public class _ETW_PMC_SUPPORT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETW_PMC_SUPPORT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETW_PMC_SUPPORT"": [ 40, {
				 ""Source"": [ 0, [ ""Array"", ""{\""size\"":16,\""target\"":\""Enumeration\"",\""target_args\"":{\""enum_name\"":\""_KPROFILE_SOURCE\"",\""target\"":\""UInt32\""}}"" ]],
				 ""HookIdCount"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""HookId"": [ 20, [ ""Array"", ""{\""count\"":4,\""target\"":\""UInt16\""}"" ]],
				 ""CountersCount"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""ProcessorCtrs"": [ 32, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""_HAL_PMC_COUNTERS\""}}"" ]] }]
				 }
				)";
			}
		}
		public _KPROFILE_SOURCE[] Source
		{
			get
			{
				_KPROFILE_SOURCE[] returnValue = new _KPROFILE_SOURCE[4];
				int size = 4;
				for(int i=0; i<4; i++ )
					returnValue[i] = (_KPROFILE_SOURCE)BitConverter.ToUInt32(_StructureData, (i * size) + _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 HookIdCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt16[] HookId
		{
			get
			{
				UInt16[] returnValue = new UInt16[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 20);
				return returnValue;
			}
		}
		public UInt32 CountersCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt64[] ProcessorCtrs
		{
			get
			{
				UInt64[] returnValue = new UInt64[1];
				int size = 8;
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 32);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ETW_LOGGER_HANDLE
 
	public class _ETW_LOGGER_HANDLE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETW_LOGGER_HANDLE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETW_LOGGER_HANDLE"": [ 1, {
				 ""DereferenceAndLeave"": [ 0, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte DereferenceAndLeave{ get { return _StructureData[_BufferOffset +0]; } }
	}
	#endregion
	#region _LUID_AND_ATTRIBUTES
 
	public class _LUID_AND_ATTRIBUTES
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _LUID_AND_ATTRIBUTES(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_LUID_AND_ATTRIBUTES"": [ 12, {
				 ""Luid"": [ 0, [ ""_LUID"", ""null"" ]],
				 ""Attributes"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LUID Luid
		{
			get
			{
				_LUID returnValue = new _LUID(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 Attributes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _TOKEN
 
	public class _TOKEN
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _TOKEN(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1144; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_TOKEN"": [ 1144, {
				 ""TokenSource"": [ 0, [ ""_TOKEN_SOURCE"", ""null"" ]],
				 ""TokenId"": [ 16, [ ""_LUID"", ""null"" ]],
				 ""AuthenticationId"": [ 24, [ ""_LUID"", ""null"" ]],
				 ""ParentTokenId"": [ 32, [ ""_LUID"", ""null"" ]],
				 ""ExpirationTime"": [ 40, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""TokenLock"": [ 48, [ ""Pointer"", ""{\""target\"":\""_ERESOURCE\""}"" ]],
				 ""ModifiedId"": [ 56, [ ""_LUID"", ""null"" ]],
				 ""Privileges"": [ 64, [ ""_SEP_TOKEN_PRIVILEGES"", ""null"" ]],
				 ""AuditPolicy"": [ 88, [ ""_SEP_AUDIT_POLICY"", ""null"" ]],
				 ""SessionId"": [ 120, [ ""UInt32"", ""null"" ]],
				 ""UserAndGroupCount"": [ 124, [ ""UInt32"", ""null"" ]],
				 ""RestrictedSidCount"": [ 128, [ ""UInt32"", ""null"" ]],
				 ""VariableLength"": [ 132, [ ""UInt32"", ""null"" ]],
				 ""DynamicCharged"": [ 136, [ ""UInt32"", ""null"" ]],
				 ""DynamicAvailable"": [ 140, [ ""UInt32"", ""null"" ]],
				 ""DefaultOwnerIndex"": [ 144, [ ""UInt32"", ""null"" ]],
				 ""UserAndGroups"": [ 152, [ ""Pointer"", ""{\""target\"":\""_SID_AND_ATTRIBUTES\""}"" ]],
				 ""RestrictedSids"": [ 160, [ ""Pointer"", ""{\""target\"":\""_SID_AND_ATTRIBUTES\""}"" ]],
				 ""PrimaryGroup"": [ 168, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DynamicPart"": [ 176, [ ""Pointer"", ""{\""target\"":\""unsigned long\""}"" ]],
				 ""DefaultDacl"": [ 184, [ ""Pointer"", ""{\""target\"":\""_ACL\""}"" ]],
				 ""TokenType"": [ 192, [ ""Enumeration"", ""{\""enum_name\"":\""_TOKEN_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""ImpersonationLevel"": [ 196, [ ""Enumeration"", ""{\""enum_name\"":\""_SECURITY_IMPERSONATION_LEVEL\"",\""target\"":\""UInt32\""}"" ]],
				 ""TokenFlags"": [ 200, [ ""UInt32"", ""null"" ]],
				 ""TokenInUse"": [ 204, [ ""Byte"", ""null"" ]],
				 ""IntegrityLevelIndex"": [ 208, [ ""UInt32"", ""null"" ]],
				 ""MandatoryPolicy"": [ 212, [ ""UInt32"", ""null"" ]],
				 ""LogonSession"": [ 216, [ ""Pointer"", ""{\""target\"":\""_SEP_LOGON_SESSION_REFERENCES\""}"" ]],
				 ""OriginatingLogonSession"": [ 224, [ ""_LUID"", ""null"" ]],
				 ""SidHash"": [ 232, [ ""_SID_AND_ATTRIBUTES_HASH"", ""null"" ]],
				 ""RestrictedSidHash"": [ 504, [ ""_SID_AND_ATTRIBUTES_HASH"", ""null"" ]],
				 ""pSecurityAttributes"": [ 776, [ ""Pointer"", ""{\""target\"":\""_AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION\""}"" ]],
				 ""Package"": [ 784, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Capabilities"": [ 792, [ ""Pointer"", ""{\""target\"":\""_SID_AND_ATTRIBUTES\""}"" ]],
				 ""CapabilityCount"": [ 800, [ ""UInt32"", ""null"" ]],
				 ""CapabilitiesHash"": [ 808, [ ""_SID_AND_ATTRIBUTES_HASH"", ""null"" ]],
				 ""LowboxNumberEntry"": [ 1080, [ ""Pointer"", ""{\""target\"":\""_SEP_LOWBOX_NUMBER_ENTRY\""}"" ]],
				 ""LowboxHandlesEntry"": [ 1088, [ ""Pointer"", ""{\""target\"":\""_SEP_LOWBOX_HANDLES_ENTRY\""}"" ]],
				 ""pClaimAttributes"": [ 1096, [ ""Pointer"", ""{\""target\"":\""_AUTHZBASEP_CLAIM_ATTRIBUTES_COLLECTION\""}"" ]],
				 ""TrustLevelSid"": [ 1104, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""TrustLinkedToken"": [ 1112, [ ""Pointer"", ""{\""target\"":\""_TOKEN\""}"" ]],
				 ""IntegrityLevelSidValue"": [ 1120, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""TokenSidValues"": [ 1128, [ ""Pointer"", ""{\""target\"":\""_SEP_SID_VALUES_BLOCK\""}"" ]],
				 ""VariablePart"": [ 1136, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _TOKEN_SOURCE TokenSource
		{
			get
			{
				_TOKEN_SOURCE returnValue = new _TOKEN_SOURCE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LUID TokenId
		{
			get
			{
				_LUID returnValue = new _LUID(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _LUID AuthenticationId
		{
			get
			{
				_LUID returnValue = new _LUID(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public _LUID ParentTokenId
		{
			get
			{
				_LUID returnValue = new _LUID(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public _LARGE_INTEGER ExpirationTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public UInt64 TokenLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public _LUID ModifiedId
		{
			get
			{
				_LUID returnValue = new _LUID(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public _SEP_TOKEN_PRIVILEGES Privileges
		{
			get
			{
				_SEP_TOKEN_PRIVILEGES returnValue = new _SEP_TOKEN_PRIVILEGES(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public _SEP_AUDIT_POLICY AuditPolicy
		{
			get
			{
				_SEP_AUDIT_POLICY returnValue = new _SEP_AUDIT_POLICY(_StructureData, _BufferOffset + 88);
				return returnValue;
			}
		}
		public UInt32 SessionId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 120); } }
		public UInt32 UserAndGroupCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 124); } }
		public UInt32 RestrictedSidCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 128); } }
		public UInt32 VariableLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 132); } }
		public UInt32 DynamicCharged { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 136); } }
		public UInt32 DynamicAvailable { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 140); } }
		public UInt32 DefaultOwnerIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 144); } }
		public UInt64 UserAndGroups { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 152); } }
		public UInt64 RestrictedSids { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public UInt64 PrimaryGroup { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 168); } }
		public UInt64 DynamicPart { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 176); } }
		public UInt64 DefaultDacl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 184); } }
		public _TOKEN_TYPE TokenType { get { return (_TOKEN_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 192); } }
		public _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel { get { return (_SECURITY_IMPERSONATION_LEVEL)BitConverter.ToUInt32(_StructureData, _BufferOffset + 196); } }
		public UInt32 TokenFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 200); } }
		public Byte TokenInUse{ get { return _StructureData[_BufferOffset +204]; } }
		public UInt32 IntegrityLevelIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 208); } }
		public UInt32 MandatoryPolicy { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 212); } }
		public UInt64 LogonSession { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 216); } }
		public _LUID OriginatingLogonSession
		{
			get
			{
				_LUID returnValue = new _LUID(_StructureData, _BufferOffset + 224);
				return returnValue;
			}
		}
		public _SID_AND_ATTRIBUTES_HASH SidHash
		{
			get
			{
				_SID_AND_ATTRIBUTES_HASH returnValue = new _SID_AND_ATTRIBUTES_HASH(_StructureData, _BufferOffset + 232);
				return returnValue;
			}
		}
		public _SID_AND_ATTRIBUTES_HASH RestrictedSidHash
		{
			get
			{
				_SID_AND_ATTRIBUTES_HASH returnValue = new _SID_AND_ATTRIBUTES_HASH(_StructureData, _BufferOffset + 504);
				return returnValue;
			}
		}
		public UInt64 pSecurityAttributes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 776); } }
		public UInt64 Package { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 784); } }
		public UInt64 Capabilities { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 792); } }
		public UInt32 CapabilityCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 800); } }
		public _SID_AND_ATTRIBUTES_HASH CapabilitiesHash
		{
			get
			{
				_SID_AND_ATTRIBUTES_HASH returnValue = new _SID_AND_ATTRIBUTES_HASH(_StructureData, _BufferOffset + 808);
				return returnValue;
			}
		}
		public UInt64 LowboxNumberEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1080); } }
		public UInt64 LowboxHandlesEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1088); } }
		public UInt64 pClaimAttributes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1096); } }
		public UInt64 TrustLevelSid { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1104); } }
		public UInt64 TrustLinkedToken { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1112); } }
		public UInt64 IntegrityLevelSidValue { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1120); } }
		public UInt64 TokenSidValues { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1128); } }
		public UInt64 VariablePart { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1136); } }
	}
	#endregion
	#region _SEP_LOGON_SESSION_REFERENCES
 
	public class _SEP_LOGON_SESSION_REFERENCES
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SEP_LOGON_SESSION_REFERENCES(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 128; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SEP_LOGON_SESSION_REFERENCES"": [ 128, {
				 ""Next"": [ 0, [ ""Pointer"", ""{\""target\"":\""_SEP_LOGON_SESSION_REFERENCES\""}"" ]],
				 ""LogonId"": [ 8, [ ""_LUID"", ""null"" ]],
				 ""BuddyLogonId"": [ 16, [ ""_LUID"", ""null"" ]],
				 ""ReferenceCount"": [ 24, [ ""Int64"", ""null"" ]],
				 ""Flags"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""pDeviceMap"": [ 40, [ ""Pointer"", ""{\""target\"":\""_DEVICE_MAP\""}"" ]],
				 ""Token"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""AccountName"": [ 56, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""AuthorityName"": [ 72, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""LowBoxHandlesTable"": [ 88, [ ""_SEP_LOWBOX_HANDLES_TABLE"", ""null"" ]],
				 ""SharedDataLock"": [ 104, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""SharedClaimAttributes"": [ 112, [ ""Pointer"", ""{\""target\"":\""_AUTHZBASEP_CLAIM_ATTRIBUTES_COLLECTION\""}"" ]],
				 ""SharedSidValues"": [ 120, [ ""Pointer"", ""{\""target\"":\""_SEP_SID_VALUES_BLOCK\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Next { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _LUID LogonId
		{
			get
			{
				_LUID returnValue = new _LUID(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _LUID BuddyLogonId
		{
			get
			{
				_LUID returnValue = new _LUID(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public Int64 ReferenceCount { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 24); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt64 pDeviceMap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 Token { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public _UNICODE_STRING AccountName
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public _UNICODE_STRING AuthorityName
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 72);
				return returnValue;
			}
		}
		public _SEP_LOWBOX_HANDLES_TABLE LowBoxHandlesTable
		{
			get
			{
				_SEP_LOWBOX_HANDLES_TABLE returnValue = new _SEP_LOWBOX_HANDLES_TABLE(_StructureData, _BufferOffset + 88);
				return returnValue;
			}
		}
		public _EX_PUSH_LOCK SharedDataLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 104);
				return returnValue;
			}
		}
		public UInt64 SharedClaimAttributes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 112); } }
		public UInt64 SharedSidValues { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 120); } }
	}
	#endregion
	#region _PS_PROTECTION
 
	public class _PS_PROTECTION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PS_PROTECTION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PS_PROTECTION"": [ 1, {
				 ""Level"": [ 0, [ ""Byte"", ""null"" ]],
				 ""Type"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""Audit"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""Signer"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public Byte Level{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte Type
		{
			get
			{
				// start: 0  end: 3  Mask: 0000000000000111
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 7) >> 0;
				return (Byte)value2;
			}
		}
		public Byte Audit
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte Signer
		{
			get
			{
				// start: 4  end: 8  Mask: 0000000011110000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 240) >> 4;
				return (Byte)value2;
			}
		}
	}
	#endregion
	#region _OBJECT_HEADER
 
	public class _OBJECT_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_HEADER"": [ 56, {
				 ""PointerCount"": [ 0, [ ""Int64"", ""null"" ]],
				 ""HandleCount"": [ 8, [ ""Int64"", ""null"" ]],
				 ""NextToFree"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Lock"": [ 16, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""TypeIndex"": [ 24, [ ""Byte"", ""null"" ]],
				 ""TraceFlags"": [ 25, [ ""Byte"", ""null"" ]],
				 ""DbgRefTrace"": [ 25, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""DbgTracePermanent"": [ 25, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""InfoMask"": [ 26, [ ""Byte"", ""null"" ]],
				 ""Flags"": [ 27, [ ""Byte"", ""null"" ]],
				 ""NewObject"": [ 27, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""KernelObject"": [ 27, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""KernelOnlyAccess"": [ 27, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""ExclusiveObject"": [ 27, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""PermanentObject"": [ 27, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""DefaultSecurityQuota"": [ 27, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""Byte\""}"" ]],
				 ""SingleHandleEntry"": [ 27, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""Byte\""}"" ]],
				 ""DeletedInline"": [ 27, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""Byte\""}"" ]],
				 ""Spare"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""ObjectCreateInfo"": [ 32, [ ""Pointer"", ""{\""target\"":\""_OBJECT_CREATE_INFORMATION\""}"" ]],
				 ""QuotaBlockCharged"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SecurityDescriptor"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Body"": [ 48, [ ""_QUAD"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int64 PointerCount { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 0); } }
		public Int64 HandleCount { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 NextToFree { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _EX_PUSH_LOCK Lock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public Byte TypeIndex{ get { return _StructureData[_BufferOffset +24]; } }
		public Byte TraceFlags{ get { return _StructureData[_BufferOffset +25]; } }
		public Byte DbgRefTrace
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 25];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte DbgTracePermanent
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 25];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte InfoMask{ get { return _StructureData[_BufferOffset +26]; } }
		public Byte Flags{ get { return _StructureData[_BufferOffset +27]; } }
		public Byte NewObject
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 27];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte KernelObject
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 27];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte KernelOnlyAccess
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 27];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte ExclusiveObject
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 27];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte PermanentObject
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				Byte value = _StructureData[_BufferOffset + 27];
				var value2 = (value & 16) >> 4;
				return (Byte)value2;
			}
		}
		public Byte DefaultSecurityQuota
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				Byte value = _StructureData[_BufferOffset + 27];
				var value2 = (value & 32) >> 5;
				return (Byte)value2;
			}
		}
		public Byte SingleHandleEntry
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				Byte value = _StructureData[_BufferOffset + 27];
				var value2 = (value & 64) >> 6;
				return (Byte)value2;
			}
		}
		public Byte DeletedInline
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				Byte value = _StructureData[_BufferOffset + 27];
				var value2 = (value & 128) >> 7;
				return (Byte)value2;
			}
		}
		public UInt32 Spare { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt64 ObjectCreateInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 QuotaBlockCharged { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 SecurityDescriptor { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public _QUAD Body
		{
			get
			{
				_QUAD returnValue = new _QUAD(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
	}
	#endregion
	#region _OBJECT_HEADER_QUOTA_INFO
 
	public class _OBJECT_HEADER_QUOTA_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_HEADER_QUOTA_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_HEADER_QUOTA_INFO"": [ 32, {
				 ""PagedPoolCharge"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""NonPagedPoolCharge"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""SecurityDescriptorCharge"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""SecurityDescriptorQuotaBlock"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Reserved"": [ 24, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 PagedPoolCharge { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 NonPagedPoolCharge { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 SecurityDescriptorCharge { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt64 SecurityDescriptorQuotaBlock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Reserved { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _OBJECT_HEADER_PROCESS_INFO
 
	public class _OBJECT_HEADER_PROCESS_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_HEADER_PROCESS_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_HEADER_PROCESS_INFO"": [ 16, {
				 ""ExclusiveProcess"": [ 0, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""Reserved"": [ 8, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ExclusiveProcess { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Reserved { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _OBJECT_HEADER_HANDLE_INFO
 
	public class _OBJECT_HEADER_HANDLE_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_HEADER_HANDLE_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_HEADER_HANDLE_INFO"": [ 16, {
				 ""HandleCountDataBase"": [ 0, [ ""Pointer"", ""{\""target\"":\""_OBJECT_HANDLE_COUNT_DATABASE\""}"" ]],
				 ""SingleEntry"": [ 0, [ ""_OBJECT_HANDLE_COUNT_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 HandleCountDataBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _OBJECT_HANDLE_COUNT_ENTRY SingleEntry
		{
			get
			{
				_OBJECT_HANDLE_COUNT_ENTRY returnValue = new _OBJECT_HANDLE_COUNT_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _OBJECT_HEADER_NAME_INFO
 
	public class _OBJECT_HEADER_NAME_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_HEADER_NAME_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_HEADER_NAME_INFO"": [ 32, {
				 ""Directory"": [ 0, [ ""Pointer"", ""{\""target\"":\""_OBJECT_DIRECTORY\""}"" ]],
				 ""Name"": [ 8, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""ReferenceCount"": [ 24, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Directory { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _UNICODE_STRING Name
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public Int32 ReferenceCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _OBJECT_HEADER_CREATOR_INFO
 
	public class _OBJECT_HEADER_CREATOR_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_HEADER_CREATOR_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_HEADER_CREATOR_INFO"": [ 32, {
				 ""TypeList"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""CreatorUniqueProcess"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CreatorBackTraceIndex"": [ 24, [ ""UInt16"", ""null"" ]],
				 ""Reserved"": [ 26, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY TypeList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 CreatorUniqueProcess { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt16 CreatorBackTraceIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 24); } }
		public UInt16 Reserved { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 26); } }
	}
	#endregion
	#region _OBJECT_HEADER_AUDIT_INFO
 
	public class _OBJECT_HEADER_AUDIT_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_HEADER_AUDIT_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_HEADER_AUDIT_INFO"": [ 16, {
				 ""SecurityDescriptor"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Reserved"": [ 8, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 SecurityDescriptor { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Reserved { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _OBP_LOOKUP_CONTEXT
 
	public class _OBP_LOOKUP_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBP_LOOKUP_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBP_LOOKUP_CONTEXT"": [ 40, {
				 ""Directory"": [ 0, [ ""Pointer"", ""{\""target\"":\""_OBJECT_DIRECTORY\""}"" ]],
				 ""Object"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""EntryLink"": [ 16, [ ""Pointer"", ""{\""target\"":\""_OBJECT_DIRECTORY_ENTRY*\""}"" ]],
				 ""HashValue"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""HashIndex"": [ 28, [ ""UInt16"", ""null"" ]],
				 ""DirectoryLocked"": [ 30, [ ""Byte"", ""null"" ]],
				 ""LockedExclusive"": [ 31, [ ""Byte"", ""null"" ]],
				 ""LockStateSignature"": [ 32, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Directory { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Object { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 EntryLink { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 HashValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt16 HashIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 28); } }
		public Byte DirectoryLocked{ get { return _StructureData[_BufferOffset +30]; } }
		public Byte LockedExclusive{ get { return _StructureData[_BufferOffset +31]; } }
		public UInt32 LockStateSignature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _OBJECT_DIRECTORY
 
	public class _OBJECT_DIRECTORY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_DIRECTORY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 336; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_DIRECTORY"": [ 336, {
				 ""HashBuckets"": [ 0, [ ""Array"", ""{\""count\"":37,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""_OBJECT_DIRECTORY_ENTRY\""}}"" ]],
				 ""Lock"": [ 296, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""DeviceMap"": [ 304, [ ""Pointer"", ""{\""target\"":\""_DEVICE_MAP\""}"" ]],
				 ""ShadowDirectory"": [ 304, [ ""Pointer"", ""{\""target\"":\""_OBJECT_DIRECTORY\""}"" ]],
				 ""SessionId"": [ 312, [ ""UInt32"", ""null"" ]],
				 ""NamespaceEntry"": [ 320, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Flags"": [ 328, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64[] HashBuckets
		{
			get
			{
				UInt64[] returnValue = new UInt64[37];
				int size = 8;
				for(int i=0; i<37; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 0);
				return returnValue;
			}
		}
		public _EX_PUSH_LOCK Lock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 296);
				return returnValue;
			}
		}
		public UInt64 DeviceMap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 304); } }
		public UInt64 ShadowDirectory { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 304); } }
		public UInt32 SessionId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 312); } }
		public UInt64 NamespaceEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 320); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 328); } }
	}
	#endregion
	#region _WHEAP_INFO_BLOCK
 
	public class _WHEAP_INFO_BLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEAP_INFO_BLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEAP_INFO_BLOCK"": [ 24, {
				 ""ErrorSourceCount"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ErrorSourceTable"": [ 8, [ ""Pointer"", ""{\""target\"":\""_WHEAP_ERROR_SOURCE_TABLE\""}"" ]],
				 ""WorkQueue"": [ 16, [ ""Pointer"", ""{\""target\"":\""_WHEAP_WORK_QUEUE\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 ErrorSourceCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 ErrorSourceTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 WorkQueue { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _WHEAP_ERROR_SOURCE
 
	public class _WHEAP_ERROR_SOURCE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEAP_ERROR_SOURCE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1064; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEAP_ERROR_SOURCE"": [ 1064, {
				 ""ListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""FailedAllocations"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""PlatformErrorSourceId"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""ErrorCount"": [ 24, [ ""Int32"", ""null"" ]],
				 ""RecordCount"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""RecordLength"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""PoolTag"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""Type"": [ 40, [ ""Enumeration"", ""{\""enum_name\"":\""_WHEA_ERROR_SOURCE_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""Records"": [ 48, [ ""Pointer"", ""{\""target\"":\""_WHEAP_ERROR_RECORD_WRAPPER\""}"" ]],
				 ""Context"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SectionCount"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""SectionLength"": [ 68, [ ""UInt32"", ""null"" ]],
				 ""TickCountAtLastError"": [ 72, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""AccumulatedErrors"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""TotalErrors"": [ 84, [ ""UInt32"", ""null"" ]],
				 ""Deferred"": [ 88, [ ""Byte"", ""null"" ]],
				 ""Descriptor"": [ 89, [ ""_WHEA_ERROR_SOURCE_DESCRIPTOR"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 FailedAllocations { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 PlatformErrorSourceId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public Int32 ErrorCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 RecordCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 RecordLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 PoolTag { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public _WHEA_ERROR_SOURCE_TYPE Type { get { return (_WHEA_ERROR_SOURCE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt64 Records { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 Context { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt32 SectionCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt32 SectionLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 68); } }
		public _LARGE_INTEGER TickCountAtLastError
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 72);
				return returnValue;
			}
		}
		public UInt32 AccumulatedErrors { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 TotalErrors { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
		public Byte Deferred{ get { return _StructureData[_BufferOffset +88]; } }
		public _WHEA_ERROR_SOURCE_DESCRIPTOR Descriptor
		{
			get
			{
				_WHEA_ERROR_SOURCE_DESCRIPTOR returnValue = new _WHEA_ERROR_SOURCE_DESCRIPTOR(_StructureData, _BufferOffset + 89);
				return returnValue;
			}
		}
	}
	#endregion
	#region _WHEAP_ERROR_RECORD_WRAPPER
 
	public class _WHEAP_ERROR_RECORD_WRAPPER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEAP_ERROR_RECORD_WRAPPER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 240; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEAP_ERROR_RECORD_WRAPPER"": [ 240, {
				 ""WorkEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Length"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""ProcessorNumber"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""Flags"": [ 24, [ ""_WHEAP_ERROR_RECORD_WRAPPER_FLAGS"", ""null"" ]],
				 ""InUse"": [ 28, [ ""Int32"", ""null"" ]],
				 ""ErrorSource"": [ 32, [ ""Pointer"", ""{\""target\"":\""_WHEAP_ERROR_SOURCE\""}"" ]],
				 ""ErrorRecord"": [ 40, [ ""_WHEA_ERROR_RECORD"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY WorkEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 ProcessorNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public _WHEAP_ERROR_RECORD_WRAPPER_FLAGS Flags
		{
			get
			{
				_WHEAP_ERROR_RECORD_WRAPPER_FLAGS returnValue = new _WHEAP_ERROR_RECORD_WRAPPER_FLAGS(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public Int32 InUse { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 28); } }
		public UInt64 ErrorSource { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public _WHEA_ERROR_RECORD ErrorRecord
		{
			get
			{
				_WHEA_ERROR_RECORD returnValue = new _WHEA_ERROR_RECORD(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
	}
	#endregion
	#region _KSECONDARY_IDT_ENTRY
 
	public class _KSECONDARY_IDT_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KSECONDARY_IDT_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KSECONDARY_IDT_ENTRY"": [ 48, {
				 ""SpinLock"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""ConnectLock"": [ 8, [ ""_KEVENT"", ""null"" ]],
				 ""LineMasked"": [ 32, [ ""Byte"", ""null"" ]],
				 ""InterruptList"": [ 40, [ ""Pointer"", ""{\""target\"":\""_KINTERRUPT\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 SpinLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _KEVENT ConnectLock
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public Byte LineMasked{ get { return _StructureData[_BufferOffset +32]; } }
		public UInt64 InterruptList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
	}
	#endregion
	#region _WNF_STATE_NAME
 
	public class _WNF_STATE_NAME
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WNF_STATE_NAME(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WNF_STATE_NAME"": [ 8, {
				 ""Data"": [ 0, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32[] Data
		{
			get
			{
				UInt32[] returnValue = new UInt32[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _PS_CLIENT_SECURITY_CONTEXT
 
	public class _PS_CLIENT_SECURITY_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PS_CLIENT_SECURITY_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PS_CLIENT_SECURITY_CONTEXT"": [ 8, {
				 ""ImpersonationData"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""ImpersonationToken"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ImpersonationLevel"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""EffectiveOnly"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ImpersonationData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 ImpersonationToken { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 ImpersonationLevel
		{
			get
			{
				// start: 0  end: 2  Mask: 0000000000000011
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 3) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 EffectiveOnly
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt64)value2;
			}
		}
	}
	#endregion
	#region _DBGKD_ANY_CONTROL_SET
 
	public class _DBGKD_ANY_CONTROL_SET
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_ANY_CONTROL_SET(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 28; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_ANY_CONTROL_SET"": [ 28, {
				 ""X86ControlSet"": [ 0, [ ""_X86_DBGKD_CONTROL_SET"", ""null"" ]],
				 ""AlphaControlSet"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""IA64ControlSet"": [ 0, [ ""_IA64_DBGKD_CONTROL_SET"", ""null"" ]],
				 ""Amd64ControlSet"": [ 0, [ ""_AMD64_DBGKD_CONTROL_SET"", ""null"" ]],
				 ""ArmControlSet"": [ 0, [ ""_ARM_DBGKD_CONTROL_SET"", ""null"" ]],
				 ""ArmCeControlSet"": [ 0, [ ""_ARMCE_DBGKD_CONTROL_SET"", ""null"" ]],
				 ""PpcControlSet"": [ 0, [ ""_PPC_DBGKD_CONTROL_SET"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _X86_DBGKD_CONTROL_SET X86ControlSet
		{
			get
			{
				_X86_DBGKD_CONTROL_SET returnValue = new _X86_DBGKD_CONTROL_SET(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 AlphaControlSet { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _IA64_DBGKD_CONTROL_SET IA64ControlSet
		{
			get
			{
				_IA64_DBGKD_CONTROL_SET returnValue = new _IA64_DBGKD_CONTROL_SET(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _AMD64_DBGKD_CONTROL_SET Amd64ControlSet
		{
			get
			{
				_AMD64_DBGKD_CONTROL_SET returnValue = new _AMD64_DBGKD_CONTROL_SET(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _ARM_DBGKD_CONTROL_SET ArmControlSet
		{
			get
			{
				_ARM_DBGKD_CONTROL_SET returnValue = new _ARM_DBGKD_CONTROL_SET(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _ARMCE_DBGKD_CONTROL_SET ArmCeControlSet
		{
			get
			{
				_ARMCE_DBGKD_CONTROL_SET returnValue = new _ARMCE_DBGKD_CONTROL_SET(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _PPC_DBGKD_CONTROL_SET PpcControlSet
		{
			get
			{
				_PPC_DBGKD_CONTROL_SET returnValue = new _PPC_DBGKD_CONTROL_SET(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MI_VERIFIER_POOL_HEADER
 
	public class _MI_VERIFIER_POOL_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MI_VERIFIER_POOL_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MI_VERIFIER_POOL_HEADER"": [ 8, {
				 ""VerifierPoolEntry"": [ 0, [ ""Pointer"", ""{\""target\"":\""_VI_POOL_ENTRY\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 VerifierPoolEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _POP_FX_PLUGIN
 
	public class _POP_FX_PLUGIN
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_FX_PLUGIN(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 176; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_FX_PLUGIN"": [ 176, {
				 ""Link"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Version"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""Flags"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""WorkQueue"": [ 32, [ ""_KQUEUE"", ""null"" ]],
				 ""AcceptDeviceNotification"": [ 96, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""AcceptProcessorNotification"": [ 104, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""WorkOrderCount"": [ 112, [ ""UInt32"", ""null"" ]],
				 ""WorkOrders"": [ 120, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY Link
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 Version { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt64 Flags { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public _KQUEUE WorkQueue
		{
			get
			{
				_KQUEUE returnValue = new _KQUEUE(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt64 AcceptDeviceNotification { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt64 AcceptProcessorNotification { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public UInt32 WorkOrderCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 112); } }
		public _POP_FX_WORK_ORDER[] WorkOrders
		{
			get
			{
				_POP_FX_WORK_ORDER[] returnValue = new _POP_FX_WORK_ORDER[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _POP_FX_WORK_ORDER(_StructureData, (i * size) + _BufferOffset + 120);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ARM_DBGKD_CONTROL_SET
 
	public class _ARM_DBGKD_CONTROL_SET
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ARM_DBGKD_CONTROL_SET(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ARM_DBGKD_CONTROL_SET"": [ 12, {
				 ""Continue"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""CurrentSymbolStart"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""CurrentSymbolEnd"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Continue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 CurrentSymbolStart { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 CurrentSymbolEnd { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _LPCP_MESSAGE
 
	public class _LPCP_MESSAGE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _LPCP_MESSAGE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 80; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_LPCP_MESSAGE"": [ 80, {
				 ""Entry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""FreeEntry"": [ 0, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""Reserved0"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""SenderPort"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""RepliedToThread"": [ 24, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]],
				 ""PortContext"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Request"": [ 40, [ ""_PORT_MESSAGE"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY Entry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _SINGLE_LIST_ENTRY FreeEntry
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 Reserved0 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt64 SenderPort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 RepliedToThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 PortContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public _PORT_MESSAGE Request
		{
			get
			{
				_PORT_MESSAGE returnValue = new _PORT_MESSAGE(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
	}
	#endregion
	#region _HARDWARE_PTE
 
	public class _HARDWARE_PTE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HARDWARE_PTE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HARDWARE_PTE"": [ 8, {
				 ""Valid"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""Write"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt64\""}"" ]],
				 ""Owner"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt64\""}"" ]],
				 ""WriteThrough"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt64\""}"" ]],
				 ""CacheDisable"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt64\""}"" ]],
				 ""Accessed"": [ 0, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt64\""}"" ]],
				 ""Dirty"": [ 0, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt64\""}"" ]],
				 ""LargePage"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt64\""}"" ]],
				 ""Global"": [ 0, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt64\""}"" ]],
				 ""CopyOnWrite"": [ 0, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt64\""}"" ]],
				 ""Prototype"": [ 0, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt64\""}"" ]],
				 ""reserved0"": [ 0, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt64\""}"" ]],
				 ""PageFrameNumber"": [ 0, [ ""BitField"", ""{\""end_bit\"":48,\""start_bit\"":12,\""target\"":\""UInt64\""}"" ]],
				 ""reserved1"": [ 0, [ ""BitField"", ""{\""end_bit\"":52,\""start_bit\"":48,\""target\"":\""UInt64\""}"" ]],
				 ""SoftwareWsIndex"": [ 0, [ ""BitField"", ""{\""end_bit\"":63,\""start_bit\"":52,\""target\"":\""UInt64\""}"" ]],
				 ""NoExecute"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":63,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Valid
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 Write
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt64)value2;
			}
		}
		public UInt64 Owner
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt64)value2;
			}
		}
		public UInt64 WriteThrough
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8) >> 3;
				return (UInt64)value2;
			}
		}
		public UInt64 CacheDisable
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16) >> 4;
				return (UInt64)value2;
			}
		}
		public UInt64 Accessed
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 32) >> 5;
				return (UInt64)value2;
			}
		}
		public UInt64 Dirty
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 64) >> 6;
				return (UInt64)value2;
			}
		}
		public UInt64 LargePage
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 128) >> 7;
				return (UInt64)value2;
			}
		}
		public UInt64 Global
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 256) >> 8;
				return (UInt64)value2;
			}
		}
		public UInt64 CopyOnWrite
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 512) >> 9;
				return (UInt64)value2;
			}
		}
		public UInt64 Prototype
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1024) >> 10;
				return (UInt64)value2;
			}
		}
		public UInt64 reserved0
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2048) >> 11;
				return (UInt64)value2;
			}
		}
		public UInt64 PageFrameNumber
		{
			get
			{
				// start: 12  end: 48  Mask: 000000000000000011111111111111111111000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294963200) >> 12;
				return (UInt64)value2;
			}
		}
		public UInt64 reserved1
		{
			get
			{
				// start: 48  end: 52  Mask: 0000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 48;
				return (UInt64)value2;
			}
		}
		public UInt64 SoftwareWsIndex
		{
			get
			{
				// start: 52  end: 63  Mask: 000000000000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 52;
				return (UInt64)value2;
			}
		}
		public UInt64 NoExecute
		{
			get
			{
				// start: 63  end: 64  Mask: 0000000000000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 63;
				return (UInt64)value2;
			}
		}
	}
	#endregion
	#region _ALPC_PORT_ATTRIBUTES
 
	public class _ALPC_PORT_ATTRIBUTES
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ALPC_PORT_ATTRIBUTES(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ALPC_PORT_ATTRIBUTES"": [ 72, {
				 ""Flags"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""SecurityQos"": [ 4, [ ""_SECURITY_QUALITY_OF_SERVICE"", ""null"" ]],
				 ""MaxMessageLength"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""MemoryBandwidth"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""MaxPoolUsage"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""MaxSectionSize"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""MaxViewSize"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""MaxTotalSectionSize"": [ 56, [ ""UInt64"", ""null"" ]],
				 ""DupObjectTypes"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""Reserved"": [ 68, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _SECURITY_QUALITY_OF_SERVICE SecurityQos
		{
			get
			{
				_SECURITY_QUALITY_OF_SERVICE returnValue = new _SECURITY_QUALITY_OF_SERVICE(_StructureData, _BufferOffset + 4);
				return returnValue;
			}
		}
		public UInt64 MaxMessageLength { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 MemoryBandwidth { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 MaxPoolUsage { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 MaxSectionSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 MaxViewSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 MaxTotalSectionSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt32 DupObjectTypes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt32 Reserved { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 68); } }
	}
	#endregion
	#region _KENTROPY_TIMING_STATE
 
	public class _KENTROPY_TIMING_STATE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KENTROPY_TIMING_STATE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 336; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KENTROPY_TIMING_STATE"": [ 336, {
				 ""EntropyCount"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Buffer"": [ 4, [ ""Array"", ""{\""count\"":64,\""target\"":\""UInt32\""}"" ]],
				 ""Dpc"": [ 264, [ ""_KDPC"", ""null"" ]],
				 ""LastDeliveredBuffer"": [ 328, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 EntropyCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32[] Buffer
		{
			get
			{
				UInt32[] returnValue = new UInt32[64];
				for(int i=0; i<64; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 4);
				return returnValue;
			}
		}
		public _KDPC Dpc
		{
			get
			{
				_KDPC returnValue = new _KDPC(_StructureData, _BufferOffset + 264);
				return returnValue;
			}
		}
		public UInt32 LastDeliveredBuffer { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 328); } }
	}
	#endregion
	#region _DISPATCHER_HEADER
 
	public class _DISPATCHER_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DISPATCHER_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DISPATCHER_HEADER"": [ 24, {
				 ""Lock"": [ 0, [ ""Int32"", ""null"" ]],
				 ""LockNV"": [ 0, [ ""Int32"", ""null"" ]],
				 ""Type"": [ 0, [ ""Byte"", ""null"" ]],
				 ""Signalling"": [ 1, [ ""Byte"", ""null"" ]],
				 ""Size"": [ 2, [ ""Byte"", ""null"" ]],
				 ""Reserved1"": [ 3, [ ""Byte"", ""null"" ]],
				 ""TimerType"": [ 0, [ ""Byte"", ""null"" ]],
				 ""TimerControlFlags"": [ 1, [ ""Byte"", ""null"" ]],
				 ""Absolute"": [ 1, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""Wake"": [ 1, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""EncodedTolerableDelay"": [ 1, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""Hand"": [ 2, [ ""Byte"", ""null"" ]],
				 ""TimerMiscFlags"": [ 3, [ ""Byte"", ""null"" ]],
				 ""Index"": [ 3, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""Inserted"": [ 3, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""Byte\""}"" ]],
				 ""Expired"": [ 3, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""Byte\""}"" ]],
				 ""Timer2Type"": [ 0, [ ""Byte"", ""null"" ]],
				 ""Timer2Flags"": [ 1, [ ""Byte"", ""null"" ]],
				 ""Timer2Inserted"": [ 1, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""Timer2Expiring"": [ 1, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""Timer2CancelPending"": [ 1, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""Timer2SetPending"": [ 1, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""Timer2Running"": [ 1, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""Timer2Disabled"": [ 1, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""Byte\""}"" ]],
				 ""Timer2ReservedFlags"": [ 1, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":6,\""target\"":\""Byte\""}"" ]],
				 ""Timer2Reserved1"": [ 2, [ ""Byte"", ""null"" ]],
				 ""Timer2Reserved2"": [ 3, [ ""Byte"", ""null"" ]],
				 ""QueueType"": [ 0, [ ""Byte"", ""null"" ]],
				 ""QueueControlFlags"": [ 1, [ ""Byte"", ""null"" ]],
				 ""Abandoned"": [ 1, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""DisableIncrement"": [ 1, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""QueueReservedControlFlags"": [ 1, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""QueueSize"": [ 2, [ ""Byte"", ""null"" ]],
				 ""QueueReserved"": [ 3, [ ""Byte"", ""null"" ]],
				 ""ThreadType"": [ 0, [ ""Byte"", ""null"" ]],
				 ""ThreadReserved"": [ 1, [ ""Byte"", ""null"" ]],
				 ""ThreadControlFlags"": [ 2, [ ""Byte"", ""null"" ]],
				 ""CycleProfiling"": [ 2, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""CounterProfiling"": [ 2, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""GroupScheduling"": [ 2, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""AffinitySet"": [ 2, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""ThreadReservedControlFlags"": [ 2, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""DebugActive"": [ 3, [ ""Byte"", ""null"" ]],
				 ""ActiveDR7"": [ 3, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""Instrumented"": [ 3, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""Minimal"": [ 3, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""Reserved4"": [ 3, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""UmsScheduled"": [ 3, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""Byte\""}"" ]],
				 ""UmsPrimary"": [ 3, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""Byte\""}"" ]],
				 ""MutantType"": [ 0, [ ""Byte"", ""null"" ]],
				 ""MutantSize"": [ 1, [ ""Byte"", ""null"" ]],
				 ""DpcActive"": [ 2, [ ""Byte"", ""null"" ]],
				 ""MutantReserved"": [ 3, [ ""Byte"", ""null"" ]],
				 ""SignalState"": [ 4, [ ""Int32"", ""null"" ]],
				 ""WaitListHead"": [ 8, [ ""_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int32 Lock { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public Int32 LockNV { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public Byte Type{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte Signalling{ get { return _StructureData[_BufferOffset +1]; } }
		public Byte Size{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte Reserved1{ get { return _StructureData[_BufferOffset +3]; } }
		public Byte TimerType{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte TimerControlFlags{ get { return _StructureData[_BufferOffset +1]; } }
		public Byte Absolute
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte Wake
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte EncodedTolerableDelay
		{
			get
			{
				// start: 2  end: 8  Mask: 0000000011111100
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 252) >> 2;
				return (Byte)value2;
			}
		}
		public Byte Hand{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte TimerMiscFlags{ get { return _StructureData[_BufferOffset +3]; } }
		public Byte Index
		{
			get
			{
				// start: 0  end: 6  Mask: 0000000000111111
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 63) >> 0;
				return (Byte)value2;
			}
		}
		public Byte Inserted
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 64) >> 6;
				return (Byte)value2;
			}
		}
		public Byte Expired
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 128) >> 7;
				return (Byte)value2;
			}
		}
		public Byte Timer2Type{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte Timer2Flags{ get { return _StructureData[_BufferOffset +1]; } }
		public Byte Timer2Inserted
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte Timer2Expiring
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte Timer2CancelPending
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte Timer2SetPending
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte Timer2Running
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 16) >> 4;
				return (Byte)value2;
			}
		}
		public Byte Timer2Disabled
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 32) >> 5;
				return (Byte)value2;
			}
		}
		public Byte Timer2ReservedFlags
		{
			get
			{
				// start: 6  end: 8  Mask: 0000000011000000
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 192) >> 6;
				return (Byte)value2;
			}
		}
		public Byte Timer2Reserved1{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte Timer2Reserved2{ get { return _StructureData[_BufferOffset +3]; } }
		public Byte QueueType{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte QueueControlFlags{ get { return _StructureData[_BufferOffset +1]; } }
		public Byte Abandoned
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte DisableIncrement
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte QueueReservedControlFlags
		{
			get
			{
				// start: 2  end: 8  Mask: 0000000011111100
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 252) >> 2;
				return (Byte)value2;
			}
		}
		public Byte QueueSize{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte QueueReserved{ get { return _StructureData[_BufferOffset +3]; } }
		public Byte ThreadType{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte ThreadReserved{ get { return _StructureData[_BufferOffset +1]; } }
		public Byte ThreadControlFlags{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte CycleProfiling
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 2];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte CounterProfiling
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 2];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte GroupScheduling
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 2];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte AffinitySet
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 2];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte ThreadReservedControlFlags
		{
			get
			{
				// start: 4  end: 8  Mask: 0000000011110000
				Byte value = _StructureData[_BufferOffset + 2];
				var value2 = (value & 240) >> 4;
				return (Byte)value2;
			}
		}
		public Byte DebugActive{ get { return _StructureData[_BufferOffset +3]; } }
		public Byte ActiveDR7
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte Instrumented
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte Minimal
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte Reserved4
		{
			get
			{
				// start: 3  end: 6  Mask: 0000000000111000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 56) >> 3;
				return (Byte)value2;
			}
		}
		public Byte UmsScheduled
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 64) >> 6;
				return (Byte)value2;
			}
		}
		public Byte UmsPrimary
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 128) >> 7;
				return (Byte)value2;
			}
		}
		public Byte MutantType{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte MutantSize{ get { return _StructureData[_BufferOffset +1]; } }
		public Byte DpcActive{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte MutantReserved{ get { return _StructureData[_BufferOffset +3]; } }
		public Int32 SignalState { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 4); } }
		public _LIST_ENTRY WaitListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _VI_POOL_ENTRY
 
	public class _VI_POOL_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VI_POOL_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VI_POOL_ENTRY"": [ 32, {
				 ""PageHeader"": [ 0, [ ""_VI_POOL_PAGE_HEADER"", ""null"" ]],
				 ""InUse"": [ 0, [ ""_VI_POOL_ENTRY_INUSE"", ""null"" ]],
				 ""NextFree"": [ 0, [ ""Pointer"", ""{\""target\"":\""_SLIST_ENTRY\""}"" ]] }]
				 }
				)";
			}
		}
		public _VI_POOL_PAGE_HEADER PageHeader
		{
			get
			{
				_VI_POOL_PAGE_HEADER returnValue = new _VI_POOL_PAGE_HEADER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _VI_POOL_ENTRY_INUSE InUse
		{
			get
			{
				_VI_POOL_ENTRY_INUSE returnValue = new _VI_POOL_ENTRY_INUSE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 NextFree { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _MM_PAGE_ACCESS_INFO
 
	public class _MM_PAGE_ACCESS_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MM_PAGE_ACCESS_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MM_PAGE_ACCESS_INFO"": [ 8, {
				 ""Flags"": [ 0, [ ""_MM_PAGE_ACCESS_INFO_FLAGS"", ""null"" ]],
				 ""FileOffset"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""VirtualAddress"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PointerProtoPte"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public _MM_PAGE_ACCESS_INFO_FLAGS Flags
		{
			get
			{
				_MM_PAGE_ACCESS_INFO_FLAGS returnValue = new _MM_PAGE_ACCESS_INFO_FLAGS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 FileOffset { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 VirtualAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 PointerProtoPte { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _MI_CONTROL_AREA_WAIT_BLOCK
 
	public class _MI_CONTROL_AREA_WAIT_BLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MI_CONTROL_AREA_WAIT_BLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MI_CONTROL_AREA_WAIT_BLOCK"": [ 40, {
				 ""Next"": [ 0, [ ""Pointer"", ""{\""target\"":\""_MI_CONTROL_AREA_WAIT_BLOCK\""}"" ]],
				 ""WaitReason"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""WaitResponse"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""Gate"": [ 16, [ ""_KGATE"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Next { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 WaitReason { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 WaitResponse { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public _KGATE Gate
		{
			get
			{
				_KGATE returnValue = new _KGATE(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _HEAP_COUNTERS
 
	public class _HEAP_COUNTERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HEAP_COUNTERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 120; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HEAP_COUNTERS"": [ 120, {
				 ""TotalMemoryReserved"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""TotalMemoryCommitted"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""TotalMemoryLargeUCR"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""TotalSizeInVirtualBlocks"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""TotalSegments"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""TotalUCRs"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""CommittOps"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""DeCommitOps"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""LockAcquires"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""LockCollisions"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""CommitRate"": [ 56, [ ""UInt32"", ""null"" ]],
				 ""DecommittRate"": [ 60, [ ""UInt32"", ""null"" ]],
				 ""CommitFailures"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""InBlockCommitFailures"": [ 68, [ ""UInt32"", ""null"" ]],
				 ""PollIntervalCounter"": [ 72, [ ""UInt32"", ""null"" ]],
				 ""DecommitsSinceLastCheck"": [ 76, [ ""UInt32"", ""null"" ]],
				 ""HeapPollInterval"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""AllocAndFreeOps"": [ 84, [ ""UInt32"", ""null"" ]],
				 ""AllocationIndicesActive"": [ 88, [ ""UInt32"", ""null"" ]],
				 ""InBlockDeccommits"": [ 92, [ ""UInt32"", ""null"" ]],
				 ""InBlockDeccomitSize"": [ 96, [ ""UInt64"", ""null"" ]],
				 ""HighWatermarkSize"": [ 104, [ ""UInt64"", ""null"" ]],
				 ""LastPolledSize"": [ 112, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 TotalMemoryReserved { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 TotalMemoryCommitted { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 TotalMemoryLargeUCR { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 TotalSizeInVirtualBlocks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt32 TotalSegments { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 TotalUCRs { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public UInt32 CommittOps { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32 DeCommitOps { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public UInt32 LockAcquires { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public UInt32 LockCollisions { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public UInt32 CommitRate { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public UInt32 DecommittRate { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
		public UInt32 CommitFailures { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt32 InBlockCommitFailures { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 68); } }
		public UInt32 PollIntervalCounter { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 72); } }
		public UInt32 DecommitsSinceLastCheck { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 76); } }
		public UInt32 HeapPollInterval { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 AllocAndFreeOps { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
		public UInt32 AllocationIndicesActive { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 88); } }
		public UInt32 InBlockDeccommits { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 92); } }
		public UInt64 InBlockDeccomitSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt64 HighWatermarkSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public UInt64 LastPolledSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 112); } }
	}
	#endregion
	#region _PPM_FFH_THROTTLE_STATE_INFO
 
	public class _PPM_FFH_THROTTLE_STATE_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PPM_FFH_THROTTLE_STATE_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PPM_FFH_THROTTLE_STATE_INFO"": [ 32, {
				 ""EnableLogging"": [ 0, [ ""Byte"", ""null"" ]],
				 ""MismatchCount"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Initialized"": [ 8, [ ""Byte"", ""null"" ]],
				 ""LastValue"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""LastLogTickCount"": [ 24, [ ""_LARGE_INTEGER"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte EnableLogging{ get { return _StructureData[_BufferOffset +0]; } }
		public UInt32 MismatchCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public Byte Initialized{ get { return _StructureData[_BufferOffset +8]; } }
		public UInt64 LastValue { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public _LARGE_INTEGER LastLogTickCount
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
	}
	#endregion
	#region _SYSPTES_HEADER
 
	public class _SYSPTES_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SYSPTES_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SYSPTES_HEADER"": [ 40, {
				 ""ListHead"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Count"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""NumberOfEntries"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""NumberOfEntriesPeak"": [ 32, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Count { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 NumberOfEntries { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 NumberOfEntriesPeak { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _EXCEPTION_RECORD
 
	public class _EXCEPTION_RECORD
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EXCEPTION_RECORD(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 152; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EXCEPTION_RECORD"": [ 152, {
				 ""ExceptionCode"": [ 0, [ ""Int32"", ""null"" ]],
				 ""ExceptionFlags"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""ExceptionRecord"": [ 8, [ ""Pointer"", ""{\""target\"":\""_EXCEPTION_RECORD\""}"" ]],
				 ""ExceptionAddress"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""NumberParameters"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""ExceptionInformation"": [ 32, [ ""Array"", ""{\""count\"":15,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public Int32 ExceptionCode { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 ExceptionFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 ExceptionRecord { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 ExceptionAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 NumberParameters { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt64[] ExceptionInformation
		{
			get
			{
				UInt64[] returnValue = new UInt64[15];
				for(int i=0; i<15; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 32);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MI_ACTIVE_WSLE_LISTHEAD
 
	public class _MI_ACTIVE_WSLE_LISTHEAD
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MI_ACTIVE_WSLE_LISTHEAD(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MI_ACTIVE_WSLE_LISTHEAD"": [ 16, {
				 ""Flink"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Blink"": [ 8, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Flink { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Blink { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _PENDING_RELATIONS_LIST_ENTRY
 
	public class _PENDING_RELATIONS_LIST_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PENDING_RELATIONS_LIST_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 112; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PENDING_RELATIONS_LIST_ENTRY"": [ 112, {
				 ""Link"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""WorkItem"": [ 16, [ ""_WORK_QUEUE_ITEM"", ""null"" ]],
				 ""DeviceEvent"": [ 48, [ ""Pointer"", ""{\""target\"":\""_PNP_DEVICE_EVENT_ENTRY\""}"" ]],
				 ""DeviceObject"": [ 56, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""RelationsList"": [ 64, [ ""Pointer"", ""{\""target\"":\""_RELATION_LIST\""}"" ]],
				 ""EjectIrp"": [ 72, [ ""Pointer"", ""{\""target\"":\""_IRP\""}"" ]],
				 ""Lock"": [ 80, [ ""Enumeration"", ""{\""enum_name\"":\""IRPLOCK\"",\""target\"":\""UInt32\""}"" ]],
				 ""Problem"": [ 84, [ ""UInt32"", ""null"" ]],
				 ""ProfileChangingEject"": [ 88, [ ""Byte"", ""null"" ]],
				 ""DisplaySafeRemovalDialog"": [ 89, [ ""Byte"", ""null"" ]],
				 ""LightestSleepState"": [ 92, [ ""Enumeration"", ""{\""enum_name\"":\""_SYSTEM_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""DockInterface"": [ 96, [ ""Pointer"", ""{\""target\"":\""DOCK_INTERFACE\""}"" ]],
				 ""DequeuePending"": [ 104, [ ""Byte"", ""null"" ]],
				 ""DeleteType"": [ 108, [ ""Enumeration"", ""{\""enum_name\"":\""_PNP_DEVICE_DELETE_TYPE\"",\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY Link
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _WORK_QUEUE_ITEM WorkItem
		{
			get
			{
				_WORK_QUEUE_ITEM returnValue = new _WORK_QUEUE_ITEM(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt64 DeviceEvent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 DeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 RelationsList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 EjectIrp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public IRPLOCK Lock { get { return (IRPLOCK)BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 Problem { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
		public Byte ProfileChangingEject{ get { return _StructureData[_BufferOffset +88]; } }
		public Byte DisplaySafeRemovalDialog{ get { return _StructureData[_BufferOffset +89]; } }
		public _SYSTEM_POWER_STATE LightestSleepState { get { return (_SYSTEM_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 92); } }
		public UInt64 DockInterface { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public Byte DequeuePending{ get { return _StructureData[_BufferOffset +104]; } }
		public _PNP_DEVICE_DELETE_TYPE DeleteType { get { return (_PNP_DEVICE_DELETE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 108); } }
	}
	#endregion
	#region _CELL_DATA
 
	public class _CELL_DATA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CELL_DATA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 80; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CELL_DATA"": [ 80, {
				 ""u"": [ 0, [ ""_u"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _u u
		{
			get
			{
				_u returnValue = new _u(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _INITIAL_PRIVILEGE_SET
 
	public class _INITIAL_PRIVILEGE_SET
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _INITIAL_PRIVILEGE_SET(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 44; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_INITIAL_PRIVILEGE_SET"": [ 44, {
				 ""PrivilegeCount"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Control"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Privilege"": [ 8, [ ""Array"", ""{\""count\"":3,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 PrivilegeCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Control { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _LUID_AND_ATTRIBUTES[] Privilege
		{
			get
			{
				_LUID_AND_ATTRIBUTES[] returnValue = new _LUID_AND_ATTRIBUTES[3];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<3; i++ )
					returnValue[i] = new _LUID_AND_ATTRIBUTES(_StructureData, (i * size) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _HEAP_TUNING_PARAMETERS
 
	public class _HEAP_TUNING_PARAMETERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HEAP_TUNING_PARAMETERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HEAP_TUNING_PARAMETERS"": [ 16, {
				 ""CommittThresholdShift"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""MaxPreCommittThreshold"": [ 8, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 CommittThresholdShift { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 MaxPreCommittThreshold { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _MMWSLE_NONDIRECT_HASH
 
	public class _MMWSLE_NONDIRECT_HASH
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMWSLE_NONDIRECT_HASH(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMWSLE_NONDIRECT_HASH"": [ 16, {
				 ""Key"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Index"": [ 8, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Key { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Index { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _POP_FX_WORK_ORDER
 
	public class _POP_FX_WORK_ORDER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_FX_WORK_ORDER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_FX_WORK_ORDER"": [ 56, {
				 ""WorkItem"": [ 0, [ ""_WORK_QUEUE_ITEM"", ""null"" ]],
				 ""WorkCount"": [ 32, [ ""Int32"", ""null"" ]],
				 ""Context"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""WatchdogTimerInfo"": [ 48, [ ""Pointer"", ""{\""target\"":\""_POP_FX_WORK_ORDER_WATCHDOG_INFO\""}"" ]] }]
				 }
				)";
			}
		}
		public _WORK_QUEUE_ITEM WorkItem
		{
			get
			{
				_WORK_QUEUE_ITEM returnValue = new _WORK_QUEUE_ITEM(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public Int32 WorkCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 32); } }
		public UInt64 Context { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 WatchdogTimerInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
	}
	#endregion
	#region _KAPC
 
	public class _KAPC
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KAPC(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 88; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KAPC"": [ 88, {
				 ""Type"": [ 0, [ ""Byte"", ""null"" ]],
				 ""SpareByte0"": [ 1, [ ""Byte"", ""null"" ]],
				 ""Size"": [ 2, [ ""Byte"", ""null"" ]],
				 ""SpareByte1"": [ 3, [ ""Byte"", ""null"" ]],
				 ""SpareLong0"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Thread"": [ 8, [ ""Pointer"", ""{\""target\"":\""_KTHREAD\""}"" ]],
				 ""ApcListEntry"": [ 16, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""KernelRoutine"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""RundownRoutine"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""NormalRoutine"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Reserved"": [ 32, [ ""Array"", ""{\""count\"":3,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]],
				 ""NormalContext"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SystemArgument1"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SystemArgument2"": [ 72, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ApcStateIndex"": [ 80, [ ""Char"", ""null"" ]],
				 ""ApcMode"": [ 81, [ ""Char"", ""null"" ]],
				 ""Inserted"": [ 82, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte Type{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte SpareByte0{ get { return _StructureData[_BufferOffset +1]; } }
		public Byte Size{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte SpareByte1{ get { return _StructureData[_BufferOffset +3]; } }
		public UInt32 SpareLong0 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 Thread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _LIST_ENTRY ApcListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt64 KernelRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 RundownRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 NormalRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64[] Reserved
		{
			get
			{
				UInt64[] returnValue = new UInt64[3];
				int size = 8;
				for(int i=0; i<3; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt64 NormalContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 SystemArgument1 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 SystemArgument2 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public Char ApcStateIndex { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 80); } }
		public Char ApcMode { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 81); } }
		public Byte Inserted{ get { return _StructureData[_BufferOffset +82]; } }
	}
	#endregion
	#region _KTIMER_EXPIRATION_TRACE
 
	public class _KTIMER_EXPIRATION_TRACE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KTIMER_EXPIRATION_TRACE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KTIMER_EXPIRATION_TRACE"": [ 16, {
				 ""InterruptTime"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""PerformanceCounter"": [ 8, [ ""_LARGE_INTEGER"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 InterruptTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _LARGE_INTEGER PerformanceCounter
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _POOL_TRACKER_BIG_PAGES
 
	public class _POOL_TRACKER_BIG_PAGES
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POOL_TRACKER_BIG_PAGES(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POOL_TRACKER_BIG_PAGES"": [ 24, {
				 ""Va"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Key"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""PoolType"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""NumberOfBytes"": [ 16, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Va { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 Key { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 PoolType { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt64 NumberOfBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region tagSWITCH_CONTEXT_DATA
 
	public class tagSWITCH_CONTEXT_DATA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public tagSWITCH_CONTEXT_DATA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""tagSWITCH_CONTEXT_DATA"": [ 72, {
				 ""ullOsMaxVersionTested"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""ullContextMinimum"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""guPlatform"": [ 16, [ ""_GUID"", ""null"" ]],
				 ""guMinPlatform"": [ 32, [ ""_GUID"", ""null"" ]],
				 ""ulContextSource"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""ulElementCount"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""guElements"": [ 56, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ullOsMaxVersionTested { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 ullContextMinimum { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _GUID guPlatform
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _GUID guMinPlatform
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt32 ulContextSource { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public UInt32 ulElementCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public _GUID[] guElements
		{
			get
			{
				_GUID[] returnValue = new _GUID[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _GUID(_StructureData, (i * size) + _BufferOffset + 56);
				return returnValue;
			}
		}
	}
	#endregion
	#region _WHEAP_ERROR_SOURCE_TABLE
 
	public class _WHEAP_ERROR_SOURCE_TABLE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEAP_ERROR_SOURCE_TABLE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEAP_ERROR_SOURCE_TABLE"": [ 48, {
				 ""Signature"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Count"": [ 4, [ ""Int32"", ""null"" ]],
				 ""Items"": [ 8, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""InsertLock"": [ 24, [ ""_KEVENT"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Signature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Int32 Count { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 4); } }
		public _LIST_ENTRY Items
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _KEVENT InsertLock
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
	}
	#endregion
	#region _TEB_ACTIVE_FRAME_CONTEXT
 
	public class _TEB_ACTIVE_FRAME_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _TEB_ACTIVE_FRAME_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_TEB_ACTIVE_FRAME_CONTEXT"": [ 16, {
				 ""Flags"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""FrameName"": [ 8, [ ""Pointer"", ""{\""target\"":\""char\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 FrameName { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _TEB_ACTIVE_FRAME
 
	public class _TEB_ACTIVE_FRAME
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _TEB_ACTIVE_FRAME(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_TEB_ACTIVE_FRAME"": [ 24, {
				 ""Flags"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Previous"": [ 8, [ ""Pointer"", ""{\""target\"":\""_TEB_ACTIVE_FRAME\""}"" ]],
				 ""Context"": [ 16, [ ""Pointer"", ""{\""target\"":\""_TEB_ACTIVE_FRAME_CONTEXT\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 Previous { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Context { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _FILE_GET_QUOTA_INFORMATION
 
	public class _FILE_GET_QUOTA_INFORMATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _FILE_GET_QUOTA_INFORMATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 20; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_FILE_GET_QUOTA_INFORMATION"": [ 20, {
				 ""NextEntryOffset"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""SidLength"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Sid"": [ 8, [ ""_SID"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 NextEntryOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 SidLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _SID Sid
		{
			get
			{
				_SID returnValue = new _SID(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ACCESS_REASONS
 
	public class _ACCESS_REASONS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ACCESS_REASONS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 128; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ACCESS_REASONS"": [ 128, {
				 ""Data"": [ 0, [ ""Array"", ""{\""count\"":32,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32[] Data
		{
			get
			{
				UInt32[] returnValue = new UInt32[32];
				for(int i=0; i<32; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _CM_KEY_BODY
 
	public class _CM_KEY_BODY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_KEY_BODY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 88; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_KEY_BODY"": [ 88, {
				 ""Type"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""KeyControlBlock"": [ 8, [ ""Pointer"", ""{\""target\"":\""_CM_KEY_CONTROL_BLOCK\""}"" ]],
				 ""NotifyBlock"": [ 16, [ ""Pointer"", ""{\""target\"":\""_CM_NOTIFY_BLOCK\""}"" ]],
				 ""ProcessID"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""KeyBodyList"": [ 32, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Flags"": [ 48, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""HandleTags"": [ 48, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""KtmTrans"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""KtmUow"": [ 64, [ ""Pointer"", ""{\""target\"":\""_GUID\""}"" ]],
				 ""ContextListHead"": [ 72, [ ""_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Type { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 KeyControlBlock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 NotifyBlock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 ProcessID { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public _LIST_ENTRY KeyBodyList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt32 Flags
		{
			get
			{
				// start: 0  end: 16  Mask: 1111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 48);
				var value2 = (value & 65535) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 HandleTags
		{
			get
			{
				// start: 16  end: 32  Mask: 11111111111111110000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 48);
				var value2 = (value & 4294901760) >> 16;
				return (UInt32)value2;
			}
		}
		public UInt64 KtmTrans { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 KtmUow { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public _LIST_ENTRY ContextListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 72);
				return returnValue;
			}
		}
	}
	#endregion
	#region _KWAIT_BLOCK
 
	public class _KWAIT_BLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KWAIT_BLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KWAIT_BLOCK"": [ 48, {
				 ""WaitListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""WaitType"": [ 16, [ ""Byte"", ""null"" ]],
				 ""BlockState"": [ 17, [ ""Byte"", ""null"" ]],
				 ""WaitKey"": [ 18, [ ""UInt16"", ""null"" ]],
				 ""SpareLong"": [ 20, [ ""Int32"", ""null"" ]],
				 ""Thread"": [ 24, [ ""Pointer"", ""{\""target\"":\""_KTHREAD\""}"" ]],
				 ""NotificationQueue"": [ 24, [ ""Pointer"", ""{\""target\"":\""_KQUEUE\""}"" ]],
				 ""Object"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SparePtr"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY WaitListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public Byte WaitType{ get { return _StructureData[_BufferOffset +16]; } }
		public Byte BlockState{ get { return _StructureData[_BufferOffset +17]; } }
		public UInt16 WaitKey { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 18); } }
		public Int32 SpareLong { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 20); } }
		public UInt64 Thread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 NotificationQueue { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 Object { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 SparePtr { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
	}
	#endregion
	#region _MMPTE_PROTOTYPE
 
	public class _MMPTE_PROTOTYPE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMPTE_PROTOTYPE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMPTE_PROTOTYPE"": [ 8, {
				 ""Valid"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""DemandFillProto"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt64\""}"" ]],
				 ""HiberVerifyConverted"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt64\""}"" ]],
				 ""Unused1"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":3,\""target\"":\""UInt64\""}"" ]],
				 ""ReadOnly"": [ 0, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt64\""}"" ]],
				 ""Combined"": [ 0, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt64\""}"" ]],
				 ""Prototype"": [ 0, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt64\""}"" ]],
				 ""Protection"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":11,\""target\"":\""UInt64\""}"" ]],
				 ""ProtoAddress"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":16,\""target\"":\""Int64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Valid
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 DemandFillProto
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt64)value2;
			}
		}
		public UInt64 HiberVerifyConverted
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt64)value2;
			}
		}
		public UInt64 Unused1
		{
			get
			{
				// start: 3  end: 8  Mask: 0000000011111000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 248) >> 3;
				return (UInt64)value2;
			}
		}
		public UInt64 ReadOnly
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 256) >> 8;
				return (UInt64)value2;
			}
		}
		public UInt64 Combined
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 512) >> 9;
				return (UInt64)value2;
			}
		}
		public UInt64 Prototype
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1024) >> 10;
				return (UInt64)value2;
			}
		}
		public UInt64 Protection
		{
			get
			{
				// start: 11  end: 16  Mask: 1111100000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 63488) >> 11;
				return (UInt64)value2;
			}
		}
		public UInt64 ProtoAddress
		{
			get
			{
				// start: 16  end: 64  Mask: 0000000000000000000000000000000011111111111111110000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294901760) >> 16;
				return (UInt64)value2;
			}
		}
	}
	#endregion
	#region _WHEA_ERROR_PACKET_FLAGS
 
	public class _WHEA_ERROR_PACKET_FLAGS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_ERROR_PACKET_FLAGS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_ERROR_PACKET_FLAGS"": [ 4, {
				 ""PreviousError"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""Reserved1"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""HypervisorError"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""Simulated"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""PlatformPfaControl"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""PlatformDirectedOffline"": [ 0, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""Reserved2"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""AsULONG"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 PreviousError
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 Reserved1
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 HypervisorError
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 Simulated
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 PlatformPfaControl
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 PlatformDirectedOffline
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 Reserved2
		{
			get
			{
				// start: 6  end: 32  Mask: 11111111111111111111111111000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967232) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 AsULONG { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _THERMAL_INFORMATION_EX
 
	public class _THERMAL_INFORMATION_EX
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _THERMAL_INFORMATION_EX(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 80; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_THERMAL_INFORMATION_EX"": [ 80, {
				 ""ThermalStamp"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ThermalConstant1"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""ThermalConstant2"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""SamplingPeriod"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""CurrentTemperature"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""PassiveTripPoint"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""CriticalTripPoint"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""ActiveTripPointCount"": [ 28, [ ""Byte"", ""null"" ]],
				 ""ActiveTripPoint"": [ 32, [ ""Array"", ""{\""count\"":10,\""target\"":\""UInt32\""}"" ]],
				 ""S4TransitionTripPoint"": [ 72, [ ""UInt32"", ""null"" ]],
				 ""MinimumThrottle"": [ 76, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 ThermalStamp { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 ThermalConstant1 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 ThermalConstant2 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 SamplingPeriod { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 CurrentTemperature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 PassiveTripPoint { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 CriticalTripPoint { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public Byte ActiveTripPointCount{ get { return _StructureData[_BufferOffset +28]; } }
		public UInt32[] ActiveTripPoint
		{
			get
			{
				UInt32[] returnValue = new UInt32[10];
				for(int i=0; i<10; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt32 S4TransitionTripPoint { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 72); } }
		public UInt32 MinimumThrottle { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 76); } }
	}
	#endregion
	#region _UNNAMED_31442
 
	public class _UNNAMED_31442
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_31442(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_31442"": [ 4, {
				 ""FilePointerIndex"": [ 0, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""HardFault"": [ 0, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt32\""}"" ]],
				 ""Image"": [ 0, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt32\""}"" ]],
				 ""Spare0"": [ 0, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 FilePointerIndex
		{
			get
			{
				// start: 0  end: 9  Mask: 0000000111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 511) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 HardFault
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 512) >> 9;
				return (UInt32)value2;
			}
		}
		public UInt32 Image
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1024) >> 10;
				return (UInt32)value2;
			}
		}
		public UInt32 Spare0
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2048) >> 11;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _UNNAMED_31447
 
	public class _UNNAMED_31447
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_31447(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_31447"": [ 4, {
				 ""FilePointerIndex"": [ 0, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""HardFault"": [ 0, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt32\""}"" ]],
				 ""Spare1"": [ 0, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":10,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 FilePointerIndex
		{
			get
			{
				// start: 0  end: 9  Mask: 0000000111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 511) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 HardFault
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 512) >> 9;
				return (UInt32)value2;
			}
		}
		public UInt32 Spare1
		{
			get
			{
				// start: 10  end: 12  Mask: 0000110000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 3072) >> 10;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _MM_PAGE_ACCESS_INFO_FLAGS
 
	public class _MM_PAGE_ACCESS_INFO_FLAGS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MM_PAGE_ACCESS_INFO_FLAGS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MM_PAGE_ACCESS_INFO_FLAGS"": [ 4, {
				 ""File"": [ 0, [ ""_UNNAMED_31442"", ""null"" ]],
				 ""Private"": [ 0, [ ""_UNNAMED_31447"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_31442 File
		{
			get
			{
				_UNNAMED_31442 returnValue = new _UNNAMED_31442(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_31447 Private
		{
			get
			{
				_UNNAMED_31447 returnValue = new _UNNAMED_31447(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _PPM_CONCURRENCY_ACCOUNTING
 
	public class _PPM_CONCURRENCY_ACCOUNTING
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PPM_CONCURRENCY_ACCOUNTING(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PPM_CONCURRENCY_ACCOUNTING"": [ 40, {
				 ""Lock"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Processors"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""ActiveProcessors"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""LastUpdateTime"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""TotalTime"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""AccumulatedTime"": [ 32, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Lock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 Processors { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 ActiveProcessors { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt64 LastUpdateTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 TotalTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64[] AccumulatedTime
		{
			get
			{
				UInt64[] returnValue = new UInt64[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 32);
				return returnValue;
			}
		}
	}
	#endregion
	#region _VI_VERIFIER_ISSUE
 
	public class _VI_VERIFIER_ISSUE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VI_VERIFIER_ISSUE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VI_VERIFIER_ISSUE"": [ 32, {
				 ""IssueType"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Address"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Parameters"": [ 16, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 IssueType { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Address { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64[] Parameters
		{
			get
			{
				UInt64[] returnValue = new UInt64[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MMSUBSECTION_FLAGS
 
	public class _MMSUBSECTION_FLAGS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMSUBSECTION_FLAGS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMSUBSECTION_FLAGS"": [ 4, {
				 ""SubsectionAccessed"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""Protection"": [ 0, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":1,\""target\"":\""UInt16\""}"" ]],
				 ""StartingSector4132"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":6,\""target\"":\""UInt16\""}"" ]],
				 ""SubsectionStatic"": [ 2, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""GlobalMemory"": [ 2, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt16\""}"" ]],
				 ""DirtyPages"": [ 2, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt16\""}"" ]],
				 ""OnDereferenceList"": [ 2, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt16\""}"" ]],
				 ""SectorEndOffset"": [ 2, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":4,\""target\"":\""UInt16\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 SubsectionAccessed
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 Protection
		{
			get
			{
				// start: 1  end: 6  Mask: 0000000000111110
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 62) >> 1;
				return (UInt16)value2;
			}
		}
		public UInt16 StartingSector4132
		{
			get
			{
				// start: 6  end: 16  Mask: 1111111111000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 65472) >> 6;
				return (UInt16)value2;
			}
		}
		public UInt16 SubsectionStatic
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 2);
				var value2 = (value & 1) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 GlobalMemory
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 2);
				var value2 = (value & 2) >> 1;
				return (UInt16)value2;
			}
		}
		public UInt16 DirtyPages
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 2);
				var value2 = (value & 4) >> 2;
				return (UInt16)value2;
			}
		}
		public UInt16 OnDereferenceList
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 2);
				var value2 = (value & 8) >> 3;
				return (UInt16)value2;
			}
		}
		public UInt16 SectorEndOffset
		{
			get
			{
				// start: 4  end: 16  Mask: 1111111111110000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 2);
				var value2 = (value & 65520) >> 4;
				return (UInt16)value2;
			}
		}
	}
	#endregion
	#region _EXCEPTION_POINTERS
 
	public class _EXCEPTION_POINTERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EXCEPTION_POINTERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EXCEPTION_POINTERS"": [ 16, {
				 ""ExceptionRecord"": [ 0, [ ""Pointer"", ""{\""target\"":\""_EXCEPTION_RECORD\""}"" ]],
				 ""ContextRecord"": [ 8, [ ""Pointer"", ""{\""target\"":\""_CONTEXT\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ExceptionRecord { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 ContextRecord { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _KMUTANT
 
	public class _KMUTANT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KMUTANT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KMUTANT"": [ 56, {
				 ""Header"": [ 0, [ ""_DISPATCHER_HEADER"", ""null"" ]],
				 ""MutantListEntry"": [ 24, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""OwnerThread"": [ 40, [ ""Pointer"", ""{\""target\"":\""_KTHREAD\""}"" ]],
				 ""Abandoned"": [ 48, [ ""Byte"", ""null"" ]],
				 ""ApcDisable"": [ 49, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _DISPATCHER_HEADER Header
		{
			get
			{
				_DISPATCHER_HEADER returnValue = new _DISPATCHER_HEADER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LIST_ENTRY MutantListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt64 OwnerThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public Byte Abandoned{ get { return _StructureData[_BufferOffset +48]; } }
		public Byte ApcDisable{ get { return _StructureData[_BufferOffset +49]; } }
	}
	#endregion
	#region _OBJECT_REF_INFO
 
	public class _OBJECT_REF_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_REF_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_REF_INFO"": [ 40, {
				 ""ObjectHeader"": [ 0, [ ""Pointer"", ""{\""target\"":\""_OBJECT_HEADER\""}"" ]],
				 ""NextRef"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ImageFileName"": [ 16, [ ""Array"", ""{\""count\"":16,\""target\"":\""Byte\""}"" ]],
				 ""NextPos"": [ 32, [ ""UInt16"", ""null"" ]],
				 ""MaxStacks"": [ 34, [ ""UInt16"", ""null"" ]],
				 ""StackInfo"": [ 36, [ ""Array"", ""{\""count\"":0,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ObjectHeader { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 NextRef { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public Byte[] ImageFileName
		{
			get
			{
				Byte[] returnValue = new Byte[16];
				for(int i=0; i<16; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 16];
				return returnValue;
			}
		}
		public UInt16 NextPos { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 32); } }
		public UInt16 MaxStacks { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 34); } }
		public _OBJECT_REF_STACK_INFO[] StackInfo
		{
			get
			{
				_OBJECT_REF_STACK_INFO[] returnValue = new _OBJECT_REF_STACK_INFO[0];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<0; i++ )
					returnValue[i] = new _OBJECT_REF_STACK_INFO(_StructureData, (i * size) + _BufferOffset + 36);
				return returnValue;
			}
		}
	}
	#endregion
	#region _HBIN
 
	public class _HBIN
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HBIN(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HBIN"": [ 32, {
				 ""Signature"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""FileOffset"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Size"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Reserved1"": [ 12, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""TimeStamp"": [ 20, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""Spare"": [ 28, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Signature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 FileOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 Size { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32[] Reserved1
		{
			get
			{
				UInt32[] returnValue = new UInt32[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 12);
				return returnValue;
			}
		}
		public _LARGE_INTEGER TimeStamp
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 20);
				return returnValue;
			}
		}
		public UInt32 Spare { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
	}
	#endregion
	#region _MI_IMAGE_SECURITY_REFERENCE
 
	public class _MI_IMAGE_SECURITY_REFERENCE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MI_IMAGE_SECURITY_REFERENCE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MI_IMAGE_SECURITY_REFERENCE"": [ 16, {
				 ""SecurityContext"": [ 0, [ ""_IMAGE_SECURITY_CONTEXT"", ""null"" ]],
				 ""DynamicRelocations"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public _IMAGE_SECURITY_CONTEXT SecurityContext
		{
			get
			{
				_IMAGE_SECURITY_CONTEXT returnValue = new _IMAGE_SECURITY_CONTEXT(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 DynamicRelocations { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _AUTHZBASEP_CLAIM_ATTRIBUTES_COLLECTION
 
	public class _AUTHZBASEP_CLAIM_ATTRIBUTES_COLLECTION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _AUTHZBASEP_CLAIM_ATTRIBUTES_COLLECTION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 608; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_AUTHZBASEP_CLAIM_ATTRIBUTES_COLLECTION"": [ 608, {
				 ""DeviceGroupsCount"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""pDeviceGroups"": [ 8, [ ""Pointer"", ""{\""target\"":\""_SID_AND_ATTRIBUTES\""}"" ]],
				 ""RestrictedDeviceGroupsCount"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""pRestrictedDeviceGroups"": [ 24, [ ""Pointer"", ""{\""target\"":\""_SID_AND_ATTRIBUTES\""}"" ]],
				 ""DeviceGroupsHash"": [ 32, [ ""_SID_AND_ATTRIBUTES_HASH"", ""null"" ]],
				 ""RestrictedDeviceGroupsHash"": [ 304, [ ""_SID_AND_ATTRIBUTES_HASH"", ""null"" ]],
				 ""pUserSecurityAttributes"": [ 576, [ ""Pointer"", ""{\""target\"":\""_AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION\""}"" ]],
				 ""pDeviceSecurityAttributes"": [ 584, [ ""Pointer"", ""{\""target\"":\""_AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION\""}"" ]],
				 ""pRestrictedUserSecurityAttributes"": [ 592, [ ""Pointer"", ""{\""target\"":\""_AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION\""}"" ]],
				 ""pRestrictedDeviceSecurityAttributes"": [ 600, [ ""Pointer"", ""{\""target\"":\""_AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 DeviceGroupsCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 pDeviceGroups { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 RestrictedDeviceGroupsCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt64 pRestrictedDeviceGroups { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public _SID_AND_ATTRIBUTES_HASH DeviceGroupsHash
		{
			get
			{
				_SID_AND_ATTRIBUTES_HASH returnValue = new _SID_AND_ATTRIBUTES_HASH(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public _SID_AND_ATTRIBUTES_HASH RestrictedDeviceGroupsHash
		{
			get
			{
				_SID_AND_ATTRIBUTES_HASH returnValue = new _SID_AND_ATTRIBUTES_HASH(_StructureData, _BufferOffset + 304);
				return returnValue;
			}
		}
		public UInt64 pUserSecurityAttributes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 576); } }
		public UInt64 pDeviceSecurityAttributes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 584); } }
		public UInt64 pRestrictedUserSecurityAttributes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 592); } }
		public UInt64 pRestrictedDeviceSecurityAttributes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 600); } }
	}
	#endregion
	#region _HEAP_TAG_ENTRY
 
	public class _HEAP_TAG_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HEAP_TAG_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HEAP_TAG_ENTRY"": [ 72, {
				 ""Allocs"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Frees"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Size"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""TagIndex"": [ 16, [ ""UInt16"", ""null"" ]],
				 ""CreatorBackTraceIndex"": [ 18, [ ""UInt16"", ""null"" ]],
				 ""TagName"": [ 20, [ ""Array"", ""{\""count\"":24,\""target\"":\""UInt16\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Allocs { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Frees { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 Size { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt16 TagIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 16); } }
		public UInt16 CreatorBackTraceIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 18); } }
		public UInt16[] TagName
		{
			get
			{
				UInt16[] returnValue = new UInt16[24];
				for(int i=0; i<24; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 20);
				return returnValue;
			}
		}
	}
	#endregion
	#region _SECURITY_QUALITY_OF_SERVICE
 
	public class _SECURITY_QUALITY_OF_SERVICE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SECURITY_QUALITY_OF_SERVICE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SECURITY_QUALITY_OF_SERVICE"": [ 12, {
				 ""Length"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ImpersonationLevel"": [ 4, [ ""Enumeration"", ""{\""enum_name\"":\""_SECURITY_IMPERSONATION_LEVEL\"",\""target\"":\""UInt32\""}"" ]],
				 ""ContextTrackingMode"": [ 8, [ ""Byte"", ""null"" ]],
				 ""EffectiveOnly"": [ 9, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel { get { return (_SECURITY_IMPERSONATION_LEVEL)BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public Byte ContextTrackingMode{ get { return _StructureData[_BufferOffset +8]; } }
		public Byte EffectiveOnly{ get { return _StructureData[_BufferOffset +9]; } }
	}
	#endregion
	#region _MMWSLE_FREE_ENTRY
 
	public class _MMWSLE_FREE_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMWSLE_FREE_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMWSLE_FREE_ENTRY"": [ 8, {
				 ""MustBeZero"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""PreviousFree"": [ 0, [ ""BitField"", ""{\""end_bit\"":28,\""start_bit\"":1,\""target\"":\""UInt64\""}"" ]],
				 ""NextFree"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":28,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 MustBeZero
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 PreviousFree
		{
			get
			{
				// start: 1  end: 28  Mask: 1111111111111111111111111110
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 268435454) >> 1;
				return (UInt64)value2;
			}
		}
		public UInt64 NextFree
		{
			get
			{
				// start: 28  end: 64  Mask: 0000000000000000000000000000000011110000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4026531840) >> 28;
				return (UInt64)value2;
			}
		}
	}
	#endregion
	#region _NT_TIB
 
	public class _NT_TIB
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _NT_TIB(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_NT_TIB"": [ 56, {
				 ""ExceptionList"": [ 0, [ ""Pointer"", ""{\""target\"":\""_EXCEPTION_REGISTRATION_RECORD\""}"" ]],
				 ""StackBase"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""StackLimit"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SubSystemTib"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FiberData"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Version"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""ArbitraryUserPointer"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Self"": [ 48, [ ""Pointer"", ""{\""target\"":\""_NT_TIB\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ExceptionList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 StackBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 StackLimit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 SubSystemTib { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 FiberData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt32 Version { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt64 ArbitraryUserPointer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 Self { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
	}
	#endregion
	#region _LEARNING_MODE_DATA
 
	public class _LEARNING_MODE_DATA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _LEARNING_MODE_DATA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_LEARNING_MODE_DATA"": [ 8, {
				 ""Settings"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Enabled"": [ 4, [ ""Byte"", ""null"" ]],
				 ""PermissiveModeEnabled"": [ 5, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Settings { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Byte Enabled{ get { return _StructureData[_BufferOffset +4]; } }
		public Byte PermissiveModeEnabled{ get { return _StructureData[_BufferOffset +5]; } }
	}
	#endregion
	#region _WHEA_REVISION
 
	public class _WHEA_REVISION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_REVISION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 2; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_REVISION"": [ 2, {
				 ""MinorRevision"": [ 0, [ ""Byte"", ""null"" ]],
				 ""MajorRevision"": [ 1, [ ""Byte"", ""null"" ]],
				 ""AsUSHORT"": [ 0, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte MinorRevision{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte MajorRevision{ get { return _StructureData[_BufferOffset +1]; } }
		public UInt16 AsUSHORT { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _JOB_ACCESS_STATE
 
	public class _JOB_ACCESS_STATE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _JOB_ACCESS_STATE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_JOB_ACCESS_STATE"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _JOB_NOTIFICATION_INFORMATION
 
	public class _JOB_NOTIFICATION_INFORMATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _JOB_NOTIFICATION_INFORMATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_JOB_NOTIFICATION_INFORMATION"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _JOB_CPU_RATE_CONTROL
 
	public class _JOB_CPU_RATE_CONTROL
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _JOB_CPU_RATE_CONTROL(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_JOB_CPU_RATE_CONTROL"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _EJOB
 
	public class _EJOB
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EJOB(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1200; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EJOB"": [ 1200, {
				 ""Event"": [ 0, [ ""_KEVENT"", ""null"" ]],
				 ""JobLinks"": [ 24, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ProcessListHead"": [ 40, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""JobLock"": [ 56, [ ""_ERESOURCE"", ""null"" ]],
				 ""TotalUserTime"": [ 160, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""TotalKernelTime"": [ 168, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""TotalCycleTime"": [ 176, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""ThisPeriodTotalUserTime"": [ 184, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""ThisPeriodTotalKernelTime"": [ 192, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""TotalContextSwitches"": [ 200, [ ""UInt64"", ""null"" ]],
				 ""TotalPageFaultCount"": [ 208, [ ""UInt32"", ""null"" ]],
				 ""TotalProcesses"": [ 212, [ ""UInt32"", ""null"" ]],
				 ""ActiveProcesses"": [ 216, [ ""UInt32"", ""null"" ]],
				 ""TotalTerminatedProcesses"": [ 220, [ ""UInt32"", ""null"" ]],
				 ""PerProcessUserTimeLimit"": [ 224, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""PerJobUserTimeLimit"": [ 232, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""MinimumWorkingSetSize"": [ 240, [ ""UInt64"", ""null"" ]],
				 ""MaximumWorkingSetSize"": [ 248, [ ""UInt64"", ""null"" ]],
				 ""LimitFlags"": [ 256, [ ""UInt32"", ""null"" ]],
				 ""ActiveProcessLimit"": [ 260, [ ""UInt32"", ""null"" ]],
				 ""Affinity"": [ 264, [ ""_KAFFINITY_EX"", ""null"" ]],
				 ""AccessState"": [ 432, [ ""Pointer"", ""{\""target\"":\""_JOB_ACCESS_STATE\""}"" ]],
				 ""AccessStateQuotaReference"": [ 440, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""UIRestrictionsClass"": [ 448, [ ""UInt32"", ""null"" ]],
				 ""EndOfJobTimeAction"": [ 452, [ ""UInt32"", ""null"" ]],
				 ""CompletionPort"": [ 456, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CompletionKey"": [ 464, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CompletionCount"": [ 472, [ ""UInt64"", ""null"" ]],
				 ""SessionId"": [ 480, [ ""UInt32"", ""null"" ]],
				 ""SchedulingClass"": [ 484, [ ""UInt32"", ""null"" ]],
				 ""ReadOperationCount"": [ 488, [ ""UInt64"", ""null"" ]],
				 ""WriteOperationCount"": [ 496, [ ""UInt64"", ""null"" ]],
				 ""OtherOperationCount"": [ 504, [ ""UInt64"", ""null"" ]],
				 ""ReadTransferCount"": [ 512, [ ""UInt64"", ""null"" ]],
				 ""WriteTransferCount"": [ 520, [ ""UInt64"", ""null"" ]],
				 ""OtherTransferCount"": [ 528, [ ""UInt64"", ""null"" ]],
				 ""DiskIoInfo"": [ 536, [ ""_PROCESS_DISK_COUNTERS"", ""null"" ]],
				 ""ProcessMemoryLimit"": [ 576, [ ""UInt64"", ""null"" ]],
				 ""JobMemoryLimit"": [ 584, [ ""UInt64"", ""null"" ]],
				 ""PeakProcessMemoryUsed"": [ 592, [ ""UInt64"", ""null"" ]],
				 ""PeakJobMemoryUsed"": [ 600, [ ""UInt64"", ""null"" ]],
				 ""EffectiveAffinity"": [ 608, [ ""_KAFFINITY_EX"", ""null"" ]],
				 ""EffectivePerProcessUserTimeLimit"": [ 776, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""EffectiveMinimumWorkingSetSize"": [ 784, [ ""UInt64"", ""null"" ]],
				 ""EffectiveMaximumWorkingSetSize"": [ 792, [ ""UInt64"", ""null"" ]],
				 ""EffectiveProcessMemoryLimit"": [ 800, [ ""UInt64"", ""null"" ]],
				 ""EffectiveProcessMemoryLimitJob"": [ 808, [ ""Pointer"", ""{\""target\"":\""_EJOB\""}"" ]],
				 ""EffectivePerProcessUserTimeLimitJob"": [ 816, [ ""Pointer"", ""{\""target\"":\""_EJOB\""}"" ]],
				 ""EffectiveLimitFlags"": [ 824, [ ""UInt32"", ""null"" ]],
				 ""EffectiveSchedulingClass"": [ 828, [ ""UInt32"", ""null"" ]],
				 ""EffectiveFreezeCount"": [ 832, [ ""UInt32"", ""null"" ]],
				 ""EffectiveBackgroundCount"": [ 836, [ ""UInt32"", ""null"" ]],
				 ""EffectiveSwapCount"": [ 840, [ ""UInt32"", ""null"" ]],
				 ""EffectiveNotificationLimitCount"": [ 844, [ ""UInt32"", ""null"" ]],
				 ""EffectivePriorityClass"": [ 848, [ ""Byte"", ""null"" ]],
				 ""PriorityClass"": [ 849, [ ""Byte"", ""null"" ]],
				 ""Reserved1"": [ 850, [ ""Array"", ""{\""count\"":2,\""target\"":\""Byte\""}"" ]],
				 ""CompletionFilter"": [ 852, [ ""UInt32"", ""null"" ]],
				 ""WakeChannel"": [ 856, [ ""_WNF_STATE_NAME"", ""null"" ]],
				 ""WakeInfo"": [ 856, [ ""_PS_WAKE_INFORMATION"", ""null"" ]],
				 ""WakeFilter"": [ 912, [ ""_JOBOBJECT_WAKE_FILTER"", ""null"" ]],
				 ""LowEdgeLatchFilter"": [ 920, [ ""UInt32"", ""null"" ]],
				 ""OwnedHighEdgeFilters"": [ 924, [ ""UInt32"", ""null"" ]],
				 ""NotificationLink"": [ 928, [ ""Pointer"", ""{\""target\"":\""_EJOB\""}"" ]],
				 ""CurrentJobMemoryUsed"": [ 936, [ ""UInt64"", ""null"" ]],
				 ""NotificationInfo"": [ 944, [ ""Pointer"", ""{\""target\"":\""_JOB_NOTIFICATION_INFORMATION\""}"" ]],
				 ""NotificationInfoQuotaReference"": [ 952, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""NotificationPacket"": [ 960, [ ""Pointer"", ""{\""target\"":\""_IO_MINI_COMPLETION_PACKET_USER\""}"" ]],
				 ""CpuRateControl"": [ 968, [ ""Pointer"", ""{\""target\"":\""_JOB_CPU_RATE_CONTROL\""}"" ]],
				 ""EffectiveSchedulingGroup"": [ 976, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ReadyTime"": [ 984, [ ""UInt64"", ""null"" ]],
				 ""MemoryLimitsLock"": [ 992, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""SiblingJobLinks"": [ 1000, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ChildJobListHead"": [ 1016, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ParentJob"": [ 1032, [ ""Pointer"", ""{\""target\"":\""_EJOB\""}"" ]],
				 ""RootJob"": [ 1040, [ ""Pointer"", ""{\""target\"":\""_EJOB\""}"" ]],
				 ""IteratorListHead"": [ 1048, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""AncestorCount"": [ 1064, [ ""UInt64"", ""null"" ]],
				 ""Ancestors"": [ 1072, [ ""Pointer"", ""{\""target\"":\""_EJOB*\""}"" ]],
				 ""Accounting"": [ 1080, [ ""_EPROCESS_VALUES"", ""null"" ]],
				 ""ShadowActiveProcessCount"": [ 1160, [ ""UInt32"", ""null"" ]],
				 ""SequenceNumber"": [ 1164, [ ""UInt32"", ""null"" ]],
				 ""TimerListLock"": [ 1168, [ ""UInt64"", ""null"" ]],
				 ""TimerListHead"": [ 1176, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""JobFlags"": [ 1192, [ ""UInt32"", ""null"" ]],
				 ""CloseDone"": [ 1192, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""MultiGroup"": [ 1192, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""OutstandingNotification"": [ 1192, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""NotificationInProgress"": [ 1192, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""UILimits"": [ 1192, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""CpuRateControlActive"": [ 1192, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""OwnCpuRateControl"": [ 1192, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""Terminating"": [ 1192, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt32\""}"" ]],
				 ""WorkingSetLock"": [ 1192, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]],
				 ""JobFrozen"": [ 1192, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt32\""}"" ]],
				 ""Background"": [ 1192, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt32\""}"" ]],
				 ""WakeNotificationAllocated"": [ 1192, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt32\""}"" ]],
				 ""WakeNotificationEnabled"": [ 1192, [ ""BitField"", ""{\""end_bit\"":13,\""start_bit\"":12,\""target\"":\""UInt32\""}"" ]],
				 ""WakeNotificationPending"": [ 1192, [ ""BitField"", ""{\""end_bit\"":14,\""start_bit\"":13,\""target\"":\""UInt32\""}"" ]],
				 ""LimitNotificationRequired"": [ 1192, [ ""BitField"", ""{\""end_bit\"":15,\""start_bit\"":14,\""target\"":\""UInt32\""}"" ]],
				 ""ZeroCountNotificationRequired"": [ 1192, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":15,\""target\"":\""UInt32\""}"" ]],
				 ""CycleTimeNotificationRequired"": [ 1192, [ ""BitField"", ""{\""end_bit\"":17,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""CycleTimeNotificationPending"": [ 1192, [ ""BitField"", ""{\""end_bit\"":18,\""start_bit\"":17,\""target\"":\""UInt32\""}"" ]],
				 ""TimersVirtualized"": [ 1192, [ ""BitField"", ""{\""end_bit\"":19,\""start_bit\"":18,\""target\"":\""UInt32\""}"" ]],
				 ""JobSwapped"": [ 1192, [ ""BitField"", ""{\""end_bit\"":20,\""start_bit\"":19,\""target\"":\""UInt32\""}"" ]],
				 ""ViolationDetected"": [ 1192, [ ""BitField"", ""{\""end_bit\"":21,\""start_bit\"":20,\""target\"":\""UInt32\""}"" ]],
				 ""EmptyJobNotified"": [ 1192, [ ""BitField"", ""{\""end_bit\"":22,\""start_bit\"":21,\""target\"":\""UInt32\""}"" ]],
				 ""NoSystemCharge"": [ 1192, [ ""BitField"", ""{\""end_bit\"":23,\""start_bit\"":22,\""target\"":\""UInt32\""}"" ]],
				 ""DropNoWakeCharges"": [ 1192, [ ""BitField"", ""{\""end_bit\"":24,\""start_bit\"":23,\""target\"":\""UInt32\""}"" ]],
				 ""NoWakeChargePolicyDecided"": [ 1192, [ ""BitField"", ""{\""end_bit\"":25,\""start_bit\"":24,\""target\"":\""UInt32\""}"" ]],
				 ""SpareJobFlags"": [ 1192, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":25,\""target\"":\""UInt32\""}"" ]],
				 ""EffectiveHighEdgeFilters"": [ 1196, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _KEVENT Event
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LIST_ENTRY JobLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public _LIST_ENTRY ProcessListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public _ERESOURCE JobLock
		{
			get
			{
				_ERESOURCE returnValue = new _ERESOURCE(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public _LARGE_INTEGER TotalUserTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 160);
				return returnValue;
			}
		}
		public _LARGE_INTEGER TotalKernelTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 168);
				return returnValue;
			}
		}
		public _LARGE_INTEGER TotalCycleTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 176);
				return returnValue;
			}
		}
		public _LARGE_INTEGER ThisPeriodTotalUserTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 184);
				return returnValue;
			}
		}
		public _LARGE_INTEGER ThisPeriodTotalKernelTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 192);
				return returnValue;
			}
		}
		public UInt64 TotalContextSwitches { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 200); } }
		public UInt32 TotalPageFaultCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 208); } }
		public UInt32 TotalProcesses { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 212); } }
		public UInt32 ActiveProcesses { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 216); } }
		public UInt32 TotalTerminatedProcesses { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 220); } }
		public _LARGE_INTEGER PerProcessUserTimeLimit
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 224);
				return returnValue;
			}
		}
		public _LARGE_INTEGER PerJobUserTimeLimit
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 232);
				return returnValue;
			}
		}
		public UInt64 MinimumWorkingSetSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 240); } }
		public UInt64 MaximumWorkingSetSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 248); } }
		public UInt32 LimitFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 256); } }
		public UInt32 ActiveProcessLimit { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 260); } }
		public _KAFFINITY_EX Affinity
		{
			get
			{
				_KAFFINITY_EX returnValue = new _KAFFINITY_EX(_StructureData, _BufferOffset + 264);
				return returnValue;
			}
		}
		public UInt64 AccessState { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 432); } }
		public UInt64 AccessStateQuotaReference { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 440); } }
		public UInt32 UIRestrictionsClass { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 448); } }
		public UInt32 EndOfJobTimeAction { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 452); } }
		public UInt64 CompletionPort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 456); } }
		public UInt64 CompletionKey { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 464); } }
		public UInt64 CompletionCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 472); } }
		public UInt32 SessionId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 480); } }
		public UInt32 SchedulingClass { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 484); } }
		public UInt64 ReadOperationCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 488); } }
		public UInt64 WriteOperationCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 496); } }
		public UInt64 OtherOperationCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 504); } }
		public UInt64 ReadTransferCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 512); } }
		public UInt64 WriteTransferCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 520); } }
		public UInt64 OtherTransferCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 528); } }
		public _PROCESS_DISK_COUNTERS DiskIoInfo
		{
			get
			{
				_PROCESS_DISK_COUNTERS returnValue = new _PROCESS_DISK_COUNTERS(_StructureData, _BufferOffset + 536);
				return returnValue;
			}
		}
		public UInt64 ProcessMemoryLimit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 576); } }
		public UInt64 JobMemoryLimit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 584); } }
		public UInt64 PeakProcessMemoryUsed { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 592); } }
		public UInt64 PeakJobMemoryUsed { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 600); } }
		public _KAFFINITY_EX EffectiveAffinity
		{
			get
			{
				_KAFFINITY_EX returnValue = new _KAFFINITY_EX(_StructureData, _BufferOffset + 608);
				return returnValue;
			}
		}
		public _LARGE_INTEGER EffectivePerProcessUserTimeLimit
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 776);
				return returnValue;
			}
		}
		public UInt64 EffectiveMinimumWorkingSetSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 784); } }
		public UInt64 EffectiveMaximumWorkingSetSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 792); } }
		public UInt64 EffectiveProcessMemoryLimit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 800); } }
		public UInt64 EffectiveProcessMemoryLimitJob { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 808); } }
		public UInt64 EffectivePerProcessUserTimeLimitJob { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 816); } }
		public UInt32 EffectiveLimitFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 824); } }
		public UInt32 EffectiveSchedulingClass { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 828); } }
		public UInt32 EffectiveFreezeCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 832); } }
		public UInt32 EffectiveBackgroundCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 836); } }
		public UInt32 EffectiveSwapCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 840); } }
		public UInt32 EffectiveNotificationLimitCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 844); } }
		public Byte EffectivePriorityClass{ get { return _StructureData[_BufferOffset +848]; } }
		public Byte PriorityClass{ get { return _StructureData[_BufferOffset +849]; } }
		public Byte[] Reserved1
		{
			get
			{
				Byte[] returnValue = new Byte[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 850];
				return returnValue;
			}
		}
		public UInt32 CompletionFilter { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 852); } }
		public _WNF_STATE_NAME WakeChannel
		{
			get
			{
				_WNF_STATE_NAME returnValue = new _WNF_STATE_NAME(_StructureData, _BufferOffset + 856);
				return returnValue;
			}
		}
		public _PS_WAKE_INFORMATION WakeInfo
		{
			get
			{
				_PS_WAKE_INFORMATION returnValue = new _PS_WAKE_INFORMATION(_StructureData, _BufferOffset + 856);
				return returnValue;
			}
		}
		public _JOBOBJECT_WAKE_FILTER WakeFilter
		{
			get
			{
				_JOBOBJECT_WAKE_FILTER returnValue = new _JOBOBJECT_WAKE_FILTER(_StructureData, _BufferOffset + 912);
				return returnValue;
			}
		}
		public UInt32 LowEdgeLatchFilter { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 920); } }
		public UInt32 OwnedHighEdgeFilters { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 924); } }
		public UInt64 NotificationLink { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 928); } }
		public UInt64 CurrentJobMemoryUsed { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 936); } }
		public UInt64 NotificationInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 944); } }
		public UInt64 NotificationInfoQuotaReference { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 952); } }
		public UInt64 NotificationPacket { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 960); } }
		public UInt64 CpuRateControl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 968); } }
		public UInt64 EffectiveSchedulingGroup { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 976); } }
		public UInt64 ReadyTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 984); } }
		public _EX_PUSH_LOCK MemoryLimitsLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 992);
				return returnValue;
			}
		}
		public _LIST_ENTRY SiblingJobLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 1000);
				return returnValue;
			}
		}
		public _LIST_ENTRY ChildJobListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 1016);
				return returnValue;
			}
		}
		public UInt64 ParentJob { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1032); } }
		public UInt64 RootJob { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1040); } }
		public _LIST_ENTRY IteratorListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 1048);
				return returnValue;
			}
		}
		public UInt64 AncestorCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1064); } }
		public UInt64 Ancestors { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1072); } }
		public _EPROCESS_VALUES Accounting
		{
			get
			{
				_EPROCESS_VALUES returnValue = new _EPROCESS_VALUES(_StructureData, _BufferOffset + 1080);
				return returnValue;
			}
		}
		public UInt32 ShadowActiveProcessCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1160); } }
		public UInt32 SequenceNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1164); } }
		public UInt64 TimerListLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1168); } }
		public _LIST_ENTRY TimerListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 1176);
				return returnValue;
			}
		}
		public UInt32 JobFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192); } }
		public UInt32 CloseDone
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 MultiGroup
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 OutstandingNotification
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 NotificationInProgress
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 UILimits
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 CpuRateControlActive
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 OwnCpuRateControl
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 64) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 Terminating
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 128) >> 7;
				return (UInt32)value2;
			}
		}
		public UInt32 WorkingSetLock
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 256) >> 8;
				return (UInt32)value2;
			}
		}
		public UInt32 JobFrozen
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 512) >> 9;
				return (UInt32)value2;
			}
		}
		public UInt32 Background
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 1024) >> 10;
				return (UInt32)value2;
			}
		}
		public UInt32 WakeNotificationAllocated
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 2048) >> 11;
				return (UInt32)value2;
			}
		}
		public UInt32 WakeNotificationEnabled
		{
			get
			{
				// start: 12  end: 13  Mask: 0001000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 4096) >> 12;
				return (UInt32)value2;
			}
		}
		public UInt32 WakeNotificationPending
		{
			get
			{
				// start: 13  end: 14  Mask: 0010000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 8192) >> 13;
				return (UInt32)value2;
			}
		}
		public UInt32 LimitNotificationRequired
		{
			get
			{
				// start: 14  end: 15  Mask: 0100000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 16384) >> 14;
				return (UInt32)value2;
			}
		}
		public UInt32 ZeroCountNotificationRequired
		{
			get
			{
				// start: 15  end: 16  Mask: 1000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 32768) >> 15;
				return (UInt32)value2;
			}
		}
		public UInt32 CycleTimeNotificationRequired
		{
			get
			{
				// start: 16  end: 17  Mask: 10000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 65536) >> 16;
				return (UInt32)value2;
			}
		}
		public UInt32 CycleTimeNotificationPending
		{
			get
			{
				// start: 17  end: 18  Mask: 100000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 131072) >> 17;
				return (UInt32)value2;
			}
		}
		public UInt32 TimersVirtualized
		{
			get
			{
				// start: 18  end: 19  Mask: 1000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 262144) >> 18;
				return (UInt32)value2;
			}
		}
		public UInt32 JobSwapped
		{
			get
			{
				// start: 19  end: 20  Mask: 10000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 524288) >> 19;
				return (UInt32)value2;
			}
		}
		public UInt32 ViolationDetected
		{
			get
			{
				// start: 20  end: 21  Mask: 100000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 1048576) >> 20;
				return (UInt32)value2;
			}
		}
		public UInt32 EmptyJobNotified
		{
			get
			{
				// start: 21  end: 22  Mask: 1000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 2097152) >> 21;
				return (UInt32)value2;
			}
		}
		public UInt32 NoSystemCharge
		{
			get
			{
				// start: 22  end: 23  Mask: 10000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 4194304) >> 22;
				return (UInt32)value2;
			}
		}
		public UInt32 DropNoWakeCharges
		{
			get
			{
				// start: 23  end: 24  Mask: 100000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 8388608) >> 23;
				return (UInt32)value2;
			}
		}
		public UInt32 NoWakeChargePolicyDecided
		{
			get
			{
				// start: 24  end: 25  Mask: 1000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 16777216) >> 24;
				return (UInt32)value2;
			}
		}
		public UInt32 SpareJobFlags
		{
			get
			{
				// start: 25  end: 32  Mask: 11111110000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1192);
				var value2 = (value & 4261412864) >> 25;
				return (UInt32)value2;
			}
		}
		public UInt32 EffectiveHighEdgeFilters { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1196); } }
	}
	#endregion
	#region _PPM_IDLE_STATES
 
	public class _PPM_IDLE_STATES
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PPM_IDLE_STATES(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 792; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PPM_IDLE_STATES"": [ 792, {
				 ""InterfaceVersion"": [ 0, [ ""Byte"", ""null"" ]],
				 ""ForceIdle"": [ 1, [ ""Byte"", ""null"" ]],
				 ""EstimateIdleDuration"": [ 2, [ ""Byte"", ""null"" ]],
				 ""ExitLatencyTraceEnabled"": [ 3, [ ""Byte"", ""null"" ]],
				 ""NonInterruptibleTransition"": [ 4, [ ""Byte"", ""null"" ]],
				 ""ExitLatencyCountdown"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""TargetState"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""ActualState"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""OldState"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""OverrideIndex"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""ProcessorIdleCount"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""Type"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""ReasonFlags"": [ 36, [ ""UInt16"", ""null"" ]],
				 ""InitiateWakeStamp"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""PreviousStatus"": [ 48, [ ""Int32"", ""null"" ]],
				 ""PreviousCancelReason"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""PrimaryProcessorMask"": [ 56, [ ""_KAFFINITY_EX"", ""null"" ]],
				 ""SecondaryProcessorMask"": [ 224, [ ""_KAFFINITY_EX"", ""null"" ]],
				 ""IdlePrepare"": [ 392, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""IdleExecute"": [ 400, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""IdlePreselect"": [ 408, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""IdleTest"": [ 416, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""IdleComplete"": [ 424, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""IdleCancel"": [ 432, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""IdleIsHalted"": [ 440, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""IdleInitiateWake"": [ 448, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""QueryPlatformStateResidency"": [ 456, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PrepareInfo"": [ 464, [ ""_PROCESSOR_IDLE_PREPARE_INFO"", ""null"" ]],
				 ""Tracing"": [ 568, [ ""Pointer"", ""{\""target\"":\""_PERFINFO_PPM_STATE_SELECTION\""}"" ]],
				 ""State"": [ 576, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public Byte InterfaceVersion{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte ForceIdle{ get { return _StructureData[_BufferOffset +1]; } }
		public Byte EstimateIdleDuration{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte ExitLatencyTraceEnabled{ get { return _StructureData[_BufferOffset +3]; } }
		public Byte NonInterruptibleTransition{ get { return _StructureData[_BufferOffset +4]; } }
		public UInt32 ExitLatencyCountdown { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 TargetState { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 ActualState { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 OldState { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 OverrideIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 ProcessorIdleCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 Type { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt16 ReasonFlags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 36); } }
		public UInt64 InitiateWakeStamp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public Int32 PreviousStatus { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 48); } }
		public UInt32 PreviousCancelReason { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public _KAFFINITY_EX PrimaryProcessorMask
		{
			get
			{
				_KAFFINITY_EX returnValue = new _KAFFINITY_EX(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public _KAFFINITY_EX SecondaryProcessorMask
		{
			get
			{
				_KAFFINITY_EX returnValue = new _KAFFINITY_EX(_StructureData, _BufferOffset + 224);
				return returnValue;
			}
		}
		public UInt64 IdlePrepare { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 392); } }
		public UInt64 IdleExecute { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 400); } }
		public UInt64 IdlePreselect { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 408); } }
		public UInt64 IdleTest { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 416); } }
		public UInt64 IdleComplete { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 424); } }
		public UInt64 IdleCancel { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 432); } }
		public UInt64 IdleIsHalted { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 440); } }
		public UInt64 IdleInitiateWake { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 448); } }
		public UInt64 QueryPlatformStateResidency { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 456); } }
		public _PROCESSOR_IDLE_PREPARE_INFO PrepareInfo
		{
			get
			{
				_PROCESSOR_IDLE_PREPARE_INFO returnValue = new _PROCESSOR_IDLE_PREPARE_INFO(_StructureData, _BufferOffset + 464);
				return returnValue;
			}
		}
		public UInt64 Tracing { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 568); } }
		public _PPM_IDLE_STATE[] State
		{
			get
			{
				_PPM_IDLE_STATE[] returnValue = new _PPM_IDLE_STATE[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _PPM_IDLE_STATE(_StructureData, (i * size) + _BufferOffset + 576);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ACTIVATION_CONTEXT_DATA
 
	public class _ACTIVATION_CONTEXT_DATA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ACTIVATION_CONTEXT_DATA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ACTIVATION_CONTEXT_DATA"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _ASSEMBLY_STORAGE_MAP
 
	public class _ASSEMBLY_STORAGE_MAP
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ASSEMBLY_STORAGE_MAP(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ASSEMBLY_STORAGE_MAP"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _FLS_CALLBACK_INFO
 
	public class _FLS_CALLBACK_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _FLS_CALLBACK_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_FLS_CALLBACK_INFO"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _PEB
 
	public class _PEB
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PEB(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 904; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PEB"": [ 904, {
				 ""InheritedAddressSpace"": [ 0, [ ""Byte"", ""null"" ]],
				 ""ReadImageFileExecOptions"": [ 1, [ ""Byte"", ""null"" ]],
				 ""BeingDebugged"": [ 2, [ ""Byte"", ""null"" ]],
				 ""BitField"": [ 3, [ ""Byte"", ""null"" ]],
				 ""ImageUsesLargePages"": [ 3, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""IsProtectedProcess"": [ 3, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""IsImageDynamicallyRelocated"": [ 3, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""SkipPatchingUser32Forwarders"": [ 3, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""IsPackagedProcess"": [ 3, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""IsAppContainer"": [ 3, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""Byte\""}"" ]],
				 ""IsProtectedProcessLight"": [ 3, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""Byte\""}"" ]],
				 ""SpareBits"": [ 3, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""Byte\""}"" ]],
				 ""Padding0"": [ 4, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""Mutant"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ImageBaseAddress"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Ldr"": [ 24, [ ""Pointer"", ""{\""target\"":\""_PEB_LDR_DATA\""}"" ]],
				 ""ProcessParameters"": [ 32, [ ""Pointer"", ""{\""target\"":\""_RTL_USER_PROCESS_PARAMETERS\""}"" ]],
				 ""SubSystemData"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ProcessHeap"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FastPebLock"": [ 56, [ ""Pointer"", ""{\""target\"":\""_RTL_CRITICAL_SECTION\""}"" ]],
				 ""AtlThunkSListPtr"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""IFEOKey"": [ 72, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CrossProcessFlags"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""ProcessInJob"": [ 80, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessInitializing"": [ 80, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessUsingVEH"": [ 80, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessUsingVCH"": [ 80, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessUsingFTH"": [ 80, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""ReservedBits0"": [ 80, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""Padding1"": [ 84, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""KernelCallbackTable"": [ 88, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""UserSharedInfoPtr"": [ 88, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SystemReserved"": [ 96, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""AtlThunkSListPtr32"": [ 100, [ ""UInt32"", ""null"" ]],
				 ""ApiSetMap"": [ 104, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""TlsExpansionCounter"": [ 112, [ ""UInt32"", ""null"" ]],
				 ""Padding2"": [ 116, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""TlsBitmap"": [ 120, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""TlsBitmapBits"": [ 128, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""ReadOnlySharedMemoryBase"": [ 136, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SparePvoid0"": [ 144, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ReadOnlyStaticServerData"": [ 152, [ ""Pointer"", ""{\""target\"":\""void*\""}"" ]],
				 ""AnsiCodePageData"": [ 160, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""OemCodePageData"": [ 168, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""UnicodeCaseTableData"": [ 176, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""NumberOfProcessors"": [ 184, [ ""UInt32"", ""null"" ]],
				 ""NtGlobalFlag"": [ 188, [ ""UInt32"", ""null"" ]],
				 ""CriticalSectionTimeout"": [ 192, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""HeapSegmentReserve"": [ 200, [ ""UInt64"", ""null"" ]],
				 ""HeapSegmentCommit"": [ 208, [ ""UInt64"", ""null"" ]],
				 ""HeapDeCommitTotalFreeThreshold"": [ 216, [ ""UInt64"", ""null"" ]],
				 ""HeapDeCommitFreeBlockThreshold"": [ 224, [ ""UInt64"", ""null"" ]],
				 ""NumberOfHeaps"": [ 232, [ ""UInt32"", ""null"" ]],
				 ""MaximumNumberOfHeaps"": [ 236, [ ""UInt32"", ""null"" ]],
				 ""ProcessHeaps"": [ 240, [ ""Pointer"", ""{\""target\"":\""void*\""}"" ]],
				 ""GdiSharedHandleTable"": [ 248, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ProcessStarterHelper"": [ 256, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""GdiDCAttributeList"": [ 264, [ ""UInt32"", ""null"" ]],
				 ""Padding3"": [ 268, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""LoaderLock"": [ 272, [ ""Pointer"", ""{\""target\"":\""_RTL_CRITICAL_SECTION\""}"" ]],
				 ""OSMajorVersion"": [ 280, [ ""UInt32"", ""null"" ]],
				 ""OSMinorVersion"": [ 284, [ ""UInt32"", ""null"" ]],
				 ""OSBuildNumber"": [ 288, [ ""UInt16"", ""null"" ]],
				 ""OSCSDVersion"": [ 290, [ ""UInt16"", ""null"" ]],
				 ""OSPlatformId"": [ 292, [ ""UInt32"", ""null"" ]],
				 ""ImageSubsystem"": [ 296, [ ""UInt32"", ""null"" ]],
				 ""ImageSubsystemMajorVersion"": [ 300, [ ""UInt32"", ""null"" ]],
				 ""ImageSubsystemMinorVersion"": [ 304, [ ""UInt32"", ""null"" ]],
				 ""Padding4"": [ 308, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""ActiveProcessAffinityMask"": [ 312, [ ""UInt64"", ""null"" ]],
				 ""GdiHandleBuffer"": [ 320, [ ""Array"", ""{\""count\"":60,\""target\"":\""UInt32\""}"" ]],
				 ""PostProcessInitRoutine"": [ 560, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""TlsExpansionBitmap"": [ 568, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""TlsExpansionBitmapBits"": [ 576, [ ""Array"", ""{\""count\"":32,\""target\"":\""UInt32\""}"" ]],
				 ""SessionId"": [ 704, [ ""UInt32"", ""null"" ]],
				 ""Padding5"": [ 708, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""AppCompatFlags"": [ 712, [ ""_ULARGE_INTEGER"", ""null"" ]],
				 ""AppCompatFlagsUser"": [ 720, [ ""_ULARGE_INTEGER"", ""null"" ]],
				 ""pShimData"": [ 728, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""AppCompatInfo"": [ 736, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CSDVersion"": [ 744, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""ActivationContextData"": [ 760, [ ""Pointer"", ""{\""target\"":\""_ACTIVATION_CONTEXT_DATA\""}"" ]],
				 ""ProcessAssemblyStorageMap"": [ 768, [ ""Pointer"", ""{\""target\"":\""_ASSEMBLY_STORAGE_MAP\""}"" ]],
				 ""SystemDefaultActivationContextData"": [ 776, [ ""Pointer"", ""{\""target\"":\""_ACTIVATION_CONTEXT_DATA\""}"" ]],
				 ""SystemAssemblyStorageMap"": [ 784, [ ""Pointer"", ""{\""target\"":\""_ASSEMBLY_STORAGE_MAP\""}"" ]],
				 ""MinimumStackCommit"": [ 792, [ ""UInt64"", ""null"" ]],
				 ""FlsCallback"": [ 800, [ ""Pointer"", ""{\""target\"":\""_FLS_CALLBACK_INFO\""}"" ]],
				 ""FlsListHead"": [ 808, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""FlsBitmap"": [ 824, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FlsBitmapBits"": [ 832, [ ""Array"", ""{\""count\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""FlsHighIndex"": [ 848, [ ""UInt32"", ""null"" ]],
				 ""WerRegistrationData"": [ 856, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""WerShipAssertPtr"": [ 864, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""pUnused"": [ 872, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""pImageHeaderHash"": [ 880, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""TracingFlags"": [ 888, [ ""UInt32"", ""null"" ]],
				 ""HeapTracingEnabled"": [ 888, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""CritSecTracingEnabled"": [ 888, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""LibLoaderTracingEnabled"": [ 888, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""SpareTracingBits"": [ 888, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""Padding6"": [ 892, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""CsrServerReadOnlySharedMemoryBase"": [ 896, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte InheritedAddressSpace{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte ReadImageFileExecOptions{ get { return _StructureData[_BufferOffset +1]; } }
		public Byte BeingDebugged{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte BitField{ get { return _StructureData[_BufferOffset +3]; } }
		public Byte ImageUsesLargePages
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte IsProtectedProcess
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte IsImageDynamicallyRelocated
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte SkipPatchingUser32Forwarders
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte IsPackagedProcess
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 16) >> 4;
				return (Byte)value2;
			}
		}
		public Byte IsAppContainer
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 32) >> 5;
				return (Byte)value2;
			}
		}
		public Byte IsProtectedProcessLight
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 64) >> 6;
				return (Byte)value2;
			}
		}
		public Byte SpareBits
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 128) >> 7;
				return (Byte)value2;
			}
		}
		public Byte[] Padding0
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 4];
				return returnValue;
			}
		}
		public UInt64 Mutant { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 ImageBaseAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Ldr { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 ProcessParameters { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 SubSystemData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 ProcessHeap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 FastPebLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 AtlThunkSListPtr { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 IFEOKey { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt32 CrossProcessFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 ProcessInJob
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 80);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessInitializing
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 80);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessUsingVEH
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 80);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessUsingVCH
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 80);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessUsingFTH
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 80);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 ReservedBits0
		{
			get
			{
				// start: 5  end: 32  Mask: 11111111111111111111111111100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 80);
				var value2 = (value & 4294967264) >> 5;
				return (UInt32)value2;
			}
		}
		public Byte[] Padding1
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 84];
				return returnValue;
			}
		}
		public UInt64 KernelCallbackTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 UserSharedInfoPtr { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt32[] SystemReserved
		{
			get
			{
				UInt32[] returnValue = new UInt32[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 96);
				return returnValue;
			}
		}
		public UInt32 AtlThunkSListPtr32 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 100); } }
		public UInt64 ApiSetMap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public UInt32 TlsExpansionCounter { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 112); } }
		public Byte[] Padding2
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 116];
				return returnValue;
			}
		}
		public UInt64 TlsBitmap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 120); } }
		public UInt32[] TlsBitmapBits
		{
			get
			{
				UInt32[] returnValue = new UInt32[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 128);
				return returnValue;
			}
		}
		public UInt64 ReadOnlySharedMemoryBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 136); } }
		public UInt64 SparePvoid0 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 144); } }
		public UInt64 ReadOnlyStaticServerData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 152); } }
		public UInt64 AnsiCodePageData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public UInt64 OemCodePageData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 168); } }
		public UInt64 UnicodeCaseTableData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 176); } }
		public UInt32 NumberOfProcessors { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 184); } }
		public UInt32 NtGlobalFlag { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 188); } }
		public _LARGE_INTEGER CriticalSectionTimeout
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 192);
				return returnValue;
			}
		}
		public UInt64 HeapSegmentReserve { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 200); } }
		public UInt64 HeapSegmentCommit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 208); } }
		public UInt64 HeapDeCommitTotalFreeThreshold { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 216); } }
		public UInt64 HeapDeCommitFreeBlockThreshold { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 224); } }
		public UInt32 NumberOfHeaps { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 232); } }
		public UInt32 MaximumNumberOfHeaps { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 236); } }
		public UInt64 ProcessHeaps { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 240); } }
		public UInt64 GdiSharedHandleTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 248); } }
		public UInt64 ProcessStarterHelper { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 256); } }
		public UInt32 GdiDCAttributeList { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 264); } }
		public Byte[] Padding3
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 268];
				return returnValue;
			}
		}
		public UInt64 LoaderLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 272); } }
		public UInt32 OSMajorVersion { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 280); } }
		public UInt32 OSMinorVersion { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 284); } }
		public UInt16 OSBuildNumber { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 288); } }
		public UInt16 OSCSDVersion { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 290); } }
		public UInt32 OSPlatformId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 292); } }
		public UInt32 ImageSubsystem { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 296); } }
		public UInt32 ImageSubsystemMajorVersion { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 300); } }
		public UInt32 ImageSubsystemMinorVersion { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 304); } }
		public Byte[] Padding4
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 308];
				return returnValue;
			}
		}
		public UInt64 ActiveProcessAffinityMask { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 312); } }
		public UInt32[] GdiHandleBuffer
		{
			get
			{
				UInt32[] returnValue = new UInt32[60];
				for(int i=0; i<60; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 320);
				return returnValue;
			}
		}
		public UInt64 PostProcessInitRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 560); } }
		public UInt64 TlsExpansionBitmap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 568); } }
		public UInt32[] TlsExpansionBitmapBits
		{
			get
			{
				UInt32[] returnValue = new UInt32[32];
				for(int i=0; i<32; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 576);
				return returnValue;
			}
		}
		public UInt32 SessionId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 704); } }
		public Byte[] Padding5
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 708];
				return returnValue;
			}
		}
		public _ULARGE_INTEGER AppCompatFlags
		{
			get
			{
				_ULARGE_INTEGER returnValue = new _ULARGE_INTEGER(_StructureData, _BufferOffset + 712);
				return returnValue;
			}
		}
		public _ULARGE_INTEGER AppCompatFlagsUser
		{
			get
			{
				_ULARGE_INTEGER returnValue = new _ULARGE_INTEGER(_StructureData, _BufferOffset + 720);
				return returnValue;
			}
		}
		public UInt64 pShimData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 728); } }
		public UInt64 AppCompatInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 736); } }
		public _UNICODE_STRING CSDVersion
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 744);
				return returnValue;
			}
		}
		public UInt64 ActivationContextData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 760); } }
		public UInt64 ProcessAssemblyStorageMap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 768); } }
		public UInt64 SystemDefaultActivationContextData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 776); } }
		public UInt64 SystemAssemblyStorageMap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 784); } }
		public UInt64 MinimumStackCommit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 792); } }
		public UInt64 FlsCallback { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 800); } }
		public _LIST_ENTRY FlsListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 808);
				return returnValue;
			}
		}
		public UInt64 FlsBitmap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 824); } }
		public UInt32[] FlsBitmapBits
		{
			get
			{
				UInt32[] returnValue = new UInt32[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 832);
				return returnValue;
			}
		}
		public UInt32 FlsHighIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 848); } }
		public UInt64 WerRegistrationData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 856); } }
		public UInt64 WerShipAssertPtr { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 864); } }
		public UInt64 pUnused { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 872); } }
		public UInt64 pImageHeaderHash { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 880); } }
		public UInt32 TracingFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 888); } }
		public UInt32 HeapTracingEnabled
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 888);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 CritSecTracingEnabled
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 888);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 LibLoaderTracingEnabled
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 888);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 SpareTracingBits
		{
			get
			{
				// start: 3  end: 32  Mask: 11111111111111111111111111111000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 888);
				var value2 = (value & 4294967288) >> 3;
				return (UInt32)value2;
			}
		}
		public Byte[] Padding6
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 892];
				return returnValue;
			}
		}
		public UInt64 CsrServerReadOnlySharedMemoryBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 896); } }
	}
	#endregion
	#region _HEAP_UCR_DESCRIPTOR
 
	public class _HEAP_UCR_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HEAP_UCR_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HEAP_UCR_DESCRIPTOR"": [ 48, {
				 ""ListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""SegmentEntry"": [ 16, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Address"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Size"": [ 40, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LIST_ENTRY SegmentEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt64 Address { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 Size { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
	}
	#endregion
	#region _ETW_REALTIME_CONSUMER
 
	public class _ETW_REALTIME_CONSUMER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETW_REALTIME_CONSUMER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 152; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETW_REALTIME_CONSUMER"": [ 152, {
				 ""Links"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ProcessHandle"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ProcessObject"": [ 24, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""NextNotDelivered"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""RealtimeConnectContext"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DisconnectEvent"": [ 48, [ ""Pointer"", ""{\""target\"":\""_KEVENT\""}"" ]],
				 ""DataAvailableEvent"": [ 56, [ ""Pointer"", ""{\""target\"":\""_KEVENT\""}"" ]],
				 ""UserBufferCount"": [ 64, [ ""Pointer"", ""{\""target\"":\""unsigned long\""}"" ]],
				 ""UserBufferListHead"": [ 72, [ ""Pointer"", ""{\""target\"":\""_SINGLE_LIST_ENTRY\""}"" ]],
				 ""BuffersLost"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""EmptyBuffersCount"": [ 84, [ ""UInt32"", ""null"" ]],
				 ""LoggerId"": [ 88, [ ""UInt16"", ""null"" ]],
				 ""Flags"": [ 90, [ ""Byte"", ""null"" ]],
				 ""ShutDownRequested"": [ 90, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""NewBuffersLost"": [ 90, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""Disconnected"": [ 90, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""Notified"": [ 90, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""Wow"": [ 90, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""ReservedBufferSpaceBitMap"": [ 96, [ ""_RTL_BITMAP"", ""null"" ]],
				 ""ReservedBufferSpace"": [ 112, [ ""Pointer"", ""{\""target\"":\""Byte\""}"" ]],
				 ""ReservedBufferSpaceSize"": [ 120, [ ""UInt32"", ""null"" ]],
				 ""UserPagesAllocated"": [ 124, [ ""UInt32"", ""null"" ]],
				 ""UserPagesReused"": [ 128, [ ""UInt32"", ""null"" ]],
				 ""EventsLostCount"": [ 136, [ ""Pointer"", ""{\""target\"":\""unsigned long\""}"" ]],
				 ""BuffersLostCount"": [ 144, [ ""Pointer"", ""{\""target\"":\""unsigned long\""}"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY Links
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 ProcessHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 ProcessObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 NextNotDelivered { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 RealtimeConnectContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 DisconnectEvent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 DataAvailableEvent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 UserBufferCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 UserBufferListHead { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt32 BuffersLost { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 EmptyBuffersCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
		public UInt16 LoggerId { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 88); } }
		public Byte Flags{ get { return _StructureData[_BufferOffset +90]; } }
		public Byte ShutDownRequested
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 90];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte NewBuffersLost
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 90];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte Disconnected
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 90];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte Notified
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 90];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte Wow
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				Byte value = _StructureData[_BufferOffset + 90];
				var value2 = (value & 16) >> 4;
				return (Byte)value2;
			}
		}
		public _RTL_BITMAP ReservedBufferSpaceBitMap
		{
			get
			{
				_RTL_BITMAP returnValue = new _RTL_BITMAP(_StructureData, _BufferOffset + 96);
				return returnValue;
			}
		}
		public UInt64 ReservedBufferSpace { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 112); } }
		public UInt32 ReservedBufferSpaceSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 120); } }
		public UInt32 UserPagesAllocated { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 124); } }
		public UInt32 UserPagesReused { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 128); } }
		public UInt64 EventsLostCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 136); } }
		public UInt64 BuffersLostCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 144); } }
	}
	#endregion
	#region _POOL_DESCRIPTOR
 
	public class _POOL_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POOL_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4416; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POOL_DESCRIPTOR"": [ 4416, {
				 ""PoolType"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""_POOL_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""PagedLock"": [ 8, [ ""_FAST_MUTEX"", ""null"" ]],
				 ""NonPagedLock"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""RunningAllocs"": [ 64, [ ""Int32"", ""null"" ]],
				 ""RunningDeAllocs"": [ 68, [ ""Int32"", ""null"" ]],
				 ""TotalBigPages"": [ 72, [ ""Int32"", ""null"" ]],
				 ""ThreadsProcessingDeferrals"": [ 76, [ ""Int32"", ""null"" ]],
				 ""TotalBytes"": [ 80, [ ""UInt64"", ""null"" ]],
				 ""PoolIndex"": [ 128, [ ""UInt32"", ""null"" ]],
				 ""TotalPages"": [ 192, [ ""Int32"", ""null"" ]],
				 ""PendingFrees"": [ 256, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""PendingFreeDepth"": [ 264, [ ""Int32"", ""null"" ]],
				 ""ListHeads"": [ 320, [ ""Array"", ""{\""count\"":256,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public _POOL_TYPE PoolType { get { return (_POOL_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _FAST_MUTEX PagedLock
		{
			get
			{
				_FAST_MUTEX returnValue = new _FAST_MUTEX(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt64 NonPagedLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public Int32 RunningAllocs { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 64); } }
		public Int32 RunningDeAllocs { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 68); } }
		public Int32 TotalBigPages { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 72); } }
		public Int32 ThreadsProcessingDeferrals { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 76); } }
		public UInt64 TotalBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt32 PoolIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 128); } }
		public Int32 TotalPages { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 192); } }
		public _SINGLE_LIST_ENTRY PendingFrees
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 256);
				return returnValue;
			}
		}
		public Int32 PendingFreeDepth { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 264); } }
		public _LIST_ENTRY[] ListHeads
		{
			get
			{
				_LIST_ENTRY[] returnValue = new _LIST_ENTRY[256];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<256; i++ )
					returnValue[i] = new _LIST_ENTRY(_StructureData, (i * size) + _BufferOffset + 320);
				return returnValue;
			}
		}
	}
	#endregion
	#region _BLOB_COUNTERS
 
	public class _BLOB_COUNTERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _BLOB_COUNTERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_BLOB_COUNTERS"": [ 8, {
				 ""CreatedObjects"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""DeletedObjects"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 CreatedObjects { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 DeletedObjects { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _KGATE
 
	public class _KGATE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KGATE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KGATE"": [ 24, {
				 ""Header"": [ 0, [ ""_DISPATCHER_HEADER"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _DISPATCHER_HEADER Header
		{
			get
			{
				_DISPATCHER_HEADER returnValue = new _DISPATCHER_HEADER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _WHEA_ERROR_RECORD_HEADER
 
	public class _WHEA_ERROR_RECORD_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_ERROR_RECORD_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 128; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_ERROR_RECORD_HEADER"": [ 128, {
				 ""Signature"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Revision"": [ 4, [ ""_WHEA_REVISION"", ""null"" ]],
				 ""SignatureEnd"": [ 6, [ ""UInt32"", ""null"" ]],
				 ""SectionCount"": [ 10, [ ""UInt16"", ""null"" ]],
				 ""Severity"": [ 12, [ ""Enumeration"", ""{\""enum_name\"":\""_WHEA_ERROR_SEVERITY\"",\""target\"":\""UInt32\""}"" ]],
				 ""ValidBits"": [ 16, [ ""_WHEA_ERROR_RECORD_HEADER_VALIDBITS"", ""null"" ]],
				 ""Length"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""Timestamp"": [ 24, [ ""_WHEA_TIMESTAMP"", ""null"" ]],
				 ""PlatformId"": [ 32, [ ""_GUID"", ""null"" ]],
				 ""PartitionId"": [ 48, [ ""_GUID"", ""null"" ]],
				 ""CreatorId"": [ 64, [ ""_GUID"", ""null"" ]],
				 ""NotifyType"": [ 80, [ ""_GUID"", ""null"" ]],
				 ""RecordId"": [ 96, [ ""UInt64"", ""null"" ]],
				 ""Flags"": [ 104, [ ""_WHEA_ERROR_RECORD_HEADER_FLAGS"", ""null"" ]],
				 ""PersistenceInfo"": [ 108, [ ""_WHEA_PERSISTENCE_INFO"", ""null"" ]],
				 ""Reserved"": [ 116, [ ""Array"", ""{\""count\"":12,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Signature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _WHEA_REVISION Revision
		{
			get
			{
				_WHEA_REVISION returnValue = new _WHEA_REVISION(_StructureData, _BufferOffset + 4);
				return returnValue;
			}
		}
		public UInt32 SignatureEnd { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 6); } }
		public UInt16 SectionCount { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 10); } }
		public _WHEA_ERROR_SEVERITY Severity { get { return (_WHEA_ERROR_SEVERITY)BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public _WHEA_ERROR_RECORD_HEADER_VALIDBITS ValidBits
		{
			get
			{
				_WHEA_ERROR_RECORD_HEADER_VALIDBITS returnValue = new _WHEA_ERROR_RECORD_HEADER_VALIDBITS(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public _WHEA_TIMESTAMP Timestamp
		{
			get
			{
				_WHEA_TIMESTAMP returnValue = new _WHEA_TIMESTAMP(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public _GUID PlatformId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public _GUID PartitionId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public _GUID CreatorId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public _GUID NotifyType
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 80);
				return returnValue;
			}
		}
		public UInt64 RecordId { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public _WHEA_ERROR_RECORD_HEADER_FLAGS Flags
		{
			get
			{
				_WHEA_ERROR_RECORD_HEADER_FLAGS returnValue = new _WHEA_ERROR_RECORD_HEADER_FLAGS(_StructureData, _BufferOffset + 104);
				return returnValue;
			}
		}
		public _WHEA_PERSISTENCE_INFO PersistenceInfo
		{
			get
			{
				_WHEA_PERSISTENCE_INFO returnValue = new _WHEA_PERSISTENCE_INFO(_StructureData, _BufferOffset + 108);
				return returnValue;
			}
		}
		public Byte[] Reserved
		{
			get
			{
				Byte[] returnValue = new Byte[12];
				for(int i=0; i<12; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 116];
				return returnValue;
			}
		}
	}
	#endregion
	#region _ALPC_PROCESS_CONTEXT
 
	public class _ALPC_PROCESS_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ALPC_PROCESS_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ALPC_PROCESS_CONTEXT"": [ 32, {
				 ""Lock"": [ 0, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""ViewListHead"": [ 8, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""PagedPoolQuotaCache"": [ 24, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _EX_PUSH_LOCK Lock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LIST_ENTRY ViewListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt64 PagedPoolQuotaCache { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _DRIVER_EXTENSION
 
	public class _DRIVER_EXTENSION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DRIVER_EXTENSION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 80; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DRIVER_EXTENSION"": [ 80, {
				 ""DriverObject"": [ 0, [ ""Pointer"", ""{\""target\"":\""_DRIVER_OBJECT\""}"" ]],
				 ""AddDevice"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Count"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""ServiceKeyName"": [ 24, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""ClientDriverExtension"": [ 40, [ ""Pointer"", ""{\""target\"":\""_IO_CLIENT_EXTENSION\""}"" ]],
				 ""FsFilterCallbacks"": [ 48, [ ""Pointer"", ""{\""target\"":\""_FS_FILTER_CALLBACKS\""}"" ]],
				 ""KseCallbacks"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DvCallbacks"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""VerifierContext"": [ 72, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 DriverObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 AddDevice { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 Count { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public _UNICODE_STRING ServiceKeyName
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt64 ClientDriverExtension { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 FsFilterCallbacks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 KseCallbacks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 DvCallbacks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 VerifierContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
	}
	#endregion
	#region _PRIVILEGE_SET
 
	public class _PRIVILEGE_SET
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PRIVILEGE_SET(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 20; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PRIVILEGE_SET"": [ 20, {
				 ""PrivilegeCount"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Control"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Privilege"": [ 8, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 PrivilegeCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Control { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _LUID_AND_ATTRIBUTES[] Privilege
		{
			get
			{
				_LUID_AND_ATTRIBUTES[] returnValue = new _LUID_AND_ATTRIBUTES[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _LUID_AND_ATTRIBUTES(_StructureData, (i * size) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _WHEAP_WORK_QUEUE
 
	public class _WHEAP_WORK_QUEUE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEAP_WORK_QUEUE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 136; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEAP_WORK_QUEUE"": [ 136, {
				 ""ListHead"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ListLock"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""ItemCount"": [ 24, [ ""Int32"", ""null"" ]],
				 ""Dpc"": [ 32, [ ""_KDPC"", ""null"" ]],
				 ""WorkItem"": [ 96, [ ""_WORK_QUEUE_ITEM"", ""null"" ]],
				 ""WorkRoutine"": [ 128, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 ListLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public Int32 ItemCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 24); } }
		public _KDPC Dpc
		{
			get
			{
				_KDPC returnValue = new _KDPC(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public _WORK_QUEUE_ITEM WorkItem
		{
			get
			{
				_WORK_QUEUE_ITEM returnValue = new _WORK_QUEUE_ITEM(_StructureData, _BufferOffset + 96);
				return returnValue;
			}
		}
		public UInt64 WorkRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 128); } }
	}
	#endregion
	#region _CM_NOTIFY_BLOCK
 
	public class _CM_NOTIFY_BLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_NOTIFY_BLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 88; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_NOTIFY_BLOCK"": [ 88, {
				 ""HiveList"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""PostList"": [ 16, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""KeyControlBlock"": [ 32, [ ""Pointer"", ""{\""target\"":\""_CM_KEY_CONTROL_BLOCK\""}"" ]],
				 ""KeyBody"": [ 40, [ ""Pointer"", ""{\""target\"":\""_CM_KEY_BODY\""}"" ]],
				 ""Filter"": [ 48, [ ""BitField"", ""{\""end_bit\"":30,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""WatchTree"": [ 48, [ ""BitField"", ""{\""end_bit\"":31,\""start_bit\"":30,\""target\"":\""UInt32\""}"" ]],
				 ""NotifyPending"": [ 48, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":31,\""target\"":\""UInt32\""}"" ]],
				 ""SubjectContext"": [ 56, [ ""_SECURITY_SUBJECT_CONTEXT"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY HiveList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LIST_ENTRY PostList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt64 KeyControlBlock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 KeyBody { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt32 Filter
		{
			get
			{
				// start: 0  end: 30  Mask: 111111111111111111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 48);
				var value2 = (value & 1073741823) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 WatchTree
		{
			get
			{
				// start: 30  end: 31  Mask: 1000000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 48);
				var value2 = (value & 1073741824) >> 30;
				return (UInt32)value2;
			}
		}
		public UInt32 NotifyPending
		{
			get
			{
				// start: 31  end: 32  Mask: 10000000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 48);
				var value2 = (value & 2147483648) >> 31;
				return (UInt32)value2;
			}
		}
		public _SECURITY_SUBJECT_CONTEXT SubjectContext
		{
			get
			{
				_SECURITY_SUBJECT_CONTEXT returnValue = new _SECURITY_SUBJECT_CONTEXT(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
	}
	#endregion
	#region _KINTERRUPT
 
	public class _KINTERRUPT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KINTERRUPT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 256; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KINTERRUPT"": [ 256, {
				 ""Type"": [ 0, [ ""Int16"", ""null"" ]],
				 ""Size"": [ 2, [ ""Int16"", ""null"" ]],
				 ""InterruptListEntry"": [ 8, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ServiceRoutine"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""MessageServiceRoutine"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""MessageIndex"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""ServiceContext"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SpinLock"": [ 56, [ ""UInt64"", ""null"" ]],
				 ""TickCount"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""ActualLock"": [ 72, [ ""Pointer"", ""{\""target\"":\""UInt64\""}"" ]],
				 ""DispatchAddress"": [ 80, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Vector"": [ 88, [ ""UInt32"", ""null"" ]],
				 ""Irql"": [ 92, [ ""Byte"", ""null"" ]],
				 ""SynchronizeIrql"": [ 93, [ ""Byte"", ""null"" ]],
				 ""FloatingSave"": [ 94, [ ""Byte"", ""null"" ]],
				 ""Connected"": [ 95, [ ""Byte"", ""null"" ]],
				 ""Number"": [ 96, [ ""UInt32"", ""null"" ]],
				 ""ShareVector"": [ 100, [ ""Byte"", ""null"" ]],
				 ""EmulateActiveBoth"": [ 101, [ ""Byte"", ""null"" ]],
				 ""ActiveCount"": [ 102, [ ""UInt16"", ""null"" ]],
				 ""InternalState"": [ 104, [ ""Int32"", ""null"" ]],
				 ""Mode"": [ 108, [ ""Enumeration"", ""{\""enum_name\"":\""_KINTERRUPT_MODE\"",\""target\"":\""UInt32\""}"" ]],
				 ""Polarity"": [ 112, [ ""Enumeration"", ""{\""enum_name\"":\""_KINTERRUPT_POLARITY\"",\""target\"":\""UInt32\""}"" ]],
				 ""ServiceCount"": [ 116, [ ""UInt32"", ""null"" ]],
				 ""DispatchCount"": [ 120, [ ""UInt32"", ""null"" ]],
				 ""PassiveEvent"": [ 128, [ ""Pointer"", ""{\""target\"":\""_KEVENT\""}"" ]],
				 ""TrapFrame"": [ 136, [ ""Pointer"", ""{\""target\"":\""_KTRAP_FRAME\""}"" ]],
				 ""DispatchCode"": [ 144, [ ""Array"", ""{\""count\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""DisconnectData"": [ 160, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ServiceThread"": [ 168, [ ""Pointer"", ""{\""target\"":\""_KTHREAD\""}"" ]],
				 ""IsrDpcStats"": [ 176, [ ""_ISRDPCSTATS"", ""null"" ]],
				 ""ConnectionData"": [ 240, [ ""Pointer"", ""{\""target\"":\""_INTERRUPT_CONNECTION_DATA\""}"" ]],
				 ""Padding"": [ 248, [ ""Array"", ""{\""count\"":8,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public Int16 Type { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 0); } }
		public Int16 Size { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 2); } }
		public _LIST_ENTRY InterruptListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt64 ServiceRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 MessageServiceRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt32 MessageIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt64 ServiceContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 SpinLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt32 TickCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt64 ActualLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 DispatchAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt32 Vector { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 88); } }
		public Byte Irql{ get { return _StructureData[_BufferOffset +92]; } }
		public Byte SynchronizeIrql{ get { return _StructureData[_BufferOffset +93]; } }
		public Byte FloatingSave{ get { return _StructureData[_BufferOffset +94]; } }
		public Byte Connected{ get { return _StructureData[_BufferOffset +95]; } }
		public UInt32 Number { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 96); } }
		public Byte ShareVector{ get { return _StructureData[_BufferOffset +100]; } }
		public Byte EmulateActiveBoth{ get { return _StructureData[_BufferOffset +101]; } }
		public UInt16 ActiveCount { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 102); } }
		public Int32 InternalState { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 104); } }
		public _KINTERRUPT_MODE Mode { get { return (_KINTERRUPT_MODE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 108); } }
		public _KINTERRUPT_POLARITY Polarity { get { return (_KINTERRUPT_POLARITY)BitConverter.ToUInt32(_StructureData, _BufferOffset + 112); } }
		public UInt32 ServiceCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 116); } }
		public UInt32 DispatchCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 120); } }
		public UInt64 PassiveEvent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 128); } }
		public UInt64 TrapFrame { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 136); } }
		public UInt32[] DispatchCode
		{
			get
			{
				UInt32[] returnValue = new UInt32[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 144);
				return returnValue;
			}
		}
		public UInt64 DisconnectData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public UInt64 ServiceThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 168); } }
		public _ISRDPCSTATS IsrDpcStats
		{
			get
			{
				_ISRDPCSTATS returnValue = new _ISRDPCSTATS(_StructureData, _BufferOffset + 176);
				return returnValue;
			}
		}
		public UInt64 ConnectionData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 240); } }
		public Byte[] Padding
		{
			get
			{
				Byte[] returnValue = new Byte[8];
				for(int i=0; i<8; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 248];
				return returnValue;
			}
		}
	}
	#endregion
	#region _AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION
 
	public class _AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_AUTHZBASEP_SECURITY_ATTRIBUTES_INFORMATION"": [ 48, {
				 ""SecurityAttributeCount"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""SecurityAttributesList"": [ 8, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""WorkingSecurityAttributeCount"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""WorkingSecurityAttributesList"": [ 32, [ ""_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 SecurityAttributeCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _LIST_ENTRY SecurityAttributesList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt32 WorkingSecurityAttributeCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public _LIST_ENTRY WorkingSecurityAttributesList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
	}
	#endregion
	#region _IMAGE_FILE_HEADER
 
	public class _IMAGE_FILE_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IMAGE_FILE_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 20; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IMAGE_FILE_HEADER"": [ 20, {
				 ""Machine"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""NumberOfSections"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""TimeDateStamp"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""PointerToSymbolTable"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""NumberOfSymbols"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""SizeOfOptionalHeader"": [ 16, [ ""UInt16"", ""null"" ]],
				 ""Characteristics"": [ 18, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Machine { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 NumberOfSections { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt32 TimeDateStamp { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 PointerToSymbolTable { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 NumberOfSymbols { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt16 SizeOfOptionalHeader { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 16); } }
		public UInt16 Characteristics { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 18); } }
	}
	#endregion
	#region _HIVE_LIST_ENTRY
 
	public class _HIVE_LIST_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HIVE_LIST_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 136; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HIVE_LIST_ENTRY"": [ 136, {
				 ""FileName"": [ 0, [ ""Pointer"", ""{\""target\"":\""UInt16\""}"" ]],
				 ""BaseName"": [ 8, [ ""Pointer"", ""{\""target\"":\""UInt16\""}"" ]],
				 ""RegRootName"": [ 16, [ ""Pointer"", ""{\""target\"":\""UInt16\""}"" ]],
				 ""CmHive"": [ 24, [ ""Pointer"", ""{\""target\"":\""_CMHIVE\""}"" ]],
				 ""HHiveFlags"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""CmHiveFlags"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""CmKcbCacheSize"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""CmHive2"": [ 48, [ ""Pointer"", ""{\""target\"":\""_CMHIVE\""}"" ]],
				 ""HiveMounted"": [ 56, [ ""Byte"", ""null"" ]],
				 ""ThreadFinished"": [ 57, [ ""Byte"", ""null"" ]],
				 ""ThreadStarted"": [ 58, [ ""Byte"", ""null"" ]],
				 ""Allocate"": [ 59, [ ""Byte"", ""null"" ]],
				 ""WinPERequired"": [ 60, [ ""Byte"", ""null"" ]],
				 ""StartEvent"": [ 64, [ ""_KEVENT"", ""null"" ]],
				 ""FinishedEvent"": [ 88, [ ""_KEVENT"", ""null"" ]],
				 ""MountLock"": [ 112, [ ""_KEVENT"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 FileName { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 BaseName { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 RegRootName { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 CmHive { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt32 HHiveFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 CmHiveFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public UInt32 CmKcbCacheSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt64 CmHive2 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public Byte HiveMounted{ get { return _StructureData[_BufferOffset +56]; } }
		public Byte ThreadFinished{ get { return _StructureData[_BufferOffset +57]; } }
		public Byte ThreadStarted{ get { return _StructureData[_BufferOffset +58]; } }
		public Byte Allocate{ get { return _StructureData[_BufferOffset +59]; } }
		public Byte WinPERequired{ get { return _StructureData[_BufferOffset +60]; } }
		public _KEVENT StartEvent
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public _KEVENT FinishedEvent
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 88);
				return returnValue;
			}
		}
		public _KEVENT MountLock
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 112);
				return returnValue;
			}
		}
	}
	#endregion
	#region _HMAP_DIRECTORY
 
	public class _HMAP_DIRECTORY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HMAP_DIRECTORY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8192; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HMAP_DIRECTORY"": [ 8192, {
				 ""Directory"": [ 0, [ ""Array"", ""{\""count\"":1024,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""_HMAP_TABLE\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt64[] Directory
		{
			get
			{
				UInt64[] returnValue = new UInt64[1024];
				int size = 8;
				for(int i=0; i<1024; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _CONTEXT
 
	public class _CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1232; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CONTEXT"": [ 1232, {
				 ""P1Home"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""P2Home"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""P3Home"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""P4Home"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""P5Home"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""P6Home"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""ContextFlags"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""MxCsr"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""SegCs"": [ 56, [ ""UInt16"", ""null"" ]],
				 ""SegDs"": [ 58, [ ""UInt16"", ""null"" ]],
				 ""SegEs"": [ 60, [ ""UInt16"", ""null"" ]],
				 ""SegFs"": [ 62, [ ""UInt16"", ""null"" ]],
				 ""SegGs"": [ 64, [ ""UInt16"", ""null"" ]],
				 ""SegSs"": [ 66, [ ""UInt16"", ""null"" ]],
				 ""EFlags"": [ 68, [ ""UInt32"", ""null"" ]],
				 ""Dr0"": [ 72, [ ""UInt64"", ""null"" ]],
				 ""Dr1"": [ 80, [ ""UInt64"", ""null"" ]],
				 ""Dr2"": [ 88, [ ""UInt64"", ""null"" ]],
				 ""Dr3"": [ 96, [ ""UInt64"", ""null"" ]],
				 ""Dr6"": [ 104, [ ""UInt64"", ""null"" ]],
				 ""Dr7"": [ 112, [ ""UInt64"", ""null"" ]],
				 ""Rax"": [ 120, [ ""UInt64"", ""null"" ]],
				 ""Rcx"": [ 128, [ ""UInt64"", ""null"" ]],
				 ""Rdx"": [ 136, [ ""UInt64"", ""null"" ]],
				 ""Rbx"": [ 144, [ ""UInt64"", ""null"" ]],
				 ""Rsp"": [ 152, [ ""UInt64"", ""null"" ]],
				 ""Rbp"": [ 160, [ ""UInt64"", ""null"" ]],
				 ""Rsi"": [ 168, [ ""UInt64"", ""null"" ]],
				 ""Rdi"": [ 176, [ ""UInt64"", ""null"" ]],
				 ""R8"": [ 184, [ ""UInt64"", ""null"" ]],
				 ""R9"": [ 192, [ ""UInt64"", ""null"" ]],
				 ""R10"": [ 200, [ ""UInt64"", ""null"" ]],
				 ""R11"": [ 208, [ ""UInt64"", ""null"" ]],
				 ""R12"": [ 216, [ ""UInt64"", ""null"" ]],
				 ""R13"": [ 224, [ ""UInt64"", ""null"" ]],
				 ""R14"": [ 232, [ ""UInt64"", ""null"" ]],
				 ""R15"": [ 240, [ ""UInt64"", ""null"" ]],
				 ""Rip"": [ 248, [ ""UInt64"", ""null"" ]],
				 ""FltSave"": [ 256, [ ""_XSAVE_FORMAT"", ""null"" ]],
				 ""Header"": [ 256, [ ""Array"", ""{\""count\"":2,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""Legacy"": [ 288, [ ""Array"", ""{\""count\"":8,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""Xmm0"": [ 416, [ ""_M128A"", ""null"" ]],
				 ""Xmm1"": [ 432, [ ""_M128A"", ""null"" ]],
				 ""Xmm2"": [ 448, [ ""_M128A"", ""null"" ]],
				 ""Xmm3"": [ 464, [ ""_M128A"", ""null"" ]],
				 ""Xmm4"": [ 480, [ ""_M128A"", ""null"" ]],
				 ""Xmm5"": [ 496, [ ""_M128A"", ""null"" ]],
				 ""Xmm6"": [ 512, [ ""_M128A"", ""null"" ]],
				 ""Xmm7"": [ 528, [ ""_M128A"", ""null"" ]],
				 ""Xmm8"": [ 544, [ ""_M128A"", ""null"" ]],
				 ""Xmm9"": [ 560, [ ""_M128A"", ""null"" ]],
				 ""Xmm10"": [ 576, [ ""_M128A"", ""null"" ]],
				 ""Xmm11"": [ 592, [ ""_M128A"", ""null"" ]],
				 ""Xmm12"": [ 608, [ ""_M128A"", ""null"" ]],
				 ""Xmm13"": [ 624, [ ""_M128A"", ""null"" ]],
				 ""Xmm14"": [ 640, [ ""_M128A"", ""null"" ]],
				 ""Xmm15"": [ 656, [ ""_M128A"", ""null"" ]],
				 ""VectorRegister"": [ 768, [ ""Array"", ""{\""count\"":26,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""VectorControl"": [ 1184, [ ""UInt64"", ""null"" ]],
				 ""DebugControl"": [ 1192, [ ""UInt64"", ""null"" ]],
				 ""LastBranchToRip"": [ 1200, [ ""UInt64"", ""null"" ]],
				 ""LastBranchFromRip"": [ 1208, [ ""UInt64"", ""null"" ]],
				 ""LastExceptionToRip"": [ 1216, [ ""UInt64"", ""null"" ]],
				 ""LastExceptionFromRip"": [ 1224, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 P1Home { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 P2Home { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 P3Home { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 P4Home { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 P5Home { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 P6Home { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt32 ContextFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public UInt32 MxCsr { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public UInt16 SegCs { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 56); } }
		public UInt16 SegDs { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 58); } }
		public UInt16 SegEs { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 60); } }
		public UInt16 SegFs { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 62); } }
		public UInt16 SegGs { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 64); } }
		public UInt16 SegSs { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 66); } }
		public UInt32 EFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 68); } }
		public UInt64 Dr0 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 Dr1 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 Dr2 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 Dr3 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt64 Dr6 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public UInt64 Dr7 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 112); } }
		public UInt64 Rax { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 120); } }
		public UInt64 Rcx { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 128); } }
		public UInt64 Rdx { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 136); } }
		public UInt64 Rbx { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 144); } }
		public UInt64 Rsp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 152); } }
		public UInt64 Rbp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public UInt64 Rsi { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 168); } }
		public UInt64 Rdi { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 176); } }
		public UInt64 R8 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 184); } }
		public UInt64 R9 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 192); } }
		public UInt64 R10 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 200); } }
		public UInt64 R11 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 208); } }
		public UInt64 R12 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 216); } }
		public UInt64 R13 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 224); } }
		public UInt64 R14 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 232); } }
		public UInt64 R15 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 240); } }
		public UInt64 Rip { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 248); } }
		public _XSAVE_FORMAT FltSave
		{
			get
			{
				_XSAVE_FORMAT returnValue = new _XSAVE_FORMAT(_StructureData, _BufferOffset + 256);
				return returnValue;
			}
		}
		public _M128A[] Header
		{
			get
			{
				_M128A[] returnValue = new _M128A[2];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<2; i++ )
					returnValue[i] = new _M128A(_StructureData, (i * size) + _BufferOffset + 256);
				return returnValue;
			}
		}
		public _M128A[] Legacy
		{
			get
			{
				_M128A[] returnValue = new _M128A[8];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<8; i++ )
					returnValue[i] = new _M128A(_StructureData, (i * size) + _BufferOffset + 288);
				return returnValue;
			}
		}
		public _M128A Xmm0
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 416);
				return returnValue;
			}
		}
		public _M128A Xmm1
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 432);
				return returnValue;
			}
		}
		public _M128A Xmm2
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 448);
				return returnValue;
			}
		}
		public _M128A Xmm3
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 464);
				return returnValue;
			}
		}
		public _M128A Xmm4
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 480);
				return returnValue;
			}
		}
		public _M128A Xmm5
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 496);
				return returnValue;
			}
		}
		public _M128A Xmm6
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 512);
				return returnValue;
			}
		}
		public _M128A Xmm7
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 528);
				return returnValue;
			}
		}
		public _M128A Xmm8
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 544);
				return returnValue;
			}
		}
		public _M128A Xmm9
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 560);
				return returnValue;
			}
		}
		public _M128A Xmm10
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 576);
				return returnValue;
			}
		}
		public _M128A Xmm11
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 592);
				return returnValue;
			}
		}
		public _M128A Xmm12
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 608);
				return returnValue;
			}
		}
		public _M128A Xmm13
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 624);
				return returnValue;
			}
		}
		public _M128A Xmm14
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 640);
				return returnValue;
			}
		}
		public _M128A Xmm15
		{
			get
			{
				_M128A returnValue = new _M128A(_StructureData, _BufferOffset + 656);
				return returnValue;
			}
		}
		public _M128A[] VectorRegister
		{
			get
			{
				_M128A[] returnValue = new _M128A[26];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<26; i++ )
					returnValue[i] = new _M128A(_StructureData, (i * size) + _BufferOffset + 768);
				return returnValue;
			}
		}
		public UInt64 VectorControl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1184); } }
		public UInt64 DebugControl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1192); } }
		public UInt64 LastBranchToRip { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1200); } }
		public UInt64 LastBranchFromRip { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1208); } }
		public UInt64 LastExceptionToRip { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1216); } }
		public UInt64 LastExceptionFromRip { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1224); } }
	}
	#endregion
	#region _ALPC_HANDLE_TABLE
 
	public class _ALPC_HANDLE_TABLE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ALPC_HANDLE_TABLE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ALPC_HANDLE_TABLE"": [ 24, {
				 ""Handles"": [ 0, [ ""Pointer"", ""{\""target\"":\""_ALPC_HANDLE_ENTRY\""}"" ]],
				 ""TotalHandles"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Flags"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""Lock"": [ 16, [ ""_EX_PUSH_LOCK"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Handles { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 TotalHandles { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public _EX_PUSH_LOCK Lock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_32089
 
	public class _UNNAMED_32089
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_32089(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 932; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_32089"": [ 932, {
				 ""XpfMceDescriptor"": [ 0, [ ""_WHEA_XPF_MCE_DESCRIPTOR"", ""null"" ]],
				 ""XpfCmcDescriptor"": [ 0, [ ""_WHEA_XPF_CMC_DESCRIPTOR"", ""null"" ]],
				 ""XpfNmiDescriptor"": [ 0, [ ""_WHEA_XPF_NMI_DESCRIPTOR"", ""null"" ]],
				 ""IpfMcaDescriptor"": [ 0, [ ""_WHEA_IPF_MCA_DESCRIPTOR"", ""null"" ]],
				 ""IpfCmcDescriptor"": [ 0, [ ""_WHEA_IPF_CMC_DESCRIPTOR"", ""null"" ]],
				 ""IpfCpeDescriptor"": [ 0, [ ""_WHEA_IPF_CPE_DESCRIPTOR"", ""null"" ]],
				 ""AerRootportDescriptor"": [ 0, [ ""_WHEA_AER_ROOTPORT_DESCRIPTOR"", ""null"" ]],
				 ""AerEndpointDescriptor"": [ 0, [ ""_WHEA_AER_ENDPOINT_DESCRIPTOR"", ""null"" ]],
				 ""AerBridgeDescriptor"": [ 0, [ ""_WHEA_AER_BRIDGE_DESCRIPTOR"", ""null"" ]],
				 ""GenErrDescriptor"": [ 0, [ ""_WHEA_GENERIC_ERROR_DESCRIPTOR"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _WHEA_XPF_MCE_DESCRIPTOR XpfMceDescriptor
		{
			get
			{
				_WHEA_XPF_MCE_DESCRIPTOR returnValue = new _WHEA_XPF_MCE_DESCRIPTOR(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _WHEA_XPF_CMC_DESCRIPTOR XpfCmcDescriptor
		{
			get
			{
				_WHEA_XPF_CMC_DESCRIPTOR returnValue = new _WHEA_XPF_CMC_DESCRIPTOR(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _WHEA_XPF_NMI_DESCRIPTOR XpfNmiDescriptor
		{
			get
			{
				_WHEA_XPF_NMI_DESCRIPTOR returnValue = new _WHEA_XPF_NMI_DESCRIPTOR(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _WHEA_IPF_MCA_DESCRIPTOR IpfMcaDescriptor
		{
			get
			{
				_WHEA_IPF_MCA_DESCRIPTOR returnValue = new _WHEA_IPF_MCA_DESCRIPTOR(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _WHEA_IPF_CMC_DESCRIPTOR IpfCmcDescriptor
		{
			get
			{
				_WHEA_IPF_CMC_DESCRIPTOR returnValue = new _WHEA_IPF_CMC_DESCRIPTOR(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _WHEA_IPF_CPE_DESCRIPTOR IpfCpeDescriptor
		{
			get
			{
				_WHEA_IPF_CPE_DESCRIPTOR returnValue = new _WHEA_IPF_CPE_DESCRIPTOR(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _WHEA_AER_ROOTPORT_DESCRIPTOR AerRootportDescriptor
		{
			get
			{
				_WHEA_AER_ROOTPORT_DESCRIPTOR returnValue = new _WHEA_AER_ROOTPORT_DESCRIPTOR(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _WHEA_AER_ENDPOINT_DESCRIPTOR AerEndpointDescriptor
		{
			get
			{
				_WHEA_AER_ENDPOINT_DESCRIPTOR returnValue = new _WHEA_AER_ENDPOINT_DESCRIPTOR(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _WHEA_AER_BRIDGE_DESCRIPTOR AerBridgeDescriptor
		{
			get
			{
				_WHEA_AER_BRIDGE_DESCRIPTOR returnValue = new _WHEA_AER_BRIDGE_DESCRIPTOR(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _WHEA_GENERIC_ERROR_DESCRIPTOR GenErrDescriptor
		{
			get
			{
				_WHEA_GENERIC_ERROR_DESCRIPTOR returnValue = new _WHEA_GENERIC_ERROR_DESCRIPTOR(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _WHEA_ERROR_SOURCE_DESCRIPTOR
 
	public class _WHEA_ERROR_SOURCE_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_ERROR_SOURCE_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 972; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_ERROR_SOURCE_DESCRIPTOR"": [ 972, {
				 ""Length"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Version"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Type"": [ 8, [ ""Enumeration"", ""{\""enum_name\"":\""_WHEA_ERROR_SOURCE_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""State"": [ 12, [ ""Enumeration"", ""{\""enum_name\"":\""_WHEA_ERROR_SOURCE_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""MaxRawDataLength"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""NumRecordsToPreallocate"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""MaxSectionsPerRecord"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""ErrorSourceId"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""PlatformErrorSourceId"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""Flags"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""Info"": [ 40, [ ""_UNNAMED_32089"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Version { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _WHEA_ERROR_SOURCE_TYPE Type { get { return (_WHEA_ERROR_SOURCE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public _WHEA_ERROR_SOURCE_STATE State { get { return (_WHEA_ERROR_SOURCE_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 MaxRawDataLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 NumRecordsToPreallocate { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 MaxSectionsPerRecord { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 ErrorSourceId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 PlatformErrorSourceId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public _UNNAMED_32089 Info
		{
			get
			{
				_UNNAMED_32089 returnValue = new _UNNAMED_32089(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MMPTE_HARDWARE
 
	public class _MMPTE_HARDWARE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMPTE_HARDWARE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMPTE_HARDWARE"": [ 8, {
				 ""Valid"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""Dirty1"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt64\""}"" ]],
				 ""Owner"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt64\""}"" ]],
				 ""WriteThrough"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt64\""}"" ]],
				 ""CacheDisable"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt64\""}"" ]],
				 ""Accessed"": [ 0, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt64\""}"" ]],
				 ""Dirty"": [ 0, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt64\""}"" ]],
				 ""LargePage"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt64\""}"" ]],
				 ""Global"": [ 0, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt64\""}"" ]],
				 ""CopyOnWrite"": [ 0, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt64\""}"" ]],
				 ""Unused"": [ 0, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt64\""}"" ]],
				 ""Write"": [ 0, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt64\""}"" ]],
				 ""PageFrameNumber"": [ 0, [ ""BitField"", ""{\""end_bit\"":48,\""start_bit\"":12,\""target\"":\""UInt64\""}"" ]],
				 ""reserved1"": [ 0, [ ""BitField"", ""{\""end_bit\"":52,\""start_bit\"":48,\""target\"":\""UInt64\""}"" ]],
				 ""SoftwareWsIndex"": [ 0, [ ""BitField"", ""{\""end_bit\"":63,\""start_bit\"":52,\""target\"":\""UInt64\""}"" ]],
				 ""NoExecute"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":63,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Valid
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 Dirty1
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt64)value2;
			}
		}
		public UInt64 Owner
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt64)value2;
			}
		}
		public UInt64 WriteThrough
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8) >> 3;
				return (UInt64)value2;
			}
		}
		public UInt64 CacheDisable
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16) >> 4;
				return (UInt64)value2;
			}
		}
		public UInt64 Accessed
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 32) >> 5;
				return (UInt64)value2;
			}
		}
		public UInt64 Dirty
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 64) >> 6;
				return (UInt64)value2;
			}
		}
		public UInt64 LargePage
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 128) >> 7;
				return (UInt64)value2;
			}
		}
		public UInt64 Global
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 256) >> 8;
				return (UInt64)value2;
			}
		}
		public UInt64 CopyOnWrite
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 512) >> 9;
				return (UInt64)value2;
			}
		}
		public UInt64 Unused
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1024) >> 10;
				return (UInt64)value2;
			}
		}
		public UInt64 Write
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2048) >> 11;
				return (UInt64)value2;
			}
		}
		public UInt64 PageFrameNumber
		{
			get
			{
				// start: 12  end: 48  Mask: 000000000000000011111111111111111111000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294963200) >> 12;
				return (UInt64)value2;
			}
		}
		public UInt64 reserved1
		{
			get
			{
				// start: 48  end: 52  Mask: 0000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 48;
				return (UInt64)value2;
			}
		}
		public UInt64 SoftwareWsIndex
		{
			get
			{
				// start: 52  end: 63  Mask: 000000000000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 52;
				return (UInt64)value2;
			}
		}
		public UInt64 NoExecute
		{
			get
			{
				// start: 63  end: 64  Mask: 0000000000000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 63;
				return (UInt64)value2;
			}
		}
	}
	#endregion
	#region _IO_COMPLETION_CONTEXT
 
	public class _IO_COMPLETION_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IO_COMPLETION_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IO_COMPLETION_CONTEXT"": [ 16, {
				 ""Port"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Key"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Port { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Key { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _EX_WORK_QUEUE
 
	public class _EX_WORK_QUEUE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EX_WORK_QUEUE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 720; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EX_WORK_QUEUE"": [ 720, {
				 ""WorkPriQueue"": [ 0, [ ""_KPRIQUEUE"", ""null"" ]],
				 ""Node"": [ 688, [ ""Pointer"", ""{\""target\"":\""_ENODE\""}"" ]],
				 ""WorkItemsProcessed"": [ 696, [ ""UInt32"", ""null"" ]],
				 ""WorkItemsProcessedLastPass"": [ 700, [ ""UInt32"", ""null"" ]],
				 ""ThreadCount"": [ 704, [ ""Int32"", ""null"" ]],
				 ""MinThreads"": [ 708, [ ""BitField"", ""{\""end_bit\"":31,\""start_bit\"":0,\""target\"":\""Int32\""}"" ]],
				 ""TryFailed"": [ 708, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":31,\""target\"":\""UInt32\""}"" ]],
				 ""MaxThreads"": [ 712, [ ""Int32"", ""null"" ]],
				 ""QueueIndex"": [ 716, [ ""Enumeration"", ""{\""enum_name\"":\""_EXQUEUEINDEX\"",\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public _KPRIQUEUE WorkPriQueue
		{
			get
			{
				_KPRIQUEUE returnValue = new _KPRIQUEUE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Node { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 688); } }
		public UInt32 WorkItemsProcessed { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 696); } }
		public UInt32 WorkItemsProcessedLastPass { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 700); } }
		public Int32 ThreadCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 704); } }
		public UInt32 MinThreads
		{
			get
			{
				// start: 0  end: 31  Mask: 1111111111111111111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 708);
				var value2 = (value & 2147483647) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 TryFailed
		{
			get
			{
				// start: 31  end: 32  Mask: 10000000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 708);
				var value2 = (value & 2147483648) >> 31;
				return (UInt32)value2;
			}
		}
		public Int32 MaxThreads { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 712); } }
		public _EXQUEUEINDEX QueueIndex { get { return (_EXQUEUEINDEX)BitConverter.ToUInt32(_StructureData, _BufferOffset + 716); } }
	}
	#endregion
	#region _IOV_FORCED_PENDING_TRACE
 
	public class _IOV_FORCED_PENDING_TRACE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IOV_FORCED_PENDING_TRACE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 512; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IOV_FORCED_PENDING_TRACE"": [ 512, {
				 ""Irp"": [ 0, [ ""Pointer"", ""{\""target\"":\""_IRP\""}"" ]],
				 ""Thread"": [ 8, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]],
				 ""StackTrace"": [ 16, [ ""Array"", ""{\""count\"":62,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Irp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Thread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64[] StackTrace
		{
			get
			{
				UInt64[] returnValue = new UInt64[62];
				int size = 8;
				for(int i=0; i<62; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _IOP_IRP_EXTENSION_STATUS
 
	public class _IOP_IRP_EXTENSION_STATUS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IOP_IRP_EXTENSION_STATUS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IOP_IRP_EXTENSION_STATUS"": [ 12, {
				 ""Flags"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ActivityId"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""IoTracking"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 ActivityId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 IoTracking { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _DBGKD_SET_CONTEXT
 
	public class _DBGKD_SET_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_SET_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_SET_CONTEXT"": [ 4, {
				 ""ContextFlags"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 ContextFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _VI_POOL_ENTRY_INUSE
 
	public class _VI_POOL_ENTRY_INUSE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VI_POOL_ENTRY_INUSE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VI_POOL_ENTRY_INUSE"": [ 32, {
				 ""VirtualAddress"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CallingAddress"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""NumberOfBytes"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""Tag"": [ 24, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 VirtualAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 CallingAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 NumberOfBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Tag { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _INTERFACE
 
	public class _INTERFACE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _INTERFACE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_INTERFACE"": [ 32, {
				 ""Size"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Version"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Context"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""InterfaceReference"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""InterfaceDereference"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Size { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 Version { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt64 Context { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 InterfaceReference { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 InterfaceDereference { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _ACL
 
	public class _ACL
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ACL(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ACL"": [ 8, {
				 ""AclRevision"": [ 0, [ ""Byte"", ""null"" ]],
				 ""Sbz1"": [ 1, [ ""Byte"", ""null"" ]],
				 ""AclSize"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""AceCount"": [ 4, [ ""UInt16"", ""null"" ]],
				 ""Sbz2"": [ 6, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte AclRevision{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte Sbz1{ get { return _StructureData[_BufferOffset +1]; } }
		public UInt16 AclSize { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt16 AceCount { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 4); } }
		public UInt16 Sbz2 { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
	}
	#endregion
	#region _LAZY_WRITER
 
	public class _LAZY_WRITER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _LAZY_WRITER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 136; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_LAZY_WRITER"": [ 136, {
				 ""ScanDpc"": [ 0, [ ""_KDPC"", ""null"" ]],
				 ""ScanTimer"": [ 64, [ ""_KTIMER"", ""null"" ]],
				 ""ScanActive"": [ 128, [ ""Byte"", ""null"" ]],
				 ""OtherWork"": [ 129, [ ""Byte"", ""null"" ]],
				 ""PendingTeardownScan"": [ 130, [ ""Byte"", ""null"" ]],
				 ""PendingPeriodicScan"": [ 131, [ ""Byte"", ""null"" ]],
				 ""PendingLowMemoryScan"": [ 132, [ ""Byte"", ""null"" ]],
				 ""PendingPowerScan"": [ 133, [ ""Byte"", ""null"" ]],
				 ""PendingCoalescingFlushScan"": [ 134, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _KDPC ScanDpc
		{
			get
			{
				_KDPC returnValue = new _KDPC(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _KTIMER ScanTimer
		{
			get
			{
				_KTIMER returnValue = new _KTIMER(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public Byte ScanActive{ get { return _StructureData[_BufferOffset +128]; } }
		public Byte OtherWork{ get { return _StructureData[_BufferOffset +129]; } }
		public Byte PendingTeardownScan{ get { return _StructureData[_BufferOffset +130]; } }
		public Byte PendingPeriodicScan{ get { return _StructureData[_BufferOffset +131]; } }
		public Byte PendingLowMemoryScan{ get { return _StructureData[_BufferOffset +132]; } }
		public Byte PendingPowerScan{ get { return _StructureData[_BufferOffset +133]; } }
		public Byte PendingCoalescingFlushScan{ get { return _StructureData[_BufferOffset +134]; } }
	}
	#endregion
	#region _PI_BUS_EXTENSION
 
	public class _PI_BUS_EXTENSION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PI_BUS_EXTENSION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 112; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PI_BUS_EXTENSION"": [ 112, {
				 ""Flags"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""NumberCSNs"": [ 4, [ ""Byte"", ""null"" ]],
				 ""ReadDataPort"": [ 8, [ ""Pointer"", ""{\""target\"":\""Byte\""}"" ]],
				 ""DataPortMapped"": [ 16, [ ""Byte"", ""null"" ]],
				 ""AddressPort"": [ 24, [ ""Pointer"", ""{\""target\"":\""Byte\""}"" ]],
				 ""AddrPortMapped"": [ 32, [ ""Byte"", ""null"" ]],
				 ""CommandPort"": [ 40, [ ""Pointer"", ""{\""target\"":\""Byte\""}"" ]],
				 ""CmdPortMapped"": [ 48, [ ""Byte"", ""null"" ]],
				 ""NextSlotNumber"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""DeviceList"": [ 56, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""CardList"": [ 64, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""PhysicalBusDevice"": [ 72, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""FunctionalBusDevice"": [ 80, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""AttachedDevice"": [ 88, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""BusNumber"": [ 96, [ ""UInt32"", ""null"" ]],
				 ""SystemPowerState"": [ 100, [ ""Enumeration"", ""{\""enum_name\"":\""_SYSTEM_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""DevicePowerState"": [ 104, [ ""Enumeration"", ""{\""enum_name\"":\""_DEVICE_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Byte NumberCSNs{ get { return _StructureData[_BufferOffset +4]; } }
		public UInt64 ReadDataPort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public Byte DataPortMapped{ get { return _StructureData[_BufferOffset +16]; } }
		public UInt64 AddressPort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public Byte AddrPortMapped{ get { return _StructureData[_BufferOffset +32]; } }
		public UInt64 CommandPort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public Byte CmdPortMapped{ get { return _StructureData[_BufferOffset +48]; } }
		public UInt32 NextSlotNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public _SINGLE_LIST_ENTRY DeviceList
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public _SINGLE_LIST_ENTRY CardList
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public UInt64 PhysicalBusDevice { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 FunctionalBusDevice { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 AttachedDevice { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt32 BusNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 96); } }
		public _SYSTEM_POWER_STATE SystemPowerState { get { return (_SYSTEM_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 100); } }
		public _DEVICE_POWER_STATE DevicePowerState { get { return (_DEVICE_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 104); } }
	}
	#endregion
	#region _DEVICE_DESCRIPTION
 
	public class _DEVICE_DESCRIPTION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DEVICE_DESCRIPTION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DEVICE_DESCRIPTION"": [ 64, {
				 ""Version"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Master"": [ 4, [ ""Byte"", ""null"" ]],
				 ""ScatterGather"": [ 5, [ ""Byte"", ""null"" ]],
				 ""DemandMode"": [ 6, [ ""Byte"", ""null"" ]],
				 ""AutoInitialize"": [ 7, [ ""Byte"", ""null"" ]],
				 ""Dma32BitAddresses"": [ 8, [ ""Byte"", ""null"" ]],
				 ""IgnoreCount"": [ 9, [ ""Byte"", ""null"" ]],
				 ""Reserved1"": [ 10, [ ""Byte"", ""null"" ]],
				 ""Dma64BitAddresses"": [ 11, [ ""Byte"", ""null"" ]],
				 ""BusNumber"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""DmaChannel"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""InterfaceType"": [ 20, [ ""Enumeration"", ""{\""enum_name\"":\""_INTERFACE_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""DmaWidth"": [ 24, [ ""Enumeration"", ""{\""enum_name\"":\""_DMA_WIDTH\"",\""target\"":\""UInt32\""}"" ]],
				 ""DmaSpeed"": [ 28, [ ""Enumeration"", ""{\""enum_name\"":\""_DMA_SPEED\"",\""target\"":\""UInt32\""}"" ]],
				 ""MaximumLength"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""DmaPort"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""DmaAddressWidth"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""DmaControllerInstance"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""DmaRequestLine"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""DeviceAddress"": [ 56, [ ""_LARGE_INTEGER"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Version { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Byte Master{ get { return _StructureData[_BufferOffset +4]; } }
		public Byte ScatterGather{ get { return _StructureData[_BufferOffset +5]; } }
		public Byte DemandMode{ get { return _StructureData[_BufferOffset +6]; } }
		public Byte AutoInitialize{ get { return _StructureData[_BufferOffset +7]; } }
		public Byte Dma32BitAddresses{ get { return _StructureData[_BufferOffset +8]; } }
		public Byte IgnoreCount{ get { return _StructureData[_BufferOffset +9]; } }
		public Byte Reserved1{ get { return _StructureData[_BufferOffset +10]; } }
		public Byte Dma64BitAddresses{ get { return _StructureData[_BufferOffset +11]; } }
		public UInt32 BusNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 DmaChannel { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public _INTERFACE_TYPE InterfaceType { get { return (_INTERFACE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public _DMA_WIDTH DmaWidth { get { return (_DMA_WIDTH)BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public _DMA_SPEED DmaSpeed { get { return (_DMA_SPEED)BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 MaximumLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 DmaPort { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public UInt32 DmaAddressWidth { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32 DmaControllerInstance { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public UInt32 DmaRequestLine { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public _LARGE_INTEGER DeviceAddress
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
	}
	#endregion
	#region _SID_AND_ATTRIBUTES
 
	public class _SID_AND_ATTRIBUTES
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SID_AND_ATTRIBUTES(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SID_AND_ATTRIBUTES"": [ 16, {
				 ""Sid"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Attributes"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Sid { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 Attributes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _SID_IDENTIFIER_AUTHORITY
 
	public class _SID_IDENTIFIER_AUTHORITY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SID_IDENTIFIER_AUTHORITY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 6; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SID_IDENTIFIER_AUTHORITY"": [ 6, {
				 ""Value"": [ 0, [ ""Array"", ""{\""count\"":6,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public Byte[] Value
		{
			get
			{
				Byte[] returnValue = new Byte[6];
				for(int i=0; i<6; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 0];
				return returnValue;
			}
		}
	}
	#endregion
	#region _PROCESS_DISK_COUNTERS
 
	public class _PROCESS_DISK_COUNTERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROCESS_DISK_COUNTERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROCESS_DISK_COUNTERS"": [ 40, {
				 ""BytesRead"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""BytesWritten"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""ReadOperationCount"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""WriteOperationCount"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""FlushOperationCount"": [ 32, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 BytesRead { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 BytesWritten { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 ReadOperationCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 WriteOperationCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 FlushOperationCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _IO_WORKITEM
 
	public class _IO_WORKITEM
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IO_WORKITEM(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 80; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IO_WORKITEM"": [ 80, {
				 ""WorkItem"": [ 0, [ ""_WORK_QUEUE_ITEM"", ""null"" ]],
				 ""Routine"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""IoObject"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Context"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Type"": [ 56, [ ""UInt32"", ""null"" ]],
				 ""ActivityId"": [ 60, [ ""_GUID"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _WORK_QUEUE_ITEM WorkItem
		{
			get
			{
				_WORK_QUEUE_ITEM returnValue = new _WORK_QUEUE_ITEM(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Routine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 IoObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 Context { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt32 Type { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public _GUID ActivityId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 60);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MMWSLE_HASH
 
	public class _MMWSLE_HASH
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMWSLE_HASH(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMWSLE_HASH"": [ 8, {
				 ""Index"": [ 0, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Index { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _JOBOBJECT_WAKE_FILTER
 
	public class _JOBOBJECT_WAKE_FILTER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _JOBOBJECT_WAKE_FILTER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_JOBOBJECT_WAKE_FILTER"": [ 8, {
				 ""HighEdgeFilter"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""LowEdgeFilter"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 HighEdgeFilter { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 LowEdgeFilter { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _UNEXPECTED_INTERRUPT
 
	public class _UNEXPECTED_INTERRUPT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNEXPECTED_INTERRUPT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNEXPECTED_INTERRUPT"": [ 8, {
				 ""PushImm"": [ 0, [ ""Byte"", ""null"" ]],
				 ""Vector"": [ 1, [ ""Byte"", ""null"" ]],
				 ""PushRbp"": [ 2, [ ""Byte"", ""null"" ]],
				 ""JmpOp"": [ 3, [ ""Byte"", ""null"" ]],
				 ""JmpOffset"": [ 4, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte PushImm{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte Vector{ get { return _StructureData[_BufferOffset +1]; } }
		public Byte PushRbp{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte JmpOp{ get { return _StructureData[_BufferOffset +3]; } }
		public Int32 JmpOffset { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _POP_FX_WORK_ORDER_WATCHDOG_INFO
 
	public class _POP_FX_WORK_ORDER_WATCHDOG_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_FX_WORK_ORDER_WATCHDOG_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 136; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_FX_WORK_ORDER_WATCHDOG_INFO"": [ 136, {
				 ""Timer"": [ 0, [ ""_KTIMER"", ""null"" ]],
				 ""Dpc"": [ 64, [ ""_KDPC"", ""null"" ]],
				 ""WorkOrder"": [ 128, [ ""Pointer"", ""{\""target\"":\""_POP_FX_WORK_ORDER\""}"" ]] }]
				 }
				)";
			}
		}
		public _KTIMER Timer
		{
			get
			{
				_KTIMER returnValue = new _KTIMER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _KDPC Dpc
		{
			get
			{
				_KDPC returnValue = new _KDPC(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public UInt64 WorkOrder { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 128); } }
	}
	#endregion
	#region _DBGKD_FILL_MEMORY
 
	public class _DBGKD_FILL_MEMORY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_FILL_MEMORY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_FILL_MEMORY"": [ 16, {
				 ""Address"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Length"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Flags"": [ 12, [ ""UInt16"", ""null"" ]],
				 ""PatternLength"": [ 14, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Address { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt16 Flags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 12); } }
		public UInt16 PatternLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 14); } }
	}
	#endregion
	#region _HEAP_STOP_ON_VALUES
 
	public class _HEAP_STOP_ON_VALUES
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HEAP_STOP_ON_VALUES(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HEAP_STOP_ON_VALUES"": [ 48, {
				 ""AllocAddress"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""AllocTag"": [ 8, [ ""_HEAP_STOP_ON_TAG"", ""null"" ]],
				 ""ReAllocAddress"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""ReAllocTag"": [ 24, [ ""_HEAP_STOP_ON_TAG"", ""null"" ]],
				 ""FreeAddress"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""FreeTag"": [ 40, [ ""_HEAP_STOP_ON_TAG"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 AllocAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _HEAP_STOP_ON_TAG AllocTag
		{
			get
			{
				_HEAP_STOP_ON_TAG returnValue = new _HEAP_STOP_ON_TAG(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt64 ReAllocAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public _HEAP_STOP_ON_TAG ReAllocTag
		{
			get
			{
				_HEAP_STOP_ON_TAG returnValue = new _HEAP_STOP_ON_TAG(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt64 FreeAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public _HEAP_STOP_ON_TAG FreeTag
		{
			get
			{
				_HEAP_STOP_ON_TAG returnValue = new _HEAP_STOP_ON_TAG(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
	}
	#endregion
	#region _HEAP_PSEUDO_TAG_ENTRY
 
	public class _HEAP_PSEUDO_TAG_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HEAP_PSEUDO_TAG_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HEAP_PSEUDO_TAG_ENTRY"": [ 16, {
				 ""Allocs"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Frees"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Size"": [ 8, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Allocs { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Frees { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 Size { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _CALL_HASH_ENTRY
 
	public class _CALL_HASH_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CALL_HASH_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CALL_HASH_ENTRY"": [ 40, {
				 ""ListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""CallersAddress"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CallersCaller"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CallCount"": [ 32, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 CallersAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 CallersCaller { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt32 CallCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _VF_TRACKER_STAMP
 
	public class _VF_TRACKER_STAMP
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VF_TRACKER_STAMP(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VF_TRACKER_STAMP"": [ 16, {
				 ""Thread"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Flags"": [ 8, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""OldIrql"": [ 9, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""NewIrql"": [ 10, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""Processor"": [ 11, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Thread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public Byte Flags
		{
			get
			{
				// start: 0  end: 8  Mask: 0000000011111111
				Byte value = _StructureData[_BufferOffset + 8];
				var value2 = (value & 255) >> 0;
				return (Byte)value2;
			}
		}
		public Byte OldIrql
		{
			get
			{
				// start: 0  end: 8  Mask: 0000000011111111
				Byte value = _StructureData[_BufferOffset + 9];
				var value2 = (value & 255) >> 0;
				return (Byte)value2;
			}
		}
		public Byte NewIrql
		{
			get
			{
				// start: 0  end: 8  Mask: 0000000011111111
				Byte value = _StructureData[_BufferOffset + 10];
				var value2 = (value & 255) >> 0;
				return (Byte)value2;
			}
		}
		public Byte Processor
		{
			get
			{
				// start: 0  end: 8  Mask: 0000000011111111
				Byte value = _StructureData[_BufferOffset + 11];
				var value2 = (value & 255) >> 0;
				return (Byte)value2;
			}
		}
	}
	#endregion
	#region _VI_TRACK_IRQL
 
	public class _VI_TRACK_IRQL
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VI_TRACK_IRQL(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VI_TRACK_IRQL"": [ 56, {
				 ""Thread"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""OldIrql"": [ 8, [ ""Byte"", ""null"" ]],
				 ""NewIrql"": [ 9, [ ""Byte"", ""null"" ]],
				 ""Processor"": [ 10, [ ""UInt16"", ""null"" ]],
				 ""TickCount"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""StackTrace"": [ 16, [ ""Array"", ""{\""count\"":5,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Thread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public Byte OldIrql{ get { return _StructureData[_BufferOffset +8]; } }
		public Byte NewIrql{ get { return _StructureData[_BufferOffset +9]; } }
		public UInt16 Processor { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 10); } }
		public UInt32 TickCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt64[] StackTrace
		{
			get
			{
				UInt64[] returnValue = new UInt64[5];
				int size = 8;
				for(int i=0; i<5; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _SESSION_LOWBOX_MAP
 
	public class _SESSION_LOWBOX_MAP
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SESSION_LOWBOX_MAP(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SESSION_LOWBOX_MAP"": [ 64, {
				 ""ListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""SessionId"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""LowboxMap"": [ 24, [ ""_SEP_LOWBOX_NUMBER_MAPPING"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 SessionId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public _SEP_LOWBOX_NUMBER_MAPPING LowboxMap
		{
			get
			{
				_SEP_LOWBOX_NUMBER_MAPPING returnValue = new _SEP_LOWBOX_NUMBER_MAPPING(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
	}
	#endregion
	#region _PROCESSOR_PROFILE_CONTROL_AREA
 
	public class _PROCESSOR_PROFILE_CONTROL_AREA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROCESSOR_PROFILE_CONTROL_AREA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 96; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROCESSOR_PROFILE_CONTROL_AREA"": [ 96, {
				 ""PebsDsSaveArea"": [ 0, [ ""_PEBS_DS_SAVE_AREA"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _PEBS_DS_SAVE_AREA PebsDsSaveArea
		{
			get
			{
				_PEBS_DS_SAVE_AREA returnValue = new _PEBS_DS_SAVE_AREA(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _PEB_LDR_DATA
 
	public class _PEB_LDR_DATA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PEB_LDR_DATA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 88; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PEB_LDR_DATA"": [ 88, {
				 ""Length"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Initialized"": [ 4, [ ""Byte"", ""null"" ]],
				 ""SsHandle"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""InLoadOrderModuleList"": [ 16, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""InMemoryOrderModuleList"": [ 32, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""InInitializationOrderModuleList"": [ 48, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""EntryInProgress"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ShutdownInProgress"": [ 72, [ ""Byte"", ""null"" ]],
				 ""ShutdownThreadId"": [ 80, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Byte Initialized{ get { return _StructureData[_BufferOffset +4]; } }
		public UInt64 SsHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _LIST_ENTRY InLoadOrderModuleList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _LIST_ENTRY InMemoryOrderModuleList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public _LIST_ENTRY InInitializationOrderModuleList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public UInt64 EntryInProgress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public Byte ShutdownInProgress{ get { return _StructureData[_BufferOffset +72]; } }
		public UInt64 ShutdownThreadId { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
	}
	#endregion
	#region _PNP_DEVICE_EVENT_ENTRY
 
	public class _PNP_DEVICE_EVENT_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PNP_DEVICE_EVENT_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 168; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PNP_DEVICE_EVENT_ENTRY"": [ 168, {
				 ""ListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Argument"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""CallerEvent"": [ 24, [ ""Pointer"", ""{\""target\"":\""_KEVENT\""}"" ]],
				 ""Callback"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Context"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""VetoType"": [ 48, [ ""Pointer"", ""{\""target\"":\""_PNP_VETO_TYPE\""}"" ]],
				 ""VetoName"": [ 56, [ ""Pointer"", ""{\""target\"":\""_UNICODE_STRING\""}"" ]],
				 ""RefCount"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""Lock"": [ 68, [ ""UInt32"", ""null"" ]],
				 ""Cancel"": [ 72, [ ""Byte"", ""null"" ]],
				 ""Parent"": [ 80, [ ""Pointer"", ""{\""target\"":\""_PNP_DEVICE_EVENT_ENTRY\""}"" ]],
				 ""Data"": [ 88, [ ""_PLUGPLAY_EVENT_BLOCK"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 Argument { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt64 CallerEvent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 Callback { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 Context { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 VetoType { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 VetoName { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt32 RefCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt32 Lock { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 68); } }
		public Byte Cancel{ get { return _StructureData[_BufferOffset +72]; } }
		public UInt64 Parent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public _PLUGPLAY_EVENT_BLOCK Data
		{
			get
			{
				_PLUGPLAY_EVENT_BLOCK returnValue = new _PLUGPLAY_EVENT_BLOCK(_StructureData, _BufferOffset + 88);
				return returnValue;
			}
		}
	}
	#endregion
	#region _PROC_IDLE_POLICY
 
	public class _PROC_IDLE_POLICY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROC_IDLE_POLICY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 5; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROC_IDLE_POLICY"": [ 5, {
				 ""PromotePercent"": [ 0, [ ""Byte"", ""null"" ]],
				 ""DemotePercent"": [ 1, [ ""Byte"", ""null"" ]],
				 ""PromotePercentBase"": [ 2, [ ""Byte"", ""null"" ]],
				 ""DemotePercentBase"": [ 3, [ ""Byte"", ""null"" ]],
				 ""AllowScaling"": [ 4, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte PromotePercent{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte DemotePercent{ get { return _StructureData[_BufferOffset +1]; } }
		public Byte PromotePercentBase{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte DemotePercentBase{ get { return _StructureData[_BufferOffset +3]; } }
		public Byte AllowScaling{ get { return _StructureData[_BufferOffset +4]; } }
	}
	#endregion
	#region _HEAP_STOP_ON_TAG
 
	public class _HEAP_STOP_ON_TAG
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HEAP_STOP_ON_TAG(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HEAP_STOP_ON_TAG"": [ 4, {
				 ""HeapAndTagIndex"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""TagIndex"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""HeapIndex"": [ 2, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 HeapAndTagIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt16 TagIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 HeapIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
	}
	#endregion
	#region _PS_WAKE_INFORMATION
 
	public class _PS_WAKE_INFORMATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PS_WAKE_INFORMATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PS_WAKE_INFORMATION"": [ 56, {
				 ""NotificationChannel"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""WakeCounters"": [ 8, [ ""Array"", ""{\""count\"":5,\""target\"":\""UInt64\""}"" ]],
				 ""NoWakeCounter"": [ 48, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 NotificationChannel { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64[] WakeCounters
		{
			get
			{
				UInt64[] returnValue = new UInt64[5];
				for(int i=0; i<5; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt64 NoWakeCounter { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
	}
	#endregion
	#region _RH_OP_CONTEXT
 
	public class _RH_OP_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RH_OP_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RH_OP_CONTEXT"": [ 72, {
				 ""Links"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""OplockRequestIrp"": [ 16, [ ""Pointer"", ""{\""target\"":\""_IRP\""}"" ]],
				 ""OplockRequestFileObject"": [ 24, [ ""Pointer"", ""{\""target\"":\""_FILE_OBJECT\""}"" ]],
				 ""OplockRequestProcess"": [ 32, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""OplockOwnerThread"": [ 40, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]],
				 ""Flags"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""AtomicLinks"": [ 56, [ ""_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY Links
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 OplockRequestIrp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 OplockRequestFileObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 OplockRequestProcess { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 OplockOwnerThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public _LIST_ENTRY AtomicLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
	}
	#endregion
	#region _DBGKD_GET_CONTEXT
 
	public class _DBGKD_GET_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_GET_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_GET_CONTEXT"": [ 4, {
				 ""Unused"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Unused { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _ISRDPCSTATS
 
	public class _ISRDPCSTATS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ISRDPCSTATS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ISRDPCSTATS"": [ 64, {
				 ""IsrTime"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""IsrTimeStart"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""IsrCount"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""DpcTime"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""DpcTimeStart"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""DpcCount"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""IsrActive"": [ 48, [ ""Byte"", ""null"" ]],
				 ""Reserved"": [ 49, [ ""Array"", ""{\""count\"":15,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 IsrTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 IsrTimeStart { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 IsrCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 DpcTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 DpcTimeStart { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 DpcCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public Byte IsrActive{ get { return _StructureData[_BufferOffset +48]; } }
		public Byte[] Reserved
		{
			get
			{
				Byte[] returnValue = new Byte[15];
				for(int i=0; i<15; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 49];
				return returnValue;
			}
		}
	}
	#endregion
	#region _RTL_BITMAP_EX
 
	public class _RTL_BITMAP_EX
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_BITMAP_EX(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_BITMAP_EX"": [ 16, {
				 ""SizeOfBitMap"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Buffer"": [ 8, [ ""Pointer"", ""{\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 SizeOfBitMap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Buffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _XSTATE_CONFIGURATION
 
	public class _XSTATE_CONFIGURATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _XSTATE_CONFIGURATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 536; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_XSTATE_CONFIGURATION"": [ 536, {
				 ""EnabledFeatures"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""EnabledVolatileFeatures"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""Size"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""OptimizedSave"": [ 20, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""Features"": [ 24, [ ""Array"", ""{\""count\"":64,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 EnabledFeatures { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 EnabledVolatileFeatures { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 Size { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 OptimizedSave
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 20);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public _XSTATE_FEATURE[] Features
		{
			get
			{
				_XSTATE_FEATURE[] returnValue = new _XSTATE_FEATURE[64];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<64; i++ )
					returnValue[i] = new _XSTATE_FEATURE(_StructureData, (i * size) + _BufferOffset + 24);
				return returnValue;
			}
		}
	}
	#endregion
	#region _CM_KEY_CONTROL_BLOCK
 
	public class _CM_KEY_CONTROL_BLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_KEY_CONTROL_BLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 296; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_KEY_CONTROL_BLOCK"": [ 296, {
				 ""RefCount"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ExtFlags"": [ 4, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""PrivateAlloc"": [ 4, [ ""BitField"", ""{\""end_bit\"":17,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""Delete"": [ 4, [ ""BitField"", ""{\""end_bit\"":18,\""start_bit\"":17,\""target\"":\""UInt32\""}"" ]],
				 ""HiveUnloaded"": [ 4, [ ""BitField"", ""{\""end_bit\"":19,\""start_bit\"":18,\""target\"":\""UInt32\""}"" ]],
				 ""Decommissioned"": [ 4, [ ""BitField"", ""{\""end_bit\"":20,\""start_bit\"":19,\""target\"":\""UInt32\""}"" ]],
				 ""LockTablePresent"": [ 4, [ ""BitField"", ""{\""end_bit\"":21,\""start_bit\"":20,\""target\"":\""UInt32\""}"" ]],
				 ""TotalLevels"": [ 4, [ ""BitField"", ""{\""end_bit\"":31,\""start_bit\"":21,\""target\"":\""UInt32\""}"" ]],
				 ""DelayedDeref"": [ 8, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""DelayedClose"": [ 8, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""Parking"": [ 8, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""KeyHash"": [ 16, [ ""_CM_KEY_HASH"", ""null"" ]],
				 ""ConvKey"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""NextHash"": [ 24, [ ""Pointer"", ""{\""target\"":\""_CM_KEY_HASH\""}"" ]],
				 ""KeyHive"": [ 32, [ ""Pointer"", ""{\""target\"":\""_HHIVE\""}"" ]],
				 ""KeyCell"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""KcbPushlock"": [ 48, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""Owner"": [ 56, [ ""Pointer"", ""{\""target\"":\""_KTHREAD\""}"" ]],
				 ""SharedCount"": [ 56, [ ""Int32"", ""null"" ]],
				 ""SlotHint"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""ParentKcb"": [ 72, [ ""Pointer"", ""{\""target\"":\""_CM_KEY_CONTROL_BLOCK\""}"" ]],
				 ""NameBlock"": [ 80, [ ""Pointer"", ""{\""target\"":\""_CM_NAME_CONTROL_BLOCK\""}"" ]],
				 ""CachedSecurity"": [ 88, [ ""Pointer"", ""{\""target\"":\""_CM_KEY_SECURITY_CACHE\""}"" ]],
				 ""ValueCache"": [ 96, [ ""_CACHED_CHILD_LIST"", ""null"" ]],
				 ""IndexHint"": [ 112, [ ""Pointer"", ""{\""target\"":\""_CM_INDEX_HINT_BLOCK\""}"" ]],
				 ""HashKey"": [ 112, [ ""UInt32"", ""null"" ]],
				 ""SubKeyCount"": [ 112, [ ""UInt32"", ""null"" ]],
				 ""KeyBodyListHead"": [ 120, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""FreeListEntry"": [ 120, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""KeyBodyArray"": [ 136, [ ""Array"", ""{\""count\"":4,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""_CM_KEY_BODY\""}}"" ]],
				 ""KcbLastWriteTime"": [ 168, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""KcbMaxNameLen"": [ 176, [ ""UInt16"", ""null"" ]],
				 ""KcbMaxValueNameLen"": [ 178, [ ""UInt16"", ""null"" ]],
				 ""KcbMaxValueDataLen"": [ 180, [ ""UInt32"", ""null"" ]],
				 ""KcbUserFlags"": [ 184, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""KcbVirtControlFlags"": [ 184, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""KcbDebug"": [ 184, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]],
				 ""Flags"": [ 184, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""RealKeyName"": [ 192, [ ""Pointer"", ""{\""target\"":\""char\""}"" ]],
				 ""KCBUoWListHead"": [ 200, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""DelayQueueEntry"": [ 216, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Stolen"": [ 216, [ ""Pointer"", ""{\""target\"":\""Byte\""}"" ]],
				 ""TransKCBOwner"": [ 232, [ ""Pointer"", ""{\""target\"":\""_CM_TRANS\""}"" ]],
				 ""KCBLock"": [ 240, [ ""_CM_INTENT_LOCK"", ""null"" ]],
				 ""KeyLock"": [ 256, [ ""_CM_INTENT_LOCK"", ""null"" ]],
				 ""TransValueCache"": [ 272, [ ""_CHILD_LIST"", ""null"" ]],
				 ""TransValueListOwner"": [ 280, [ ""Pointer"", ""{\""target\"":\""_CM_TRANS\""}"" ]],
				 ""FullKCBName"": [ 288, [ ""Pointer"", ""{\""target\"":\""_UNICODE_STRING\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 RefCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 ExtFlags
		{
			get
			{
				// start: 0  end: 16  Mask: 1111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 65535) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 PrivateAlloc
		{
			get
			{
				// start: 16  end: 17  Mask: 10000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 65536) >> 16;
				return (UInt32)value2;
			}
		}
		public UInt32 Delete
		{
			get
			{
				// start: 17  end: 18  Mask: 100000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 131072) >> 17;
				return (UInt32)value2;
			}
		}
		public UInt32 HiveUnloaded
		{
			get
			{
				// start: 18  end: 19  Mask: 1000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 262144) >> 18;
				return (UInt32)value2;
			}
		}
		public UInt32 Decommissioned
		{
			get
			{
				// start: 19  end: 20  Mask: 10000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 524288) >> 19;
				return (UInt32)value2;
			}
		}
		public UInt32 LockTablePresent
		{
			get
			{
				// start: 20  end: 21  Mask: 100000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 1048576) >> 20;
				return (UInt32)value2;
			}
		}
		public UInt32 TotalLevels
		{
			get
			{
				// start: 21  end: 31  Mask: 1111111111000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 2145386496) >> 21;
				return (UInt32)value2;
			}
		}
		public UInt32 DelayedDeref
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 8);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 DelayedClose
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 8);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 Parking
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 8);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public _CM_KEY_HASH KeyHash
		{
			get
			{
				_CM_KEY_HASH returnValue = new _CM_KEY_HASH(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt32 ConvKey { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt64 NextHash { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 KeyHive { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt32 KeyCell { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public _EX_PUSH_LOCK KcbPushlock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public UInt64 Owner { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public Int32 SharedCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 56); } }
		public UInt32 SlotHint { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt64 ParentKcb { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 NameBlock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 CachedSecurity { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public _CACHED_CHILD_LIST ValueCache
		{
			get
			{
				_CACHED_CHILD_LIST returnValue = new _CACHED_CHILD_LIST(_StructureData, _BufferOffset + 96);
				return returnValue;
			}
		}
		public UInt64 IndexHint { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 112); } }
		public UInt32 HashKey { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 112); } }
		public UInt32 SubKeyCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 112); } }
		public _LIST_ENTRY KeyBodyListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 120);
				return returnValue;
			}
		}
		public _LIST_ENTRY FreeListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 120);
				return returnValue;
			}
		}
		public UInt64[] KeyBodyArray
		{
			get
			{
				UInt64[] returnValue = new UInt64[4];
				int size = 8;
				for(int i=0; i<4; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 136);
				return returnValue;
			}
		}
		public _LARGE_INTEGER KcbLastWriteTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 168);
				return returnValue;
			}
		}
		public UInt16 KcbMaxNameLen { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 176); } }
		public UInt16 KcbMaxValueNameLen { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 178); } }
		public UInt32 KcbMaxValueDataLen { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 180); } }
		public UInt32 KcbUserFlags
		{
			get
			{
				// start: 0  end: 4  Mask: 0000000000001111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 184);
				var value2 = (value & 15) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 KcbVirtControlFlags
		{
			get
			{
				// start: 4  end: 8  Mask: 0000000011110000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 184);
				var value2 = (value & 240) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 KcbDebug
		{
			get
			{
				// start: 8  end: 16  Mask: 1111111100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 184);
				var value2 = (value & 65280) >> 8;
				return (UInt32)value2;
			}
		}
		public UInt32 Flags
		{
			get
			{
				// start: 16  end: 32  Mask: 11111111111111110000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 184);
				var value2 = (value & 4294901760) >> 16;
				return (UInt32)value2;
			}
		}
		public UInt64 RealKeyName { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 192); } }
		public _LIST_ENTRY KCBUoWListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 200);
				return returnValue;
			}
		}
		public _LIST_ENTRY DelayQueueEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 216);
				return returnValue;
			}
		}
		public UInt64 Stolen { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 216); } }
		public UInt64 TransKCBOwner { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 232); } }
		public _CM_INTENT_LOCK KCBLock
		{
			get
			{
				_CM_INTENT_LOCK returnValue = new _CM_INTENT_LOCK(_StructureData, _BufferOffset + 240);
				return returnValue;
			}
		}
		public _CM_INTENT_LOCK KeyLock
		{
			get
			{
				_CM_INTENT_LOCK returnValue = new _CM_INTENT_LOCK(_StructureData, _BufferOffset + 256);
				return returnValue;
			}
		}
		public _CHILD_LIST TransValueCache
		{
			get
			{
				_CHILD_LIST returnValue = new _CHILD_LIST(_StructureData, _BufferOffset + 272);
				return returnValue;
			}
		}
		public UInt64 TransValueListOwner { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 280); } }
		public UInt64 FullKCBName { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 288); } }
	}
	#endregion
	#region _KLOCK_ENTRY
 
	public class _KLOCK_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KLOCK_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 96; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KLOCK_ENTRY"": [ 96, {
				 ""TreeNode"": [ 0, [ ""_RTL_BALANCED_NODE"", ""null"" ]],
				 ""FreeListEntry"": [ 0, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""ThreadUnsafe"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""HeadNodeByte"": [ 24, [ ""Byte"", ""null"" ]],
				 ""Reserved1"": [ 25, [ ""Array"", ""{\""count\"":6,\""target\"":\""Byte\""}"" ]],
				 ""AcquiredByte"": [ 31, [ ""Byte"", ""null"" ]],
				 ""LockState"": [ 32, [ ""_KLOCK_ENTRY_LOCK_STATE"", ""null"" ]],
				 ""LockUnsafe"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""WaitingAndBusyByte"": [ 32, [ ""Byte"", ""null"" ]],
				 ""Reserved"": [ 33, [ ""Array"", ""{\""count\"":6,\""target\"":\""Byte\""}"" ]],
				 ""InTreeByte"": [ 39, [ ""Byte"", ""null"" ]],
				 ""SessionState"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SessionId"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""SessionPad"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""OwnerTree"": [ 48, [ ""_RTL_RB_TREE"", ""null"" ]],
				 ""WaiterTree"": [ 64, [ ""_RTL_RB_TREE"", ""null"" ]],
				 ""CpuPriorityKey"": [ 48, [ ""Char"", ""null"" ]],
				 ""EntryLock"": [ 80, [ ""UInt64"", ""null"" ]],
				 ""AllBoosts"": [ 88, [ ""UInt16"", ""null"" ]],
				 ""IoBoost"": [ 88, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""CpuBoostsBitmap"": [ 88, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":1,\""target\"":\""UInt16\""}"" ]],
				 ""IoNormalPriorityWaiterCount"": [ 90, [ ""UInt16"", ""null"" ]],
				 ""IoPriorityBit"": [ 92, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""AbSpare"": [ 92, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""SparePad"": [ 93, [ ""Array"", ""{\""count\"":3,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public _RTL_BALANCED_NODE TreeNode
		{
			get
			{
				_RTL_BALANCED_NODE returnValue = new _RTL_BALANCED_NODE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _SINGLE_LIST_ENTRY FreeListEntry
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 ThreadUnsafe { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public Byte HeadNodeByte{ get { return _StructureData[_BufferOffset +24]; } }
		public Byte[] Reserved1
		{
			get
			{
				Byte[] returnValue = new Byte[6];
				for(int i=0; i<6; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 25];
				return returnValue;
			}
		}
		public Byte AcquiredByte{ get { return _StructureData[_BufferOffset +31]; } }
		public _KLOCK_ENTRY_LOCK_STATE LockState
		{
			get
			{
				_KLOCK_ENTRY_LOCK_STATE returnValue = new _KLOCK_ENTRY_LOCK_STATE(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt64 LockUnsafe { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public Byte WaitingAndBusyByte{ get { return _StructureData[_BufferOffset +32]; } }
		public Byte[] Reserved
		{
			get
			{
				Byte[] returnValue = new Byte[6];
				for(int i=0; i<6; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 33];
				return returnValue;
			}
		}
		public Byte InTreeByte{ get { return _StructureData[_BufferOffset +39]; } }
		public UInt64 SessionState { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt32 SessionId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32 SessionPad { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public _RTL_RB_TREE OwnerTree
		{
			get
			{
				_RTL_RB_TREE returnValue = new _RTL_RB_TREE(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public _RTL_RB_TREE WaiterTree
		{
			get
			{
				_RTL_RB_TREE returnValue = new _RTL_RB_TREE(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public Char CpuPriorityKey { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 48); } }
		public UInt64 EntryLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt16 AllBoosts { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 88); } }
		public UInt16 IoBoost
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 88);
				var value2 = (value & 1) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 CpuBoostsBitmap
		{
			get
			{
				// start: 1  end: 16  Mask: 1111111111111110
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 88);
				var value2 = (value & 65534) >> 1;
				return (UInt16)value2;
			}
		}
		public UInt16 IoNormalPriorityWaiterCount { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 90); } }
		public Byte IoPriorityBit
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 92];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte AbSpare
		{
			get
			{
				// start: 1  end: 8  Mask: 0000000011111110
				Byte value = _StructureData[_BufferOffset + 92];
				var value2 = (value & 254) >> 1;
				return (Byte)value2;
			}
		}
		public Byte[] SparePad
		{
			get
			{
				Byte[] returnValue = new Byte[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 93];
				return returnValue;
			}
		}
	}
	#endregion
	#region _MMPTE_SOFTWARE
 
	public class _MMPTE_SOFTWARE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMPTE_SOFTWARE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMPTE_SOFTWARE"": [ 8, {
				 ""Valid"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""PageFileLow"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":1,\""target\"":\""UInt64\""}"" ]],
				 ""Protection"": [ 0, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":5,\""target\"":\""UInt64\""}"" ]],
				 ""Prototype"": [ 0, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt64\""}"" ]],
				 ""Transition"": [ 0, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt64\""}"" ]],
				 ""InStore"": [ 0, [ ""BitField"", ""{\""end_bit\"":13,\""start_bit\"":12,\""target\"":\""UInt64\""}"" ]],
				 ""PageFileReserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":14,\""start_bit\"":13,\""target\"":\""UInt64\""}"" ]],
				 ""PageFileAllocated"": [ 0, [ ""BitField"", ""{\""end_bit\"":15,\""start_bit\"":14,\""target\"":\""UInt64\""}"" ]],
				 ""UsedPageTableEntries"": [ 0, [ ""BitField"", ""{\""end_bit\"":25,\""start_bit\"":15,\""target\"":\""UInt64\""}"" ]],
				 ""Unused"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":25,\""target\"":\""UInt64\""}"" ]],
				 ""PageFileHigh"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":32,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Valid
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 PageFileLow
		{
			get
			{
				// start: 1  end: 5  Mask: 0000000000011110
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 30) >> 1;
				return (UInt64)value2;
			}
		}
		public UInt64 Protection
		{
			get
			{
				// start: 5  end: 10  Mask: 0000001111100000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 992) >> 5;
				return (UInt64)value2;
			}
		}
		public UInt64 Prototype
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1024) >> 10;
				return (UInt64)value2;
			}
		}
		public UInt64 Transition
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2048) >> 11;
				return (UInt64)value2;
			}
		}
		public UInt64 InStore
		{
			get
			{
				// start: 12  end: 13  Mask: 0001000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4096) >> 12;
				return (UInt64)value2;
			}
		}
		public UInt64 PageFileReserved
		{
			get
			{
				// start: 13  end: 14  Mask: 0010000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8192) >> 13;
				return (UInt64)value2;
			}
		}
		public UInt64 PageFileAllocated
		{
			get
			{
				// start: 14  end: 15  Mask: 0100000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16384) >> 14;
				return (UInt64)value2;
			}
		}
		public UInt64 UsedPageTableEntries
		{
			get
			{
				// start: 15  end: 25  Mask: 1111111111000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 33521664) >> 15;
				return (UInt64)value2;
			}
		}
		public UInt64 Unused
		{
			get
			{
				// start: 25  end: 32  Mask: 11111110000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4261412864) >> 25;
				return (UInt64)value2;
			}
		}
		public UInt64 PageFileHigh
		{
			get
			{
				// start: 32  end: 64  Mask: 0000000000000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 32;
				return (UInt64)value2;
			}
		}
	}
	#endregion
	#region _UNNAMED_32454
 
	public class _UNNAMED_32454
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_32454(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_32454"": [ 16, {
				 ""IoStatus"": [ 0, [ ""_IO_STATUS_BLOCK"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _IO_STATUS_BLOCK IoStatus
		{
			get
			{
				_IO_STATUS_BLOCK returnValue = new _IO_STATUS_BLOCK(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MMMOD_WRITER_MDL_ENTRY
 
	public class _MMMOD_WRITER_MDL_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMMOD_WRITER_MDL_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 256; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMMOD_WRITER_MDL_ENTRY"": [ 256, {
				 ""Links"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""u"": [ 16, [ ""_UNNAMED_32454"", ""null"" ]],
				 ""Irp"": [ 32, [ ""Pointer"", ""{\""target\"":\""_IRP\""}"" ]],
				 ""u1"": [ 40, [ ""_MODWRITER_FLAGS"", ""null"" ]],
				 ""StoreWriteRefCount"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""StoreWriteCompletionApc"": [ 48, [ ""_KAPC"", ""null"" ]],
				 ""ByteCount"": [ 136, [ ""UInt32"", ""null"" ]],
				 ""PagingFile"": [ 144, [ ""Pointer"", ""{\""target\"":\""_MMPAGING_FILE\""}"" ]],
				 ""File"": [ 152, [ ""Pointer"", ""{\""target\"":\""_FILE_OBJECT\""}"" ]],
				 ""ControlArea"": [ 160, [ ""Pointer"", ""{\""target\"":\""_CONTROL_AREA\""}"" ]],
				 ""FileResource"": [ 168, [ ""Pointer"", ""{\""target\"":\""_ERESOURCE\""}"" ]],
				 ""WriteOffset"": [ 176, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""IssueTime"": [ 184, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""PointerMdl"": [ 192, [ ""Pointer"", ""{\""target\"":\""_MDL\""}"" ]],
				 ""Mdl"": [ 200, [ ""_MDL"", ""null"" ]],
				 ""Page"": [ 248, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY Links
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_32454 u
		{
			get
			{
				_UNNAMED_32454 returnValue = new _UNNAMED_32454(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt64 Irp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public _MODWRITER_FLAGS u1
		{
			get
			{
				_MODWRITER_FLAGS returnValue = new _MODWRITER_FLAGS(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public UInt32 StoreWriteRefCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public _KAPC StoreWriteCompletionApc
		{
			get
			{
				_KAPC returnValue = new _KAPC(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public UInt32 ByteCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 136); } }
		public UInt64 PagingFile { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 144); } }
		public UInt64 File { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 152); } }
		public UInt64 ControlArea { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public UInt64 FileResource { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 168); } }
		public _LARGE_INTEGER WriteOffset
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 176);
				return returnValue;
			}
		}
		public _LARGE_INTEGER IssueTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 184);
				return returnValue;
			}
		}
		public UInt64 PointerMdl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 192); } }
		public _MDL Mdl
		{
			get
			{
				_MDL returnValue = new _MDL(_StructureData, _BufferOffset + 200);
				return returnValue;
			}
		}
		public UInt64[] Page
		{
			get
			{
				UInt64[] returnValue = new UInt64[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 248);
				return returnValue;
			}
		}
	}
	#endregion
	#region _CM_RESOURCE_LIST
 
	public class _CM_RESOURCE_LIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_RESOURCE_LIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_RESOURCE_LIST"": [ 40, {
				 ""Count"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""List"": [ 4, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Count { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _CM_FULL_RESOURCE_DESCRIPTOR[] List
		{
			get
			{
				_CM_FULL_RESOURCE_DESCRIPTOR[] returnValue = new _CM_FULL_RESOURCE_DESCRIPTOR[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _CM_FULL_RESOURCE_DESCRIPTOR(_StructureData, (i * size) + _BufferOffset + 4);
				return returnValue;
			}
		}
	}
	#endregion
	#region _POOL_TRACKER_TABLE
 
	public class _POOL_TRACKER_TABLE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POOL_TRACKER_TABLE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POOL_TRACKER_TABLE"": [ 40, {
				 ""Key"": [ 0, [ ""Int32"", ""null"" ]],
				 ""NonPagedAllocs"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""NonPagedFrees"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""NonPagedBytes"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""PagedAllocs"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""PagedFrees"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""PagedBytes"": [ 32, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int32 Key { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 NonPagedAllocs { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 NonPagedFrees { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt64 NonPagedBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 PagedAllocs { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 PagedFrees { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt64 PagedBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _CM_FULL_RESOURCE_DESCRIPTOR
 
	public class _CM_FULL_RESOURCE_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_FULL_RESOURCE_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 36; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_FULL_RESOURCE_DESCRIPTOR"": [ 36, {
				 ""InterfaceType"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""_INTERFACE_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""BusNumber"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""PartialResourceList"": [ 8, [ ""_CM_PARTIAL_RESOURCE_LIST"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _INTERFACE_TYPE InterfaceType { get { return (_INTERFACE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 BusNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _CM_PARTIAL_RESOURCE_LIST PartialResourceList
		{
			get
			{
				_CM_PARTIAL_RESOURCE_LIST returnValue = new _CM_PARTIAL_RESOURCE_LIST(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS
 
	public class _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_FLAGS"": [ 4, {
				 ""Primary"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""ContainmentWarning"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""Reset"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""ThresholdExceeded"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""ResourceNotAvailable"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""LatentError"": [ 0, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""Reserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""AsULONG"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Primary
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 ContainmentWarning
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 Reset
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 ThresholdExceeded
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 ResourceNotAvailable
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 LatentError
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 Reserved
		{
			get
			{
				// start: 6  end: 32  Mask: 11111111111111111111111111000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967232) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 AsULONG { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _WMI_BUFFER_HEADER
 
	public class _WMI_BUFFER_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WMI_BUFFER_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WMI_BUFFER_HEADER"": [ 72, {
				 ""BufferSize"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""SavedOffset"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""CurrentOffset"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""ReferenceCount"": [ 12, [ ""Int32"", ""null"" ]],
				 ""TimeStamp"": [ 16, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""SequenceNumber"": [ 24, [ ""Int64"", ""null"" ]],
				 ""ClockType"": [ 32, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""Frequency"": [ 32, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":3,\""target\"":\""UInt64\""}"" ]],
				 ""SlistEntry"": [ 32, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""NextBuffer"": [ 32, [ ""Pointer"", ""{\""target\"":\""_WMI_BUFFER_HEADER\""}"" ]],
				 ""ClientContext"": [ 40, [ ""_ETW_BUFFER_CONTEXT"", ""null"" ]],
				 ""State"": [ 44, [ ""Enumeration"", ""{\""enum_name\"":\""_ETW_BUFFER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""Offset"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""BufferFlag"": [ 52, [ ""UInt16"", ""null"" ]],
				 ""BufferType"": [ 54, [ ""UInt16"", ""null"" ]],
				 ""Padding1"": [ 56, [ ""Array"", ""{\""count\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""ReferenceTime"": [ 56, [ ""_ETW_REF_CLOCK"", ""null"" ]],
				 ""GlobalEntry"": [ 56, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Pointer0"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Pointer1"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 BufferSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 SavedOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 CurrentOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public Int32 ReferenceCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 12); } }
		public _LARGE_INTEGER TimeStamp
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public Int64 SequenceNumber { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 ClockType
		{
			get
			{
				// start: 0  end: 3  Mask: 0000000000000111
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 32);
				var value2 = (value & 7) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 Frequency
		{
			get
			{
				// start: 3  end: 64  Mask: 0000000000000000000000000000000011111111111111111111111111111000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 32);
				var value2 = (value & 4294967288) >> 3;
				return (UInt64)value2;
			}
		}
		public _SINGLE_LIST_ENTRY SlistEntry
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt64 NextBuffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public _ETW_BUFFER_CONTEXT ClientContext
		{
			get
			{
				_ETW_BUFFER_CONTEXT returnValue = new _ETW_BUFFER_CONTEXT(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public _ETW_BUFFER_STATE State { get { return (_ETW_BUFFER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public UInt32 Offset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public UInt16 BufferFlag { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 52); } }
		public UInt16 BufferType { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 54); } }
		public UInt32[] Padding1
		{
			get
			{
				UInt32[] returnValue = new UInt32[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 56);
				return returnValue;
			}
		}
		public _ETW_REF_CLOCK ReferenceTime
		{
			get
			{
				_ETW_REF_CLOCK returnValue = new _ETW_REF_CLOCK(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public _LIST_ENTRY GlobalEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public UInt64 Pointer0 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 Pointer1 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
	}
	#endregion
	#region _POWER_SEQUENCE
 
	public class _POWER_SEQUENCE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POWER_SEQUENCE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POWER_SEQUENCE"": [ 12, {
				 ""SequenceD1"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""SequenceD2"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""SequenceD3"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 SequenceD1 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 SequenceD2 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 SequenceD3 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _EPROCESS_VALUES
 
	public class _EPROCESS_VALUES
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EPROCESS_VALUES(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 80; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EPROCESS_VALUES"": [ 80, {
				 ""KernelTime"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""UserTime"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""CycleTime"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""ContextSwitches"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""ReadOperationCount"": [ 32, [ ""Int64"", ""null"" ]],
				 ""WriteOperationCount"": [ 40, [ ""Int64"", ""null"" ]],
				 ""OtherOperationCount"": [ 48, [ ""Int64"", ""null"" ]],
				 ""ReadTransferCount"": [ 56, [ ""Int64"", ""null"" ]],
				 ""WriteTransferCount"": [ 64, [ ""Int64"", ""null"" ]],
				 ""OtherTransferCount"": [ 72, [ ""Int64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 KernelTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 UserTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 CycleTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 ContextSwitches { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public Int64 ReadOperationCount { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 32); } }
		public Int64 WriteOperationCount { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 40); } }
		public Int64 OtherOperationCount { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 48); } }
		public Int64 ReadTransferCount { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 56); } }
		public Int64 WriteTransferCount { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 64); } }
		public Int64 OtherTransferCount { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 72); } }
	}
	#endregion
	#region _OBJECT_REF_STACK_INFO
 
	public class _OBJECT_REF_STACK_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_REF_STACK_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_REF_STACK_INFO"": [ 12, {
				 ""Sequence"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Index"": [ 4, [ ""UInt16"", ""null"" ]],
				 ""NumTraces"": [ 6, [ ""UInt16"", ""null"" ]],
				 ""Tag"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Sequence { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt16 Index { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 4); } }
		public UInt16 NumTraces { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
		public UInt32 Tag { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _PPC_DBGKD_CONTROL_SET
 
	public class _PPC_DBGKD_CONTROL_SET
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PPC_DBGKD_CONTROL_SET(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PPC_DBGKD_CONTROL_SET"": [ 12, {
				 ""Continue"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""CurrentSymbolStart"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""CurrentSymbolEnd"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Continue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 CurrentSymbolStart { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 CurrentSymbolEnd { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _MMPFNENTRY
 
	public class _MMPFNENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMPFNENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 2; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMPFNENTRY"": [ 2, {
				 ""PageLocation"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""WriteInProgress"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""Modified"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""ReadInProgress"": [ 0, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""Byte\""}"" ]],
				 ""CacheAttribute"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":6,\""target\"":\""Byte\""}"" ]],
				 ""Priority"": [ 1, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""OnProtectedStandby"": [ 1, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""InPageError"": [ 1, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""Spare"": [ 1, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""Byte\""}"" ]],
				 ""RemovalRequested"": [ 1, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""Byte\""}"" ]],
				 ""ParityError"": [ 1, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public Byte PageLocation
		{
			get
			{
				// start: 0  end: 3  Mask: 0000000000000111
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 7) >> 0;
				return (Byte)value2;
			}
		}
		public Byte WriteInProgress
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte Modified
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 16) >> 4;
				return (Byte)value2;
			}
		}
		public Byte ReadInProgress
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 32) >> 5;
				return (Byte)value2;
			}
		}
		public Byte CacheAttribute
		{
			get
			{
				// start: 6  end: 8  Mask: 0000000011000000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 192) >> 6;
				return (Byte)value2;
			}
		}
		public Byte Priority
		{
			get
			{
				// start: 0  end: 3  Mask: 0000000000000111
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 7) >> 0;
				return (Byte)value2;
			}
		}
		public Byte OnProtectedStandby
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte InPageError
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 16) >> 4;
				return (Byte)value2;
			}
		}
		public Byte Spare
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 32) >> 5;
				return (Byte)value2;
			}
		}
		public Byte RemovalRequested
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 64) >> 6;
				return (Byte)value2;
			}
		}
		public Byte ParityError
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 128) >> 7;
				return (Byte)value2;
			}
		}
	}
	#endregion
	#region _SEGMENT_OBJECT
 
	public class _SEGMENT_OBJECT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SEGMENT_OBJECT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SEGMENT_OBJECT"": [ 64, {
				 ""BaseAddress"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""TotalNumberOfPtes"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""SizeOfSegment"": [ 16, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""NonExtendedPtes"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""ImageCommitment"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""ControlArea"": [ 32, [ ""Pointer"", ""{\""target\"":\""_CONTROL_AREA\""}"" ]],
				 ""Subsection"": [ 40, [ ""Pointer"", ""{\""target\"":\""_SUBSECTION\""}"" ]],
				 ""MmSectionFlags"": [ 48, [ ""Pointer"", ""{\""target\"":\""_MMSECTION_FLAGS\""}"" ]],
				 ""MmSubSectionFlags"": [ 56, [ ""Pointer"", ""{\""target\"":\""_MMSUBSECTION_FLAGS\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 BaseAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 TotalNumberOfPtes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public _LARGE_INTEGER SizeOfSegment
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt32 NonExtendedPtes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 ImageCommitment { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt64 ControlArea { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 Subsection { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 MmSectionFlags { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 MmSubSectionFlags { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
	}
	#endregion
	#region _PCW_CALLBACK_INFORMATION
 
	public class _PCW_CALLBACK_INFORMATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PCW_CALLBACK_INFORMATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PCW_CALLBACK_INFORMATION"": [ 40, {
				 ""AddCounter"": [ 0, [ ""_PCW_COUNTER_INFORMATION"", ""null"" ]],
				 ""RemoveCounter"": [ 0, [ ""_PCW_COUNTER_INFORMATION"", ""null"" ]],
				 ""EnumerateInstances"": [ 0, [ ""_PCW_MASK_INFORMATION"", ""null"" ]],
				 ""CollectData"": [ 0, [ ""_PCW_MASK_INFORMATION"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _PCW_COUNTER_INFORMATION AddCounter
		{
			get
			{
				_PCW_COUNTER_INFORMATION returnValue = new _PCW_COUNTER_INFORMATION(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _PCW_COUNTER_INFORMATION RemoveCounter
		{
			get
			{
				_PCW_COUNTER_INFORMATION returnValue = new _PCW_COUNTER_INFORMATION(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _PCW_MASK_INFORMATION EnumerateInstances
		{
			get
			{
				_PCW_MASK_INFORMATION returnValue = new _PCW_MASK_INFORMATION(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _PCW_MASK_INFORMATION CollectData
		{
			get
			{
				_PCW_MASK_INFORMATION returnValue = new _PCW_MASK_INFORMATION(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _TOKEN_SOURCE
 
	public class _TOKEN_SOURCE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _TOKEN_SOURCE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_TOKEN_SOURCE"": [ 16, {
				 ""SourceName"": [ 0, [ ""Array"", ""{\""count\"":8,\""target\"":\""Char\""}"" ]],
				 ""SourceIdentifier"": [ 8, [ ""_LUID"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Char[] SourceName
		{
			get
			{
				Char[] returnValue = new Char[8];
				for(int i=0; i<8; i++ )
					returnValue[i] = BitConverter.ToChar(_StructureData, (i * sizeof(Char)) + _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LUID SourceIdentifier
		{
			get
			{
				_LUID returnValue = new _LUID(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _CMHIVE
 
	public class _CMHIVE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CMHIVE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4960; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CMHIVE"": [ 4960, {
				 ""Hive"": [ 0, [ ""_HHIVE"", ""null"" ]],
				 ""FileHandles"": [ 1448, [ ""Array"", ""{\""count\"":6,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]],
				 ""NotifyList"": [ 1496, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""HiveList"": [ 1512, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""PreloadedHiveList"": [ 1528, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""HiveRundown"": [ 1544, [ ""_EX_RUNDOWN_REF"", ""null"" ]],
				 ""ParseCacheEntries"": [ 1552, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""KcbCacheTable"": [ 1568, [ ""Pointer"", ""{\""target\"":\""_CM_KEY_HASH_TABLE_ENTRY\""}"" ]],
				 ""KcbCacheTableSize"": [ 1576, [ ""UInt32"", ""null"" ]],
				 ""DeletedKcbTable"": [ 1584, [ ""Pointer"", ""{\""target\"":\""_CM_KEY_HASH_TABLE_ENTRY\""}"" ]],
				 ""DeletedKcbTableSize"": [ 1592, [ ""UInt32"", ""null"" ]],
				 ""Identity"": [ 1596, [ ""UInt32"", ""null"" ]],
				 ""HiveLock"": [ 1600, [ ""Pointer"", ""{\""target\"":\""_FAST_MUTEX\""}"" ]],
				 ""WriterLock"": [ 1608, [ ""Pointer"", ""{\""target\"":\""_FAST_MUTEX\""}"" ]],
				 ""FlusherLock"": [ 1616, [ ""Pointer"", ""{\""target\"":\""_ERESOURCE\""}"" ]],
				 ""FlushDirtyVector"": [ 1624, [ ""_RTL_BITMAP"", ""null"" ]],
				 ""FlushDirtyVectorSize"": [ 1640, [ ""UInt32"", ""null"" ]],
				 ""FlushLogEntry"": [ 1648, [ ""Pointer"", ""{\""target\"":\""Byte\""}"" ]],
				 ""FlushLogEntrySize"": [ 1656, [ ""UInt32"", ""null"" ]],
				 ""FlushHiveTruncated"": [ 1660, [ ""UInt32"", ""null"" ]],
				 ""FlushBaseBlockDirty"": [ 1664, [ ""Byte"", ""null"" ]],
				 ""CapturedUnreconciledVector"": [ 1672, [ ""_RTL_BITMAP"", ""null"" ]],
				 ""CapturedUnreconciledVectorSize"": [ 1688, [ ""UInt32"", ""null"" ]],
				 ""UnreconciledOffsetArray"": [ 1696, [ ""Pointer"", ""{\""target\"":\""CMP_OFFSET_ARRAY\""}"" ]],
				 ""UnreconciledOffsetArrayCount"": [ 1704, [ ""UInt32"", ""null"" ]],
				 ""UnreconciledBaseBlock"": [ 1712, [ ""Pointer"", ""{\""target\"":\""_HBASE_BLOCK\""}"" ]],
				 ""SecurityLock"": [ 1720, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""UseCount"": [ 1728, [ ""UInt32"", ""null"" ]],
				 ""LastShrinkHiveSize"": [ 1732, [ ""UInt32"", ""null"" ]],
				 ""ActualFileSize"": [ 1736, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""LogFileSizes"": [ 1744, [ ""Array"", ""{\""count\"":2,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""FileFullPath"": [ 1760, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""FileUserName"": [ 1776, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""HiveRootPath"": [ 1792, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""SecurityCount"": [ 1808, [ ""UInt32"", ""null"" ]],
				 ""SecurityCacheSize"": [ 1812, [ ""UInt32"", ""null"" ]],
				 ""SecurityHitHint"": [ 1816, [ ""Int32"", ""null"" ]],
				 ""SecurityCache"": [ 1824, [ ""Pointer"", ""{\""target\"":\""_CM_KEY_SECURITY_CACHE_ENTRY\""}"" ]],
				 ""SecurityHash"": [ 1832, [ ""Array"", ""{\""count\"":64,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""UnloadEventCount"": [ 2856, [ ""UInt32"", ""null"" ]],
				 ""UnloadEventArray"": [ 2864, [ ""Pointer"", ""{\""target\"":\""_KEVENT*\""}"" ]],
				 ""RootKcb"": [ 2872, [ ""Pointer"", ""{\""target\"":\""_CM_KEY_CONTROL_BLOCK\""}"" ]],
				 ""Frozen"": [ 2880, [ ""Byte"", ""null"" ]],
				 ""UnloadWorkItem"": [ 2888, [ ""Pointer"", ""{\""target\"":\""_CM_WORKITEM\""}"" ]],
				 ""UnloadWorkItemHolder"": [ 2896, [ ""_CM_WORKITEM"", ""null"" ]],
				 ""GrowOnlyMode"": [ 2936, [ ""Byte"", ""null"" ]],
				 ""GrowOffset"": [ 2940, [ ""UInt32"", ""null"" ]],
				 ""KcbConvertListHead"": [ 2944, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""KnodeConvertListHead"": [ 2960, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""CellRemapArray"": [ 2976, [ ""Pointer"", ""{\""target\"":\""_CM_CELL_REMAP_BLOCK\""}"" ]],
				 ""DirtyVectorLog"": [ 2984, [ ""_CM_DIRTY_VECTOR_LOG"", ""null"" ]],
				 ""Flags"": [ 4272, [ ""UInt32"", ""null"" ]],
				 ""TrustClassEntry"": [ 4280, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""DirtyTime"": [ 4296, [ ""UInt64"", ""null"" ]],
				 ""UnreconciledTime"": [ 4304, [ ""UInt64"", ""null"" ]],
				 ""CmRm"": [ 4312, [ ""Pointer"", ""{\""target\"":\""_CM_RM\""}"" ]],
				 ""CmRmInitFailPoint"": [ 4320, [ ""UInt32"", ""null"" ]],
				 ""CmRmInitFailStatus"": [ 4324, [ ""Int32"", ""null"" ]],
				 ""CreatorOwner"": [ 4328, [ ""Pointer"", ""{\""target\"":\""_KTHREAD\""}"" ]],
				 ""RundownThread"": [ 4336, [ ""Pointer"", ""{\""target\"":\""_KTHREAD\""}"" ]],
				 ""LastWriteTime"": [ 4344, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""FlushQueue"": [ 4352, [ ""_HIVE_WRITE_WAIT_QUEUE"", ""null"" ]],
				 ""ReconcileQueue"": [ 4376, [ ""_HIVE_WRITE_WAIT_QUEUE"", ""null"" ]],
				 ""FlushFlags"": [ 4400, [ ""UInt32"", ""null"" ]],
				 ""FlushActive"": [ 4400, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""ReconcileActive"": [ 4400, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""PrimaryFilePurged"": [ 4400, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""DiskFileBad"": [ 4400, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""PrimaryFileSizeBeforeLastFlush"": [ 4404, [ ""UInt32"", ""null"" ]],
				 ""ReferenceCount"": [ 4408, [ ""Int32"", ""null"" ]],
				 ""UnloadHistoryIndex"": [ 4412, [ ""Int32"", ""null"" ]],
				 ""UnloadHistory"": [ 4416, [ ""Array"", ""{\""count\"":128,\""target\"":\""UInt32\""}"" ]],
				 ""BootStart"": [ 4928, [ ""UInt32"", ""null"" ]],
				 ""UnaccessedStart"": [ 4932, [ ""UInt32"", ""null"" ]],
				 ""UnaccessedEnd"": [ 4936, [ ""UInt32"", ""null"" ]],
				 ""LoadedKeyCount"": [ 4940, [ ""UInt32"", ""null"" ]],
				 ""HandleClosePending"": [ 4944, [ ""UInt32"", ""null"" ]],
				 ""HandleClosePendingEvent"": [ 4952, [ ""_EX_PUSH_LOCK"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _HHIVE Hive
		{
			get
			{
				_HHIVE returnValue = new _HHIVE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64[] FileHandles
		{
			get
			{
				UInt64[] returnValue = new UInt64[6];
				int size = 8;
				for(int i=0; i<6; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 1448);
				return returnValue;
			}
		}
		public _LIST_ENTRY NotifyList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 1496);
				return returnValue;
			}
		}
		public _LIST_ENTRY HiveList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 1512);
				return returnValue;
			}
		}
		public _LIST_ENTRY PreloadedHiveList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 1528);
				return returnValue;
			}
		}
		public _EX_RUNDOWN_REF HiveRundown
		{
			get
			{
				_EX_RUNDOWN_REF returnValue = new _EX_RUNDOWN_REF(_StructureData, _BufferOffset + 1544);
				return returnValue;
			}
		}
		public _LIST_ENTRY ParseCacheEntries
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 1552);
				return returnValue;
			}
		}
		public UInt64 KcbCacheTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1568); } }
		public UInt32 KcbCacheTableSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1576); } }
		public UInt64 DeletedKcbTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1584); } }
		public UInt32 DeletedKcbTableSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1592); } }
		public UInt32 Identity { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1596); } }
		public UInt64 HiveLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1600); } }
		public UInt64 WriterLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1608); } }
		public UInt64 FlusherLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1616); } }
		public _RTL_BITMAP FlushDirtyVector
		{
			get
			{
				_RTL_BITMAP returnValue = new _RTL_BITMAP(_StructureData, _BufferOffset + 1624);
				return returnValue;
			}
		}
		public UInt32 FlushDirtyVectorSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1640); } }
		public UInt64 FlushLogEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1648); } }
		public UInt32 FlushLogEntrySize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1656); } }
		public UInt32 FlushHiveTruncated { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1660); } }
		public Byte FlushBaseBlockDirty{ get { return _StructureData[_BufferOffset +1664]; } }
		public _RTL_BITMAP CapturedUnreconciledVector
		{
			get
			{
				_RTL_BITMAP returnValue = new _RTL_BITMAP(_StructureData, _BufferOffset + 1672);
				return returnValue;
			}
		}
		public UInt32 CapturedUnreconciledVectorSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1688); } }
		public UInt64 UnreconciledOffsetArray { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1696); } }
		public UInt32 UnreconciledOffsetArrayCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1704); } }
		public UInt64 UnreconciledBaseBlock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1712); } }
		public _EX_PUSH_LOCK SecurityLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 1720);
				return returnValue;
			}
		}
		public UInt32 UseCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1728); } }
		public UInt32 LastShrinkHiveSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1732); } }
		public _LARGE_INTEGER ActualFileSize
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 1736);
				return returnValue;
			}
		}
		public _LARGE_INTEGER[] LogFileSizes
		{
			get
			{
				_LARGE_INTEGER[] returnValue = new _LARGE_INTEGER[2];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<2; i++ )
					returnValue[i] = new _LARGE_INTEGER(_StructureData, (i * size) + _BufferOffset + 1744);
				return returnValue;
			}
		}
		public _UNICODE_STRING FileFullPath
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 1760);
				return returnValue;
			}
		}
		public _UNICODE_STRING FileUserName
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 1776);
				return returnValue;
			}
		}
		public _UNICODE_STRING HiveRootPath
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 1792);
				return returnValue;
			}
		}
		public UInt32 SecurityCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1808); } }
		public UInt32 SecurityCacheSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1812); } }
		public Int32 SecurityHitHint { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 1816); } }
		public UInt64 SecurityCache { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1824); } }
		public _LIST_ENTRY[] SecurityHash
		{
			get
			{
				_LIST_ENTRY[] returnValue = new _LIST_ENTRY[64];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<64; i++ )
					returnValue[i] = new _LIST_ENTRY(_StructureData, (i * size) + _BufferOffset + 1832);
				return returnValue;
			}
		}
		public UInt32 UnloadEventCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 2856); } }
		public UInt64 UnloadEventArray { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 2864); } }
		public UInt64 RootKcb { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 2872); } }
		public Byte Frozen{ get { return _StructureData[_BufferOffset +2880]; } }
		public UInt64 UnloadWorkItem { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 2888); } }
		public _CM_WORKITEM UnloadWorkItemHolder
		{
			get
			{
				_CM_WORKITEM returnValue = new _CM_WORKITEM(_StructureData, _BufferOffset + 2896);
				return returnValue;
			}
		}
		public Byte GrowOnlyMode{ get { return _StructureData[_BufferOffset +2936]; } }
		public UInt32 GrowOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 2940); } }
		public _LIST_ENTRY KcbConvertListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 2944);
				return returnValue;
			}
		}
		public _LIST_ENTRY KnodeConvertListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 2960);
				return returnValue;
			}
		}
		public UInt64 CellRemapArray { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 2976); } }
		public _CM_DIRTY_VECTOR_LOG DirtyVectorLog
		{
			get
			{
				_CM_DIRTY_VECTOR_LOG returnValue = new _CM_DIRTY_VECTOR_LOG(_StructureData, _BufferOffset + 2984);
				return returnValue;
			}
		}
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4272); } }
		public _LIST_ENTRY TrustClassEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 4280);
				return returnValue;
			}
		}
		public UInt64 DirtyTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 4296); } }
		public UInt64 UnreconciledTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 4304); } }
		public UInt64 CmRm { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 4312); } }
		public UInt32 CmRmInitFailPoint { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4320); } }
		public Int32 CmRmInitFailStatus { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 4324); } }
		public UInt64 CreatorOwner { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 4328); } }
		public UInt64 RundownThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 4336); } }
		public _LARGE_INTEGER LastWriteTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 4344);
				return returnValue;
			}
		}
		public _HIVE_WRITE_WAIT_QUEUE FlushQueue
		{
			get
			{
				_HIVE_WRITE_WAIT_QUEUE returnValue = new _HIVE_WRITE_WAIT_QUEUE(_StructureData, _BufferOffset + 4352);
				return returnValue;
			}
		}
		public _HIVE_WRITE_WAIT_QUEUE ReconcileQueue
		{
			get
			{
				_HIVE_WRITE_WAIT_QUEUE returnValue = new _HIVE_WRITE_WAIT_QUEUE(_StructureData, _BufferOffset + 4376);
				return returnValue;
			}
		}
		public UInt32 FlushFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4400); } }
		public UInt32 FlushActive
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4400);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 ReconcileActive
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4400);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 PrimaryFilePurged
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4400);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 DiskFileBad
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4400);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 PrimaryFileSizeBeforeLastFlush { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4404); } }
		public Int32 ReferenceCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 4408); } }
		public Int32 UnloadHistoryIndex { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 4412); } }
		public UInt32[] UnloadHistory
		{
			get
			{
				UInt32[] returnValue = new UInt32[128];
				for(int i=0; i<128; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 4416);
				return returnValue;
			}
		}
		public UInt32 BootStart { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4928); } }
		public UInt32 UnaccessedStart { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4932); } }
		public UInt32 UnaccessedEnd { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4936); } }
		public UInt32 LoadedKeyCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4940); } }
		public UInt32 HandleClosePending { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4944); } }
		public _EX_PUSH_LOCK HandleClosePendingEvent
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 4952);
				return returnValue;
			}
		}
	}
	#endregion
	#region _DBGKD_QUERY_MEMORY
 
	public class _DBGKD_QUERY_MEMORY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_QUERY_MEMORY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_QUERY_MEMORY"": [ 24, {
				 ""Address"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Reserved"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""AddressSpace"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""Flags"": [ 20, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Address { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Reserved { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 AddressSpace { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
	}
	#endregion
	#region _DIRTY_PAGE_THRESHOLDS
 
	public class _DIRTY_PAGE_THRESHOLDS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DIRTY_PAGE_THRESHOLDS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DIRTY_PAGE_THRESHOLDS"": [ 56, {
				 ""DirtyPageThreshold"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""DirtyPageThresholdTop"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""DirtyPageThresholdBottom"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""DirtyPageTarget"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""AggregateAvailablePages"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""AggregateDirtyPages"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""AvailableHistory"": [ 48, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 DirtyPageThreshold { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 DirtyPageThresholdTop { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 DirtyPageThresholdBottom { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 DirtyPageTarget { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt64 AggregateAvailablePages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 AggregateDirtyPages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt32 AvailableHistory { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
	}
	#endregion
	#region DOCK_INTERFACE
 
	public class DOCK_INTERFACE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public DOCK_INTERFACE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""DOCK_INTERFACE"": [ 48, {
				 ""Size"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Version"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Context"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""InterfaceReference"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""InterfaceDereference"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ProfileDepartureSetMode"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ProfileDepartureUpdate"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Size { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 Version { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt64 Context { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 InterfaceReference { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 InterfaceDereference { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 ProfileDepartureSetMode { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 ProfileDepartureUpdate { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
	}
	#endregion
	#region CMP_OFFSET_ARRAY
 
	public class CMP_OFFSET_ARRAY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public CMP_OFFSET_ARRAY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""CMP_OFFSET_ARRAY"": [ 24, {
				 ""FileOffset"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""DataBuffer"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DataLength"": [ 16, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 FileOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 DataBuffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 DataLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _MMSUPPORT_FLAGS
 
	public class _MMSUPPORT_FLAGS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMSUPPORT_FLAGS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMSUPPORT_FLAGS"": [ 4, {
				 ""WorkingSetType"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""ForceCredits"": [ 0, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""MaximumWorkingSetHard"": [ 0, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""Byte\""}"" ]],
				 ""MinimumWorkingSetHard"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""Byte\""}"" ]],
				 ""SessionMaster"": [ 1, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""TrimmerState"": [ 1, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""Reserved"": [ 1, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""PageStealers"": [ 1, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""MemoryPriority"": [ 2, [ ""Byte"", ""null"" ]],
				 ""WsleDeleted"": [ 3, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""VmExiting"": [ 3, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""ExpansionFailed"": [ 3, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""SvmEnabled"": [ 3, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""Available"": [ 3, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public Byte WorkingSetType
		{
			get
			{
				// start: 0  end: 3  Mask: 0000000000000111
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 7) >> 0;
				return (Byte)value2;
			}
		}
		public Byte ForceCredits
		{
			get
			{
				// start: 3  end: 6  Mask: 0000000000111000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 56) >> 3;
				return (Byte)value2;
			}
		}
		public Byte MaximumWorkingSetHard
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 64) >> 6;
				return (Byte)value2;
			}
		}
		public Byte MinimumWorkingSetHard
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 128) >> 7;
				return (Byte)value2;
			}
		}
		public Byte SessionMaster
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte TrimmerState
		{
			get
			{
				// start: 1  end: 3  Mask: 0000000000000110
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 6) >> 1;
				return (Byte)value2;
			}
		}
		public Byte Reserved
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte PageStealers
		{
			get
			{
				// start: 4  end: 8  Mask: 0000000011110000
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 240) >> 4;
				return (Byte)value2;
			}
		}
		public Byte MemoryPriority{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte WsleDeleted
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte VmExiting
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte ExpansionFailed
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte SvmEnabled
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte Available
		{
			get
			{
				// start: 4  end: 8  Mask: 0000000011110000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 240) >> 4;
				return (Byte)value2;
			}
		}
	}
	#endregion
	#region _IMAGE_OPTIONAL_HEADER64
 
	public class _IMAGE_OPTIONAL_HEADER64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IMAGE_OPTIONAL_HEADER64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 240; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IMAGE_OPTIONAL_HEADER64"": [ 240, {
				 ""Magic"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""MajorLinkerVersion"": [ 2, [ ""Byte"", ""null"" ]],
				 ""MinorLinkerVersion"": [ 3, [ ""Byte"", ""null"" ]],
				 ""SizeOfCode"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""SizeOfInitializedData"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""SizeOfUninitializedData"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""AddressOfEntryPoint"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""BaseOfCode"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""ImageBase"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""SectionAlignment"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""FileAlignment"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""MajorOperatingSystemVersion"": [ 40, [ ""UInt16"", ""null"" ]],
				 ""MinorOperatingSystemVersion"": [ 42, [ ""UInt16"", ""null"" ]],
				 ""MajorImageVersion"": [ 44, [ ""UInt16"", ""null"" ]],
				 ""MinorImageVersion"": [ 46, [ ""UInt16"", ""null"" ]],
				 ""MajorSubsystemVersion"": [ 48, [ ""UInt16"", ""null"" ]],
				 ""MinorSubsystemVersion"": [ 50, [ ""UInt16"", ""null"" ]],
				 ""Win32VersionValue"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""SizeOfImage"": [ 56, [ ""UInt32"", ""null"" ]],
				 ""SizeOfHeaders"": [ 60, [ ""UInt32"", ""null"" ]],
				 ""CheckSum"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""Subsystem"": [ 68, [ ""UInt16"", ""null"" ]],
				 ""DllCharacteristics"": [ 70, [ ""UInt16"", ""null"" ]],
				 ""SizeOfStackReserve"": [ 72, [ ""UInt64"", ""null"" ]],
				 ""SizeOfStackCommit"": [ 80, [ ""UInt64"", ""null"" ]],
				 ""SizeOfHeapReserve"": [ 88, [ ""UInt64"", ""null"" ]],
				 ""SizeOfHeapCommit"": [ 96, [ ""UInt64"", ""null"" ]],
				 ""LoaderFlags"": [ 104, [ ""UInt32"", ""null"" ]],
				 ""NumberOfRvaAndSizes"": [ 108, [ ""UInt32"", ""null"" ]],
				 ""DataDirectory"": [ 112, [ ""Array"", ""{\""count\"":16,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Magic { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public Byte MajorLinkerVersion{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte MinorLinkerVersion{ get { return _StructureData[_BufferOffset +3]; } }
		public UInt32 SizeOfCode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 SizeOfInitializedData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 SizeOfUninitializedData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 AddressOfEntryPoint { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 BaseOfCode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt64 ImageBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt32 SectionAlignment { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 FileAlignment { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public UInt16 MajorOperatingSystemVersion { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 40); } }
		public UInt16 MinorOperatingSystemVersion { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 42); } }
		public UInt16 MajorImageVersion { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 44); } }
		public UInt16 MinorImageVersion { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 46); } }
		public UInt16 MajorSubsystemVersion { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 48); } }
		public UInt16 MinorSubsystemVersion { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 50); } }
		public UInt32 Win32VersionValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public UInt32 SizeOfImage { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public UInt32 SizeOfHeaders { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
		public UInt32 CheckSum { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt16 Subsystem { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 68); } }
		public UInt16 DllCharacteristics { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 70); } }
		public UInt64 SizeOfStackReserve { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 SizeOfStackCommit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 SizeOfHeapReserve { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 SizeOfHeapCommit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt32 LoaderFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 104); } }
		public UInt32 NumberOfRvaAndSizes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 108); } }
		public _IMAGE_DATA_DIRECTORY[] DataDirectory
		{
			get
			{
				_IMAGE_DATA_DIRECTORY[] returnValue = new _IMAGE_DATA_DIRECTORY[16];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<16; i++ )
					returnValue[i] = new _IMAGE_DATA_DIRECTORY(_StructureData, (i * size) + _BufferOffset + 112);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ALPC_COMPLETION_PACKET_LOOKASIDE
 
	public class _ALPC_COMPLETION_PACKET_LOOKASIDE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ALPC_COMPLETION_PACKET_LOOKASIDE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 80; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ALPC_COMPLETION_PACKET_LOOKASIDE"": [ 80, {
				 ""Lock"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Size"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""ActiveCount"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""PendingNullCount"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""PendingCheckCompletionListCount"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""PendingDelete"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""FreeListHead"": [ 32, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""CompletionPort"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CompletionKey"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Entry"": [ 56, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Lock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 Size { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 ActiveCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 PendingNullCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 PendingCheckCompletionListCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 PendingDelete { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public _SINGLE_LIST_ENTRY FreeListHead
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt64 CompletionPort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 CompletionKey { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public _ALPC_COMPLETION_PACKET_LOOKASIDE_ENTRY[] Entry
		{
			get
			{
				_ALPC_COMPLETION_PACKET_LOOKASIDE_ENTRY[] returnValue = new _ALPC_COMPLETION_PACKET_LOOKASIDE_ENTRY[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _ALPC_COMPLETION_PACKET_LOOKASIDE_ENTRY(_StructureData, (i * size) + _BufferOffset + 56);
				return returnValue;
			}
		}
	}
	#endregion
	#region _TERMINATION_PORT
 
	public class _TERMINATION_PORT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _TERMINATION_PORT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_TERMINATION_PORT"": [ 16, {
				 ""Next"": [ 0, [ ""Pointer"", ""{\""target\"":\""_TERMINATION_PORT\""}"" ]],
				 ""Port"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Next { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Port { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _MEMORY_ALLOCATION_DESCRIPTOR
 
	public class _MEMORY_ALLOCATION_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MEMORY_ALLOCATION_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MEMORY_ALLOCATION_DESCRIPTOR"": [ 40, {
				 ""ListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""MemoryType"": [ 16, [ ""Enumeration"", ""{\""enum_name\"":\""_TYPE_OF_MEMORY\"",\""target\"":\""UInt32\""}"" ]],
				 ""BasePage"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""PageCount"": [ 32, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _TYPE_OF_MEMORY MemoryType { get { return (_TYPE_OF_MEMORY)BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt64 BasePage { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 PageCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _CM_INTENT_LOCK
 
	public class _CM_INTENT_LOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_INTENT_LOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_INTENT_LOCK"": [ 16, {
				 ""OwnerCount"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""OwnerTable"": [ 8, [ ""Pointer"", ""{\""target\"":\""_CM_KCB_UOW*\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 OwnerCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 OwnerTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _PROC_IDLE_ACCOUNTING
 
	public class _PROC_IDLE_ACCOUNTING
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROC_IDLE_ACCOUNTING(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1016; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROC_IDLE_ACCOUNTING"": [ 1016, {
				 ""StateCount"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""TotalTransitions"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""ResetCount"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""AbortCount"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""StartTime"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""PriorIdleTime"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""TimeUnit"": [ 32, [ ""Enumeration"", ""{\""enum_name\"":\""PPM_IDLE_BUCKET_TIME_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""State"": [ 40, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 StateCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 TotalTransitions { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 ResetCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 AbortCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt64 StartTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 PriorIdleTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public PPM_IDLE_BUCKET_TIME_TYPE TimeUnit { get { return (PPM_IDLE_BUCKET_TIME_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public _PROC_IDLE_STATE_ACCOUNTING[] State
		{
			get
			{
				_PROC_IDLE_STATE_ACCOUNTING[] returnValue = new _PROC_IDLE_STATE_ACCOUNTING[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _PROC_IDLE_STATE_ACCOUNTING(_StructureData, (i * size) + _BufferOffset + 40);
				return returnValue;
			}
		}
	}
	#endregion
	#region _THERMAL_INFORMATION
 
	public class _THERMAL_INFORMATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _THERMAL_INFORMATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 88; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_THERMAL_INFORMATION"": [ 88, {
				 ""ThermalStamp"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ThermalConstant1"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""ThermalConstant2"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Processors"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""SamplingPeriod"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""CurrentTemperature"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""PassiveTripPoint"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""CriticalTripPoint"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""ActiveTripPointCount"": [ 40, [ ""Byte"", ""null"" ]],
				 ""ActiveTripPoint"": [ 44, [ ""Array"", ""{\""count\"":10,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 ThermalStamp { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 ThermalConstant1 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 ThermalConstant2 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt64 Processors { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 SamplingPeriod { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 CurrentTemperature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 PassiveTripPoint { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 CriticalTripPoint { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public Byte ActiveTripPointCount{ get { return _StructureData[_BufferOffset +40]; } }
		public UInt32[] ActiveTripPoint
		{
			get
			{
				UInt32[] returnValue = new UInt32[10];
				for(int i=0; i<10; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 44);
				return returnValue;
			}
		}
	}
	#endregion
	#region _SEP_LOWBOX_NUMBER_MAPPING
 
	public class _SEP_LOWBOX_NUMBER_MAPPING
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SEP_LOWBOX_NUMBER_MAPPING(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SEP_LOWBOX_NUMBER_MAPPING"": [ 40, {
				 ""Lock"": [ 0, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""Bitmap"": [ 8, [ ""_RTL_BITMAP"", ""null"" ]],
				 ""HashTable"": [ 24, [ ""Pointer"", ""{\""target\"":\""_RTL_DYNAMIC_HASH_TABLE\""}"" ]],
				 ""Active"": [ 32, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _EX_PUSH_LOCK Lock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _RTL_BITMAP Bitmap
		{
			get
			{
				_RTL_BITMAP returnValue = new _RTL_BITMAP(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt64 HashTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public Byte Active{ get { return _StructureData[_BufferOffset +32]; } }
	}
	#endregion
	#region _MAPPED_FILE_SEGMENT
 
	public class _MAPPED_FILE_SEGMENT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MAPPED_FILE_SEGMENT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MAPPED_FILE_SEGMENT"": [ 48, {
				 ""ControlArea"": [ 0, [ ""Pointer"", ""{\""target\"":\""_CONTROL_AREA\""}"" ]],
				 ""TotalNumberOfPtes"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""SegmentFlags"": [ 12, [ ""_SEGMENT_FLAGS"", ""null"" ]],
				 ""NumberOfCommittedPages"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""SizeOfSegment"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""ExtendInfo"": [ 32, [ ""Pointer"", ""{\""target\"":\""_MMEXTEND_INFO\""}"" ]],
				 ""BasedAddress"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SegmentLock"": [ 40, [ ""_EX_PUSH_LOCK"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ControlArea { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 TotalNumberOfPtes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public _SEGMENT_FLAGS SegmentFlags
		{
			get
			{
				_SEGMENT_FLAGS returnValue = new _SEGMENT_FLAGS(_StructureData, _BufferOffset + 12);
				return returnValue;
			}
		}
		public UInt64 NumberOfCommittedPages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 SizeOfSegment { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 ExtendInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 BasedAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public _EX_PUSH_LOCK SegmentLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
	}
	#endregion
	#region _TEB64
 
	public class _TEB64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _TEB64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 6176; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_TEB64"": [ 6176, {
				 ""NtTib"": [ 0, [ ""_NT_TIB64"", ""null"" ]],
				 ""EnvironmentPointer"": [ 56, [ ""UInt64"", ""null"" ]],
				 ""ClientId"": [ 64, [ ""_CLIENT_ID64"", ""null"" ]],
				 ""ActiveRpcHandle"": [ 80, [ ""UInt64"", ""null"" ]],
				 ""ThreadLocalStoragePointer"": [ 88, [ ""UInt64"", ""null"" ]],
				 ""ProcessEnvironmentBlock"": [ 96, [ ""UInt64"", ""null"" ]],
				 ""LastErrorValue"": [ 104, [ ""UInt32"", ""null"" ]],
				 ""CountOfOwnedCriticalSections"": [ 108, [ ""UInt32"", ""null"" ]],
				 ""CsrClientThread"": [ 112, [ ""UInt64"", ""null"" ]],
				 ""Win32ThreadInfo"": [ 120, [ ""UInt64"", ""null"" ]],
				 ""User32Reserved"": [ 128, [ ""Array"", ""{\""count\"":26,\""target\"":\""UInt32\""}"" ]],
				 ""UserReserved"": [ 232, [ ""Array"", ""{\""count\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""WOW32Reserved"": [ 256, [ ""UInt64"", ""null"" ]],
				 ""CurrentLocale"": [ 264, [ ""UInt32"", ""null"" ]],
				 ""FpSoftwareStatusRegister"": [ 268, [ ""UInt32"", ""null"" ]],
				 ""SystemReserved1"": [ 272, [ ""Array"", ""{\""count\"":54,\""target\"":\""UInt64\""}"" ]],
				 ""ExceptionCode"": [ 704, [ ""Int32"", ""null"" ]],
				 ""Padding0"": [ 708, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""ActivationContextStackPointer"": [ 712, [ ""UInt64"", ""null"" ]],
				 ""SpareBytes"": [ 720, [ ""Array"", ""{\""count\"":24,\""target\"":\""Byte\""}"" ]],
				 ""TxFsContext"": [ 744, [ ""UInt32"", ""null"" ]],
				 ""Padding1"": [ 748, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""GdiTebBatch"": [ 752, [ ""_GDI_TEB_BATCH64"", ""null"" ]],
				 ""RealClientId"": [ 2008, [ ""_CLIENT_ID64"", ""null"" ]],
				 ""GdiCachedProcessHandle"": [ 2024, [ ""UInt64"", ""null"" ]],
				 ""GdiClientPID"": [ 2032, [ ""UInt32"", ""null"" ]],
				 ""GdiClientTID"": [ 2036, [ ""UInt32"", ""null"" ]],
				 ""GdiThreadLocalInfo"": [ 2040, [ ""UInt64"", ""null"" ]],
				 ""Win32ClientInfo"": [ 2048, [ ""Array"", ""{\""count\"":62,\""target\"":\""UInt64\""}"" ]],
				 ""glDispatchTable"": [ 2544, [ ""Array"", ""{\""count\"":233,\""target\"":\""UInt64\""}"" ]],
				 ""glReserved1"": [ 4408, [ ""Array"", ""{\""count\"":29,\""target\"":\""UInt64\""}"" ]],
				 ""glReserved2"": [ 4640, [ ""UInt64"", ""null"" ]],
				 ""glSectionInfo"": [ 4648, [ ""UInt64"", ""null"" ]],
				 ""glSection"": [ 4656, [ ""UInt64"", ""null"" ]],
				 ""glTable"": [ 4664, [ ""UInt64"", ""null"" ]],
				 ""glCurrentRC"": [ 4672, [ ""UInt64"", ""null"" ]],
				 ""glContext"": [ 4680, [ ""UInt64"", ""null"" ]],
				 ""LastStatusValue"": [ 4688, [ ""UInt32"", ""null"" ]],
				 ""Padding2"": [ 4692, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""StaticUnicodeString"": [ 4696, [ ""_STRING64"", ""null"" ]],
				 ""StaticUnicodeBuffer"": [ 4712, [ ""Array"", ""{\""count\"":261,\""target\"":\""UInt16\""}"" ]],
				 ""Padding3"": [ 5234, [ ""Array"", ""{\""count\"":6,\""target\"":\""Byte\""}"" ]],
				 ""DeallocationStack"": [ 5240, [ ""UInt64"", ""null"" ]],
				 ""TlsSlots"": [ 5248, [ ""Array"", ""{\""count\"":64,\""target\"":\""UInt64\""}"" ]],
				 ""TlsLinks"": [ 5760, [ ""LIST_ENTRY64"", ""null"" ]],
				 ""Vdm"": [ 5776, [ ""UInt64"", ""null"" ]],
				 ""ReservedForNtRpc"": [ 5784, [ ""UInt64"", ""null"" ]],
				 ""DbgSsReserved"": [ 5792, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt64\""}"" ]],
				 ""HardErrorMode"": [ 5808, [ ""UInt32"", ""null"" ]],
				 ""Padding4"": [ 5812, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""Instrumentation"": [ 5816, [ ""Array"", ""{\""count\"":11,\""target\"":\""UInt64\""}"" ]],
				 ""ActivityId"": [ 5904, [ ""_GUID"", ""null"" ]],
				 ""SubProcessTag"": [ 5920, [ ""UInt64"", ""null"" ]],
				 ""PerflibData"": [ 5928, [ ""UInt64"", ""null"" ]],
				 ""EtwTraceData"": [ 5936, [ ""UInt64"", ""null"" ]],
				 ""WinSockData"": [ 5944, [ ""UInt64"", ""null"" ]],
				 ""GdiBatchCount"": [ 5952, [ ""UInt32"", ""null"" ]],
				 ""CurrentIdealProcessor"": [ 5956, [ ""_PROCESSOR_NUMBER"", ""null"" ]],
				 ""IdealProcessorValue"": [ 5956, [ ""UInt32"", ""null"" ]],
				 ""ReservedPad0"": [ 5956, [ ""Byte"", ""null"" ]],
				 ""ReservedPad1"": [ 5957, [ ""Byte"", ""null"" ]],
				 ""ReservedPad2"": [ 5958, [ ""Byte"", ""null"" ]],
				 ""IdealProcessor"": [ 5959, [ ""Byte"", ""null"" ]],
				 ""GuaranteedStackBytes"": [ 5960, [ ""UInt32"", ""null"" ]],
				 ""Padding5"": [ 5964, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""ReservedForPerf"": [ 5968, [ ""UInt64"", ""null"" ]],
				 ""ReservedForOle"": [ 5976, [ ""UInt64"", ""null"" ]],
				 ""WaitingOnLoaderLock"": [ 5984, [ ""UInt32"", ""null"" ]],
				 ""Padding6"": [ 5988, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""SavedPriorityState"": [ 5992, [ ""UInt64"", ""null"" ]],
				 ""ReservedForCodeCoverage"": [ 6000, [ ""UInt64"", ""null"" ]],
				 ""ThreadPoolData"": [ 6008, [ ""UInt64"", ""null"" ]],
				 ""TlsExpansionSlots"": [ 6016, [ ""UInt64"", ""null"" ]],
				 ""DeallocationBStore"": [ 6024, [ ""UInt64"", ""null"" ]],
				 ""BStoreLimit"": [ 6032, [ ""UInt64"", ""null"" ]],
				 ""MuiGeneration"": [ 6040, [ ""UInt32"", ""null"" ]],
				 ""IsImpersonating"": [ 6044, [ ""UInt32"", ""null"" ]],
				 ""NlsCache"": [ 6048, [ ""UInt64"", ""null"" ]],
				 ""pShimData"": [ 6056, [ ""UInt64"", ""null"" ]],
				 ""HeapVirtualAffinity"": [ 6064, [ ""UInt16"", ""null"" ]],
				 ""LowFragHeapDataSlot"": [ 6066, [ ""UInt16"", ""null"" ]],
				 ""Padding7"": [ 6068, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""CurrentTransactionHandle"": [ 6072, [ ""UInt64"", ""null"" ]],
				 ""ActiveFrame"": [ 6080, [ ""UInt64"", ""null"" ]],
				 ""FlsData"": [ 6088, [ ""UInt64"", ""null"" ]],
				 ""PreferredLanguages"": [ 6096, [ ""UInt64"", ""null"" ]],
				 ""UserPrefLanguages"": [ 6104, [ ""UInt64"", ""null"" ]],
				 ""MergedPrefLanguages"": [ 6112, [ ""UInt64"", ""null"" ]],
				 ""MuiImpersonation"": [ 6120, [ ""UInt32"", ""null"" ]],
				 ""CrossTebFlags"": [ 6124, [ ""UInt16"", ""null"" ]],
				 ""SpareCrossTebBits"": [ 6124, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""SameTebFlags"": [ 6126, [ ""UInt16"", ""null"" ]],
				 ""SafeThunkCall"": [ 6126, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""InDebugPrint"": [ 6126, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt16\""}"" ]],
				 ""HasFiberData"": [ 6126, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt16\""}"" ]],
				 ""SkipThreadAttach"": [ 6126, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt16\""}"" ]],
				 ""WerInShipAssertCode"": [ 6126, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt16\""}"" ]],
				 ""RanProcessInit"": [ 6126, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt16\""}"" ]],
				 ""ClonedThread"": [ 6126, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt16\""}"" ]],
				 ""SuppressDebugMsg"": [ 6126, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt16\""}"" ]],
				 ""DisableUserStackWalk"": [ 6126, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt16\""}"" ]],
				 ""RtlExceptionAttached"": [ 6126, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt16\""}"" ]],
				 ""InitialThread"": [ 6126, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt16\""}"" ]],
				 ""SessionAware"": [ 6126, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt16\""}"" ]],
				 ""SpareSameTebBits"": [ 6126, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":12,\""target\"":\""UInt16\""}"" ]],
				 ""TxnScopeEnterCallback"": [ 6128, [ ""UInt64"", ""null"" ]],
				 ""TxnScopeExitCallback"": [ 6136, [ ""UInt64"", ""null"" ]],
				 ""TxnScopeContext"": [ 6144, [ ""UInt64"", ""null"" ]],
				 ""LockCount"": [ 6152, [ ""UInt32"", ""null"" ]],
				 ""SpareUlong0"": [ 6156, [ ""UInt32"", ""null"" ]],
				 ""ResourceRetValue"": [ 6160, [ ""UInt64"", ""null"" ]],
				 ""ReservedForWdf"": [ 6168, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _NT_TIB64 NtTib
		{
			get
			{
				_NT_TIB64 returnValue = new _NT_TIB64(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 EnvironmentPointer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public _CLIENT_ID64 ClientId
		{
			get
			{
				_CLIENT_ID64 returnValue = new _CLIENT_ID64(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public UInt64 ActiveRpcHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 ThreadLocalStoragePointer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 ProcessEnvironmentBlock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt32 LastErrorValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 104); } }
		public UInt32 CountOfOwnedCriticalSections { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 108); } }
		public UInt64 CsrClientThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 112); } }
		public UInt64 Win32ThreadInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 120); } }
		public UInt32[] User32Reserved
		{
			get
			{
				UInt32[] returnValue = new UInt32[26];
				for(int i=0; i<26; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 128);
				return returnValue;
			}
		}
		public UInt32[] UserReserved
		{
			get
			{
				UInt32[] returnValue = new UInt32[5];
				for(int i=0; i<5; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 232);
				return returnValue;
			}
		}
		public UInt64 WOW32Reserved { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 256); } }
		public UInt32 CurrentLocale { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 264); } }
		public UInt32 FpSoftwareStatusRegister { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 268); } }
		public UInt64[] SystemReserved1
		{
			get
			{
				UInt64[] returnValue = new UInt64[54];
				for(int i=0; i<54; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 272);
				return returnValue;
			}
		}
		public Int32 ExceptionCode { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 704); } }
		public Byte[] Padding0
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 708];
				return returnValue;
			}
		}
		public UInt64 ActivationContextStackPointer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 712); } }
		public Byte[] SpareBytes
		{
			get
			{
				Byte[] returnValue = new Byte[24];
				for(int i=0; i<24; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 720];
				return returnValue;
			}
		}
		public UInt32 TxFsContext { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 744); } }
		public Byte[] Padding1
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 748];
				return returnValue;
			}
		}
		public _GDI_TEB_BATCH64 GdiTebBatch
		{
			get
			{
				_GDI_TEB_BATCH64 returnValue = new _GDI_TEB_BATCH64(_StructureData, _BufferOffset + 752);
				return returnValue;
			}
		}
		public _CLIENT_ID64 RealClientId
		{
			get
			{
				_CLIENT_ID64 returnValue = new _CLIENT_ID64(_StructureData, _BufferOffset + 2008);
				return returnValue;
			}
		}
		public UInt64 GdiCachedProcessHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 2024); } }
		public UInt32 GdiClientPID { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 2032); } }
		public UInt32 GdiClientTID { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 2036); } }
		public UInt64 GdiThreadLocalInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 2040); } }
		public UInt64[] Win32ClientInfo
		{
			get
			{
				UInt64[] returnValue = new UInt64[62];
				for(int i=0; i<62; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 2048);
				return returnValue;
			}
		}
		public UInt64[] glDispatchTable
		{
			get
			{
				UInt64[] returnValue = new UInt64[233];
				for(int i=0; i<233; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 2544);
				return returnValue;
			}
		}
		public UInt64[] glReserved1
		{
			get
			{
				UInt64[] returnValue = new UInt64[29];
				for(int i=0; i<29; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 4408);
				return returnValue;
			}
		}
		public UInt64 glReserved2 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 4640); } }
		public UInt64 glSectionInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 4648); } }
		public UInt64 glSection { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 4656); } }
		public UInt64 glTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 4664); } }
		public UInt64 glCurrentRC { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 4672); } }
		public UInt64 glContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 4680); } }
		public UInt32 LastStatusValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4688); } }
		public Byte[] Padding2
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 4692];
				return returnValue;
			}
		}
		public _STRING64 StaticUnicodeString
		{
			get
			{
				_STRING64 returnValue = new _STRING64(_StructureData, _BufferOffset + 4696);
				return returnValue;
			}
		}
		public UInt16[] StaticUnicodeBuffer
		{
			get
			{
				UInt16[] returnValue = new UInt16[261];
				for(int i=0; i<261; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 4712);
				return returnValue;
			}
		}
		public Byte[] Padding3
		{
			get
			{
				Byte[] returnValue = new Byte[6];
				for(int i=0; i<6; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 5234];
				return returnValue;
			}
		}
		public UInt64 DeallocationStack { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 5240); } }
		public UInt64[] TlsSlots
		{
			get
			{
				UInt64[] returnValue = new UInt64[64];
				for(int i=0; i<64; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 5248);
				return returnValue;
			}
		}
		public LIST_ENTRY64 TlsLinks
		{
			get
			{
				LIST_ENTRY64 returnValue = new LIST_ENTRY64(_StructureData, _BufferOffset + 5760);
				return returnValue;
			}
		}
		public UInt64 Vdm { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 5776); } }
		public UInt64 ReservedForNtRpc { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 5784); } }
		public UInt64[] DbgSsReserved
		{
			get
			{
				UInt64[] returnValue = new UInt64[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 5792);
				return returnValue;
			}
		}
		public UInt32 HardErrorMode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 5808); } }
		public Byte[] Padding4
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 5812];
				return returnValue;
			}
		}
		public UInt64[] Instrumentation
		{
			get
			{
				UInt64[] returnValue = new UInt64[11];
				for(int i=0; i<11; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 5816);
				return returnValue;
			}
		}
		public _GUID ActivityId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 5904);
				return returnValue;
			}
		}
		public UInt64 SubProcessTag { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 5920); } }
		public UInt64 PerflibData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 5928); } }
		public UInt64 EtwTraceData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 5936); } }
		public UInt64 WinSockData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 5944); } }
		public UInt32 GdiBatchCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 5952); } }
		public _PROCESSOR_NUMBER CurrentIdealProcessor
		{
			get
			{
				_PROCESSOR_NUMBER returnValue = new _PROCESSOR_NUMBER(_StructureData, _BufferOffset + 5956);
				return returnValue;
			}
		}
		public UInt32 IdealProcessorValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 5956); } }
		public Byte ReservedPad0{ get { return _StructureData[_BufferOffset +5956]; } }
		public Byte ReservedPad1{ get { return _StructureData[_BufferOffset +5957]; } }
		public Byte ReservedPad2{ get { return _StructureData[_BufferOffset +5958]; } }
		public Byte IdealProcessor{ get { return _StructureData[_BufferOffset +5959]; } }
		public UInt32 GuaranteedStackBytes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 5960); } }
		public Byte[] Padding5
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 5964];
				return returnValue;
			}
		}
		public UInt64 ReservedForPerf { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 5968); } }
		public UInt64 ReservedForOle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 5976); } }
		public UInt32 WaitingOnLoaderLock { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 5984); } }
		public Byte[] Padding6
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 5988];
				return returnValue;
			}
		}
		public UInt64 SavedPriorityState { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 5992); } }
		public UInt64 ReservedForCodeCoverage { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6000); } }
		public UInt64 ThreadPoolData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6008); } }
		public UInt64 TlsExpansionSlots { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6016); } }
		public UInt64 DeallocationBStore { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6024); } }
		public UInt64 BStoreLimit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6032); } }
		public UInt32 MuiGeneration { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 6040); } }
		public UInt32 IsImpersonating { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 6044); } }
		public UInt64 NlsCache { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6048); } }
		public UInt64 pShimData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6056); } }
		public UInt16 HeapVirtualAffinity { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6064); } }
		public UInt16 LowFragHeapDataSlot { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6066); } }
		public Byte[] Padding7
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 6068];
				return returnValue;
			}
		}
		public UInt64 CurrentTransactionHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6072); } }
		public UInt64 ActiveFrame { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6080); } }
		public UInt64 FlsData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6088); } }
		public UInt64 PreferredLanguages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6096); } }
		public UInt64 UserPrefLanguages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6104); } }
		public UInt64 MergedPrefLanguages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6112); } }
		public UInt32 MuiImpersonation { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 6120); } }
		public UInt16 CrossTebFlags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6124); } }
		public UInt16 SpareCrossTebBits
		{
			get
			{
				// start: 0  end: 16  Mask: 1111111111111111
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6124);
				var value2 = (value & 65535) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 SameTebFlags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126); } }
		public UInt16 SafeThunkCall
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 1) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 InDebugPrint
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 2) >> 1;
				return (UInt16)value2;
			}
		}
		public UInt16 HasFiberData
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 4) >> 2;
				return (UInt16)value2;
			}
		}
		public UInt16 SkipThreadAttach
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 8) >> 3;
				return (UInt16)value2;
			}
		}
		public UInt16 WerInShipAssertCode
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 16) >> 4;
				return (UInt16)value2;
			}
		}
		public UInt16 RanProcessInit
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 32) >> 5;
				return (UInt16)value2;
			}
		}
		public UInt16 ClonedThread
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 64) >> 6;
				return (UInt16)value2;
			}
		}
		public UInt16 SuppressDebugMsg
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 128) >> 7;
				return (UInt16)value2;
			}
		}
		public UInt16 DisableUserStackWalk
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 256) >> 8;
				return (UInt16)value2;
			}
		}
		public UInt16 RtlExceptionAttached
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 512) >> 9;
				return (UInt16)value2;
			}
		}
		public UInt16 InitialThread
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 1024) >> 10;
				return (UInt16)value2;
			}
		}
		public UInt16 SessionAware
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 2048) >> 11;
				return (UInt16)value2;
			}
		}
		public UInt16 SpareSameTebBits
		{
			get
			{
				// start: 12  end: 16  Mask: 1111000000000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 6126);
				var value2 = (value & 61440) >> 12;
				return (UInt16)value2;
			}
		}
		public UInt64 TxnScopeEnterCallback { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6128); } }
		public UInt64 TxnScopeExitCallback { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6136); } }
		public UInt64 TxnScopeContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6144); } }
		public UInt32 LockCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 6152); } }
		public UInt32 SpareUlong0 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 6156); } }
		public UInt64 ResourceRetValue { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6160); } }
		public UInt64 ReservedForWdf { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 6168); } }
	}
	#endregion
	#region _GDI_TEB_BATCH
 
	public class _GDI_TEB_BATCH
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _GDI_TEB_BATCH(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1256; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_GDI_TEB_BATCH"": [ 1256, {
				 ""Offset"": [ 0, [ ""BitField"", ""{\""end_bit\"":31,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""HasRenderingCommand"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":31,\""target\"":\""UInt32\""}"" ]],
				 ""HDC"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""Buffer"": [ 16, [ ""Array"", ""{\""count\"":310,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Offset
		{
			get
			{
				// start: 0  end: 31  Mask: 1111111111111111111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2147483647) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 HasRenderingCommand
		{
			get
			{
				// start: 31  end: 32  Mask: 10000000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2147483648) >> 31;
				return (UInt32)value2;
			}
		}
		public UInt64 HDC { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32[] Buffer
		{
			get
			{
				UInt32[] returnValue = new UInt32[310];
				for(int i=0; i<310; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MM_DRIVER_VERIFIER_DATA
 
	public class _MM_DRIVER_VERIFIER_DATA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MM_DRIVER_VERIFIER_DATA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 160; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MM_DRIVER_VERIFIER_DATA"": [ 160, {
				 ""Level"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""RaiseIrqls"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""AcquireSpinLocks"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""SynchronizeExecutions"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""AllocationsAttempted"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""AllocationsSucceeded"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""AllocationsSucceededSpecialPool"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""AllocationsWithNoTag"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""TrimRequests"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""Trims"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""AllocationsFailed"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""AllocationsFailedDeliberately"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""Loads"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""Unloads"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""UnTrackedPool"": [ 56, [ ""UInt32"", ""null"" ]],
				 ""UserTrims"": [ 60, [ ""UInt32"", ""null"" ]],
				 ""CurrentPagedPoolAllocations"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""CurrentNonPagedPoolAllocations"": [ 68, [ ""UInt32"", ""null"" ]],
				 ""PeakPagedPoolAllocations"": [ 72, [ ""UInt32"", ""null"" ]],
				 ""PeakNonPagedPoolAllocations"": [ 76, [ ""UInt32"", ""null"" ]],
				 ""PagedBytes"": [ 80, [ ""UInt64"", ""null"" ]],
				 ""NonPagedBytes"": [ 88, [ ""UInt64"", ""null"" ]],
				 ""PeakPagedBytes"": [ 96, [ ""UInt64"", ""null"" ]],
				 ""PeakNonPagedBytes"": [ 104, [ ""UInt64"", ""null"" ]],
				 ""BurstAllocationsFailedDeliberately"": [ 112, [ ""UInt32"", ""null"" ]],
				 ""SessionTrims"": [ 116, [ ""UInt32"", ""null"" ]],
				 ""OptionChanges"": [ 120, [ ""UInt32"", ""null"" ]],
				 ""VerifyMode"": [ 124, [ ""UInt32"", ""null"" ]],
				 ""PreviousBucketName"": [ 128, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""ActivityCounter"": [ 144, [ ""UInt32"", ""null"" ]],
				 ""PreviousActivityCounter"": [ 148, [ ""UInt32"", ""null"" ]],
				 ""WorkerTrimRequests"": [ 152, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Level { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 RaiseIrqls { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 AcquireSpinLocks { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 SynchronizeExecutions { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 AllocationsAttempted { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 AllocationsSucceeded { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 AllocationsSucceededSpecialPool { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 AllocationsWithNoTag { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 TrimRequests { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 Trims { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public UInt32 AllocationsFailed { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32 AllocationsFailedDeliberately { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public UInt32 Loads { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public UInt32 Unloads { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public UInt32 UnTrackedPool { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public UInt32 UserTrims { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
		public UInt32 CurrentPagedPoolAllocations { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt32 CurrentNonPagedPoolAllocations { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 68); } }
		public UInt32 PeakPagedPoolAllocations { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 72); } }
		public UInt32 PeakNonPagedPoolAllocations { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 76); } }
		public UInt64 PagedBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 NonPagedBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 PeakPagedBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt64 PeakNonPagedBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public UInt32 BurstAllocationsFailedDeliberately { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 112); } }
		public UInt32 SessionTrims { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 116); } }
		public UInt32 OptionChanges { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 120); } }
		public UInt32 VerifyMode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 124); } }
		public _UNICODE_STRING PreviousBucketName
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 128);
				return returnValue;
			}
		}
		public UInt32 ActivityCounter { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 144); } }
		public UInt32 PreviousActivityCounter { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 148); } }
		public UInt32 WorkerTrimRequests { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 152); } }
	}
	#endregion
	#region _INVERTED_FUNCTION_TABLE
 
	public class _INVERTED_FUNCTION_TABLE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _INVERTED_FUNCTION_TABLE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 6160; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_INVERTED_FUNCTION_TABLE"": [ 6160, {
				 ""CurrentSize"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""MaximumSize"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Epoch"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Overflow"": [ 12, [ ""Byte"", ""null"" ]],
				 ""TableEntry"": [ 16, [ ""Array"", ""{\""count\"":256,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 CurrentSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 MaximumSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 Epoch { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public Byte Overflow{ get { return _StructureData[_BufferOffset +12]; } }
		public _INVERTED_FUNCTION_TABLE_ENTRY[] TableEntry
		{
			get
			{
				_INVERTED_FUNCTION_TABLE_ENTRY[] returnValue = new _INVERTED_FUNCTION_TABLE_ENTRY[256];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<256; i++ )
					returnValue[i] = new _INVERTED_FUNCTION_TABLE_ENTRY(_StructureData, (i * size) + _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _HIVE_WRITE_WAIT_QUEUE
 
	public class _HIVE_WRITE_WAIT_QUEUE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HIVE_WRITE_WAIT_QUEUE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HIVE_WRITE_WAIT_QUEUE"": [ 24, {
				 ""ActiveThread"": [ 0, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]],
				 ""WaitList"": [ 8, [ ""Pointer"", ""{\""target\"":\""_HIVE_WAIT_PACKET\""}"" ]],
				 ""OwnerBoosted"": [ 16, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ActiveThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 WaitList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 OwnerBoosted { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _VI_FAULT_TRACE
 
	public class _VI_FAULT_TRACE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VI_FAULT_TRACE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VI_FAULT_TRACE"": [ 72, {
				 ""Thread"": [ 0, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]],
				 ""StackTrace"": [ 8, [ ""Array"", ""{\""count\"":8,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Thread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64[] StackTrace
		{
			get
			{
				UInt64[] returnValue = new UInt64[8];
				int size = 8;
				for(int i=0; i<8; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _GENERIC_MAPPING
 
	public class _GENERIC_MAPPING
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _GENERIC_MAPPING(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_GENERIC_MAPPING"": [ 16, {
				 ""GenericRead"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""GenericWrite"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""GenericExecute"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""GenericAll"": [ 12, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 GenericRead { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 GenericWrite { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 GenericExecute { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 GenericAll { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
	}
	#endregion
	#region _OBJECT_HANDLE_COUNT_DATABASE
 
	public class _OBJECT_HANDLE_COUNT_DATABASE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_HANDLE_COUNT_DATABASE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_HANDLE_COUNT_DATABASE"": [ 24, {
				 ""CountEntries"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""HandleCountEntries"": [ 8, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 CountEntries { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _OBJECT_HANDLE_COUNT_ENTRY[] HandleCountEntries
		{
			get
			{
				_OBJECT_HANDLE_COUNT_ENTRY[] returnValue = new _OBJECT_HANDLE_COUNT_ENTRY[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _OBJECT_HANDLE_COUNT_ENTRY(_StructureData, (i * size) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UMS_CONTROL_BLOCK
 
	public class _UMS_CONTROL_BLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UMS_CONTROL_BLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 144; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UMS_CONTROL_BLOCK"": [ 144, {
				 ""UmsContext"": [ 0, [ ""Pointer"", ""{\""target\"":\""_RTL_UMS_CONTEXT\""}"" ]],
				 ""CompletionListEntry"": [ 8, [ ""Pointer"", ""{\""target\"":\""_SINGLE_LIST_ENTRY\""}"" ]],
				 ""CompletionListEvent"": [ 16, [ ""Pointer"", ""{\""target\"":\""_KEVENT\""}"" ]],
				 ""ServiceSequenceNumber"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""UmsQueue"": [ 32, [ ""_KQUEUE"", ""null"" ]],
				 ""QueueEntry"": [ 96, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""YieldingUmsContext"": [ 112, [ ""Pointer"", ""{\""target\"":\""_RTL_UMS_CONTEXT\""}"" ]],
				 ""YieldingParam"": [ 120, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""UmsTeb"": [ 128, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""UmsAssociatedQueue"": [ 32, [ ""Pointer"", ""{\""target\"":\""_KQUEUE\""}"" ]],
				 ""UmsQueueListEntry"": [ 40, [ ""Pointer"", ""{\""target\"":\""_LIST_ENTRY\""}"" ]],
				 ""UmsWaitEvent"": [ 48, [ ""_KEVENT"", ""null"" ]],
				 ""StagingArea"": [ 72, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""UmsPrimaryDeliveredContext"": [ 80, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""UmsAssociatedQueueUsed"": [ 80, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""UmsThreadParked"": [ 80, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""UmsFlags"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""TebSelector"": [ 136, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 UmsContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 CompletionListEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 CompletionListEvent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 ServiceSequenceNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public _KQUEUE UmsQueue
		{
			get
			{
				_KQUEUE returnValue = new _KQUEUE(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public _LIST_ENTRY QueueEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 96);
				return returnValue;
			}
		}
		public UInt64 YieldingUmsContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 112); } }
		public UInt64 YieldingParam { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 120); } }
		public UInt64 UmsTeb { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 128); } }
		public UInt64 UmsAssociatedQueue { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 UmsQueueListEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public _KEVENT UmsWaitEvent
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public UInt64 StagingArea { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt32 UmsPrimaryDeliveredContext
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 80);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 UmsAssociatedQueueUsed
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 80);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 UmsThreadParked
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 80);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 UmsFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt16 TebSelector { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 136); } }
	}
	#endregion
	#region _OWNER_ENTRY
 
	public class _OWNER_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OWNER_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OWNER_ENTRY"": [ 16, {
				 ""OwnerThread"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""IoPriorityBoosted"": [ 8, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""OwnerReferenced"": [ 8, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""OwnerCount"": [ 8, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""TableSize"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 OwnerThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 IoPriorityBoosted
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 8);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 OwnerReferenced
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 8);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 OwnerCount
		{
			get
			{
				// start: 2  end: 32  Mask: 11111111111111111111111111111100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 8);
				var value2 = (value & 4294967292) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 TableSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _ETIMER
 
	public class _ETIMER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETIMER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 312; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETIMER"": [ 312, {
				 ""KeTimer"": [ 0, [ ""_KTIMER"", ""null"" ]],
				 ""Lock"": [ 64, [ ""UInt64"", ""null"" ]],
				 ""TimerApc"": [ 72, [ ""_KAPC"", ""null"" ]],
				 ""TimerDpc"": [ 160, [ ""_KDPC"", ""null"" ]],
				 ""ActiveTimerListEntry"": [ 224, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Period"": [ 240, [ ""UInt32"", ""null"" ]],
				 ""TimerFlags"": [ 244, [ ""Char"", ""null"" ]],
				 ""ApcAssociated"": [ 244, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""FlushDpcs"": [ 244, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""Paused"": [ 244, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""Spare1"": [ 244, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""DueTimeType"": [ 245, [ ""Byte"", ""null"" ]],
				 ""Spare2"": [ 246, [ ""UInt16"", ""null"" ]],
				 ""WakeReason"": [ 248, [ ""Pointer"", ""{\""target\"":\""_DIAGNOSTIC_CONTEXT\""}"" ]],
				 ""WakeTimerListEntry"": [ 256, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""VirtualizedTimerCookie"": [ 272, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""VirtualizedTimerLinks"": [ 280, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""DueTime"": [ 296, [ ""UInt64"", ""null"" ]],
				 ""CoalescingWindow"": [ 304, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _KTIMER KeTimer
		{
			get
			{
				_KTIMER returnValue = new _KTIMER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Lock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public _KAPC TimerApc
		{
			get
			{
				_KAPC returnValue = new _KAPC(_StructureData, _BufferOffset + 72);
				return returnValue;
			}
		}
		public _KDPC TimerDpc
		{
			get
			{
				_KDPC returnValue = new _KDPC(_StructureData, _BufferOffset + 160);
				return returnValue;
			}
		}
		public _LIST_ENTRY ActiveTimerListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 224);
				return returnValue;
			}
		}
		public UInt32 Period { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 240); } }
		public Char TimerFlags { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 244); } }
		public Byte ApcAssociated
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 244];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte FlushDpcs
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 244];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte Paused
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 244];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte Spare1
		{
			get
			{
				// start: 3  end: 8  Mask: 0000000011111000
				Byte value = _StructureData[_BufferOffset + 244];
				var value2 = (value & 248) >> 3;
				return (Byte)value2;
			}
		}
		public Byte DueTimeType{ get { return _StructureData[_BufferOffset +245]; } }
		public UInt16 Spare2 { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 246); } }
		public UInt64 WakeReason { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 248); } }
		public _LIST_ENTRY WakeTimerListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 256);
				return returnValue;
			}
		}
		public UInt64 VirtualizedTimerCookie { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 272); } }
		public _LIST_ENTRY VirtualizedTimerLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 280);
				return returnValue;
			}
		}
		public UInt64 DueTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 296); } }
		public UInt32 CoalescingWindow { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 304); } }
	}
	#endregion
	#region _PROC_PERF_SNAP
 
	public class _PROC_PERF_SNAP
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROC_PERF_SNAP(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROC_PERF_SNAP"": [ 64, {
				 ""Time"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""LastTime"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""Active"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""LastActive"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""FrequencyScaledActive"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""PerformanceScaledActive"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""CyclesActive"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""CyclesAffinitized"": [ 56, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Time { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 LastTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Active { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 LastActive { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 FrequencyScaledActive { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 PerformanceScaledActive { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 CyclesActive { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 CyclesAffinitized { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
	}
	#endregion
	#region _OBJECT_DIRECTORY_ENTRY
 
	public class _OBJECT_DIRECTORY_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_DIRECTORY_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_DIRECTORY_ENTRY"": [ 24, {
				 ""ChainLink"": [ 0, [ ""Pointer"", ""{\""target\"":\""_OBJECT_DIRECTORY_ENTRY\""}"" ]],
				 ""Object"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""HashValue"": [ 16, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ChainLink { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Object { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 HashValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _LOCK_TRACKER
 
	public class _LOCK_TRACKER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _LOCK_TRACKER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 144; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_LOCK_TRACKER"": [ 144, {
				 ""LockTrackerNode"": [ 0, [ ""_RTL_BALANCED_NODE"", ""null"" ]],
				 ""Mdl"": [ 24, [ ""Pointer"", ""{\""target\"":\""_MDL\""}"" ]],
				 ""StartVa"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Count"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""Offset"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""Length"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""Page"": [ 56, [ ""UInt64"", ""null"" ]],
				 ""StackTrace"": [ 64, [ ""Array"", ""{\""count\"":8,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]],
				 ""Who"": [ 128, [ ""UInt32"", ""null"" ]],
				 ""Process"": [ 136, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]] }]
				 }
				)";
			}
		}
		public _RTL_BALANCED_NODE LockTrackerNode
		{
			get
			{
				_RTL_BALANCED_NODE returnValue = new _RTL_BALANCED_NODE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Mdl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 StartVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 Count { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt32 Offset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public UInt64 Page { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64[] StackTrace
		{
			get
			{
				UInt64[] returnValue = new UInt64[8];
				int size = 8;
				for(int i=0; i<8; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 64);
				return returnValue;
			}
		}
		public UInt32 Who { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 128); } }
		public UInt64 Process { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 136); } }
	}
	#endregion
	#region _POOL_BLOCK_HEAD
 
	public class _POOL_BLOCK_HEAD
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POOL_BLOCK_HEAD(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POOL_BLOCK_HEAD"": [ 32, {
				 ""Header"": [ 0, [ ""_POOL_HEADER"", ""null"" ]],
				 ""List"": [ 16, [ ""_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _POOL_HEADER Header
		{
			get
			{
				_POOL_HEADER returnValue = new _POOL_HEADER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LIST_ENTRY List
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _EXHANDLE
 
	public class _EXHANDLE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EXHANDLE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EXHANDLE"": [ 8, {
				 ""TagBits"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""Index"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""GenericHandleOverlay"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Value"": [ 0, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 TagBits
		{
			get
			{
				// start: 0  end: 2  Mask: 0000000000000011
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 3) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 Index
		{
			get
			{
				// start: 2  end: 32  Mask: 11111111111111111111111111111100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967292) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt64 GenericHandleOverlay { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Value { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _XSTATE_FEATURE
 
	public class _XSTATE_FEATURE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _XSTATE_FEATURE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_XSTATE_FEATURE"": [ 8, {
				 ""Offset"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Size"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Offset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Size { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _DBGKD_CONTEXT_EX
 
	public class _DBGKD_CONTEXT_EX
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_CONTEXT_EX(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_CONTEXT_EX"": [ 12, {
				 ""Offset"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ByteCount"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""BytesCopied"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Offset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 ByteCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 BytesCopied { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _CM_DIRTY_VECTOR_LOG
 
	public class _CM_DIRTY_VECTOR_LOG
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_DIRTY_VECTOR_LOG(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1288; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_DIRTY_VECTOR_LOG"": [ 1288, {
				 ""Next"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Size"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Log"": [ 8, [ ""Array"", ""{\""count\"":16,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Next { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Size { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _CM_DIRTY_VECTOR_LOG_ENTRY[] Log
		{
			get
			{
				_CM_DIRTY_VECTOR_LOG_ENTRY[] returnValue = new _CM_DIRTY_VECTOR_LOG_ENTRY[16];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<16; i++ )
					returnValue[i] = new _CM_DIRTY_VECTOR_LOG_ENTRY(_StructureData, (i * size) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ARBITER_INSTANCE
 
	public class _ARBITER_INSTANCE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ARBITER_INSTANCE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 336; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ARBITER_INSTANCE"": [ 336, {
				 ""Signature"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""MutexEvent"": [ 8, [ ""Pointer"", ""{\""target\"":\""_KEVENT\""}"" ]],
				 ""Name"": [ 16, [ ""Pointer"", ""{\""target\"":\""UInt16\""}"" ]],
				 ""OrderingName"": [ 24, [ ""Pointer"", ""{\""target\"":\""UInt16\""}"" ]],
				 ""ResourceType"": [ 32, [ ""Int32"", ""null"" ]],
				 ""Allocation"": [ 40, [ ""Pointer"", ""{\""target\"":\""_RTL_RANGE_LIST\""}"" ]],
				 ""PossibleAllocation"": [ 48, [ ""Pointer"", ""{\""target\"":\""_RTL_RANGE_LIST\""}"" ]],
				 ""OrderingList"": [ 56, [ ""_ARBITER_ORDERING_LIST"", ""null"" ]],
				 ""ReservedList"": [ 72, [ ""_ARBITER_ORDERING_LIST"", ""null"" ]],
				 ""ReferenceCount"": [ 88, [ ""Int32"", ""null"" ]],
				 ""Interface"": [ 96, [ ""Pointer"", ""{\""target\"":\""_ARBITER_INTERFACE\""}"" ]],
				 ""AllocationStackMaxSize"": [ 104, [ ""UInt32"", ""null"" ]],
				 ""AllocationStack"": [ 112, [ ""Pointer"", ""{\""target\"":\""_ARBITER_ALLOCATION_STATE\""}"" ]],
				 ""UnpackRequirement"": [ 120, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PackResource"": [ 128, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""UnpackResource"": [ 136, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ScoreRequirement"": [ 144, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""TestAllocation"": [ 152, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""RetestAllocation"": [ 160, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CommitAllocation"": [ 168, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""RollbackAllocation"": [ 176, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""BootAllocation"": [ 184, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""QueryArbitrate"": [ 192, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""QueryConflict"": [ 200, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""AddReserved"": [ 208, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""StartArbiter"": [ 216, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PreprocessEntry"": [ 224, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""AllocateEntry"": [ 232, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""GetNextAllocationRange"": [ 240, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FindSuitableRange"": [ 248, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""AddAllocation"": [ 256, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""BacktrackAllocation"": [ 264, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""OverrideConflict"": [ 272, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""InitializeRangeList"": [ 280, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""TransactionInProgress"": [ 288, [ ""Byte"", ""null"" ]],
				 ""TransactionEvent"": [ 296, [ ""Pointer"", ""{\""target\"":\""_KEVENT\""}"" ]],
				 ""Extension"": [ 304, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""BusDeviceObject"": [ 312, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""ConflictCallbackContext"": [ 320, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ConflictCallback"": [ 328, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Signature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 MutexEvent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Name { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 OrderingName { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public Int32 ResourceType { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 32); } }
		public UInt64 Allocation { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 PossibleAllocation { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public _ARBITER_ORDERING_LIST OrderingList
		{
			get
			{
				_ARBITER_ORDERING_LIST returnValue = new _ARBITER_ORDERING_LIST(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public _ARBITER_ORDERING_LIST ReservedList
		{
			get
			{
				_ARBITER_ORDERING_LIST returnValue = new _ARBITER_ORDERING_LIST(_StructureData, _BufferOffset + 72);
				return returnValue;
			}
		}
		public Int32 ReferenceCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 88); } }
		public UInt64 Interface { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt32 AllocationStackMaxSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 104); } }
		public UInt64 AllocationStack { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 112); } }
		public UInt64 UnpackRequirement { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 120); } }
		public UInt64 PackResource { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 128); } }
		public UInt64 UnpackResource { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 136); } }
		public UInt64 ScoreRequirement { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 144); } }
		public UInt64 TestAllocation { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 152); } }
		public UInt64 RetestAllocation { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public UInt64 CommitAllocation { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 168); } }
		public UInt64 RollbackAllocation { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 176); } }
		public UInt64 BootAllocation { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 184); } }
		public UInt64 QueryArbitrate { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 192); } }
		public UInt64 QueryConflict { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 200); } }
		public UInt64 AddReserved { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 208); } }
		public UInt64 StartArbiter { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 216); } }
		public UInt64 PreprocessEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 224); } }
		public UInt64 AllocateEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 232); } }
		public UInt64 GetNextAllocationRange { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 240); } }
		public UInt64 FindSuitableRange { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 248); } }
		public UInt64 AddAllocation { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 256); } }
		public UInt64 BacktrackAllocation { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 264); } }
		public UInt64 OverrideConflict { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 272); } }
		public UInt64 InitializeRangeList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 280); } }
		public Byte TransactionInProgress{ get { return _StructureData[_BufferOffset +288]; } }
		public UInt64 TransactionEvent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 296); } }
		public UInt64 Extension { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 304); } }
		public UInt64 BusDeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 312); } }
		public UInt64 ConflictCallbackContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 320); } }
		public UInt64 ConflictCallback { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 328); } }
	}
	#endregion
	#region _KDEVICE_QUEUE_ENTRY
 
	public class _KDEVICE_QUEUE_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KDEVICE_QUEUE_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KDEVICE_QUEUE_ENTRY"": [ 24, {
				 ""DeviceListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""SortKey"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""Inserted"": [ 20, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY DeviceListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 SortKey { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public Byte Inserted{ get { return _StructureData[_BufferOffset +20]; } }
	}
	#endregion
	#region _UNNAMED_33160
 
	public class _UNNAMED_33160
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33160(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33160"": [ 4, {
				 ""UserData"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Next"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 UserData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Next { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_33163
 
	public class _UNNAMED_33163
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33163(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33163"": [ 4, {
				 ""u"": [ 0, [ ""_UNNAMED_33160"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_33160 u
		{
			get
			{
				_UNNAMED_33160 returnValue = new _UNNAMED_33160(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_33165
 
	public class _UNNAMED_33165
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33165(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33165"": [ 4, {
				 ""NewCell"": [ 0, [ ""_UNNAMED_33163"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_33163 NewCell
		{
			get
			{
				_UNNAMED_33163 returnValue = new _UNNAMED_33163(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _HCELL
 
	public class _HCELL
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HCELL(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HCELL"": [ 8, {
				 ""Size"": [ 0, [ ""Int32"", ""null"" ]],
				 ""u"": [ 4, [ ""_UNNAMED_33165"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int32 Size { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public _UNNAMED_33165 u
		{
			get
			{
				_UNNAMED_33165 returnValue = new _UNNAMED_33165(_StructureData, _BufferOffset + 4);
				return returnValue;
			}
		}
	}
	#endregion
	#region _WHEA_GENERIC_ERROR_DESCRIPTOR
 
	public class _WHEA_GENERIC_ERROR_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_GENERIC_ERROR_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 52; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_GENERIC_ERROR_DESCRIPTOR"": [ 52, {
				 ""Type"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Reserved"": [ 2, [ ""Byte"", ""null"" ]],
				 ""Enabled"": [ 3, [ ""Byte"", ""null"" ]],
				 ""ErrStatusBlockLength"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""RelatedErrorSourceId"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""ErrStatusAddressSpaceID"": [ 12, [ ""Byte"", ""null"" ]],
				 ""ErrStatusAddressBitWidth"": [ 13, [ ""Byte"", ""null"" ]],
				 ""ErrStatusAddressBitOffset"": [ 14, [ ""Byte"", ""null"" ]],
				 ""ErrStatusAddressAccessSize"": [ 15, [ ""Byte"", ""null"" ]],
				 ""ErrStatusAddress"": [ 16, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""Notify"": [ 24, [ ""_WHEA_NOTIFICATION_DESCRIPTOR"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Type { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public Byte Reserved{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte Enabled{ get { return _StructureData[_BufferOffset +3]; } }
		public UInt32 ErrStatusBlockLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 RelatedErrorSourceId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public Byte ErrStatusAddressSpaceID{ get { return _StructureData[_BufferOffset +12]; } }
		public Byte ErrStatusAddressBitWidth{ get { return _StructureData[_BufferOffset +13]; } }
		public Byte ErrStatusAddressBitOffset{ get { return _StructureData[_BufferOffset +14]; } }
		public Byte ErrStatusAddressAccessSize{ get { return _StructureData[_BufferOffset +15]; } }
		public _LARGE_INTEGER ErrStatusAddress
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _WHEA_NOTIFICATION_DESCRIPTOR Notify
		{
			get
			{
				_WHEA_NOTIFICATION_DESCRIPTOR returnValue = new _WHEA_NOTIFICATION_DESCRIPTOR(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
	}
	#endregion
	#region _HMAP_TABLE
 
	public class _HMAP_TABLE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HMAP_TABLE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12288; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HMAP_TABLE"": [ 12288, {
				 ""Table"": [ 0, [ ""Array"", ""{\""count\"":512,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public _HMAP_ENTRY[] Table
		{
			get
			{
				_HMAP_ENTRY[] returnValue = new _HMAP_ENTRY[512];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<512; i++ )
					returnValue[i] = new _HMAP_ENTRY(_StructureData, (i * size) + _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _SEP_LOWBOX_HANDLES_ENTRY
 
	public class _SEP_LOWBOX_HANDLES_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SEP_LOWBOX_HANDLES_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SEP_LOWBOX_HANDLES_ENTRY"": [ 56, {
				 ""HashEntry"": [ 0, [ ""_RTL_DYNAMIC_HASH_TABLE_ENTRY"", ""null"" ]],
				 ""ReferenceCount"": [ 24, [ ""Int64"", ""null"" ]],
				 ""PackageSid"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""HandleCount"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""Handles"": [ 48, [ ""Pointer"", ""{\""target\"":\""void*\""}"" ]] }]
				 }
				)";
			}
		}
		public _RTL_DYNAMIC_HASH_TABLE_ENTRY HashEntry
		{
			get
			{
				_RTL_DYNAMIC_HASH_TABLE_ENTRY returnValue = new _RTL_DYNAMIC_HASH_TABLE_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public Int64 ReferenceCount { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 PackageSid { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt32 HandleCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt64 Handles { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
	}
	#endregion
	#region _PROC_PERF_CONSTRAINT
 
	public class _PROC_PERF_CONSTRAINT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROC_PERF_CONSTRAINT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 88; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROC_PERF_CONSTRAINT"": [ 88, {
				 ""Prcb"": [ 0, [ ""Pointer"", ""{\""target\"":\""_KPRCB\""}"" ]],
				 ""PerfContext"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""PlatformCap"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""ThermalCap"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""LimitReasons"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""PlatformCapStartTime"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""TargetPercent"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""DesiredPercent"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""SelectedPercent"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""SelectedFrequency"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""PreviousFrequency"": [ 56, [ ""UInt32"", ""null"" ]],
				 ""PreviousPercent"": [ 60, [ ""UInt32"", ""null"" ]],
				 ""LatestFrequencyPercent"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""SelectedState"": [ 72, [ ""UInt64"", ""null"" ]],
				 ""Force"": [ 80, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Prcb { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 PerfContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 PlatformCap { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 ThermalCap { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 LimitReasons { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt64 PlatformCapStartTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt32 TargetPercent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32 DesiredPercent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public UInt32 SelectedPercent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public UInt32 SelectedFrequency { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public UInt32 PreviousFrequency { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public UInt32 PreviousPercent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
		public UInt32 LatestFrequencyPercent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt64 SelectedState { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public Byte Force{ get { return _StructureData[_BufferOffset +80]; } }
	}
	#endregion
	#region _UNNAMED_33204
 
	public class _UNNAMED_33204
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33204(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33204"": [ 32, {
				 ""CallerCompletion"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CallerContext"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CallerDevice"": [ 16, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""SystemWake"": [ 24, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 CallerCompletion { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 CallerContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 CallerDevice { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public Byte SystemWake{ get { return _StructureData[_BufferOffset +24]; } }
	}
	#endregion
	#region _UNNAMED_33211
 
	public class _UNNAMED_33211
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33211(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33211"": [ 16, {
				 ""NotifyDevice"": [ 0, [ ""Pointer"", ""{\""target\"":\""_PO_DEVICE_NOTIFY\""}"" ]],
				 ""FxDeviceActivated"": [ 8, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 NotifyDevice { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public Byte FxDeviceActivated{ get { return _StructureData[_BufferOffset +8]; } }
	}
	#endregion
	#region _POP_IRP_DATA
 
	public class _POP_IRP_DATA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_IRP_DATA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 248; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_IRP_DATA"": [ 248, {
				 ""Link"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Irp"": [ 16, [ ""Pointer"", ""{\""target\"":\""_IRP\""}"" ]],
				 ""Pdo"": [ 24, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""TargetDevice"": [ 32, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""CurrentDevice"": [ 40, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""WatchdogStart"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""WatchdogTimer"": [ 56, [ ""_KTIMER"", ""null"" ]],
				 ""WatchdogDpc"": [ 120, [ ""_KDPC"", ""null"" ]],
				 ""MinorFunction"": [ 184, [ ""Byte"", ""null"" ]],
				 ""PowerStateType"": [ 188, [ ""Enumeration"", ""{\""enum_name\"":\""_POWER_STATE_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""PowerState"": [ 192, [ ""_POWER_STATE"", ""null"" ]],
				 ""WatchdogEnabled"": [ 196, [ ""Byte"", ""null"" ]],
				 ""FxDevice"": [ 200, [ ""Pointer"", ""{\""target\"":\""_POP_FX_DEVICE\""}"" ]],
				 ""SystemTransition"": [ 208, [ ""Byte"", ""null"" ]],
				 ""NotifyPEP"": [ 209, [ ""Byte"", ""null"" ]],
				 ""Device"": [ 216, [ ""_UNNAMED_33204"", ""null"" ]],
				 ""System"": [ 216, [ ""_UNNAMED_33211"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY Link
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Irp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Pdo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 TargetDevice { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 CurrentDevice { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 WatchdogStart { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public _KTIMER WatchdogTimer
		{
			get
			{
				_KTIMER returnValue = new _KTIMER(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public _KDPC WatchdogDpc
		{
			get
			{
				_KDPC returnValue = new _KDPC(_StructureData, _BufferOffset + 120);
				return returnValue;
			}
		}
		public Byte MinorFunction{ get { return _StructureData[_BufferOffset +184]; } }
		public _POWER_STATE_TYPE PowerStateType { get { return (_POWER_STATE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 188); } }
		public _POWER_STATE PowerState
		{
			get
			{
				_POWER_STATE returnValue = new _POWER_STATE(_StructureData, _BufferOffset + 192);
				return returnValue;
			}
		}
		public Byte WatchdogEnabled{ get { return _StructureData[_BufferOffset +196]; } }
		public UInt64 FxDevice { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 200); } }
		public Byte SystemTransition{ get { return _StructureData[_BufferOffset +208]; } }
		public Byte NotifyPEP{ get { return _StructureData[_BufferOffset +209]; } }
		public _UNNAMED_33204 Device
		{
			get
			{
				_UNNAMED_33204 returnValue = new _UNNAMED_33204(_StructureData, _BufferOffset + 216);
				return returnValue;
			}
		}
		public _UNNAMED_33211 System
		{
			get
			{
				_UNNAMED_33211 returnValue = new _UNNAMED_33211(_StructureData, _BufferOffset + 216);
				return returnValue;
			}
		}
	}
	#endregion
	#region _IMAGE_DATA_DIRECTORY
 
	public class _IMAGE_DATA_DIRECTORY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IMAGE_DATA_DIRECTORY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IMAGE_DATA_DIRECTORY"": [ 8, {
				 ""VirtualAddress"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Size"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 VirtualAddress { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Size { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _DEVICE_CAPABILITIES
 
	public class _DEVICE_CAPABILITIES
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DEVICE_CAPABILITIES(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DEVICE_CAPABILITIES"": [ 64, {
				 ""Size"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Version"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""DeviceD1"": [ 4, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""DeviceD2"": [ 4, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""LockSupported"": [ 4, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""EjectSupported"": [ 4, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""Removable"": [ 4, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""DockDevice"": [ 4, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""UniqueID"": [ 4, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""SilentInstall"": [ 4, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt32\""}"" ]],
				 ""RawDeviceOK"": [ 4, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]],
				 ""SurpriseRemovalOK"": [ 4, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt32\""}"" ]],
				 ""WakeFromD0"": [ 4, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt32\""}"" ]],
				 ""WakeFromD1"": [ 4, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt32\""}"" ]],
				 ""WakeFromD2"": [ 4, [ ""BitField"", ""{\""end_bit\"":13,\""start_bit\"":12,\""target\"":\""UInt32\""}"" ]],
				 ""WakeFromD3"": [ 4, [ ""BitField"", ""{\""end_bit\"":14,\""start_bit\"":13,\""target\"":\""UInt32\""}"" ]],
				 ""HardwareDisabled"": [ 4, [ ""BitField"", ""{\""end_bit\"":15,\""start_bit\"":14,\""target\"":\""UInt32\""}"" ]],
				 ""NonDynamic"": [ 4, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":15,\""target\"":\""UInt32\""}"" ]],
				 ""WarmEjectSupported"": [ 4, [ ""BitField"", ""{\""end_bit\"":17,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""NoDisplayInUI"": [ 4, [ ""BitField"", ""{\""end_bit\"":18,\""start_bit\"":17,\""target\"":\""UInt32\""}"" ]],
				 ""Reserved1"": [ 4, [ ""BitField"", ""{\""end_bit\"":19,\""start_bit\"":18,\""target\"":\""UInt32\""}"" ]],
				 ""WakeFromInterrupt"": [ 4, [ ""BitField"", ""{\""end_bit\"":20,\""start_bit\"":19,\""target\"":\""UInt32\""}"" ]],
				 ""Reserved"": [ 4, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":20,\""target\"":\""UInt32\""}"" ]],
				 ""Address"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""UINumber"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""DeviceState"": [ 16, [ ""Array"", ""{\""size\"":28,\""target\"":\""Enumeration\"",\""target_args\"":{\""enum_name\"":\""_DEVICE_POWER_STATE\"",\""target\"":\""UInt32\""}}"" ]],
				 ""SystemWake"": [ 44, [ ""Enumeration"", ""{\""enum_name\"":\""_SYSTEM_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""DeviceWake"": [ 48, [ ""Enumeration"", ""{\""enum_name\"":\""_DEVICE_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""D1Latency"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""D2Latency"": [ 56, [ ""UInt32"", ""null"" ]],
				 ""D3Latency"": [ 60, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Size { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 Version { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt32 DeviceD1
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 DeviceD2
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 LockSupported
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 EjectSupported
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 Removable
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 DockDevice
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 UniqueID
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 64) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 SilentInstall
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 128) >> 7;
				return (UInt32)value2;
			}
		}
		public UInt32 RawDeviceOK
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 256) >> 8;
				return (UInt32)value2;
			}
		}
		public UInt32 SurpriseRemovalOK
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 512) >> 9;
				return (UInt32)value2;
			}
		}
		public UInt32 WakeFromD0
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 1024) >> 10;
				return (UInt32)value2;
			}
		}
		public UInt32 WakeFromD1
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 2048) >> 11;
				return (UInt32)value2;
			}
		}
		public UInt32 WakeFromD2
		{
			get
			{
				// start: 12  end: 13  Mask: 0001000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 4096) >> 12;
				return (UInt32)value2;
			}
		}
		public UInt32 WakeFromD3
		{
			get
			{
				// start: 13  end: 14  Mask: 0010000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 8192) >> 13;
				return (UInt32)value2;
			}
		}
		public UInt32 HardwareDisabled
		{
			get
			{
				// start: 14  end: 15  Mask: 0100000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 16384) >> 14;
				return (UInt32)value2;
			}
		}
		public UInt32 NonDynamic
		{
			get
			{
				// start: 15  end: 16  Mask: 1000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 32768) >> 15;
				return (UInt32)value2;
			}
		}
		public UInt32 WarmEjectSupported
		{
			get
			{
				// start: 16  end: 17  Mask: 10000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 65536) >> 16;
				return (UInt32)value2;
			}
		}
		public UInt32 NoDisplayInUI
		{
			get
			{
				// start: 17  end: 18  Mask: 100000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 131072) >> 17;
				return (UInt32)value2;
			}
		}
		public UInt32 Reserved1
		{
			get
			{
				// start: 18  end: 19  Mask: 1000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 262144) >> 18;
				return (UInt32)value2;
			}
		}
		public UInt32 WakeFromInterrupt
		{
			get
			{
				// start: 19  end: 20  Mask: 10000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 524288) >> 19;
				return (UInt32)value2;
			}
		}
		public UInt32 Reserved
		{
			get
			{
				// start: 20  end: 32  Mask: 11111111111100000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 4293918720) >> 20;
				return (UInt32)value2;
			}
		}
		public UInt32 Address { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 UINumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public _DEVICE_POWER_STATE[] DeviceState
		{
			get
			{
				_DEVICE_POWER_STATE[] returnValue = new _DEVICE_POWER_STATE[7];
				int size = 4;
				for(int i=0; i<7; i++ )
					returnValue[i] = (_DEVICE_POWER_STATE)BitConverter.ToUInt32(_StructureData, (i * size) + _BufferOffset + 16);
				return returnValue;
			}
		}
		public _SYSTEM_POWER_STATE SystemWake { get { return (_SYSTEM_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public _DEVICE_POWER_STATE DeviceWake { get { return (_DEVICE_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public UInt32 D1Latency { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public UInt32 D2Latency { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public UInt32 D3Latency { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
	}
	#endregion
	#region _MI_USER_VA_INFO
 
	public class _MI_USER_VA_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MI_USER_VA_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 296; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MI_USER_VA_INFO"": [ 296, {
				 ""NumberOfCommittedPageTables"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""PhysicalMappingCount"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""VadBitMapHint"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""LastAllocationSizeHint"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""LastAllocationSize"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""LowestBottomUpVadBit"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""VadBitMapSize"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""VadBitMapCommitment"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""MaximumLastVadBit"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""VadsBeingDeleted"": [ 36, [ ""Int32"", ""null"" ]],
				 ""LastVadDeletionEvent"": [ 40, [ ""Pointer"", ""{\""target\"":\""_KEVENT\""}"" ]],
				 ""VadBitBuffer"": [ 48, [ ""Pointer"", ""{\""target\"":\""unsigned long\""}"" ]],
				 ""LowestBottomUpAllocationAddress"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""HighestTopDownAllocationAddress"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FreeTebHint"": [ 72, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""NumaAware"": [ 80, [ ""Byte"", ""null"" ]],
				 ""PrivateFixupVadCount"": [ 88, [ ""UInt64"", ""null"" ]],
				 ""CfgBitMap"": [ 96, [ ""Array"", ""{\""count\"":3,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""CommittedPageTableBufferForTopLevel"": [ 192, [ ""Array"", ""{\""count\"":8,\""target\"":\""UInt32\""}"" ]],
				 ""CommittedPageTableBitmaps"": [ 224, [ ""Array"", ""{\""count\"":3,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""PageTableBitmapPages"": [ 272, [ ""Array"", ""{\""count\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""FreeUmsTebHint"": [ 288, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 NumberOfCommittedPageTables { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 PhysicalMappingCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 VadBitMapHint { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 LastAllocationSizeHint { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 LastAllocationSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 LowestBottomUpVadBit { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 VadBitMapSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 VadBitMapCommitment { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 MaximumLastVadBit { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public Int32 VadsBeingDeleted { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 36); } }
		public UInt64 LastVadDeletionEvent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 VadBitBuffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 LowestBottomUpAllocationAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 HighestTopDownAllocationAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 FreeTebHint { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public Byte NumaAware{ get { return _StructureData[_BufferOffset +80]; } }
		public UInt64 PrivateFixupVadCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public _MI_CFG_BITMAP_INFO[] CfgBitMap
		{
			get
			{
				_MI_CFG_BITMAP_INFO[] returnValue = new _MI_CFG_BITMAP_INFO[3];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<3; i++ )
					returnValue[i] = new _MI_CFG_BITMAP_INFO(_StructureData, (i * size) + _BufferOffset + 96);
				return returnValue;
			}
		}
		public UInt32[] CommittedPageTableBufferForTopLevel
		{
			get
			{
				UInt32[] returnValue = new UInt32[8];
				for(int i=0; i<8; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 192);
				return returnValue;
			}
		}
		public _RTL_BITMAP[] CommittedPageTableBitmaps
		{
			get
			{
				_RTL_BITMAP[] returnValue = new _RTL_BITMAP[3];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<3; i++ )
					returnValue[i] = new _RTL_BITMAP(_StructureData, (i * size) + _BufferOffset + 224);
				return returnValue;
			}
		}
		public UInt32[] PageTableBitmapPages
		{
			get
			{
				UInt32[] returnValue = new UInt32[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 272);
				return returnValue;
			}
		}
		public UInt64 FreeUmsTebHint { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 288); } }
	}
	#endregion
	#region _PROC_FEEDBACK
 
	public class _PROC_FEEDBACK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROC_FEEDBACK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 112; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROC_FEEDBACK"": [ 112, {
				 ""Lock"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""CyclesLast"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""CyclesActive"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""Counters"": [ 24, [ ""Array"", ""{\""count\"":2,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""_PROC_FEEDBACK_COUNTER\""}}"" ]],
				 ""LastUpdateTime"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""UnscaledTime"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""UnaccountedTime"": [ 56, [ ""Int64"", ""null"" ]],
				 ""ScaledTime"": [ 64, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt64\""}"" ]],
				 ""UnaccountedKernelTime"": [ 80, [ ""UInt64"", ""null"" ]],
				 ""PerformanceScaledKernelTime"": [ 88, [ ""UInt64"", ""null"" ]],
				 ""UserTimeLast"": [ 96, [ ""UInt32"", ""null"" ]],
				 ""KernelTimeLast"": [ 100, [ ""UInt32"", ""null"" ]],
				 ""KernelTimesIndex"": [ 104, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Lock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 CyclesLast { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 CyclesActive { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64[] Counters
		{
			get
			{
				UInt64[] returnValue = new UInt64[2];
				int size = 8;
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt64 LastUpdateTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 UnscaledTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public Int64 UnaccountedTime { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64[] ScaledTime
		{
			get
			{
				UInt64[] returnValue = new UInt64[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 64);
				return returnValue;
			}
		}
		public UInt64 UnaccountedKernelTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 PerformanceScaledKernelTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt32 UserTimeLast { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 96); } }
		public UInt32 KernelTimeLast { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 100); } }
		public Byte KernelTimesIndex{ get { return _StructureData[_BufferOffset +104]; } }
	}
	#endregion
	#region _UNNAMED_33308
 
	public class _UNNAMED_33308
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33308(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33308"": [ 24, {
				 ""Length"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Alignment"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""MinimumAddress"": [ 8, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""MaximumAddress"": [ 16, [ ""_LARGE_INTEGER"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Alignment { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _LARGE_INTEGER MinimumAddress
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _LARGE_INTEGER MaximumAddress
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_33313
 
	public class _UNNAMED_33313
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33313(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33313"": [ 24, {
				 ""MinimumVector"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""MaximumVector"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""AffinityPolicy"": [ 8, [ ""UInt16"", ""null"" ]],
				 ""Group"": [ 10, [ ""UInt16"", ""null"" ]],
				 ""PriorityPolicy"": [ 12, [ ""Enumeration"", ""{\""enum_name\"":\""_IRQ_PRIORITY\"",\""target\"":\""UInt32\""}"" ]],
				 ""TargetedProcessors"": [ 16, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 MinimumVector { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 MaximumVector { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt16 AffinityPolicy { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 8); } }
		public UInt16 Group { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 10); } }
		public _IRQ_PRIORITY PriorityPolicy { get { return (_IRQ_PRIORITY)BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt64 TargetedProcessors { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _UNNAMED_33320
 
	public class _UNNAMED_33320
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33320(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33320"": [ 8, {
				 ""MinimumChannel"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""MaximumChannel"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 MinimumChannel { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 MaximumChannel { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _UNNAMED_33323
 
	public class _UNNAMED_33323
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33323(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33323"": [ 16, {
				 ""RequestLine"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Reserved"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Channel"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""TransferWidth"": [ 12, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 RequestLine { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Reserved { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 Channel { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 TransferWidth { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
	}
	#endregion
	#region _UNNAMED_33328
 
	public class _UNNAMED_33328
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33328(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33328"": [ 12, {
				 ""Data"": [ 0, [ ""Array"", ""{\""count\"":3,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32[] Data
		{
			get
			{
				UInt32[] returnValue = new UInt32[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_33330
 
	public class _UNNAMED_33330
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33330(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33330"": [ 16, {
				 ""Length"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""MinBusNumber"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""MaxBusNumber"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Reserved"": [ 12, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 MinBusNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 MaxBusNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Reserved { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
	}
	#endregion
	#region _UNNAMED_33335
 
	public class _UNNAMED_33335
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33335(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33335"": [ 12, {
				 ""Priority"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Reserved1"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Reserved2"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Priority { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Reserved1 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 Reserved2 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_33339
 
	public class _UNNAMED_33339
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33339(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33339"": [ 24, {
				 ""Length40"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Alignment40"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""MinimumAddress"": [ 8, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""MaximumAddress"": [ 16, [ ""_LARGE_INTEGER"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Length40 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Alignment40 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _LARGE_INTEGER MinimumAddress
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _LARGE_INTEGER MaximumAddress
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_33344
 
	public class _UNNAMED_33344
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33344(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33344"": [ 24, {
				 ""Length48"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Alignment48"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""MinimumAddress"": [ 8, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""MaximumAddress"": [ 16, [ ""_LARGE_INTEGER"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Length48 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Alignment48 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _LARGE_INTEGER MinimumAddress
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _LARGE_INTEGER MaximumAddress
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_33349
 
	public class _UNNAMED_33349
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33349(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33349"": [ 24, {
				 ""Length64"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Alignment64"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""MinimumAddress"": [ 8, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""MaximumAddress"": [ 16, [ ""_LARGE_INTEGER"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Length64 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Alignment64 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _LARGE_INTEGER MinimumAddress
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _LARGE_INTEGER MaximumAddress
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_33354
 
	public class _UNNAMED_33354
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33354(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33354"": [ 12, {
				 ""Class"": [ 0, [ ""Byte"", ""null"" ]],
				 ""Type"": [ 1, [ ""Byte"", ""null"" ]],
				 ""Reserved1"": [ 2, [ ""Byte"", ""null"" ]],
				 ""Reserved2"": [ 3, [ ""Byte"", ""null"" ]],
				 ""IdLowPart"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""IdHighPart"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte Class{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte Type{ get { return _StructureData[_BufferOffset +1]; } }
		public Byte Reserved1{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte Reserved2{ get { return _StructureData[_BufferOffset +3]; } }
		public UInt32 IdLowPart { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 IdHighPart { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_33361
 
	public class _UNNAMED_33361
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33361(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33361"": [ 24, {
				 ""Port"": [ 0, [ ""_UNNAMED_33308"", ""null"" ]],
				 ""Memory"": [ 0, [ ""_UNNAMED_33308"", ""null"" ]],
				 ""Interrupt"": [ 0, [ ""_UNNAMED_33313"", ""null"" ]],
				 ""Dma"": [ 0, [ ""_UNNAMED_33320"", ""null"" ]],
				 ""DmaV3"": [ 0, [ ""_UNNAMED_33323"", ""null"" ]],
				 ""Generic"": [ 0, [ ""_UNNAMED_33308"", ""null"" ]],
				 ""DevicePrivate"": [ 0, [ ""_UNNAMED_33328"", ""null"" ]],
				 ""BusNumber"": [ 0, [ ""_UNNAMED_33330"", ""null"" ]],
				 ""ConfigData"": [ 0, [ ""_UNNAMED_33335"", ""null"" ]],
				 ""Memory40"": [ 0, [ ""_UNNAMED_33339"", ""null"" ]],
				 ""Memory48"": [ 0, [ ""_UNNAMED_33344"", ""null"" ]],
				 ""Memory64"": [ 0, [ ""_UNNAMED_33349"", ""null"" ]],
				 ""Connection"": [ 0, [ ""_UNNAMED_33354"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_33308 Port
		{
			get
			{
				_UNNAMED_33308 returnValue = new _UNNAMED_33308(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33308 Memory
		{
			get
			{
				_UNNAMED_33308 returnValue = new _UNNAMED_33308(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33313 Interrupt
		{
			get
			{
				_UNNAMED_33313 returnValue = new _UNNAMED_33313(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33320 Dma
		{
			get
			{
				_UNNAMED_33320 returnValue = new _UNNAMED_33320(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33323 DmaV3
		{
			get
			{
				_UNNAMED_33323 returnValue = new _UNNAMED_33323(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33308 Generic
		{
			get
			{
				_UNNAMED_33308 returnValue = new _UNNAMED_33308(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33328 DevicePrivate
		{
			get
			{
				_UNNAMED_33328 returnValue = new _UNNAMED_33328(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33330 BusNumber
		{
			get
			{
				_UNNAMED_33330 returnValue = new _UNNAMED_33330(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33335 ConfigData
		{
			get
			{
				_UNNAMED_33335 returnValue = new _UNNAMED_33335(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33339 Memory40
		{
			get
			{
				_UNNAMED_33339 returnValue = new _UNNAMED_33339(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33344 Memory48
		{
			get
			{
				_UNNAMED_33344 returnValue = new _UNNAMED_33344(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33349 Memory64
		{
			get
			{
				_UNNAMED_33349 returnValue = new _UNNAMED_33349(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33354 Connection
		{
			get
			{
				_UNNAMED_33354 returnValue = new _UNNAMED_33354(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _IO_RESOURCE_DESCRIPTOR
 
	public class _IO_RESOURCE_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IO_RESOURCE_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IO_RESOURCE_DESCRIPTOR"": [ 32, {
				 ""Option"": [ 0, [ ""Byte"", ""null"" ]],
				 ""Type"": [ 1, [ ""Byte"", ""null"" ]],
				 ""ShareDisposition"": [ 2, [ ""Byte"", ""null"" ]],
				 ""Spare1"": [ 3, [ ""Byte"", ""null"" ]],
				 ""Flags"": [ 4, [ ""UInt16"", ""null"" ]],
				 ""Spare2"": [ 6, [ ""UInt16"", ""null"" ]],
				 ""u"": [ 8, [ ""_UNNAMED_33361"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte Option{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte Type{ get { return _StructureData[_BufferOffset +1]; } }
		public Byte ShareDisposition{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte Spare1{ get { return _StructureData[_BufferOffset +3]; } }
		public UInt16 Flags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 4); } }
		public UInt16 Spare2 { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
		public _UNNAMED_33361 u
		{
			get
			{
				_UNNAMED_33361 returnValue = new _UNNAMED_33361(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _POP_THERMAL_ZONE
 
	public class _POP_THERMAL_ZONE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_THERMAL_ZONE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 496; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_THERMAL_ZONE"": [ 496, {
				 ""PolicyDevice"": [ 0, [ ""_POP_POLICY_DEVICE"", ""null"" ]],
				 ""Link"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""DeviceType"": [ 16, [ ""Enumeration"", ""{\""enum_name\"":\""POWER_POLICY_DEVICE_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""Notification"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Name"": [ 32, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""Device"": [ 48, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""Irp"": [ 56, [ ""Pointer"", ""{\""target\"":\""_IRP\""}"" ]],
				 ""State"": [ 64, [ ""Byte"", ""null"" ]],
				 ""Flags"": [ 65, [ ""Byte"", ""null"" ]],
				 ""Removing"": [ 66, [ ""Byte"", ""null"" ]],
				 ""Mode"": [ 67, [ ""Byte"", ""null"" ]],
				 ""PendingMode"": [ 68, [ ""Byte"", ""null"" ]],
				 ""ActivePoint"": [ 69, [ ""Byte"", ""null"" ]],
				 ""PendingActivePoint"": [ 70, [ ""Byte"", ""null"" ]],
				 ""Critical"": [ 71, [ ""Byte"", ""null"" ]],
				 ""HighPrecisionThrottle"": [ 72, [ ""Int32"", ""null"" ]],
				 ""Throttle"": [ 76, [ ""Int32"", ""null"" ]],
				 ""PendingThrottle"": [ 80, [ ""Int32"", ""null"" ]],
				 ""ThrottleReasons"": [ 84, [ ""UInt32"", ""null"" ]],
				 ""LastTime"": [ 88, [ ""UInt64"", ""null"" ]],
				 ""SampleRate"": [ 96, [ ""UInt32"", ""null"" ]],
				 ""LastTemp"": [ 100, [ ""UInt32"", ""null"" ]],
				 ""PassiveTimer"": [ 104, [ ""_KTIMER"", ""null"" ]],
				 ""PassiveDpc"": [ 168, [ ""_KDPC"", ""null"" ]],
				 ""Info"": [ 232, [ ""_THERMAL_INFORMATION_EX"", ""null"" ]],
				 ""InfoLastUpdateTime"": [ 312, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""Policy"": [ 320, [ ""_THERMAL_POLICY"", ""null"" ]],
				 ""PolicyDriver"": [ 340, [ ""Byte"", ""null"" ]],
				 ""Metrics"": [ 344, [ ""_POP_THERMAL_ZONE_METRICS"", ""null"" ]],
				 ""WorkItem"": [ 392, [ ""_WORK_QUEUE_ITEM"", ""null"" ]],
				 ""Lock"": [ 424, [ ""_POP_RW_LOCK"", ""null"" ]],
				 ""ZoneStopped"": [ 440, [ ""_KEVENT"", ""null"" ]],
				 ""TemperatureUpdated"": [ 464, [ ""_KEVENT"", ""null"" ]],
				 ""InstanceId"": [ 488, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _POP_POLICY_DEVICE PolicyDevice
		{
			get
			{
				_POP_POLICY_DEVICE returnValue = new _POP_POLICY_DEVICE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LIST_ENTRY Link
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public POWER_POLICY_DEVICE_TYPE DeviceType { get { return (POWER_POLICY_DEVICE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt64 Notification { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public _UNICODE_STRING Name
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt64 Device { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 Irp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public Byte State{ get { return _StructureData[_BufferOffset +64]; } }
		public Byte Flags{ get { return _StructureData[_BufferOffset +65]; } }
		public Byte Removing{ get { return _StructureData[_BufferOffset +66]; } }
		public Byte Mode{ get { return _StructureData[_BufferOffset +67]; } }
		public Byte PendingMode{ get { return _StructureData[_BufferOffset +68]; } }
		public Byte ActivePoint{ get { return _StructureData[_BufferOffset +69]; } }
		public Byte PendingActivePoint{ get { return _StructureData[_BufferOffset +70]; } }
		public Byte Critical{ get { return _StructureData[_BufferOffset +71]; } }
		public Int32 HighPrecisionThrottle { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 72); } }
		public Int32 Throttle { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 76); } }
		public Int32 PendingThrottle { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 ThrottleReasons { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
		public UInt64 LastTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt32 SampleRate { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 96); } }
		public UInt32 LastTemp { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 100); } }
		public _KTIMER PassiveTimer
		{
			get
			{
				_KTIMER returnValue = new _KTIMER(_StructureData, _BufferOffset + 104);
				return returnValue;
			}
		}
		public _KDPC PassiveDpc
		{
			get
			{
				_KDPC returnValue = new _KDPC(_StructureData, _BufferOffset + 168);
				return returnValue;
			}
		}
		public _THERMAL_INFORMATION_EX Info
		{
			get
			{
				_THERMAL_INFORMATION_EX returnValue = new _THERMAL_INFORMATION_EX(_StructureData, _BufferOffset + 232);
				return returnValue;
			}
		}
		public _LARGE_INTEGER InfoLastUpdateTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 312);
				return returnValue;
			}
		}
		public _THERMAL_POLICY Policy
		{
			get
			{
				_THERMAL_POLICY returnValue = new _THERMAL_POLICY(_StructureData, _BufferOffset + 320);
				return returnValue;
			}
		}
		public Byte PolicyDriver{ get { return _StructureData[_BufferOffset +340]; } }
		public _POP_THERMAL_ZONE_METRICS Metrics
		{
			get
			{
				_POP_THERMAL_ZONE_METRICS returnValue = new _POP_THERMAL_ZONE_METRICS(_StructureData, _BufferOffset + 344);
				return returnValue;
			}
		}
		public _WORK_QUEUE_ITEM WorkItem
		{
			get
			{
				_WORK_QUEUE_ITEM returnValue = new _WORK_QUEUE_ITEM(_StructureData, _BufferOffset + 392);
				return returnValue;
			}
		}
		public _POP_RW_LOCK Lock
		{
			get
			{
				_POP_RW_LOCK returnValue = new _POP_RW_LOCK(_StructureData, _BufferOffset + 424);
				return returnValue;
			}
		}
		public _KEVENT ZoneStopped
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 440);
				return returnValue;
			}
		}
		public _KEVENT TemperatureUpdated
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 464);
				return returnValue;
			}
		}
		public UInt32 InstanceId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 488); } }
	}
	#endregion
	#region _MMPTE_LIST
 
	public class _MMPTE_LIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMPTE_LIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMPTE_LIST"": [ 8, {
				 ""Valid"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""OneEntry"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt64\""}"" ]],
				 ""filler0"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":2,\""target\"":\""UInt64\""}"" ]],
				 ""Protection"": [ 0, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":5,\""target\"":\""UInt64\""}"" ]],
				 ""Prototype"": [ 0, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt64\""}"" ]],
				 ""Transition"": [ 0, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt64\""}"" ]],
				 ""filler1"": [ 0, [ ""BitField"", ""{\""end_bit\"":28,\""start_bit\"":12,\""target\"":\""UInt64\""}"" ]],
				 ""NextEntry"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":28,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Valid
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 OneEntry
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt64)value2;
			}
		}
		public UInt64 filler0
		{
			get
			{
				// start: 2  end: 5  Mask: 0000000000011100
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 28) >> 2;
				return (UInt64)value2;
			}
		}
		public UInt64 Protection
		{
			get
			{
				// start: 5  end: 10  Mask: 0000001111100000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 992) >> 5;
				return (UInt64)value2;
			}
		}
		public UInt64 Prototype
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1024) >> 10;
				return (UInt64)value2;
			}
		}
		public UInt64 Transition
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2048) >> 11;
				return (UInt64)value2;
			}
		}
		public UInt64 filler1
		{
			get
			{
				// start: 12  end: 28  Mask: 1111111111111111000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 268431360) >> 12;
				return (UInt64)value2;
			}
		}
		public UInt64 NextEntry
		{
			get
			{
				// start: 28  end: 64  Mask: 0000000000000000000000000000000011110000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4026531840) >> 28;
				return (UInt64)value2;
			}
		}
	}
	#endregion
	#region _VI_POOL_PAGE_HEADER
 
	public class _VI_POOL_PAGE_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VI_POOL_PAGE_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VI_POOL_PAGE_HEADER"": [ 24, {
				 ""NextPage"": [ 0, [ ""Pointer"", ""{\""target\"":\""_SLIST_ENTRY\""}"" ]],
				 ""VerifierEntry"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Signature"": [ 16, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 NextPage { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 VerifierEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Signature { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _HANDLE_TRACE_DEBUG_INFO
 
	public class _HANDLE_TRACE_DEBUG_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HANDLE_TRACE_DEBUG_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 240; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HANDLE_TRACE_DEBUG_INFO"": [ 240, {
				 ""RefCount"": [ 0, [ ""Int32"", ""null"" ]],
				 ""TableSize"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""BitMaskFlags"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""CloseCompactionLock"": [ 16, [ ""_FAST_MUTEX"", ""null"" ]],
				 ""CurrentStackIndex"": [ 72, [ ""UInt32"", ""null"" ]],
				 ""TraceDb"": [ 80, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public Int32 RefCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 TableSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 BitMaskFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public _FAST_MUTEX CloseCompactionLock
		{
			get
			{
				_FAST_MUTEX returnValue = new _FAST_MUTEX(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt32 CurrentStackIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 72); } }
		public _HANDLE_TRACE_DB_ENTRY[] TraceDb
		{
			get
			{
				_HANDLE_TRACE_DB_ENTRY[] returnValue = new _HANDLE_TRACE_DB_ENTRY[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _HANDLE_TRACE_DB_ENTRY(_StructureData, (i * size) + _BufferOffset + 80);
				return returnValue;
			}
		}
	}
	#endregion
	#region _HHIVE
 
	public class _HHIVE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HHIVE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1448; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HHIVE"": [ 1448, {
				 ""Signature"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""GetCellRoutine"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Allocate"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Free"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FileWrite"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FileRead"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""HiveLoadFailure"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""BaseBlock"": [ 56, [ ""Pointer"", ""{\""target\"":\""_HBASE_BLOCK\""}"" ]],
				 ""DirtyVector"": [ 64, [ ""_RTL_BITMAP"", ""null"" ]],
				 ""DirtyCount"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""DirtyAlloc"": [ 84, [ ""UInt32"", ""null"" ]],
				 ""UnreconciledVector"": [ 88, [ ""_RTL_BITMAP"", ""null"" ]],
				 ""UnreconciledCount"": [ 104, [ ""UInt32"", ""null"" ]],
				 ""BaseBlockAlloc"": [ 108, [ ""UInt32"", ""null"" ]],
				 ""Cluster"": [ 112, [ ""UInt32"", ""null"" ]],
				 ""Flat"": [ 116, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""ReadOnly"": [ 116, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""Reserved"": [ 116, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""DirtyFlag"": [ 117, [ ""Byte"", ""null"" ]],
				 ""HvBinHeadersUse"": [ 120, [ ""UInt32"", ""null"" ]],
				 ""HvFreeCellsUse"": [ 124, [ ""UInt32"", ""null"" ]],
				 ""HvUsedCellsUse"": [ 128, [ ""UInt32"", ""null"" ]],
				 ""CmUsedCellsUse"": [ 132, [ ""UInt32"", ""null"" ]],
				 ""HiveFlags"": [ 136, [ ""UInt32"", ""null"" ]],
				 ""CurrentLog"": [ 140, [ ""UInt32"", ""null"" ]],
				 ""CurrentLogSequence"": [ 144, [ ""UInt32"", ""null"" ]],
				 ""CurrentLogOffset"": [ 148, [ ""UInt32"", ""null"" ]],
				 ""MinimumLogSequence"": [ 152, [ ""UInt32"", ""null"" ]],
				 ""LogFileSizeCap"": [ 156, [ ""UInt32"", ""null"" ]],
				 ""LogDataPresent"": [ 160, [ ""Array"", ""{\""count\"":2,\""target\"":\""Byte\""}"" ]],
				 ""PrimaryFileValid"": [ 162, [ ""Byte"", ""null"" ]],
				 ""BaseBlockDirty"": [ 163, [ ""Byte"", ""null"" ]],
				 ""FirstLogFile"": [ 164, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""SecondLogFile"": [ 164, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":3,\""target\"":\""UInt16\""}"" ]],
				 ""HeaderRecovered"": [ 164, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt16\""}"" ]],
				 ""LegacyRecoveryIndicated"": [ 164, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt16\""}"" ]],
				 ""RecoveryInformationReserved"": [ 164, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":8,\""target\"":\""UInt16\""}"" ]],
				 ""RecoveryInformation"": [ 164, [ ""UInt16"", ""null"" ]],
				 ""LogEntriesRecovered"": [ 166, [ ""Array"", ""{\""count\"":2,\""target\"":\""Byte\""}"" ]],
				 ""RefreshCount"": [ 168, [ ""UInt32"", ""null"" ]],
				 ""StorageTypeCount"": [ 172, [ ""UInt32"", ""null"" ]],
				 ""Version"": [ 176, [ ""UInt32"", ""null"" ]],
				 ""Storage"": [ 184, [ ""Array"", ""{\""count\"":2,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Signature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 GetCellRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Allocate { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Free { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 FileWrite { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 FileRead { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 HiveLoadFailure { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 BaseBlock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public _RTL_BITMAP DirtyVector
		{
			get
			{
				_RTL_BITMAP returnValue = new _RTL_BITMAP(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public UInt32 DirtyCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 DirtyAlloc { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
		public _RTL_BITMAP UnreconciledVector
		{
			get
			{
				_RTL_BITMAP returnValue = new _RTL_BITMAP(_StructureData, _BufferOffset + 88);
				return returnValue;
			}
		}
		public UInt32 UnreconciledCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 104); } }
		public UInt32 BaseBlockAlloc { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 108); } }
		public UInt32 Cluster { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 112); } }
		public Byte Flat
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 116];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte ReadOnly
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 116];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte Reserved
		{
			get
			{
				// start: 2  end: 8  Mask: 0000000011111100
				Byte value = _StructureData[_BufferOffset + 116];
				var value2 = (value & 252) >> 2;
				return (Byte)value2;
			}
		}
		public Byte DirtyFlag{ get { return _StructureData[_BufferOffset +117]; } }
		public UInt32 HvBinHeadersUse { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 120); } }
		public UInt32 HvFreeCellsUse { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 124); } }
		public UInt32 HvUsedCellsUse { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 128); } }
		public UInt32 CmUsedCellsUse { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 132); } }
		public UInt32 HiveFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 136); } }
		public UInt32 CurrentLog { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 140); } }
		public UInt32 CurrentLogSequence { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 144); } }
		public UInt32 CurrentLogOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 148); } }
		public UInt32 MinimumLogSequence { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 152); } }
		public UInt32 LogFileSizeCap { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 156); } }
		public Byte[] LogDataPresent
		{
			get
			{
				Byte[] returnValue = new Byte[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 160];
				return returnValue;
			}
		}
		public Byte PrimaryFileValid{ get { return _StructureData[_BufferOffset +162]; } }
		public Byte BaseBlockDirty{ get { return _StructureData[_BufferOffset +163]; } }
		public UInt16 FirstLogFile
		{
			get
			{
				// start: 0  end: 3  Mask: 0000000000000111
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 164);
				var value2 = (value & 7) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 SecondLogFile
		{
			get
			{
				// start: 3  end: 6  Mask: 0000000000111000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 164);
				var value2 = (value & 56) >> 3;
				return (UInt16)value2;
			}
		}
		public UInt16 HeaderRecovered
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 164);
				var value2 = (value & 64) >> 6;
				return (UInt16)value2;
			}
		}
		public UInt16 LegacyRecoveryIndicated
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 164);
				var value2 = (value & 128) >> 7;
				return (UInt16)value2;
			}
		}
		public UInt16 RecoveryInformationReserved
		{
			get
			{
				// start: 8  end: 16  Mask: 1111111100000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 164);
				var value2 = (value & 65280) >> 8;
				return (UInt16)value2;
			}
		}
		public UInt16 RecoveryInformation { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 164); } }
		public Byte[] LogEntriesRecovered
		{
			get
			{
				Byte[] returnValue = new Byte[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 166];
				return returnValue;
			}
		}
		public UInt32 RefreshCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 168); } }
		public UInt32 StorageTypeCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 172); } }
		public UInt32 Version { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 176); } }
		public _DUAL[] Storage
		{
			get
			{
				_DUAL[] returnValue = new _DUAL[2];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<2; i++ )
					returnValue[i] = new _DUAL(_StructureData, (i * size) + _BufferOffset + 184);
				return returnValue;
			}
		}
	}
	#endregion
	#region _WHEA_XPF_NMI_DESCRIPTOR
 
	public class _WHEA_XPF_NMI_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_XPF_NMI_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 3; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_XPF_NMI_DESCRIPTOR"": [ 3, {
				 ""Type"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Enabled"": [ 2, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Type { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public Byte Enabled{ get { return _StructureData[_BufferOffset +2]; } }
	}
	#endregion
	#region _CM_WORKITEM
 
	public class _CM_WORKITEM
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_WORKITEM(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_WORKITEM"": [ 40, {
				 ""ListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Private"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""WorkerRoutine"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Parameter"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 Private { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt64 WorkerRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 Parameter { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _POP_THERMAL_ZONE_METRICS
 
	public class _POP_THERMAL_ZONE_METRICS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_THERMAL_ZONE_METRICS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_THERMAL_ZONE_METRICS"": [ 48, {
				 ""ActiveCount"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""PassiveCount"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""LastActiveStartTime"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""AverageActiveTime"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""LastPassiveStartTime"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""AveragePassiveTime"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""StartTickSinceLastReset"": [ 40, [ ""_LARGE_INTEGER"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 ActiveCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 PassiveCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 LastActiveStartTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 AverageActiveTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 LastPassiveStartTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 AveragePassiveTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public _LARGE_INTEGER StartTickSinceLastReset
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
	}
	#endregion
	#region _CM_TRANS
 
	public class _CM_TRANS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_TRANS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 168; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_TRANS"": [ 168, {
				 ""TransactionListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""KCBUoWListHead"": [ 16, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""LazyCommitListEntry"": [ 32, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""KtmTrans"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CmRm"": [ 56, [ ""Pointer"", ""{\""target\"":\""_CM_RM\""}"" ]],
				 ""KtmEnlistmentObject"": [ 64, [ ""Pointer"", ""{\""target\"":\""_KENLISTMENT\""}"" ]],
				 ""KtmEnlistmentHandle"": [ 72, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""KtmUow"": [ 80, [ ""_GUID"", ""null"" ]],
				 ""StartLsn"": [ 96, [ ""UInt64"", ""null"" ]],
				 ""TransState"": [ 104, [ ""UInt32"", ""null"" ]],
				 ""HiveCount"": [ 108, [ ""UInt32"", ""null"" ]],
				 ""HiveArray"": [ 112, [ ""Array"", ""{\""count\"":7,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""_CMHIVE\""}}"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY TransactionListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LIST_ENTRY KCBUoWListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _LIST_ENTRY LazyCommitListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt64 KtmTrans { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 CmRm { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 KtmEnlistmentObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 KtmEnlistmentHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public _GUID KtmUow
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 80);
				return returnValue;
			}
		}
		public UInt64 StartLsn { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt32 TransState { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 104); } }
		public UInt32 HiveCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 108); } }
		public UInt64[] HiveArray
		{
			get
			{
				UInt64[] returnValue = new UInt64[7];
				int size = 8;
				for(int i=0; i<7; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 112);
				return returnValue;
			}
		}
	}
	#endregion
	#region _WHEA_ERROR_RECORD_HEADER_VALIDBITS
 
	public class _WHEA_ERROR_RECORD_HEADER_VALIDBITS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_ERROR_RECORD_HEADER_VALIDBITS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_ERROR_RECORD_HEADER_VALIDBITS"": [ 4, {
				 ""PlatformId"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""Timestamp"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""PartitionId"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""Reserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""AsULONG"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 PlatformId
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 Timestamp
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 PartitionId
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 Reserved
		{
			get
			{
				// start: 3  end: 32  Mask: 11111111111111111111111111111000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967288) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 AsULONG { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _CM_PARTIAL_RESOURCE_LIST
 
	public class _CM_PARTIAL_RESOURCE_LIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_PARTIAL_RESOURCE_LIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 28; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_PARTIAL_RESOURCE_LIST"": [ 28, {
				 ""Version"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Revision"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Count"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""PartialDescriptors"": [ 8, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Version { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 Revision { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt32 Count { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _CM_PARTIAL_RESOURCE_DESCRIPTOR[] PartialDescriptors
		{
			get
			{
				_CM_PARTIAL_RESOURCE_DESCRIPTOR[] returnValue = new _CM_PARTIAL_RESOURCE_DESCRIPTOR[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _CM_PARTIAL_RESOURCE_DESCRIPTOR(_StructureData, (i * size) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _RTL_RANGE_LIST
 
	public class _RTL_RANGE_LIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_RANGE_LIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_RANGE_LIST"": [ 32, {
				 ""ListHead"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Flags"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""Count"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""Stamp"": [ 24, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 Count { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 Stamp { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _RTL_TIME_ZONE_INFORMATION
 
	public class _RTL_TIME_ZONE_INFORMATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_TIME_ZONE_INFORMATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 172; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_TIME_ZONE_INFORMATION"": [ 172, {
				 ""Bias"": [ 0, [ ""Int32"", ""null"" ]],
				 ""StandardName"": [ 4, [ ""Array"", ""{\""count\"":32,\""target\"":\""UInt16\""}"" ]],
				 ""StandardStart"": [ 68, [ ""_TIME_FIELDS"", ""null"" ]],
				 ""StandardBias"": [ 84, [ ""Int32"", ""null"" ]],
				 ""DaylightName"": [ 88, [ ""Array"", ""{\""count\"":32,\""target\"":\""UInt16\""}"" ]],
				 ""DaylightStart"": [ 152, [ ""_TIME_FIELDS"", ""null"" ]],
				 ""DaylightBias"": [ 168, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int32 Bias { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public UInt16[] StandardName
		{
			get
			{
				UInt16[] returnValue = new UInt16[32];
				for(int i=0; i<32; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 4);
				return returnValue;
			}
		}
		public _TIME_FIELDS StandardStart
		{
			get
			{
				_TIME_FIELDS returnValue = new _TIME_FIELDS(_StructureData, _BufferOffset + 68);
				return returnValue;
			}
		}
		public Int32 StandardBias { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 84); } }
		public UInt16[] DaylightName
		{
			get
			{
				UInt16[] returnValue = new UInt16[32];
				for(int i=0; i<32; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 88);
				return returnValue;
			}
		}
		public _TIME_FIELDS DaylightStart
		{
			get
			{
				_TIME_FIELDS returnValue = new _TIME_FIELDS(_StructureData, _BufferOffset + 152);
				return returnValue;
			}
		}
		public Int32 DaylightBias { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 168); } }
	}
	#endregion
	#region _OBJECT_CREATE_INFORMATION
 
	public class _OBJECT_CREATE_INFORMATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_CREATE_INFORMATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_CREATE_INFORMATION"": [ 64, {
				 ""Attributes"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""RootDirectory"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ProbeMode"": [ 16, [ ""Char"", ""null"" ]],
				 ""PagedPoolCharge"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""NonPagedPoolCharge"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""SecurityDescriptorCharge"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""SecurityDescriptor"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SecurityQos"": [ 40, [ ""Pointer"", ""{\""target\"":\""_SECURITY_QUALITY_OF_SERVICE\""}"" ]],
				 ""SecurityQualityOfService"": [ 48, [ ""_SECURITY_QUALITY_OF_SERVICE"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Attributes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 RootDirectory { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public Char ProbeMode { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 16); } }
		public UInt32 PagedPoolCharge { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 NonPagedPoolCharge { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 SecurityDescriptorCharge { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt64 SecurityDescriptor { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 SecurityQos { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public _SECURITY_QUALITY_OF_SERVICE SecurityQualityOfService
		{
			get
			{
				_SECURITY_QUALITY_OF_SERVICE returnValue = new _SECURITY_QUALITY_OF_SERVICE(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
	}
	#endregion
	#region _POOL_HACKER
 
	public class _POOL_HACKER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POOL_HACKER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POOL_HACKER"": [ 48, {
				 ""Header"": [ 0, [ ""_POOL_HEADER"", ""null"" ]],
				 ""Contents"": [ 16, [ ""Array"", ""{\""count\"":8,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public _POOL_HEADER Header
		{
			get
			{
				_POOL_HEADER returnValue = new _POOL_HEADER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32[] Contents
		{
			get
			{
				UInt32[] returnValue = new UInt32[8];
				for(int i=0; i<8; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _PO_DIAG_STACK_RECORD
 
	public class _PO_DIAG_STACK_RECORD
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PO_DIAG_STACK_RECORD(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PO_DIAG_STACK_RECORD"": [ 16, {
				 ""StackDepth"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Stack"": [ 8, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 StackDepth { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64[] Stack
		{
			get
			{
				UInt64[] returnValue = new UInt64[1];
				int size = 8;
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _SECTION_OBJECT_POINTERS
 
	public class _SECTION_OBJECT_POINTERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SECTION_OBJECT_POINTERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SECTION_OBJECT_POINTERS"": [ 24, {
				 ""DataSectionObject"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SharedCacheMap"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ImageSectionObject"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 DataSectionObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 SharedCacheMap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 ImageSectionObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _SEP_AUDIT_POLICY
 
	public class _SEP_AUDIT_POLICY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SEP_AUDIT_POLICY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 30; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SEP_AUDIT_POLICY"": [ 30, {
				 ""AdtTokenPolicy"": [ 0, [ ""_TOKEN_AUDIT_POLICY"", ""null"" ]],
				 ""PolicySetStatus"": [ 29, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _TOKEN_AUDIT_POLICY AdtTokenPolicy
		{
			get
			{
				_TOKEN_AUDIT_POLICY returnValue = new _TOKEN_AUDIT_POLICY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public Byte PolicySetStatus{ get { return _StructureData[_BufferOffset +29]; } }
	}
	#endregion
	#region _UNNAMED_33566
 
	public class _UNNAMED_33566
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33566(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33566"": [ 4, {
				 ""SnapSharedExportsFailed"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""Spare"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 SnapSharedExportsFailed
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 Spare
		{
			get
			{
				// start: 1  end: 32  Mask: 11111111111111111111111111111110
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967294) >> 1;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _UNNAMED_33569
 
	public class _UNNAMED_33569
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33569(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33569"": [ 32, {
				 ""AllSharedExportThunks"": [ 0, [ ""_VF_TARGET_ALL_SHARED_EXPORT_THUNKS"", ""null"" ]],
				 ""Flags"": [ 0, [ ""_UNNAMED_33566"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _VF_TARGET_ALL_SHARED_EXPORT_THUNKS AllSharedExportThunks
		{
			get
			{
				_VF_TARGET_ALL_SHARED_EXPORT_THUNKS returnValue = new _VF_TARGET_ALL_SHARED_EXPORT_THUNKS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33566 Flags
		{
			get
			{
				_UNNAMED_33566 returnValue = new _UNNAMED_33566(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _VF_TARGET_DRIVER
 
	public class _VF_TARGET_DRIVER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VF_TARGET_DRIVER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VF_TARGET_DRIVER"": [ 56, {
				 ""TreeNode"": [ 0, [ ""_VF_AVL_TREE_NODE"", ""null"" ]],
				 ""u1"": [ 16, [ ""_UNNAMED_33569"", ""null"" ]],
				 ""VerifiedData"": [ 48, [ ""Pointer"", ""{\""target\"":\""_VF_TARGET_VERIFIED_DRIVER_DATA\""}"" ]] }]
				 }
				)";
			}
		}
		public _VF_AVL_TREE_NODE TreeNode
		{
			get
			{
				_VF_AVL_TREE_NODE returnValue = new _VF_AVL_TREE_NODE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33569 u1
		{
			get
			{
				_UNNAMED_33569 returnValue = new _UNNAMED_33569(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt64 VerifiedData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
	}
	#endregion
	#region _UNNAMED_33580
 
	public class _UNNAMED_33580
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33580(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 20; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33580"": [ 20, {
				 ""ClassGuid"": [ 0, [ ""_GUID"", ""null"" ]],
				 ""SymbolicLinkName"": [ 16, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt16\""}"" ]] }]
				 }
				)";
			}
		}
		public _GUID ClassGuid
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt16[] SymbolicLinkName
		{
			get
			{
				UInt16[] returnValue = new UInt16[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_33584
 
	public class _UNNAMED_33584
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33584(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 2; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33584"": [ 2, {
				 ""DeviceId"": [ 0, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt16\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt16[] DeviceId
		{
			get
			{
				UInt16[] returnValue = new UInt16[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_33586
 
	public class _UNNAMED_33586
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33586(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33586"": [ 16, {
				 ""NotificationStructure"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DeviceId"": [ 8, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt16\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 NotificationStructure { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt16[] DeviceId
		{
			get
			{
				UInt16[] returnValue = new UInt16[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_33589
 
	public class _UNNAMED_33589
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33589(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33589"": [ 8, {
				 ""Notification"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Notification { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_33591
 
	public class _UNNAMED_33591
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33591(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33591"": [ 8, {
				 ""NotificationCode"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""NotificationData"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 NotificationCode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 NotificationData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _UNNAMED_33594
 
	public class _UNNAMED_33594
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33594(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33594"": [ 8, {
				 ""VetoType"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""_PNP_VETO_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""DeviceIdVetoNameBuffer"": [ 4, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt16\""}"" ]] }]
				 }
				)";
			}
		}
		public _PNP_VETO_TYPE VetoType { get { return (_PNP_VETO_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt16[] DeviceIdVetoNameBuffer
		{
			get
			{
				UInt16[] returnValue = new UInt16[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 4);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_33597
 
	public class _UNNAMED_33597
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33597(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33597"": [ 16, {
				 ""BlockedDriverGuid"": [ 0, [ ""_GUID"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _GUID BlockedDriverGuid
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_33599
 
	public class _UNNAMED_33599
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33599(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 2; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33599"": [ 2, {
				 ""ParentId"": [ 0, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt16\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt16[] ParentId
		{
			get
			{
				UInt16[] returnValue = new UInt16[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_33601
 
	public class _UNNAMED_33601
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33601(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33601"": [ 32, {
				 ""PowerSettingGuid"": [ 0, [ ""_GUID"", ""null"" ]],
				 ""Flags"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""SessionId"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""DataLength"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""Data"": [ 28, [ ""Array"", ""{\""count\"":1,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public _GUID PowerSettingGuid
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 SessionId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 DataLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public Byte[] Data
		{
			get
			{
				Byte[] returnValue = new Byte[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 28];
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_33607
 
	public class _UNNAMED_33607
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33607(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33607"": [ 32, {
				 ""DeviceClass"": [ 0, [ ""_UNNAMED_33580"", ""null"" ]],
				 ""TargetDevice"": [ 0, [ ""_UNNAMED_33584"", ""null"" ]],
				 ""InstallDevice"": [ 0, [ ""_UNNAMED_33584"", ""null"" ]],
				 ""CustomNotification"": [ 0, [ ""_UNNAMED_33586"", ""null"" ]],
				 ""ProfileNotification"": [ 0, [ ""_UNNAMED_33589"", ""null"" ]],
				 ""PowerNotification"": [ 0, [ ""_UNNAMED_33591"", ""null"" ]],
				 ""VetoNotification"": [ 0, [ ""_UNNAMED_33594"", ""null"" ]],
				 ""BlockedDriverNotification"": [ 0, [ ""_UNNAMED_33597"", ""null"" ]],
				 ""InvalidIDNotification"": [ 0, [ ""_UNNAMED_33599"", ""null"" ]],
				 ""PowerSettingNotification"": [ 0, [ ""_UNNAMED_33601"", ""null"" ]],
				 ""PropertyChangeNotification"": [ 0, [ ""_UNNAMED_33584"", ""null"" ]],
				 ""DeviceInstanceNotification"": [ 0, [ ""_UNNAMED_33584"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_33580 DeviceClass
		{
			get
			{
				_UNNAMED_33580 returnValue = new _UNNAMED_33580(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33584 TargetDevice
		{
			get
			{
				_UNNAMED_33584 returnValue = new _UNNAMED_33584(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33584 InstallDevice
		{
			get
			{
				_UNNAMED_33584 returnValue = new _UNNAMED_33584(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33586 CustomNotification
		{
			get
			{
				_UNNAMED_33586 returnValue = new _UNNAMED_33586(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33589 ProfileNotification
		{
			get
			{
				_UNNAMED_33589 returnValue = new _UNNAMED_33589(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33591 PowerNotification
		{
			get
			{
				_UNNAMED_33591 returnValue = new _UNNAMED_33591(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33594 VetoNotification
		{
			get
			{
				_UNNAMED_33594 returnValue = new _UNNAMED_33594(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33597 BlockedDriverNotification
		{
			get
			{
				_UNNAMED_33597 returnValue = new _UNNAMED_33597(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33599 InvalidIDNotification
		{
			get
			{
				_UNNAMED_33599 returnValue = new _UNNAMED_33599(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33601 PowerSettingNotification
		{
			get
			{
				_UNNAMED_33601 returnValue = new _UNNAMED_33601(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33584 PropertyChangeNotification
		{
			get
			{
				_UNNAMED_33584 returnValue = new _UNNAMED_33584(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33584 DeviceInstanceNotification
		{
			get
			{
				_UNNAMED_33584 returnValue = new _UNNAMED_33584(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _PLUGPLAY_EVENT_BLOCK
 
	public class _PLUGPLAY_EVENT_BLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PLUGPLAY_EVENT_BLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 80; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PLUGPLAY_EVENT_BLOCK"": [ 80, {
				 ""EventGuid"": [ 0, [ ""_GUID"", ""null"" ]],
				 ""EventCategory"": [ 16, [ ""Enumeration"", ""{\""enum_name\"":\""_PLUGPLAY_EVENT_CATEGORY\"",\""target\"":\""UInt32\""}"" ]],
				 ""Result"": [ 24, [ ""Pointer"", ""{\""target\"":\""unsigned long\""}"" ]],
				 ""Flags"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""TotalSize"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""DeviceObject"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""u"": [ 48, [ ""_UNNAMED_33607"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _GUID EventGuid
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _PLUGPLAY_EVENT_CATEGORY EventCategory { get { return (_PLUGPLAY_EVENT_CATEGORY)BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt64 Result { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 TotalSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public UInt64 DeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public _UNNAMED_33607 u
		{
			get
			{
				_UNNAMED_33607 returnValue = new _UNNAMED_33607(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
	}
	#endregion
	#region _VF_SUSPECT_DRIVER_ENTRY
 
	public class _VF_SUSPECT_DRIVER_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VF_SUSPECT_DRIVER_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VF_SUSPECT_DRIVER_ENTRY"": [ 40, {
				 ""Links"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Loads"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""Unloads"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""BaseName"": [ 24, [ ""_UNICODE_STRING"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY Links
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 Loads { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 Unloads { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public _UNICODE_STRING BaseName
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MMPTE_TIMESTAMP
 
	public class _MMPTE_TIMESTAMP
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMPTE_TIMESTAMP(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMPTE_TIMESTAMP"": [ 8, {
				 ""MustBeZero"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""PageFileLow"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":1,\""target\"":\""UInt64\""}"" ]],
				 ""Protection"": [ 0, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":5,\""target\"":\""UInt64\""}"" ]],
				 ""Prototype"": [ 0, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt64\""}"" ]],
				 ""Transition"": [ 0, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt64\""}"" ]],
				 ""Reserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":12,\""target\"":\""UInt64\""}"" ]],
				 ""GlobalTimeStamp"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":32,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 MustBeZero
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 PageFileLow
		{
			get
			{
				// start: 1  end: 5  Mask: 0000000000011110
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 30) >> 1;
				return (UInt64)value2;
			}
		}
		public UInt64 Protection
		{
			get
			{
				// start: 5  end: 10  Mask: 0000001111100000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 992) >> 5;
				return (UInt64)value2;
			}
		}
		public UInt64 Prototype
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1024) >> 10;
				return (UInt64)value2;
			}
		}
		public UInt64 Transition
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2048) >> 11;
				return (UInt64)value2;
			}
		}
		public UInt64 Reserved
		{
			get
			{
				// start: 12  end: 32  Mask: 11111111111111111111000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294963200) >> 12;
				return (UInt64)value2;
			}
		}
		public UInt64 GlobalTimeStamp
		{
			get
			{
				// start: 32  end: 64  Mask: 0000000000000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 32;
				return (UInt64)value2;
			}
		}
	}
	#endregion
	#region _SID_AND_ATTRIBUTES_HASH
 
	public class _SID_AND_ATTRIBUTES_HASH
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SID_AND_ATTRIBUTES_HASH(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 272; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SID_AND_ATTRIBUTES_HASH"": [ 272, {
				 ""SidCount"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""SidAttr"": [ 8, [ ""Pointer"", ""{\""target\"":\""_SID_AND_ATTRIBUTES\""}"" ]],
				 ""Hash"": [ 16, [ ""Array"", ""{\""count\"":32,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 SidCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 SidAttr { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64[] Hash
		{
			get
			{
				UInt64[] returnValue = new UInt64[32];
				for(int i=0; i<32; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _XSTATE_CONTEXT
 
	public class _XSTATE_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _XSTATE_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_XSTATE_CONTEXT"": [ 32, {
				 ""Mask"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Length"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Reserved1"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""Area"": [ 16, [ ""Pointer"", ""{\""target\"":\""_XSAVE_AREA\""}"" ]],
				 ""Buffer"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Mask { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Reserved1 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt64 Area { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Buffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _PROCESSOR_IDLE_PREPARE_INFO
 
	public class _PROCESSOR_IDLE_PREPARE_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROCESSOR_IDLE_PREPARE_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 104; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROCESSOR_IDLE_PREPARE_INFO"": [ 104, {
				 ""Context"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Constraints"": [ 8, [ ""_PROCESSOR_IDLE_CONSTRAINTS"", ""null"" ]],
				 ""DependencyCount"": [ 72, [ ""UInt32"", ""null"" ]],
				 ""DependencyUsed"": [ 76, [ ""UInt32"", ""null"" ]],
				 ""DependencyArray"": [ 80, [ ""Pointer"", ""{\""target\"":\""_PROCESSOR_IDLE_DEPENDENCY\""}"" ]],
				 ""PlatformIdleStateIndex"": [ 88, [ ""UInt32"", ""null"" ]],
				 ""ProcessorIdleStateIndex"": [ 92, [ ""UInt32"", ""null"" ]],
				 ""IdleSelectFailureMask"": [ 96, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Context { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _PROCESSOR_IDLE_CONSTRAINTS Constraints
		{
			get
			{
				_PROCESSOR_IDLE_CONSTRAINTS returnValue = new _PROCESSOR_IDLE_CONSTRAINTS(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt32 DependencyCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 72); } }
		public UInt32 DependencyUsed { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 76); } }
		public UInt64 DependencyArray { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt32 PlatformIdleStateIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 88); } }
		public UInt32 ProcessorIdleStateIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 92); } }
		public UInt32 IdleSelectFailureMask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 96); } }
	}
	#endregion
	#region _XSAVE_FORMAT
 
	public class _XSAVE_FORMAT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _XSAVE_FORMAT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 512; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_XSAVE_FORMAT"": [ 512, {
				 ""ControlWord"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""StatusWord"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""TagWord"": [ 4, [ ""Byte"", ""null"" ]],
				 ""Reserved1"": [ 5, [ ""Byte"", ""null"" ]],
				 ""ErrorOpcode"": [ 6, [ ""UInt16"", ""null"" ]],
				 ""ErrorOffset"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""ErrorSelector"": [ 12, [ ""UInt16"", ""null"" ]],
				 ""Reserved2"": [ 14, [ ""UInt16"", ""null"" ]],
				 ""DataOffset"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""DataSelector"": [ 20, [ ""UInt16"", ""null"" ]],
				 ""Reserved3"": [ 22, [ ""UInt16"", ""null"" ]],
				 ""MxCsr"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""MxCsr_Mask"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""FloatRegisters"": [ 32, [ ""Array"", ""{\""count\"":8,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""XmmRegisters"": [ 160, [ ""Array"", ""{\""count\"":16,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""Reserved4"": [ 416, [ ""Array"", ""{\""count\"":96,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 ControlWord { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 StatusWord { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public Byte TagWord{ get { return _StructureData[_BufferOffset +4]; } }
		public Byte Reserved1{ get { return _StructureData[_BufferOffset +5]; } }
		public UInt16 ErrorOpcode { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
		public UInt32 ErrorOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt16 ErrorSelector { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 12); } }
		public UInt16 Reserved2 { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 14); } }
		public UInt32 DataOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt16 DataSelector { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 20); } }
		public UInt16 Reserved3 { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 22); } }
		public UInt32 MxCsr { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 MxCsr_Mask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public _M128A[] FloatRegisters
		{
			get
			{
				_M128A[] returnValue = new _M128A[8];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<8; i++ )
					returnValue[i] = new _M128A(_StructureData, (i * size) + _BufferOffset + 32);
				return returnValue;
			}
		}
		public _M128A[] XmmRegisters
		{
			get
			{
				_M128A[] returnValue = new _M128A[16];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<16; i++ )
					returnValue[i] = new _M128A(_StructureData, (i * size) + _BufferOffset + 160);
				return returnValue;
			}
		}
		public Byte[] Reserved4
		{
			get
			{
				Byte[] returnValue = new Byte[96];
				for(int i=0; i<96; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 416];
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_33677
 
	public class _UNNAMED_33677
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33677(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33677"": [ 1, {
				 ""AsUCHAR"": [ 0, [ ""Byte"", ""null"" ]],
				 ""NoDomainAccounting"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""IncreasePolicy"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""DecreasePolicy"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""Reserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":5,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public Byte AsUCHAR{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte NoDomainAccounting
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte IncreasePolicy
		{
			get
			{
				// start: 1  end: 3  Mask: 0000000000000110
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 6) >> 1;
				return (Byte)value2;
			}
		}
		public Byte DecreasePolicy
		{
			get
			{
				// start: 3  end: 5  Mask: 0000000000011000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 24) >> 3;
				return (Byte)value2;
			}
		}
		public Byte Reserved
		{
			get
			{
				// start: 5  end: 8  Mask: 0000000011100000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 224) >> 5;
				return (Byte)value2;
			}
		}
	}
	#endregion
	#region PROCESSOR_PERFSTATE_POLICY
 
	public class PROCESSOR_PERFSTATE_POLICY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public PROCESSOR_PERFSTATE_POLICY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 28; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""PROCESSOR_PERFSTATE_POLICY"": [ 28, {
				 ""Revision"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""MaxThrottle"": [ 4, [ ""Byte"", ""null"" ]],
				 ""MinThrottle"": [ 5, [ ""Byte"", ""null"" ]],
				 ""BusyAdjThreshold"": [ 6, [ ""Byte"", ""null"" ]],
				 ""Spare"": [ 7, [ ""Byte"", ""null"" ]],
				 ""Flags"": [ 7, [ ""_UNNAMED_33677"", ""null"" ]],
				 ""TimeCheck"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""IncreaseTime"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""DecreaseTime"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""IncreasePercent"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""DecreasePercent"": [ 24, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Revision { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Byte MaxThrottle{ get { return _StructureData[_BufferOffset +4]; } }
		public Byte MinThrottle{ get { return _StructureData[_BufferOffset +5]; } }
		public Byte BusyAdjThreshold{ get { return _StructureData[_BufferOffset +6]; } }
		public Byte Spare{ get { return _StructureData[_BufferOffset +7]; } }
		public _UNNAMED_33677 Flags
		{
			get
			{
				_UNNAMED_33677 returnValue = new _UNNAMED_33677(_StructureData, _BufferOffset + 7);
				return returnValue;
			}
		}
		public UInt32 TimeCheck { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 IncreaseTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 DecreaseTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 IncreasePercent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 DecreasePercent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _BUS_EXTENSION_LIST
 
	public class _BUS_EXTENSION_LIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _BUS_EXTENSION_LIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_BUS_EXTENSION_LIST"": [ 16, {
				 ""Next"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""BusExtension"": [ 8, [ ""Pointer"", ""{\""target\"":\""_PI_BUS_EXTENSION\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Next { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 BusExtension { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _CACHED_CHILD_LIST
 
	public class _CACHED_CHILD_LIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CACHED_CHILD_LIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CACHED_CHILD_LIST"": [ 16, {
				 ""Count"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ValueList"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""RealKcb"": [ 8, [ ""Pointer"", ""{\""target\"":\""_CM_KEY_CONTROL_BLOCK\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Count { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 ValueList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 RealKcb { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _KDEVICE_QUEUE
 
	public class _KDEVICE_QUEUE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KDEVICE_QUEUE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KDEVICE_QUEUE"": [ 40, {
				 ""Type"": [ 0, [ ""Int16"", ""null"" ]],
				 ""Size"": [ 2, [ ""Int16"", ""null"" ]],
				 ""DeviceListHead"": [ 8, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Lock"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""Busy"": [ 32, [ ""Byte"", ""null"" ]],
				 ""Reserved"": [ 32, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":0,\""target\"":\""Int64\""}"" ]],
				 ""Hint"": [ 32, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":8,\""target\"":\""Int64\""}"" ]] }]
				 }
				)";
			}
		}
		public Int16 Type { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 0); } }
		public Int16 Size { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 2); } }
		public _LIST_ENTRY DeviceListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt64 Lock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public Byte Busy{ get { return _StructureData[_BufferOffset +32]; } }
		public UInt64 Reserved
		{
			get
			{
				// start: 0  end: 8  Mask: 0000000011111111
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 32);
				var value2 = (value & 255) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 Hint
		{
			get
			{
				// start: 8  end: 64  Mask: 0000000000000000000000000000000011111111111111111111111100000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 32);
				var value2 = (value & 4294967040) >> 8;
				return (UInt64)value2;
			}
		}
	}
	#endregion
	#region _SYSTEM_POWER_STATE_CONTEXT
 
	public class _SYSTEM_POWER_STATE_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SYSTEM_POWER_STATE_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SYSTEM_POWER_STATE_CONTEXT"": [ 4, {
				 ""Reserved1"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""TargetSystemState"": [ 0, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]],
				 ""EffectiveSystemState"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":12,\""target\"":\""UInt32\""}"" ]],
				 ""CurrentSystemState"": [ 0, [ ""BitField"", ""{\""end_bit\"":20,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""IgnoreHibernationPath"": [ 0, [ ""BitField"", ""{\""end_bit\"":21,\""start_bit\"":20,\""target\"":\""UInt32\""}"" ]],
				 ""PseudoTransition"": [ 0, [ ""BitField"", ""{\""end_bit\"":22,\""start_bit\"":21,\""target\"":\""UInt32\""}"" ]],
				 ""Reserved2"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":22,\""target\"":\""UInt32\""}"" ]],
				 ""ContextAsUlong"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Reserved1
		{
			get
			{
				// start: 0  end: 8  Mask: 0000000011111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 255) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 TargetSystemState
		{
			get
			{
				// start: 8  end: 12  Mask: 0000111100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 3840) >> 8;
				return (UInt32)value2;
			}
		}
		public UInt32 EffectiveSystemState
		{
			get
			{
				// start: 12  end: 16  Mask: 1111000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 61440) >> 12;
				return (UInt32)value2;
			}
		}
		public UInt32 CurrentSystemState
		{
			get
			{
				// start: 16  end: 20  Mask: 11110000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 983040) >> 16;
				return (UInt32)value2;
			}
		}
		public UInt32 IgnoreHibernationPath
		{
			get
			{
				// start: 20  end: 21  Mask: 100000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1048576) >> 20;
				return (UInt32)value2;
			}
		}
		public UInt32 PseudoTransition
		{
			get
			{
				// start: 21  end: 22  Mask: 1000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2097152) >> 21;
				return (UInt32)value2;
			}
		}
		public UInt32 Reserved2
		{
			get
			{
				// start: 22  end: 32  Mask: 11111111110000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4290772992) >> 22;
				return (UInt32)value2;
			}
		}
		public UInt32 ContextAsUlong { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _PEBS_DS_SAVE_AREA
 
	public class _PEBS_DS_SAVE_AREA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PEBS_DS_SAVE_AREA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 96; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PEBS_DS_SAVE_AREA"": [ 96, {
				 ""BtsBufferBase"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""BtsIndex"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""BtsAbsoluteMaximum"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""BtsInterruptThreshold"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""PebsBufferBase"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""PebsIndex"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""PebsAbsoluteMaximum"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""PebsInterruptThreshold"": [ 56, [ ""UInt64"", ""null"" ]],
				 ""PebsCounterReset0"": [ 64, [ ""UInt64"", ""null"" ]],
				 ""PebsCounterReset1"": [ 72, [ ""UInt64"", ""null"" ]],
				 ""PebsCounterReset2"": [ 80, [ ""UInt64"", ""null"" ]],
				 ""PebsCounterReset3"": [ 88, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 BtsBufferBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 BtsIndex { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 BtsAbsoluteMaximum { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 BtsInterruptThreshold { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 PebsBufferBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 PebsIndex { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 PebsAbsoluteMaximum { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 PebsInterruptThreshold { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 PebsCounterReset0 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 PebsCounterReset1 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 PebsCounterReset2 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 PebsCounterReset3 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
	}
	#endregion
	#region _OBJECT_TYPE_INITIALIZER
 
	public class _OBJECT_TYPE_INITIALIZER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_TYPE_INITIALIZER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 120; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_TYPE_INITIALIZER"": [ 120, {
				 ""Length"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""ObjectTypeFlags"": [ 2, [ ""Byte"", ""null"" ]],
				 ""CaseInsensitive"": [ 2, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""UnnamedObjectsOnly"": [ 2, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""UseDefaultObject"": [ 2, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""SecurityRequired"": [ 2, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""MaintainHandleCount"": [ 2, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""MaintainTypeList"": [ 2, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""Byte\""}"" ]],
				 ""SupportsObjectCallbacks"": [ 2, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""Byte\""}"" ]],
				 ""CacheAligned"": [ 2, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""Byte\""}"" ]],
				 ""ObjectTypeCode"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""InvalidAttributes"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""GenericMapping"": [ 12, [ ""_GENERIC_MAPPING"", ""null"" ]],
				 ""ValidAccessMask"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""RetainAccess"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""PoolType"": [ 36, [ ""Enumeration"", ""{\""enum_name\"":\""_POOL_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""DefaultPagedPoolCharge"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""DefaultNonPagedPoolCharge"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""DumpProcedure"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""OpenProcedure"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CloseProcedure"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DeleteProcedure"": [ 72, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ParseProcedure"": [ 80, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SecurityProcedure"": [ 88, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""QueryNameProcedure"": [ 96, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""OkayToCloseProcedure"": [ 104, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""WaitObjectFlagMask"": [ 112, [ ""UInt32"", ""null"" ]],
				 ""WaitObjectFlagOffset"": [ 116, [ ""UInt16"", ""null"" ]],
				 ""WaitObjectPointerOffset"": [ 118, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Length { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public Byte ObjectTypeFlags{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte CaseInsensitive
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 2];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte UnnamedObjectsOnly
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 2];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte UseDefaultObject
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 2];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte SecurityRequired
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 2];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte MaintainHandleCount
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				Byte value = _StructureData[_BufferOffset + 2];
				var value2 = (value & 16) >> 4;
				return (Byte)value2;
			}
		}
		public Byte MaintainTypeList
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				Byte value = _StructureData[_BufferOffset + 2];
				var value2 = (value & 32) >> 5;
				return (Byte)value2;
			}
		}
		public Byte SupportsObjectCallbacks
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				Byte value = _StructureData[_BufferOffset + 2];
				var value2 = (value & 64) >> 6;
				return (Byte)value2;
			}
		}
		public Byte CacheAligned
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				Byte value = _StructureData[_BufferOffset + 2];
				var value2 = (value & 128) >> 7;
				return (Byte)value2;
			}
		}
		public UInt32 ObjectTypeCode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 InvalidAttributes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public _GENERIC_MAPPING GenericMapping
		{
			get
			{
				_GENERIC_MAPPING returnValue = new _GENERIC_MAPPING(_StructureData, _BufferOffset + 12);
				return returnValue;
			}
		}
		public UInt32 ValidAccessMask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 RetainAccess { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public _POOL_TYPE PoolType { get { return (_POOL_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public UInt32 DefaultPagedPoolCharge { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32 DefaultNonPagedPoolCharge { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public UInt64 DumpProcedure { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 OpenProcedure { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 CloseProcedure { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 DeleteProcedure { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 ParseProcedure { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 SecurityProcedure { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 QueryNameProcedure { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt64 OkayToCloseProcedure { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public UInt32 WaitObjectFlagMask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 112); } }
		public UInt16 WaitObjectFlagOffset { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 116); } }
		public UInt16 WaitObjectPointerOffset { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 118); } }
	}
	#endregion
	#region _UNNAMED_33772
 
	public class _UNNAMED_33772
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_33772(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_33772"": [ 4, {
				 ""LongFlags"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""SubsectionFlags"": [ 0, [ ""_MMSUBSECTION_FLAGS"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 LongFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _MMSUBSECTION_FLAGS SubsectionFlags
		{
			get
			{
				_MMSUBSECTION_FLAGS returnValue = new _MMSUBSECTION_FLAGS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _SUBSECTION
 
	public class _SUBSECTION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SUBSECTION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SUBSECTION"": [ 56, {
				 ""ControlArea"": [ 0, [ ""Pointer"", ""{\""target\"":\""_CONTROL_AREA\""}"" ]],
				 ""SubsectionBase"": [ 8, [ ""Pointer"", ""{\""target\"":\""_MMPTE\""}"" ]],
				 ""NextSubsection"": [ 16, [ ""Pointer"", ""{\""target\"":\""_SUBSECTION\""}"" ]],
				 ""PtesInSubsection"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""UnusedPtes"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""GlobalPerSessionHead"": [ 32, [ ""_RTL_AVL_TREE"", ""null"" ]],
				 ""u"": [ 40, [ ""_UNNAMED_33772"", ""null"" ]],
				 ""StartingSector"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""NumberOfFullSectors"": [ 48, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ControlArea { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 SubsectionBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 NextSubsection { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 PtesInSubsection { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 UnusedPtes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public _RTL_AVL_TREE GlobalPerSessionHead
		{
			get
			{
				_RTL_AVL_TREE returnValue = new _RTL_AVL_TREE(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public _UNNAMED_33772 u
		{
			get
			{
				_UNNAMED_33772 returnValue = new _UNNAMED_33772(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public UInt32 StartingSector { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public UInt32 NumberOfFullSectors { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
	}
	#endregion
	#region _KPROCESSOR_STATE
 
	public class _KPROCESSOR_STATE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KPROCESSOR_STATE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1456; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KPROCESSOR_STATE"": [ 1456, {
				 ""SpecialRegisters"": [ 0, [ ""_KSPECIAL_REGISTERS"", ""null"" ]],
				 ""ContextFrame"": [ 224, [ ""_CONTEXT"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _KSPECIAL_REGISTERS SpecialRegisters
		{
			get
			{
				_KSPECIAL_REGISTERS returnValue = new _KSPECIAL_REGISTERS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _CONTEXT ContextFrame
		{
			get
			{
				_CONTEXT returnValue = new _CONTEXT(_StructureData, _BufferOffset + 224);
				return returnValue;
			}
		}
	}
	#endregion
	#region tagSWITCH_CONTEXT_ATTRIBUTE
 
	public class tagSWITCH_CONTEXT_ATTRIBUTE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public tagSWITCH_CONTEXT_ATTRIBUTE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""tagSWITCH_CONTEXT_ATTRIBUTE"": [ 24, {
				 ""ulContextUpdateCounter"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""fAllowContextUpdate"": [ 8, [ ""Int32"", ""null"" ]],
				 ""fEnableTrace"": [ 12, [ ""Int32"", ""null"" ]],
				 ""EtwHandle"": [ 16, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ulContextUpdateCounter { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public Int32 fAllowContextUpdate { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 8); } }
		public Int32 fEnableTrace { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 12); } }
		public UInt64 EtwHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _IO_CLIENT_EXTENSION
 
	public class _IO_CLIENT_EXTENSION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IO_CLIENT_EXTENSION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IO_CLIENT_EXTENSION"": [ 16, {
				 ""NextExtension"": [ 0, [ ""Pointer"", ""{\""target\"":\""_IO_CLIENT_EXTENSION\""}"" ]],
				 ""ClientIdentificationAddress"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 NextExtension { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 ClientIdentificationAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _ETW_BUFFER_CONTEXT
 
	public class _ETW_BUFFER_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETW_BUFFER_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETW_BUFFER_CONTEXT"": [ 4, {
				 ""ProcessorNumber"": [ 0, [ ""Byte"", ""null"" ]],
				 ""Alignment"": [ 1, [ ""Byte"", ""null"" ]],
				 ""ProcessorIndex"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""LoggerId"": [ 2, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte ProcessorNumber{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte Alignment{ get { return _StructureData[_BufferOffset +1]; } }
		public UInt16 ProcessorIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 LoggerId { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
	}
	#endregion
	#region _DIRTY_PAGE_STATISTICS
 
	public class _DIRTY_PAGE_STATISTICS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DIRTY_PAGE_STATISTICS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DIRTY_PAGE_STATISTICS"": [ 24, {
				 ""DirtyPages"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""DirtyPagesLastScan"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""DirtyPagesScheduledLastScan"": [ 16, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 DirtyPages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 DirtyPagesLastScan { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 DirtyPagesScheduledLastScan { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _PROC_IDLE_SNAP
 
	public class _PROC_IDLE_SNAP
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROC_IDLE_SNAP(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROC_IDLE_SNAP"": [ 16, {
				 ""Time"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Idle"": [ 8, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Time { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Idle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _KERNEL_STACK_SEGMENT
 
	public class _KERNEL_STACK_SEGMENT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KERNEL_STACK_SEGMENT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KERNEL_STACK_SEGMENT"": [ 32, {
				 ""StackBase"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""StackLimit"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""KernelStack"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""InitialStack"": [ 24, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 StackBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 StackLimit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 KernelStack { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 InitialStack { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _KEXECUTE_OPTIONS
 
	public class _KEXECUTE_OPTIONS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KEXECUTE_OPTIONS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KEXECUTE_OPTIONS"": [ 1, {
				 ""ExecuteDisable"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""ExecuteEnable"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""DisableThunkEmulation"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""Permanent"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""ExecuteDispatchEnable"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""ImageDispatchEnable"": [ 0, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""Byte\""}"" ]],
				 ""DisableExceptionChainValidation"": [ 0, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""Byte\""}"" ]],
				 ""Spare"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""Byte\""}"" ]],
				 ""ExecuteOptions"": [ 0, [ ""Byte"", ""null"" ]],
				 ""ExecuteOptionsNV"": [ 0, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte ExecuteDisable
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte ExecuteEnable
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte DisableThunkEmulation
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte Permanent
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte ExecuteDispatchEnable
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 16) >> 4;
				return (Byte)value2;
			}
		}
		public Byte ImageDispatchEnable
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 32) >> 5;
				return (Byte)value2;
			}
		}
		public Byte DisableExceptionChainValidation
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 64) >> 6;
				return (Byte)value2;
			}
		}
		public Byte Spare
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 128) >> 7;
				return (Byte)value2;
			}
		}
		public Byte ExecuteOptions{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte ExecuteOptionsNV{ get { return _StructureData[_BufferOffset +0]; } }
	}
	#endregion
	#region _SEP_TOKEN_PRIVILEGES
 
	public class _SEP_TOKEN_PRIVILEGES
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SEP_TOKEN_PRIVILEGES(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SEP_TOKEN_PRIVILEGES"": [ 24, {
				 ""Present"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Enabled"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""EnabledByDefault"": [ 16, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Present { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Enabled { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 EnabledByDefault { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _WHEA_XPF_MCE_DESCRIPTOR
 
	public class _WHEA_XPF_MCE_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_XPF_MCE_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 920; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_XPF_MCE_DESCRIPTOR"": [ 920, {
				 ""Type"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Enabled"": [ 2, [ ""Byte"", ""null"" ]],
				 ""NumberOfBanks"": [ 3, [ ""Byte"", ""null"" ]],
				 ""Flags"": [ 4, [ ""_XPF_MCE_FLAGS"", ""null"" ]],
				 ""MCG_Capability"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""MCG_GlobalControl"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""Banks"": [ 24, [ ""Array"", ""{\""count\"":32,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Type { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public Byte Enabled{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte NumberOfBanks{ get { return _StructureData[_BufferOffset +3]; } }
		public _XPF_MCE_FLAGS Flags
		{
			get
			{
				_XPF_MCE_FLAGS returnValue = new _XPF_MCE_FLAGS(_StructureData, _BufferOffset + 4);
				return returnValue;
			}
		}
		public UInt64 MCG_Capability { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 MCG_GlobalControl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public _WHEA_XPF_MC_BANK_DESCRIPTOR[] Banks
		{
			get
			{
				_WHEA_XPF_MC_BANK_DESCRIPTOR[] returnValue = new _WHEA_XPF_MC_BANK_DESCRIPTOR[32];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<32; i++ )
					returnValue[i] = new _WHEA_XPF_MC_BANK_DESCRIPTOR(_StructureData, (i * size) + _BufferOffset + 24);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ARBITER_ALLOCATION_STATE
 
	public class _ARBITER_ALLOCATION_STATE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ARBITER_ALLOCATION_STATE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 80; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ARBITER_ALLOCATION_STATE"": [ 80, {
				 ""Start"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""End"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""CurrentMinimum"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""CurrentMaximum"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""Entry"": [ 32, [ ""Pointer"", ""{\""target\"":\""_ARBITER_LIST_ENTRY\""}"" ]],
				 ""CurrentAlternative"": [ 40, [ ""Pointer"", ""{\""target\"":\""_ARBITER_ALTERNATIVE\""}"" ]],
				 ""AlternativeCount"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""Alternatives"": [ 56, [ ""Pointer"", ""{\""target\"":\""_ARBITER_ALTERNATIVE\""}"" ]],
				 ""Flags"": [ 64, [ ""UInt16"", ""null"" ]],
				 ""RangeAttributes"": [ 66, [ ""Byte"", ""null"" ]],
				 ""RangeAvailableAttributes"": [ 67, [ ""Byte"", ""null"" ]],
				 ""WorkSpace"": [ 72, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Start { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 End { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 CurrentMinimum { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 CurrentMaximum { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 Entry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 CurrentAlternative { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt32 AlternativeCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public UInt64 Alternatives { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt16 Flags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 64); } }
		public Byte RangeAttributes{ get { return _StructureData[_BufferOffset +66]; } }
		public Byte RangeAvailableAttributes{ get { return _StructureData[_BufferOffset +67]; } }
		public UInt64 WorkSpace { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
	}
	#endregion
	#region _VACB_ARRAY_HEADER
 
	public class _VACB_ARRAY_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VACB_ARRAY_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VACB_ARRAY_HEADER"": [ 16, {
				 ""VacbArrayIndex"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""MappingCount"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""HighestMappedIndex"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Reserved"": [ 12, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 VacbArrayIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 MappingCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 HighestMappedIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Reserved { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
	}
	#endregion
	#region _MMWSLENTRY
 
	public class _MMWSLENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMWSLENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMWSLENTRY"": [ 8, {
				 ""Valid"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""Spare"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt64\""}"" ]],
				 ""Hashed"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt64\""}"" ]],
				 ""Direct"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt64\""}"" ]],
				 ""Protection"": [ 0, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":4,\""target\"":\""UInt64\""}"" ]],
				 ""Age"": [ 0, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":9,\""target\"":\""UInt64\""}"" ]],
				 ""VirtualPageNumber"": [ 0, [ ""BitField"", ""{\""end_bit\"":48,\""start_bit\"":12,\""target\"":\""UInt64\""}"" ]],
				 ""HighActiveFlink"": [ 0, [ ""BitField"", ""{\""end_bit\"":52,\""start_bit\"":48,\""target\"":\""UInt64\""}"" ]],
				 ""HighActiveBlink"": [ 0, [ ""BitField"", ""{\""end_bit\"":56,\""start_bit\"":52,\""target\"":\""UInt64\""}"" ]],
				 ""Unused"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":56,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Valid
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 Spare
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt64)value2;
			}
		}
		public UInt64 Hashed
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt64)value2;
			}
		}
		public UInt64 Direct
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8) >> 3;
				return (UInt64)value2;
			}
		}
		public UInt64 Protection
		{
			get
			{
				// start: 4  end: 9  Mask: 0000000111110000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 496) >> 4;
				return (UInt64)value2;
			}
		}
		public UInt64 Age
		{
			get
			{
				// start: 9  end: 12  Mask: 0000111000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 3584) >> 9;
				return (UInt64)value2;
			}
		}
		public UInt64 VirtualPageNumber
		{
			get
			{
				// start: 12  end: 48  Mask: 000000000000000011111111111111111111000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294963200) >> 12;
				return (UInt64)value2;
			}
		}
		public UInt64 HighActiveFlink
		{
			get
			{
				// start: 48  end: 52  Mask: 0000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 48;
				return (UInt64)value2;
			}
		}
		public UInt64 HighActiveBlink
		{
			get
			{
				// start: 52  end: 56  Mask: 00000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 52;
				return (UInt64)value2;
			}
		}
		public UInt64 Unused
		{
			get
			{
				// start: 56  end: 64  Mask: 0000000000000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 56;
				return (UInt64)value2;
			}
		}
	}
	#endregion
	#region _DBGKD_SWITCH_PARTITION
 
	public class _DBGKD_SWITCH_PARTITION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_SWITCH_PARTITION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_SWITCH_PARTITION"": [ 4, {
				 ""Partition"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Partition { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _REQUEST_MAILBOX
 
	public class _REQUEST_MAILBOX
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _REQUEST_MAILBOX(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_REQUEST_MAILBOX"": [ 64, {
				 ""Next"": [ 0, [ ""Pointer"", ""{\""target\"":\""_REQUEST_MAILBOX\""}"" ]],
				 ""RequestSummary"": [ 8, [ ""Int64"", ""null"" ]],
				 ""RequestPacket"": [ 16, [ ""_KREQUEST_PACKET"", ""null"" ]],
				 ""NodeTargetCountAddr"": [ 48, [ ""Pointer"", ""{\""target\"":\""long\""}"" ]],
				 ""NodeTargetCount"": [ 56, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Next { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public Int64 RequestSummary { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 8); } }
		public _KREQUEST_PACKET RequestPacket
		{
			get
			{
				_KREQUEST_PACKET returnValue = new _KREQUEST_PACKET(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt64 NodeTargetCountAddr { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public Int32 NodeTargetCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 56); } }
	}
	#endregion
	#region _DBGKD_GET_VERSION32
 
	public class _DBGKD_GET_VERSION32
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_GET_VERSION32(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_GET_VERSION32"": [ 40, {
				 ""MajorVersion"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""MinorVersion"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""ProtocolVersion"": [ 4, [ ""UInt16"", ""null"" ]],
				 ""Flags"": [ 6, [ ""UInt16"", ""null"" ]],
				 ""KernBase"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""PsLoadedModuleList"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""MachineType"": [ 16, [ ""UInt16"", ""null"" ]],
				 ""ThCallbackStack"": [ 18, [ ""UInt16"", ""null"" ]],
				 ""NextCallback"": [ 20, [ ""UInt16"", ""null"" ]],
				 ""FramePointer"": [ 22, [ ""UInt16"", ""null"" ]],
				 ""KiCallUserMode"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""KeUserCallbackDispatcher"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""BreakpointWithStatus"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""DebuggerDataList"": [ 36, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 MajorVersion { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 MinorVersion { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt16 ProtocolVersion { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 4); } }
		public UInt16 Flags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
		public UInt32 KernBase { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 PsLoadedModuleList { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt16 MachineType { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 16); } }
		public UInt16 ThCallbackStack { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 18); } }
		public UInt16 NextCallback { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 20); } }
		public UInt16 FramePointer { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 22); } }
		public UInt32 KiCallUserMode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 KeUserCallbackDispatcher { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 BreakpointWithStatus { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 DebuggerDataList { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
	}
	#endregion
	#region _WHEA_XPF_CMC_DESCRIPTOR
 
	public class _WHEA_XPF_CMC_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_XPF_CMC_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 932; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_XPF_CMC_DESCRIPTOR"": [ 932, {
				 ""Type"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Enabled"": [ 2, [ ""Byte"", ""null"" ]],
				 ""NumberOfBanks"": [ 3, [ ""Byte"", ""null"" ]],
				 ""Reserved"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Notify"": [ 8, [ ""_WHEA_NOTIFICATION_DESCRIPTOR"", ""null"" ]],
				 ""Banks"": [ 36, [ ""Array"", ""{\""count\"":32,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Type { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public Byte Enabled{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte NumberOfBanks{ get { return _StructureData[_BufferOffset +3]; } }
		public UInt32 Reserved { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _WHEA_NOTIFICATION_DESCRIPTOR Notify
		{
			get
			{
				_WHEA_NOTIFICATION_DESCRIPTOR returnValue = new _WHEA_NOTIFICATION_DESCRIPTOR(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _WHEA_XPF_MC_BANK_DESCRIPTOR[] Banks
		{
			get
			{
				_WHEA_XPF_MC_BANK_DESCRIPTOR[] returnValue = new _WHEA_XPF_MC_BANK_DESCRIPTOR[32];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<32; i++ )
					returnValue[i] = new _WHEA_XPF_MC_BANK_DESCRIPTOR(_StructureData, (i * size) + _BufferOffset + 36);
				return returnValue;
			}
		}
	}
	#endregion
	#region _WHEA_TIMESTAMP
 
	public class _WHEA_TIMESTAMP
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_TIMESTAMP(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_TIMESTAMP"": [ 8, {
				 ""Seconds"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""Minutes"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":8,\""target\"":\""UInt64\""}"" ]],
				 ""Hours"": [ 0, [ ""BitField"", ""{\""end_bit\"":24,\""start_bit\"":16,\""target\"":\""UInt64\""}"" ]],
				 ""Precise"": [ 0, [ ""BitField"", ""{\""end_bit\"":25,\""start_bit\"":24,\""target\"":\""UInt64\""}"" ]],
				 ""Reserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":25,\""target\"":\""UInt64\""}"" ]],
				 ""Day"": [ 0, [ ""BitField"", ""{\""end_bit\"":40,\""start_bit\"":32,\""target\"":\""UInt64\""}"" ]],
				 ""Month"": [ 0, [ ""BitField"", ""{\""end_bit\"":48,\""start_bit\"":40,\""target\"":\""UInt64\""}"" ]],
				 ""Year"": [ 0, [ ""BitField"", ""{\""end_bit\"":56,\""start_bit\"":48,\""target\"":\""UInt64\""}"" ]],
				 ""Century"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":56,\""target\"":\""UInt64\""}"" ]],
				 ""AsLARGE_INTEGER"": [ 0, [ ""_LARGE_INTEGER"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Seconds
		{
			get
			{
				// start: 0  end: 8  Mask: 0000000011111111
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 255) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 Minutes
		{
			get
			{
				// start: 8  end: 16  Mask: 1111111100000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 65280) >> 8;
				return (UInt64)value2;
			}
		}
		public UInt64 Hours
		{
			get
			{
				// start: 16  end: 24  Mask: 111111110000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16711680) >> 16;
				return (UInt64)value2;
			}
		}
		public UInt64 Precise
		{
			get
			{
				// start: 24  end: 25  Mask: 1000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16777216) >> 24;
				return (UInt64)value2;
			}
		}
		public UInt64 Reserved
		{
			get
			{
				// start: 25  end: 32  Mask: 11111110000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4261412864) >> 25;
				return (UInt64)value2;
			}
		}
		public UInt64 Day
		{
			get
			{
				// start: 32  end: 40  Mask: 0000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 32;
				return (UInt64)value2;
			}
		}
		public UInt64 Month
		{
			get
			{
				// start: 40  end: 48  Mask: 000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 40;
				return (UInt64)value2;
			}
		}
		public UInt64 Year
		{
			get
			{
				// start: 48  end: 56  Mask: 00000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 48;
				return (UInt64)value2;
			}
		}
		public UInt64 Century
		{
			get
			{
				// start: 56  end: 64  Mask: 0000000000000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 56;
				return (UInt64)value2;
			}
		}
		public _LARGE_INTEGER AsLARGE_INTEGER
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _PEB32
 
	public class _PEB32
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PEB32(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 592; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PEB32"": [ 592, {
				 ""InheritedAddressSpace"": [ 0, [ ""Byte"", ""null"" ]],
				 ""ReadImageFileExecOptions"": [ 1, [ ""Byte"", ""null"" ]],
				 ""BeingDebugged"": [ 2, [ ""Byte"", ""null"" ]],
				 ""BitField"": [ 3, [ ""Byte"", ""null"" ]],
				 ""ImageUsesLargePages"": [ 3, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""IsProtectedProcess"": [ 3, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""IsImageDynamicallyRelocated"": [ 3, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""SkipPatchingUser32Forwarders"": [ 3, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""IsPackagedProcess"": [ 3, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""IsAppContainer"": [ 3, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""Byte\""}"" ]],
				 ""IsProtectedProcessLight"": [ 3, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""Byte\""}"" ]],
				 ""SpareBits"": [ 3, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""Byte\""}"" ]],
				 ""Mutant"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""ImageBaseAddress"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Ldr"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""ProcessParameters"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""SubSystemData"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""ProcessHeap"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""FastPebLock"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""AtlThunkSListPtr"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""IFEOKey"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""CrossProcessFlags"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""ProcessInJob"": [ 40, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessInitializing"": [ 40, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessUsingVEH"": [ 40, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessUsingVCH"": [ 40, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessUsingFTH"": [ 40, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""ReservedBits0"": [ 40, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""KernelCallbackTable"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""UserSharedInfoPtr"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""SystemReserved"": [ 48, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""AtlThunkSListPtr32"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""ApiSetMap"": [ 56, [ ""UInt32"", ""null"" ]],
				 ""TlsExpansionCounter"": [ 60, [ ""UInt32"", ""null"" ]],
				 ""TlsBitmap"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""TlsBitmapBits"": [ 68, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""ReadOnlySharedMemoryBase"": [ 76, [ ""UInt32"", ""null"" ]],
				 ""SparePvoid0"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""ReadOnlyStaticServerData"": [ 84, [ ""UInt32"", ""null"" ]],
				 ""AnsiCodePageData"": [ 88, [ ""UInt32"", ""null"" ]],
				 ""OemCodePageData"": [ 92, [ ""UInt32"", ""null"" ]],
				 ""UnicodeCaseTableData"": [ 96, [ ""UInt32"", ""null"" ]],
				 ""NumberOfProcessors"": [ 100, [ ""UInt32"", ""null"" ]],
				 ""NtGlobalFlag"": [ 104, [ ""UInt32"", ""null"" ]],
				 ""CriticalSectionTimeout"": [ 112, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""HeapSegmentReserve"": [ 120, [ ""UInt32"", ""null"" ]],
				 ""HeapSegmentCommit"": [ 124, [ ""UInt32"", ""null"" ]],
				 ""HeapDeCommitTotalFreeThreshold"": [ 128, [ ""UInt32"", ""null"" ]],
				 ""HeapDeCommitFreeBlockThreshold"": [ 132, [ ""UInt32"", ""null"" ]],
				 ""NumberOfHeaps"": [ 136, [ ""UInt32"", ""null"" ]],
				 ""MaximumNumberOfHeaps"": [ 140, [ ""UInt32"", ""null"" ]],
				 ""ProcessHeaps"": [ 144, [ ""UInt32"", ""null"" ]],
				 ""GdiSharedHandleTable"": [ 148, [ ""UInt32"", ""null"" ]],
				 ""ProcessStarterHelper"": [ 152, [ ""UInt32"", ""null"" ]],
				 ""GdiDCAttributeList"": [ 156, [ ""UInt32"", ""null"" ]],
				 ""LoaderLock"": [ 160, [ ""UInt32"", ""null"" ]],
				 ""OSMajorVersion"": [ 164, [ ""UInt32"", ""null"" ]],
				 ""OSMinorVersion"": [ 168, [ ""UInt32"", ""null"" ]],
				 ""OSBuildNumber"": [ 172, [ ""UInt16"", ""null"" ]],
				 ""OSCSDVersion"": [ 174, [ ""UInt16"", ""null"" ]],
				 ""OSPlatformId"": [ 176, [ ""UInt32"", ""null"" ]],
				 ""ImageSubsystem"": [ 180, [ ""UInt32"", ""null"" ]],
				 ""ImageSubsystemMajorVersion"": [ 184, [ ""UInt32"", ""null"" ]],
				 ""ImageSubsystemMinorVersion"": [ 188, [ ""UInt32"", ""null"" ]],
				 ""ActiveProcessAffinityMask"": [ 192, [ ""UInt32"", ""null"" ]],
				 ""GdiHandleBuffer"": [ 196, [ ""Array"", ""{\""count\"":34,\""target\"":\""UInt32\""}"" ]],
				 ""PostProcessInitRoutine"": [ 332, [ ""UInt32"", ""null"" ]],
				 ""TlsExpansionBitmap"": [ 336, [ ""UInt32"", ""null"" ]],
				 ""TlsExpansionBitmapBits"": [ 340, [ ""Array"", ""{\""count\"":32,\""target\"":\""UInt32\""}"" ]],
				 ""SessionId"": [ 468, [ ""UInt32"", ""null"" ]],
				 ""AppCompatFlags"": [ 472, [ ""_ULARGE_INTEGER"", ""null"" ]],
				 ""AppCompatFlagsUser"": [ 480, [ ""_ULARGE_INTEGER"", ""null"" ]],
				 ""pShimData"": [ 488, [ ""UInt32"", ""null"" ]],
				 ""AppCompatInfo"": [ 492, [ ""UInt32"", ""null"" ]],
				 ""CSDVersion"": [ 496, [ ""_STRING32"", ""null"" ]],
				 ""ActivationContextData"": [ 504, [ ""UInt32"", ""null"" ]],
				 ""ProcessAssemblyStorageMap"": [ 508, [ ""UInt32"", ""null"" ]],
				 ""SystemDefaultActivationContextData"": [ 512, [ ""UInt32"", ""null"" ]],
				 ""SystemAssemblyStorageMap"": [ 516, [ ""UInt32"", ""null"" ]],
				 ""MinimumStackCommit"": [ 520, [ ""UInt32"", ""null"" ]],
				 ""FlsCallback"": [ 524, [ ""UInt32"", ""null"" ]],
				 ""FlsListHead"": [ 528, [ ""LIST_ENTRY32"", ""null"" ]],
				 ""FlsBitmap"": [ 536, [ ""UInt32"", ""null"" ]],
				 ""FlsBitmapBits"": [ 540, [ ""Array"", ""{\""count\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""FlsHighIndex"": [ 556, [ ""UInt32"", ""null"" ]],
				 ""WerRegistrationData"": [ 560, [ ""UInt32"", ""null"" ]],
				 ""WerShipAssertPtr"": [ 564, [ ""UInt32"", ""null"" ]],
				 ""pUnused"": [ 568, [ ""UInt32"", ""null"" ]],
				 ""pImageHeaderHash"": [ 572, [ ""UInt32"", ""null"" ]],
				 ""TracingFlags"": [ 576, [ ""UInt32"", ""null"" ]],
				 ""HeapTracingEnabled"": [ 576, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""CritSecTracingEnabled"": [ 576, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""LibLoaderTracingEnabled"": [ 576, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""SpareTracingBits"": [ 576, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""CsrServerReadOnlySharedMemoryBase"": [ 584, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte InheritedAddressSpace{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte ReadImageFileExecOptions{ get { return _StructureData[_BufferOffset +1]; } }
		public Byte BeingDebugged{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte BitField{ get { return _StructureData[_BufferOffset +3]; } }
		public Byte ImageUsesLargePages
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte IsProtectedProcess
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte IsImageDynamicallyRelocated
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte SkipPatchingUser32Forwarders
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte IsPackagedProcess
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 16) >> 4;
				return (Byte)value2;
			}
		}
		public Byte IsAppContainer
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 32) >> 5;
				return (Byte)value2;
			}
		}
		public Byte IsProtectedProcessLight
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 64) >> 6;
				return (Byte)value2;
			}
		}
		public Byte SpareBits
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 128) >> 7;
				return (Byte)value2;
			}
		}
		public UInt32 Mutant { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 ImageBaseAddress { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Ldr { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 ProcessParameters { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 SubSystemData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 ProcessHeap { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 FastPebLock { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 AtlThunkSListPtr { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 IFEOKey { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public UInt32 CrossProcessFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32 ProcessInJob
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 40);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessInitializing
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 40);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessUsingVEH
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 40);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessUsingVCH
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 40);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessUsingFTH
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 40);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 ReservedBits0
		{
			get
			{
				// start: 5  end: 32  Mask: 11111111111111111111111111100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 40);
				var value2 = (value & 4294967264) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 KernelCallbackTable { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public UInt32 UserSharedInfoPtr { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public UInt32[] SystemReserved
		{
			get
			{
				UInt32[] returnValue = new UInt32[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 48);
				return returnValue;
			}
		}
		public UInt32 AtlThunkSListPtr32 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public UInt32 ApiSetMap { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public UInt32 TlsExpansionCounter { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
		public UInt32 TlsBitmap { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt32[] TlsBitmapBits
		{
			get
			{
				UInt32[] returnValue = new UInt32[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 68);
				return returnValue;
			}
		}
		public UInt32 ReadOnlySharedMemoryBase { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 76); } }
		public UInt32 SparePvoid0 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 ReadOnlyStaticServerData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
		public UInt32 AnsiCodePageData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 88); } }
		public UInt32 OemCodePageData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 92); } }
		public UInt32 UnicodeCaseTableData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 96); } }
		public UInt32 NumberOfProcessors { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 100); } }
		public UInt32 NtGlobalFlag { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 104); } }
		public _LARGE_INTEGER CriticalSectionTimeout
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 112);
				return returnValue;
			}
		}
		public UInt32 HeapSegmentReserve { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 120); } }
		public UInt32 HeapSegmentCommit { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 124); } }
		public UInt32 HeapDeCommitTotalFreeThreshold { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 128); } }
		public UInt32 HeapDeCommitFreeBlockThreshold { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 132); } }
		public UInt32 NumberOfHeaps { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 136); } }
		public UInt32 MaximumNumberOfHeaps { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 140); } }
		public UInt32 ProcessHeaps { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 144); } }
		public UInt32 GdiSharedHandleTable { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 148); } }
		public UInt32 ProcessStarterHelper { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 152); } }
		public UInt32 GdiDCAttributeList { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 156); } }
		public UInt32 LoaderLock { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 160); } }
		public UInt32 OSMajorVersion { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 164); } }
		public UInt32 OSMinorVersion { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 168); } }
		public UInt16 OSBuildNumber { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 172); } }
		public UInt16 OSCSDVersion { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 174); } }
		public UInt32 OSPlatformId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 176); } }
		public UInt32 ImageSubsystem { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 180); } }
		public UInt32 ImageSubsystemMajorVersion { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 184); } }
		public UInt32 ImageSubsystemMinorVersion { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 188); } }
		public UInt32 ActiveProcessAffinityMask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 192); } }
		public UInt32[] GdiHandleBuffer
		{
			get
			{
				UInt32[] returnValue = new UInt32[34];
				for(int i=0; i<34; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 196);
				return returnValue;
			}
		}
		public UInt32 PostProcessInitRoutine { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 332); } }
		public UInt32 TlsExpansionBitmap { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 336); } }
		public UInt32[] TlsExpansionBitmapBits
		{
			get
			{
				UInt32[] returnValue = new UInt32[32];
				for(int i=0; i<32; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 340);
				return returnValue;
			}
		}
		public UInt32 SessionId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 468); } }
		public _ULARGE_INTEGER AppCompatFlags
		{
			get
			{
				_ULARGE_INTEGER returnValue = new _ULARGE_INTEGER(_StructureData, _BufferOffset + 472);
				return returnValue;
			}
		}
		public _ULARGE_INTEGER AppCompatFlagsUser
		{
			get
			{
				_ULARGE_INTEGER returnValue = new _ULARGE_INTEGER(_StructureData, _BufferOffset + 480);
				return returnValue;
			}
		}
		public UInt32 pShimData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 488); } }
		public UInt32 AppCompatInfo { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 492); } }
		public _STRING32 CSDVersion
		{
			get
			{
				_STRING32 returnValue = new _STRING32(_StructureData, _BufferOffset + 496);
				return returnValue;
			}
		}
		public UInt32 ActivationContextData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 504); } }
		public UInt32 ProcessAssemblyStorageMap { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 508); } }
		public UInt32 SystemDefaultActivationContextData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 512); } }
		public UInt32 SystemAssemblyStorageMap { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 516); } }
		public UInt32 MinimumStackCommit { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 520); } }
		public UInt32 FlsCallback { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 524); } }
		public LIST_ENTRY32 FlsListHead
		{
			get
			{
				LIST_ENTRY32 returnValue = new LIST_ENTRY32(_StructureData, _BufferOffset + 528);
				return returnValue;
			}
		}
		public UInt32 FlsBitmap { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 536); } }
		public UInt32[] FlsBitmapBits
		{
			get
			{
				UInt32[] returnValue = new UInt32[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 540);
				return returnValue;
			}
		}
		public UInt32 FlsHighIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 556); } }
		public UInt32 WerRegistrationData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 560); } }
		public UInt32 WerShipAssertPtr { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 564); } }
		public UInt32 pUnused { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 568); } }
		public UInt32 pImageHeaderHash { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 572); } }
		public UInt32 TracingFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 576); } }
		public UInt32 HeapTracingEnabled
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 576);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 CritSecTracingEnabled
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 576);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 LibLoaderTracingEnabled
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 576);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 SpareTracingBits
		{
			get
			{
				// start: 3  end: 32  Mask: 11111111111111111111111111111000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 576);
				var value2 = (value & 4294967288) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt64 CsrServerReadOnlySharedMemoryBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 584); } }
	}
	#endregion
	#region _VPB
 
	public class _VPB
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VPB(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 96; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VPB"": [ 96, {
				 ""Type"": [ 0, [ ""Int16"", ""null"" ]],
				 ""Size"": [ 2, [ ""Int16"", ""null"" ]],
				 ""Flags"": [ 4, [ ""UInt16"", ""null"" ]],
				 ""VolumeLabelLength"": [ 6, [ ""UInt16"", ""null"" ]],
				 ""DeviceObject"": [ 8, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""RealDevice"": [ 16, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""SerialNumber"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""ReferenceCount"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""VolumeLabel"": [ 32, [ ""Array"", ""{\""count\"":32,\""target\"":\""UInt16\""}"" ]] }]
				 }
				)";
			}
		}
		public Int16 Type { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 0); } }
		public Int16 Size { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 2); } }
		public UInt16 Flags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 4); } }
		public UInt16 VolumeLabelLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
		public UInt64 DeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 RealDevice { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 SerialNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 ReferenceCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt16[] VolumeLabel
		{
			get
			{
				UInt16[] returnValue = new UInt16[32];
				for(int i=0; i<32; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 32);
				return returnValue;
			}
		}
	}
	#endregion
	#region _CACHE_DESCRIPTOR
 
	public class _CACHE_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CACHE_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CACHE_DESCRIPTOR"": [ 12, {
				 ""Level"": [ 0, [ ""Byte"", ""null"" ]],
				 ""Associativity"": [ 1, [ ""Byte"", ""null"" ]],
				 ""LineSize"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Size"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Type"": [ 8, [ ""Enumeration"", ""{\""enum_name\"":\""_PROCESSOR_CACHE_TYPE\"",\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public Byte Level{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte Associativity{ get { return _StructureData[_BufferOffset +1]; } }
		public UInt16 LineSize { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt32 Size { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _PROCESSOR_CACHE_TYPE Type { get { return (_PROCESSOR_CACHE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _IOP_IRP_STACK_PROFILER
 
	public class _IOP_IRP_STACK_PROFILER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IOP_IRP_STACK_PROFILER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 84; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IOP_IRP_STACK_PROFILER"": [ 84, {
				 ""Profile"": [ 0, [ ""Array"", ""{\""count\"":20,\""target\"":\""UInt32\""}"" ]],
				 ""TotalIrps"": [ 80, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32[] Profile
		{
			get
			{
				UInt32[] returnValue = new UInt32[20];
				for(int i=0; i<20; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 TotalIrps { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
	}
	#endregion
	#region _FILE_BASIC_INFORMATION
 
	public class _FILE_BASIC_INFORMATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _FILE_BASIC_INFORMATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_FILE_BASIC_INFORMATION"": [ 40, {
				 ""CreationTime"": [ 0, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""LastAccessTime"": [ 8, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""LastWriteTime"": [ 16, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""ChangeTime"": [ 24, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""FileAttributes"": [ 32, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LARGE_INTEGER CreationTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LARGE_INTEGER LastAccessTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _LARGE_INTEGER LastWriteTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _LARGE_INTEGER ChangeTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt32 FileAttributes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _SECURITY_SUBJECT_CONTEXT
 
	public class _SECURITY_SUBJECT_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SECURITY_SUBJECT_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SECURITY_SUBJECT_CONTEXT"": [ 32, {
				 ""ClientToken"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ImpersonationLevel"": [ 8, [ ""Enumeration"", ""{\""enum_name\"":\""_SECURITY_IMPERSONATION_LEVEL\"",\""target\"":\""UInt32\""}"" ]],
				 ""PrimaryToken"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ProcessAuditId"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ClientToken { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _SECURITY_IMPERSONATION_LEVEL ImpersonationLevel { get { return (_SECURITY_IMPERSONATION_LEVEL)BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt64 PrimaryToken { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 ProcessAuditId { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _EVENT_HEADER
 
	public class _EVENT_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EVENT_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 80; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EVENT_HEADER"": [ 80, {
				 ""Size"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""HeaderType"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Flags"": [ 4, [ ""UInt16"", ""null"" ]],
				 ""EventProperty"": [ 6, [ ""UInt16"", ""null"" ]],
				 ""ThreadId"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""ProcessId"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""TimeStamp"": [ 16, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""ProviderId"": [ 24, [ ""_GUID"", ""null"" ]],
				 ""EventDescriptor"": [ 40, [ ""_EVENT_DESCRIPTOR"", ""null"" ]],
				 ""KernelTime"": [ 56, [ ""UInt32"", ""null"" ]],
				 ""UserTime"": [ 60, [ ""UInt32"", ""null"" ]],
				 ""ProcessorTime"": [ 56, [ ""UInt64"", ""null"" ]],
				 ""ActivityId"": [ 64, [ ""_GUID"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Size { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 HeaderType { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt16 Flags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 4); } }
		public UInt16 EventProperty { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
		public UInt32 ThreadId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 ProcessId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public _LARGE_INTEGER TimeStamp
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _GUID ProviderId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public _EVENT_DESCRIPTOR EventDescriptor
		{
			get
			{
				_EVENT_DESCRIPTOR returnValue = new _EVENT_DESCRIPTOR(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public UInt32 KernelTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public UInt32 UserTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
		public UInt64 ProcessorTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public _GUID ActivityId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
	}
	#endregion
	#region _PF_KERNEL_GLOBALS
 
	public class _PF_KERNEL_GLOBALS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PF_KERNEL_GLOBALS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 96; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PF_KERNEL_GLOBALS"": [ 96, {
				 ""AccessBufferAgeThreshold"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""AccessBufferRef"": [ 8, [ ""_EX_RUNDOWN_REF"", ""null"" ]],
				 ""AccessBufferExistsEvent"": [ 16, [ ""_KEVENT"", ""null"" ]],
				 ""AccessBufferMax"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""AccessBufferList"": [ 64, [ ""_SLIST_HEADER"", ""null"" ]],
				 ""StreamSequenceNumber"": [ 80, [ ""Int32"", ""null"" ]],
				 ""Flags"": [ 84, [ ""UInt32"", ""null"" ]],
				 ""ScenarioPrefetchCount"": [ 88, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 AccessBufferAgeThreshold { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _EX_RUNDOWN_REF AccessBufferRef
		{
			get
			{
				_EX_RUNDOWN_REF returnValue = new _EX_RUNDOWN_REF(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _KEVENT AccessBufferExistsEvent
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt32 AccessBufferMax { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public _SLIST_HEADER AccessBufferList
		{
			get
			{
				_SLIST_HEADER returnValue = new _SLIST_HEADER(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public Int32 StreamSequenceNumber { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
		public Int32 ScenarioPrefetchCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 88); } }
	}
	#endregion
	#region _CM_KEY_HASH_TABLE_ENTRY
 
	public class _CM_KEY_HASH_TABLE_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_KEY_HASH_TABLE_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_KEY_HASH_TABLE_ENTRY"": [ 24, {
				 ""Lock"": [ 0, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""Owner"": [ 8, [ ""Pointer"", ""{\""target\"":\""_KTHREAD\""}"" ]],
				 ""Entry"": [ 16, [ ""Pointer"", ""{\""target\"":\""_CM_KEY_HASH\""}"" ]] }]
				 }
				)";
			}
		}
		public _EX_PUSH_LOCK Lock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Owner { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Entry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _ARBITER_QUERY_ARBITRATE_PARAMETERS
 
	public class _ARBITER_QUERY_ARBITRATE_PARAMETERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ARBITER_QUERY_ARBITRATE_PARAMETERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ARBITER_QUERY_ARBITRATE_PARAMETERS"": [ 8, {
				 ""ArbitrationList"": [ 0, [ ""Pointer"", ""{\""target\"":\""_LIST_ENTRY\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ArbitrationList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _ARBITER_BOOT_ALLOCATION_PARAMETERS
 
	public class _ARBITER_BOOT_ALLOCATION_PARAMETERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ARBITER_BOOT_ALLOCATION_PARAMETERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ARBITER_BOOT_ALLOCATION_PARAMETERS"": [ 8, {
				 ""ArbitrationList"": [ 0, [ ""Pointer"", ""{\""target\"":\""_LIST_ENTRY\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ArbitrationList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _KPRIQUEUE
 
	public class _KPRIQUEUE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KPRIQUEUE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 688; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KPRIQUEUE"": [ 688, {
				 ""Header"": [ 0, [ ""_DISPATCHER_HEADER"", ""null"" ]],
				 ""EntryListHead"": [ 24, [ ""Array"", ""{\""count\"":32,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""CurrentCount"": [ 536, [ ""Array"", ""{\""count\"":32,\""target\"":\""Int32\""}"" ]],
				 ""MaximumCount"": [ 664, [ ""UInt32"", ""null"" ]],
				 ""ThreadListHead"": [ 672, [ ""_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _DISPATCHER_HEADER Header
		{
			get
			{
				_DISPATCHER_HEADER returnValue = new _DISPATCHER_HEADER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LIST_ENTRY[] EntryListHead
		{
			get
			{
				_LIST_ENTRY[] returnValue = new _LIST_ENTRY[32];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<32; i++ )
					returnValue[i] = new _LIST_ENTRY(_StructureData, (i * size) + _BufferOffset + 24);
				return returnValue;
			}
		}
		public Int32[] CurrentCount
		{
			get
			{
				Int32[] returnValue = new Int32[32];
				for(int i=0; i<32; i++ )
					returnValue[i] = BitConverter.ToInt32(_StructureData, (i * sizeof(Int32)) + _BufferOffset + 536);
				return returnValue;
			}
		}
		public UInt32 MaximumCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 664); } }
		public _LIST_ENTRY ThreadListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 672);
				return returnValue;
			}
		}
	}
	#endregion
	#region _EXCEPTION_REGISTRATION_RECORD
 
	public class _EXCEPTION_REGISTRATION_RECORD
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EXCEPTION_REGISTRATION_RECORD(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EXCEPTION_REGISTRATION_RECORD"": [ 16, {
				 ""Next"": [ 0, [ ""Pointer"", ""{\""target\"":\""_EXCEPTION_REGISTRATION_RECORD\""}"" ]],
				 ""Handler"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Next { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Handler { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _WAITING_IRP
 
	public class _WAITING_IRP
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WAITING_IRP(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WAITING_IRP"": [ 56, {
				 ""Links"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Irp"": [ 16, [ ""Pointer"", ""{\""target\"":\""_IRP\""}"" ]],
				 ""CompletionRoutine"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Context"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Event"": [ 40, [ ""Pointer"", ""{\""target\"":\""_KEVENT\""}"" ]],
				 ""Information"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""BreakAllRH"": [ 52, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY Links
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Irp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 CompletionRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 Context { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 Event { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt32 Information { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public Byte BreakAllRH{ get { return _StructureData[_BufferOffset +52]; } }
	}
	#endregion
	#region _POP_SYSTEM_IDLE
 
	public class _POP_SYSTEM_IDLE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_SYSTEM_IDLE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_SYSTEM_IDLE"": [ 64, {
				 ""AverageIdleness"": [ 0, [ ""Int32"", ""null"" ]],
				 ""LowestIdleness"": [ 4, [ ""Int32"", ""null"" ]],
				 ""Time"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Timeout"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""LastUserInput"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""Action"": [ 20, [ ""POWER_ACTION_POLICY"", ""null"" ]],
				 ""MinState"": [ 32, [ ""Enumeration"", ""{\""enum_name\"":\""_SYSTEM_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""SystemRequired"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""IdleWorker"": [ 40, [ ""Byte"", ""null"" ]],
				 ""Sampling"": [ 41, [ ""Byte"", ""null"" ]],
				 ""LastTick"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""LastSystemRequiredTime"": [ 56, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int32 AverageIdleness { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public Int32 LowestIdleness { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 Time { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Timeout { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 LastUserInput { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public POWER_ACTION_POLICY Action
		{
			get
			{
				POWER_ACTION_POLICY returnValue = new POWER_ACTION_POLICY(_StructureData, _BufferOffset + 20);
				return returnValue;
			}
		}
		public _SYSTEM_POWER_STATE MinState { get { return (_SYSTEM_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 SystemRequired { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public Byte IdleWorker{ get { return _StructureData[_BufferOffset +40]; } }
		public Byte Sampling{ get { return _StructureData[_BufferOffset +41]; } }
		public UInt64 LastTick { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt32 LastSystemRequiredTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
	}
	#endregion
	#region _VERIFIER_SHARED_EXPORT_THUNK
 
	public class _VERIFIER_SHARED_EXPORT_THUNK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VERIFIER_SHARED_EXPORT_THUNK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VERIFIER_SHARED_EXPORT_THUNK"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _VF_TARGET_ALL_SHARED_EXPORT_THUNKS
 
	public class _VF_TARGET_ALL_SHARED_EXPORT_THUNKS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VF_TARGET_ALL_SHARED_EXPORT_THUNKS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VF_TARGET_ALL_SHARED_EXPORT_THUNKS"": [ 32, {
				 ""SharedExportThunks"": [ 0, [ ""Pointer"", ""{\""target\"":\""_VERIFIER_SHARED_EXPORT_THUNK\""}"" ]],
				 ""PoolSharedExportThunks"": [ 8, [ ""Pointer"", ""{\""target\"":\""_VERIFIER_SHARED_EXPORT_THUNK\""}"" ]],
				 ""OrderDependentSharedExportThunks"": [ 16, [ ""Pointer"", ""{\""target\"":\""_VERIFIER_SHARED_EXPORT_THUNK\""}"" ]],
				 ""XdvSharedExportThunks"": [ 24, [ ""Pointer"", ""{\""target\"":\""_VERIFIER_SHARED_EXPORT_THUNK\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 SharedExportThunks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 PoolSharedExportThunks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 OrderDependentSharedExportThunks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 XdvSharedExportThunks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _KSCHEDULING_GROUP
 
	public class _KSCHEDULING_GROUP
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KSCHEDULING_GROUP(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 448; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KSCHEDULING_GROUP"": [ 448, {
				 ""Value"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Type"": [ 2, [ ""Byte"", ""null"" ]],
				 ""HardCap"": [ 3, [ ""Byte"", ""null"" ]],
				 ""RelativeWeight"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""QueryHistoryTimeStamp"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""NotificationCycles"": [ 16, [ ""Int64"", ""null"" ]],
				 ""SchedulingGroupList"": [ 24, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""NotificationDpc"": [ 40, [ ""Pointer"", ""{\""target\"":\""_KDPC\""}"" ]],
				 ""PerProcessor"": [ 64, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Value { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public Byte Type{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte HardCap{ get { return _StructureData[_BufferOffset +3]; } }
		public UInt32 RelativeWeight { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 QueryHistoryTimeStamp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public Int64 NotificationCycles { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 16); } }
		public _LIST_ENTRY SchedulingGroupList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt64 NotificationDpc { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public _KSCB[] PerProcessor
		{
			get
			{
				_KSCB[] returnValue = new _KSCB[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _KSCB(_StructureData, (i * size) + _BufferOffset + 64);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ETW_REF_CLOCK
 
	public class _ETW_REF_CLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETW_REF_CLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETW_REF_CLOCK"": [ 16, {
				 ""StartTime"": [ 0, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""StartPerfClock"": [ 8, [ ""_LARGE_INTEGER"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LARGE_INTEGER StartTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LARGE_INTEGER StartPerfClock
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _OB_DUPLICATE_OBJECT_STATE
 
	public class _OB_DUPLICATE_OBJECT_STATE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OB_DUPLICATE_OBJECT_STATE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OB_DUPLICATE_OBJECT_STATE"": [ 40, {
				 ""SourceProcess"": [ 0, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""SourceHandle"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Object"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""TargetAccess"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""ObjectInfo"": [ 28, [ ""_HANDLE_TABLE_ENTRY_INFO"", ""null"" ]],
				 ""HandleAttributes"": [ 32, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 SourceProcess { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 SourceHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Object { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 TargetAccess { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public _HANDLE_TABLE_ENTRY_INFO ObjectInfo
		{
			get
			{
				_HANDLE_TABLE_ENTRY_INFO returnValue = new _HANDLE_TABLE_ENTRY_INFO(_StructureData, _BufferOffset + 28);
				return returnValue;
			}
		}
		public UInt32 HandleAttributes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _MMPTE_SUBSECTION
 
	public class _MMPTE_SUBSECTION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMPTE_SUBSECTION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMPTE_SUBSECTION"": [ 8, {
				 ""Valid"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""Unused0"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":1,\""target\"":\""UInt64\""}"" ]],
				 ""Protection"": [ 0, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":5,\""target\"":\""UInt64\""}"" ]],
				 ""Prototype"": [ 0, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt64\""}"" ]],
				 ""Unused1"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":11,\""target\"":\""UInt64\""}"" ]],
				 ""SubsectionAddress"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":16,\""target\"":\""Int64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Valid
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 Unused0
		{
			get
			{
				// start: 1  end: 5  Mask: 0000000000011110
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 30) >> 1;
				return (UInt64)value2;
			}
		}
		public UInt64 Protection
		{
			get
			{
				// start: 5  end: 10  Mask: 0000001111100000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 992) >> 5;
				return (UInt64)value2;
			}
		}
		public UInt64 Prototype
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1024) >> 10;
				return (UInt64)value2;
			}
		}
		public UInt64 Unused1
		{
			get
			{
				// start: 11  end: 16  Mask: 1111100000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 63488) >> 11;
				return (UInt64)value2;
			}
		}
		public UInt64 SubsectionAddress
		{
			get
			{
				// start: 16  end: 64  Mask: 0000000000000000000000000000000011111111111111110000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294901760) >> 16;
				return (UInt64)value2;
			}
		}
	}
	#endregion
	#region _POWER_STATE
 
	public class _POWER_STATE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POWER_STATE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POWER_STATE"": [ 4, {
				 ""SystemState"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""_SYSTEM_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""DeviceState"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""_DEVICE_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public _SYSTEM_POWER_STATE SystemState { get { return (_SYSTEM_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _DEVICE_POWER_STATE DeviceState { get { return (_DEVICE_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _POP_IRP_WORKER_ENTRY
 
	public class _POP_IRP_WORKER_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_IRP_WORKER_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_IRP_WORKER_ENTRY"": [ 48, {
				 ""Link"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Thread"": [ 16, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]],
				 ""Irp"": [ 24, [ ""Pointer"", ""{\""target\"":\""_IRP\""}"" ]],
				 ""Device"": [ 32, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""Static"": [ 40, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY Link
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Thread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Irp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 Device { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public Byte Static{ get { return _StructureData[_BufferOffset +40]; } }
	}
	#endregion
	#region _POP_POLICY_DEVICE
 
	public class _POP_POLICY_DEVICE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_POLICY_DEVICE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_POLICY_DEVICE"": [ 64, {
				 ""Link"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""DeviceType"": [ 16, [ ""Enumeration"", ""{\""enum_name\"":\""POWER_POLICY_DEVICE_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""Notification"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Name"": [ 32, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""Device"": [ 48, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""Irp"": [ 56, [ ""Pointer"", ""{\""target\"":\""_IRP\""}"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY Link
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public POWER_POLICY_DEVICE_TYPE DeviceType { get { return (POWER_POLICY_DEVICE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt64 Notification { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public _UNICODE_STRING Name
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt64 Device { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 Irp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
	}
	#endregion
	#region _UNNAMED_34129
 
	public class _UNNAMED_34129
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34129(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34129"": [ 12, {
				 ""Start"": [ 0, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""Length"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LARGE_INTEGER Start
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_34132
 
	public class _UNNAMED_34132
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34132(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34132"": [ 16, {
				 ""Level"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Group"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Vector"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Affinity"": [ 8, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Level { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 Group { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt32 Vector { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 Affinity { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_34137
 
	public class _UNNAMED_34137
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34137(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34137"": [ 16, {
				 ""Group"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""MessageCount"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Vector"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Affinity"": [ 8, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Group { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 MessageCount { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt32 Vector { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 Affinity { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_34142
 
	public class _UNNAMED_34142
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34142(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34142"": [ 16, {
				 ""Raw"": [ 0, [ ""_UNNAMED_34137"", ""null"" ]],
				 ""Translated"": [ 0, [ ""_UNNAMED_34132"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_34137 Raw
		{
			get
			{
				_UNNAMED_34137 returnValue = new _UNNAMED_34137(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_34132 Translated
		{
			get
			{
				_UNNAMED_34132 returnValue = new _UNNAMED_34132(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_34145
 
	public class _UNNAMED_34145
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34145(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34145"": [ 12, {
				 ""Channel"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Port"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Reserved1"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Channel { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Port { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 Reserved1 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_34149
 
	public class _UNNAMED_34149
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34149(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34149"": [ 12, {
				 ""Channel"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""RequestLine"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""TransferWidth"": [ 8, [ ""Byte"", ""null"" ]],
				 ""Reserved1"": [ 9, [ ""Byte"", ""null"" ]],
				 ""Reserved2"": [ 10, [ ""Byte"", ""null"" ]],
				 ""Reserved3"": [ 11, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Channel { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 RequestLine { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public Byte TransferWidth{ get { return _StructureData[_BufferOffset +8]; } }
		public Byte Reserved1{ get { return _StructureData[_BufferOffset +9]; } }
		public Byte Reserved2{ get { return _StructureData[_BufferOffset +10]; } }
		public Byte Reserved3{ get { return _StructureData[_BufferOffset +11]; } }
	}
	#endregion
	#region _UNNAMED_34156
 
	public class _UNNAMED_34156
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34156(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34156"": [ 12, {
				 ""Start"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Length"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Reserved"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Start { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 Reserved { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_34160
 
	public class _UNNAMED_34160
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34160(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34160"": [ 12, {
				 ""DataSize"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Reserved1"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Reserved2"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 DataSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Reserved1 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 Reserved2 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_34164
 
	public class _UNNAMED_34164
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34164(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34164"": [ 12, {
				 ""Start"": [ 0, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""Length40"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LARGE_INTEGER Start
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 Length40 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_34167
 
	public class _UNNAMED_34167
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34167(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34167"": [ 12, {
				 ""Start"": [ 0, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""Length48"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LARGE_INTEGER Start
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 Length48 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_34170
 
	public class _UNNAMED_34170
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34170(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34170"": [ 12, {
				 ""Start"": [ 0, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""Length64"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LARGE_INTEGER Start
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 Length64 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_34173
 
	public class _UNNAMED_34173
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34173(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34173"": [ 16, {
				 ""Generic"": [ 0, [ ""_UNNAMED_34129"", ""null"" ]],
				 ""Port"": [ 0, [ ""_UNNAMED_34129"", ""null"" ]],
				 ""Interrupt"": [ 0, [ ""_UNNAMED_34132"", ""null"" ]],
				 ""MessageInterrupt"": [ 0, [ ""_UNNAMED_34142"", ""null"" ]],
				 ""Memory"": [ 0, [ ""_UNNAMED_34129"", ""null"" ]],
				 ""Dma"": [ 0, [ ""_UNNAMED_34145"", ""null"" ]],
				 ""DmaV3"": [ 0, [ ""_UNNAMED_34149"", ""null"" ]],
				 ""DevicePrivate"": [ 0, [ ""_UNNAMED_33328"", ""null"" ]],
				 ""BusNumber"": [ 0, [ ""_UNNAMED_34156"", ""null"" ]],
				 ""DeviceSpecificData"": [ 0, [ ""_UNNAMED_34160"", ""null"" ]],
				 ""Memory40"": [ 0, [ ""_UNNAMED_34164"", ""null"" ]],
				 ""Memory48"": [ 0, [ ""_UNNAMED_34167"", ""null"" ]],
				 ""Memory64"": [ 0, [ ""_UNNAMED_34170"", ""null"" ]],
				 ""Connection"": [ 0, [ ""_UNNAMED_33354"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_34129 Generic
		{
			get
			{
				_UNNAMED_34129 returnValue = new _UNNAMED_34129(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_34129 Port
		{
			get
			{
				_UNNAMED_34129 returnValue = new _UNNAMED_34129(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_34132 Interrupt
		{
			get
			{
				_UNNAMED_34132 returnValue = new _UNNAMED_34132(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_34142 MessageInterrupt
		{
			get
			{
				_UNNAMED_34142 returnValue = new _UNNAMED_34142(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_34129 Memory
		{
			get
			{
				_UNNAMED_34129 returnValue = new _UNNAMED_34129(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_34145 Dma
		{
			get
			{
				_UNNAMED_34145 returnValue = new _UNNAMED_34145(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_34149 DmaV3
		{
			get
			{
				_UNNAMED_34149 returnValue = new _UNNAMED_34149(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33328 DevicePrivate
		{
			get
			{
				_UNNAMED_33328 returnValue = new _UNNAMED_33328(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_34156 BusNumber
		{
			get
			{
				_UNNAMED_34156 returnValue = new _UNNAMED_34156(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_34160 DeviceSpecificData
		{
			get
			{
				_UNNAMED_34160 returnValue = new _UNNAMED_34160(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_34164 Memory40
		{
			get
			{
				_UNNAMED_34164 returnValue = new _UNNAMED_34164(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_34167 Memory48
		{
			get
			{
				_UNNAMED_34167 returnValue = new _UNNAMED_34167(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_34170 Memory64
		{
			get
			{
				_UNNAMED_34170 returnValue = new _UNNAMED_34170(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_33354 Connection
		{
			get
			{
				_UNNAMED_33354 returnValue = new _UNNAMED_33354(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _CM_PARTIAL_RESOURCE_DESCRIPTOR
 
	public class _CM_PARTIAL_RESOURCE_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_PARTIAL_RESOURCE_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 20; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_PARTIAL_RESOURCE_DESCRIPTOR"": [ 20, {
				 ""Type"": [ 0, [ ""Byte"", ""null"" ]],
				 ""ShareDisposition"": [ 1, [ ""Byte"", ""null"" ]],
				 ""Flags"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""u"": [ 4, [ ""_UNNAMED_34173"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte Type{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte ShareDisposition{ get { return _StructureData[_BufferOffset +1]; } }
		public UInt16 Flags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public _UNNAMED_34173 u
		{
			get
			{
				_UNNAMED_34173 returnValue = new _UNNAMED_34173(_StructureData, _BufferOffset + 4);
				return returnValue;
			}
		}
	}
	#endregion
	#region _OBJECT_HEADER_PADDING_INFO
 
	public class _OBJECT_HEADER_PADDING_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_HEADER_PADDING_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_HEADER_PADDING_INFO"": [ 4, {
				 ""PaddingAmount"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 PaddingAmount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_34194
 
	public class _UNNAMED_34194
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34194(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34194"": [ 4, {
				 ""PhysicalAddress"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""VirtualSize"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 PhysicalAddress { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 VirtualSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _IMAGE_SECTION_HEADER
 
	public class _IMAGE_SECTION_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IMAGE_SECTION_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IMAGE_SECTION_HEADER"": [ 40, {
				 ""Name"": [ 0, [ ""Array"", ""{\""count\"":8,\""target\"":\""Byte\""}"" ]],
				 ""Misc"": [ 8, [ ""_UNNAMED_34194"", ""null"" ]],
				 ""VirtualAddress"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""SizeOfRawData"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""PointerToRawData"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""PointerToRelocations"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""PointerToLinenumbers"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""NumberOfRelocations"": [ 32, [ ""UInt16"", ""null"" ]],
				 ""NumberOfLinenumbers"": [ 34, [ ""UInt16"", ""null"" ]],
				 ""Characteristics"": [ 36, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte[] Name
		{
			get
			{
				Byte[] returnValue = new Byte[8];
				for(int i=0; i<8; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 0];
				return returnValue;
			}
		}
		public _UNNAMED_34194 Misc
		{
			get
			{
				_UNNAMED_34194 returnValue = new _UNNAMED_34194(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt32 VirtualAddress { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 SizeOfRawData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 PointerToRawData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 PointerToRelocations { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 PointerToLinenumbers { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt16 NumberOfRelocations { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 32); } }
		public UInt16 NumberOfLinenumbers { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 34); } }
		public UInt32 Characteristics { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
	}
	#endregion
	#region _INVERTED_FUNCTION_TABLE_ENTRY
 
	public class _INVERTED_FUNCTION_TABLE_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _INVERTED_FUNCTION_TABLE_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_INVERTED_FUNCTION_TABLE_ENTRY"": [ 24, {
				 ""FunctionTable"": [ 0, [ ""Pointer"", ""{\""target\"":\""_IMAGE_RUNTIME_FUNCTION_ENTRY\""}"" ]],
				 ""DynamicTable"": [ 0, [ ""Pointer"", ""{\""target\"":\""_DYNAMIC_FUNCTION_TABLE\""}"" ]],
				 ""ImageBase"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SizeOfImage"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""SizeOfTable"": [ 20, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 FunctionTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 DynamicTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 ImageBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 SizeOfImage { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 SizeOfTable { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
	}
	#endregion
	#region _ARBITER_ADD_RESERVED_PARAMETERS
 
	public class _ARBITER_ADD_RESERVED_PARAMETERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ARBITER_ADD_RESERVED_PARAMETERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ARBITER_ADD_RESERVED_PARAMETERS"": [ 8, {
				 ""ReserveDevice"": [ 0, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ReserveDevice { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_34219
 
	public class _UNNAMED_34219
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34219(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 80; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34219"": [ 80, {
				 ""CellData"": [ 0, [ ""_CELL_DATA"", ""null"" ]],
				 ""List"": [ 0, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public _CELL_DATA CellData
		{
			get
			{
				_CELL_DATA returnValue = new _CELL_DATA(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64[] List
		{
			get
			{
				UInt64[] returnValue = new UInt64[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _CM_CACHED_VALUE_INDEX
 
	public class _CM_CACHED_VALUE_INDEX
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_CACHED_VALUE_INDEX(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 88; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_CACHED_VALUE_INDEX"": [ 88, {
				 ""CellIndex"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Data"": [ 8, [ ""_UNNAMED_34219"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 CellIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _UNNAMED_34219 Data
		{
			get
			{
				_UNNAMED_34219 returnValue = new _UNNAMED_34219(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _DBGKD_QUERY_SPECIAL_CALLS
 
	public class _DBGKD_QUERY_SPECIAL_CALLS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_QUERY_SPECIAL_CALLS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_QUERY_SPECIAL_CALLS"": [ 4, {
				 ""NumberOfSpecialCalls"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 NumberOfSpecialCalls { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _VF_AVL_TREE_NODE
 
	public class _VF_AVL_TREE_NODE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VF_AVL_TREE_NODE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VF_AVL_TREE_NODE"": [ 16, {
				 ""p"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""RangeSize"": [ 8, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 p { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 RangeSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _POP_FX_DEVICE
 
	public class _POP_FX_DEVICE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_FX_DEVICE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 536; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_FX_DEVICE"": [ 536, {
				 ""Link"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Irp"": [ 16, [ ""Pointer"", ""{\""target\"":\""_IRP\""}"" ]],
				 ""IrpData"": [ 24, [ ""Pointer"", ""{\""target\"":\""_POP_IRP_DATA\""}"" ]],
				 ""Status"": [ 32, [ ""_POP_FX_DEVICE_STATUS"", ""null"" ]],
				 ""PowerReqCall"": [ 36, [ ""Int32"", ""null"" ]],
				 ""PowerNotReqCall"": [ 40, [ ""Int32"", ""null"" ]],
				 ""Plugin"": [ 48, [ ""Pointer"", ""{\""target\"":\""_POP_FX_PLUGIN\""}"" ]],
				 ""PluginHandle"": [ 56, [ ""Pointer"", ""{\""target\"":\""PEPHANDLE__\""}"" ]],
				 ""MiniPlugin"": [ 64, [ ""Pointer"", ""{\""target\"":\""_POP_FX_PLUGIN\""}"" ]],
				 ""MiniPluginHandle"": [ 72, [ ""Pointer"", ""{\""target\"":\""PEPHANDLE__\""}"" ]],
				 ""DevNode"": [ 80, [ ""Pointer"", ""{\""target\"":\""_DEVICE_NODE\""}"" ]],
				 ""DeviceObject"": [ 88, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""TargetDevice"": [ 96, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""Callbacks"": [ 104, [ ""_POP_FX_DRIVER_CALLBACKS"", ""null"" ]],
				 ""DriverContext"": [ 160, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""RemoveLock"": [ 168, [ ""_IO_REMOVE_LOCK"", ""null"" ]],
				 ""WorkOrder"": [ 200, [ ""_POP_FX_WORK_ORDER"", ""null"" ]],
				 ""IdleLock"": [ 256, [ ""UInt64"", ""null"" ]],
				 ""IdleTimer"": [ 264, [ ""_KTIMER"", ""null"" ]],
				 ""IdleDpc"": [ 328, [ ""_KDPC"", ""null"" ]],
				 ""IdleTimeout"": [ 392, [ ""UInt64"", ""null"" ]],
				 ""IdleStamp"": [ 400, [ ""UInt64"", ""null"" ]],
				 ""NextIrpDeviceObject"": [ 408, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""NextIrpPowerState"": [ 416, [ ""_POWER_STATE"", ""null"" ]],
				 ""NextIrpCallerCompletion"": [ 424, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""NextIrpCallerContext"": [ 432, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""IrpCompleteEvent"": [ 440, [ ""_KEVENT"", ""null"" ]],
				 ""PowerOnDumpDeviceCallback"": [ 464, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Accounting"": [ 472, [ ""_POP_FX_ACCOUNTING"", ""null"" ]],
				 ""ComponentCount"": [ 520, [ ""UInt32"", ""null"" ]],
				 ""Components"": [ 528, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""_POP_FX_COMPONENT\""}}"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY Link
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Irp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 IrpData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public _POP_FX_DEVICE_STATUS Status
		{
			get
			{
				_POP_FX_DEVICE_STATUS returnValue = new _POP_FX_DEVICE_STATUS(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public Int32 PowerReqCall { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 36); } }
		public Int32 PowerNotReqCall { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 40); } }
		public UInt64 Plugin { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 PluginHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 MiniPlugin { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 MiniPluginHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 DevNode { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 DeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 TargetDevice { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public _POP_FX_DRIVER_CALLBACKS Callbacks
		{
			get
			{
				_POP_FX_DRIVER_CALLBACKS returnValue = new _POP_FX_DRIVER_CALLBACKS(_StructureData, _BufferOffset + 104);
				return returnValue;
			}
		}
		public UInt64 DriverContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public _IO_REMOVE_LOCK RemoveLock
		{
			get
			{
				_IO_REMOVE_LOCK returnValue = new _IO_REMOVE_LOCK(_StructureData, _BufferOffset + 168);
				return returnValue;
			}
		}
		public _POP_FX_WORK_ORDER WorkOrder
		{
			get
			{
				_POP_FX_WORK_ORDER returnValue = new _POP_FX_WORK_ORDER(_StructureData, _BufferOffset + 200);
				return returnValue;
			}
		}
		public UInt64 IdleLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 256); } }
		public _KTIMER IdleTimer
		{
			get
			{
				_KTIMER returnValue = new _KTIMER(_StructureData, _BufferOffset + 264);
				return returnValue;
			}
		}
		public _KDPC IdleDpc
		{
			get
			{
				_KDPC returnValue = new _KDPC(_StructureData, _BufferOffset + 328);
				return returnValue;
			}
		}
		public UInt64 IdleTimeout { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 392); } }
		public UInt64 IdleStamp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 400); } }
		public UInt64 NextIrpDeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 408); } }
		public _POWER_STATE NextIrpPowerState
		{
			get
			{
				_POWER_STATE returnValue = new _POWER_STATE(_StructureData, _BufferOffset + 416);
				return returnValue;
			}
		}
		public UInt64 NextIrpCallerCompletion { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 424); } }
		public UInt64 NextIrpCallerContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 432); } }
		public _KEVENT IrpCompleteEvent
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 440);
				return returnValue;
			}
		}
		public UInt64 PowerOnDumpDeviceCallback { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 464); } }
		public _POP_FX_ACCOUNTING Accounting
		{
			get
			{
				_POP_FX_ACCOUNTING returnValue = new _POP_FX_ACCOUNTING(_StructureData, _BufferOffset + 472);
				return returnValue;
			}
		}
		public UInt32 ComponentCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 520); } }
		public UInt64[] Components
		{
			get
			{
				UInt64[] returnValue = new UInt64[1];
				int size = 8;
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 528);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_34271
 
	public class _UNNAMED_34271
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34271(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34271"": [ 8, {
				 ""IdleTime"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""NonIdleTime"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 IdleTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 NonIdleTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _UNNAMED_34274
 
	public class _UNNAMED_34274
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34274(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34274"": [ 8, {
				 ""Disk"": [ 0, [ ""_UNNAMED_34271"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_34271 Disk
		{
			get
			{
				_UNNAMED_34271 returnValue = new _UNNAMED_34271(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _DEVICE_OBJECT_POWER_EXTENSION
 
	public class _DEVICE_OBJECT_POWER_EXTENSION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DEVICE_OBJECT_POWER_EXTENSION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 88; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DEVICE_OBJECT_POWER_EXTENSION"": [ 88, {
				 ""IdleCount"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""BusyCount"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""BusyReference"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""TotalBusyCount"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""ConservationIdleTime"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""PerformanceIdleTime"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""DeviceObject"": [ 24, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""IdleList"": [ 32, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""IdleType"": [ 48, [ ""Enumeration"", ""{\""enum_name\"":\""_POP_DEVICE_IDLE_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""IdleState"": [ 52, [ ""Enumeration"", ""{\""enum_name\"":\""_DEVICE_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""CurrentState"": [ 56, [ ""Enumeration"", ""{\""enum_name\"":\""_DEVICE_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""Volume"": [ 64, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Specific"": [ 80, [ ""_UNNAMED_34274"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 IdleCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 BusyCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 BusyReference { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 TotalBusyCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 ConservationIdleTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 PerformanceIdleTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt64 DeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public _LIST_ENTRY IdleList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public _POP_DEVICE_IDLE_TYPE IdleType { get { return (_POP_DEVICE_IDLE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public _DEVICE_POWER_STATE IdleState { get { return (_DEVICE_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public _DEVICE_POWER_STATE CurrentState { get { return (_DEVICE_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public _LIST_ENTRY Volume
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public _UNNAMED_34274 Specific
		{
			get
			{
				_UNNAMED_34274 returnValue = new _UNNAMED_34274(_StructureData, _BufferOffset + 80);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ARBITER_RETEST_ALLOCATION_PARAMETERS
 
	public class _ARBITER_RETEST_ALLOCATION_PARAMETERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ARBITER_RETEST_ALLOCATION_PARAMETERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ARBITER_RETEST_ALLOCATION_PARAMETERS"": [ 24, {
				 ""ArbitrationList"": [ 0, [ ""Pointer"", ""{\""target\"":\""_LIST_ENTRY\""}"" ]],
				 ""AllocateFromCount"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""AllocateFrom"": [ 16, [ ""Pointer"", ""{\""target\"":\""_CM_PARTIAL_RESOURCE_DESCRIPTOR\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ArbitrationList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 AllocateFromCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt64 AllocateFrom { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _PROCESSOR_NUMBER
 
	public class _PROCESSOR_NUMBER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROCESSOR_NUMBER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROCESSOR_NUMBER"": [ 4, {
				 ""Group"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Number"": [ 2, [ ""Byte"", ""null"" ]],
				 ""Reserved"": [ 3, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Group { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public Byte Number{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte Reserved{ get { return _StructureData[_BufferOffset +3]; } }
	}
	#endregion
	#region _MI_TRIAGE_DUMP_DATA
 
	public class _MI_TRIAGE_DUMP_DATA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MI_TRIAGE_DUMP_DATA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MI_TRIAGE_DUMP_DATA"": [ 40, {
				 ""BadPageCount"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""BadPagesDetected"": [ 8, [ ""Int32"", ""null"" ]],
				 ""ZeroedPageSingleBitErrorsDetected"": [ 12, [ ""Int32"", ""null"" ]],
				 ""ScrubPasses"": [ 16, [ ""Int32"", ""null"" ]],
				 ""ScrubBadPagesFound"": [ 20, [ ""Int32"", ""null"" ]],
				 ""FeatureBits"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""TimeZoneId"": [ 32, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 BadPageCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public Int32 BadPagesDetected { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 8); } }
		public Int32 ZeroedPageSingleBitErrorsDetected { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 12); } }
		public Int32 ScrubPasses { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 16); } }
		public Int32 ScrubBadPagesFound { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 20); } }
		public UInt64 FeatureBits { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt32 TimeZoneId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS
 
	public class _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_ERROR_RECORD_SECTION_DESCRIPTOR_VALIDBITS"": [ 1, {
				 ""FRUId"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""FRUText"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""Reserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""AsUCHAR"": [ 0, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte FRUId
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte FRUText
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte Reserved
		{
			get
			{
				// start: 2  end: 8  Mask: 0000000011111100
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 252) >> 2;
				return (Byte)value2;
			}
		}
		public Byte AsUCHAR{ get { return _StructureData[_BufferOffset +0]; } }
	}
	#endregion
	#region _FS_FILTER_CALLBACKS
 
	public class _FS_FILTER_CALLBACKS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _FS_FILTER_CALLBACKS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 104; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_FS_FILTER_CALLBACKS"": [ 104, {
				 ""SizeOfFsFilterCallbacks"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Reserved"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""PreAcquireForSectionSynchronization"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PostAcquireForSectionSynchronization"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PreReleaseForSectionSynchronization"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PostReleaseForSectionSynchronization"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PreAcquireForCcFlush"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PostAcquireForCcFlush"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PreReleaseForCcFlush"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PostReleaseForCcFlush"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PreAcquireForModifiedPageWriter"": [ 72, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PostAcquireForModifiedPageWriter"": [ 80, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PreReleaseForModifiedPageWriter"": [ 88, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PostReleaseForModifiedPageWriter"": [ 96, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 SizeOfFsFilterCallbacks { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Reserved { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 PreAcquireForSectionSynchronization { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 PostAcquireForSectionSynchronization { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 PreReleaseForSectionSynchronization { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 PostReleaseForSectionSynchronization { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 PreAcquireForCcFlush { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 PostAcquireForCcFlush { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 PreReleaseForCcFlush { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 PostReleaseForCcFlush { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 PreAcquireForModifiedPageWriter { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 PostAcquireForModifiedPageWriter { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 PreReleaseForModifiedPageWriter { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 PostReleaseForModifiedPageWriter { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
	}
	#endregion
	#region _KTMNOTIFICATION_PACKET
 
	public class _KTMNOTIFICATION_PACKET
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KTMNOTIFICATION_PACKET(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KTMNOTIFICATION_PACKET"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _KENLISTMENT
 
	public class _KENLISTMENT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KENLISTMENT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 480; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KENLISTMENT"": [ 480, {
				 ""cookie"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""NamespaceLink"": [ 8, [ ""_KTMOBJECT_NAMESPACE_LINK"", ""null"" ]],
				 ""EnlistmentId"": [ 48, [ ""_GUID"", ""null"" ]],
				 ""Mutex"": [ 64, [ ""_KMUTANT"", ""null"" ]],
				 ""NextSameTx"": [ 120, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""NextSameRm"": [ 136, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ResourceManager"": [ 152, [ ""Pointer"", ""{\""target\"":\""_KRESOURCEMANAGER\""}"" ]],
				 ""Transaction"": [ 160, [ ""Pointer"", ""{\""target\"":\""_KTRANSACTION\""}"" ]],
				 ""State"": [ 168, [ ""Enumeration"", ""{\""enum_name\"":\""_KENLISTMENT_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""Flags"": [ 172, [ ""UInt32"", ""null"" ]],
				 ""NotificationMask"": [ 176, [ ""UInt32"", ""null"" ]],
				 ""Key"": [ 184, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""KeyRefCount"": [ 192, [ ""UInt32"", ""null"" ]],
				 ""RecoveryInformation"": [ 200, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""RecoveryInformationLength"": [ 208, [ ""UInt32"", ""null"" ]],
				 ""DynamicNameInformation"": [ 216, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DynamicNameInformationLength"": [ 224, [ ""UInt32"", ""null"" ]],
				 ""FinalNotification"": [ 232, [ ""Pointer"", ""{\""target\"":\""_KTMNOTIFICATION_PACKET\""}"" ]],
				 ""SupSubEnlistment"": [ 240, [ ""Pointer"", ""{\""target\"":\""_KENLISTMENT\""}"" ]],
				 ""SupSubEnlHandle"": [ 248, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SubordinateTxHandle"": [ 256, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CrmEnlistmentEnId"": [ 264, [ ""_GUID"", ""null"" ]],
				 ""CrmEnlistmentTmId"": [ 280, [ ""_GUID"", ""null"" ]],
				 ""CrmEnlistmentRmId"": [ 296, [ ""_GUID"", ""null"" ]],
				 ""NextHistory"": [ 312, [ ""UInt32"", ""null"" ]],
				 ""History"": [ 316, [ ""Array"", ""{\""count\"":20,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 cookie { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _KTMOBJECT_NAMESPACE_LINK NamespaceLink
		{
			get
			{
				_KTMOBJECT_NAMESPACE_LINK returnValue = new _KTMOBJECT_NAMESPACE_LINK(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _GUID EnlistmentId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public _KMUTANT Mutex
		{
			get
			{
				_KMUTANT returnValue = new _KMUTANT(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public _LIST_ENTRY NextSameTx
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 120);
				return returnValue;
			}
		}
		public _LIST_ENTRY NextSameRm
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 136);
				return returnValue;
			}
		}
		public UInt64 ResourceManager { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 152); } }
		public UInt64 Transaction { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public _KENLISTMENT_STATE State { get { return (_KENLISTMENT_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 168); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 172); } }
		public UInt32 NotificationMask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 176); } }
		public UInt64 Key { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 184); } }
		public UInt32 KeyRefCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 192); } }
		public UInt64 RecoveryInformation { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 200); } }
		public UInt32 RecoveryInformationLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 208); } }
		public UInt64 DynamicNameInformation { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 216); } }
		public UInt32 DynamicNameInformationLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 224); } }
		public UInt64 FinalNotification { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 232); } }
		public UInt64 SupSubEnlistment { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 240); } }
		public UInt64 SupSubEnlHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 248); } }
		public UInt64 SubordinateTxHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 256); } }
		public _GUID CrmEnlistmentEnId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 264);
				return returnValue;
			}
		}
		public _GUID CrmEnlistmentTmId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 280);
				return returnValue;
			}
		}
		public _GUID CrmEnlistmentRmId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 296);
				return returnValue;
			}
		}
		public UInt32 NextHistory { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 312); } }
		public _KENLISTMENT_HISTORY[] History
		{
			get
			{
				_KENLISTMENT_HISTORY[] returnValue = new _KENLISTMENT_HISTORY[20];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<20; i++ )
					returnValue[i] = new _KENLISTMENT_HISTORY(_StructureData, (i * size) + _BufferOffset + 316);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ARBITER_INTERFACE
 
	public class _ARBITER_INTERFACE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ARBITER_INTERFACE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ARBITER_INTERFACE"": [ 48, {
				 ""Size"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Version"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Context"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""InterfaceReference"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""InterfaceDereference"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ArbiterHandler"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Flags"": [ 40, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Size { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 Version { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt64 Context { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 InterfaceReference { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 InterfaceDereference { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 ArbiterHandler { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
	}
	#endregion
	#region _KAPC_STATE
 
	public class _KAPC_STATE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KAPC_STATE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KAPC_STATE"": [ 48, {
				 ""ApcListHead"": [ 0, [ ""Array"", ""{\""count\"":2,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""Process"": [ 32, [ ""Pointer"", ""{\""target\"":\""_KPROCESS\""}"" ]],
				 ""InProgressFlags"": [ 40, [ ""Byte"", ""null"" ]],
				 ""KernelApcInProgress"": [ 40, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""SpecialApcInProgress"": [ 40, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""KernelApcPending"": [ 41, [ ""Byte"", ""null"" ]],
				 ""UserApcPending"": [ 42, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY[] ApcListHead
		{
			get
			{
				_LIST_ENTRY[] returnValue = new _LIST_ENTRY[2];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<2; i++ )
					returnValue[i] = new _LIST_ENTRY(_StructureData, (i * size) + _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Process { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public Byte InProgressFlags{ get { return _StructureData[_BufferOffset +40]; } }
		public Byte KernelApcInProgress
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 40];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte SpecialApcInProgress
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 40];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte KernelApcPending{ get { return _StructureData[_BufferOffset +41]; } }
		public Byte UserApcPending{ get { return _StructureData[_BufferOffset +42]; } }
	}
	#endregion
	#region _DELAY_ACK_FO
 
	public class _DELAY_ACK_FO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DELAY_ACK_FO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DELAY_ACK_FO"": [ 24, {
				 ""Links"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""OriginalFileObject"": [ 16, [ ""Pointer"", ""{\""target\"":\""_FILE_OBJECT\""}"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY Links
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 OriginalFileObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _IA64_DBGKD_CONTROL_SET
 
	public class _IA64_DBGKD_CONTROL_SET
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IA64_DBGKD_CONTROL_SET(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 20; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IA64_DBGKD_CONTROL_SET"": [ 20, {
				 ""Continue"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""CurrentSymbolStart"": [ 4, [ ""UInt64"", ""null"" ]],
				 ""CurrentSymbolEnd"": [ 12, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Continue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 CurrentSymbolStart { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 4); } }
		public UInt64 CurrentSymbolEnd { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 12); } }
	}
	#endregion
	#region _DEVICE_RELATIONS
 
	public class _DEVICE_RELATIONS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DEVICE_RELATIONS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DEVICE_RELATIONS"": [ 16, {
				 ""Count"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Objects"": [ 8, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""_DEVICE_OBJECT\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Count { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64[] Objects
		{
			get
			{
				UInt64[] returnValue = new UInt64[1];
				int size = 8;
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _IMAGE_ROM_OPTIONAL_HEADER
 
	public class _IMAGE_ROM_OPTIONAL_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IMAGE_ROM_OPTIONAL_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IMAGE_ROM_OPTIONAL_HEADER"": [ 56, {
				 ""Magic"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""MajorLinkerVersion"": [ 2, [ ""Byte"", ""null"" ]],
				 ""MinorLinkerVersion"": [ 3, [ ""Byte"", ""null"" ]],
				 ""SizeOfCode"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""SizeOfInitializedData"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""SizeOfUninitializedData"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""AddressOfEntryPoint"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""BaseOfCode"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""BaseOfData"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""BaseOfBss"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""GprMask"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""CprMask"": [ 36, [ ""Array"", ""{\""count\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""GpValue"": [ 52, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Magic { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public Byte MajorLinkerVersion{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte MinorLinkerVersion{ get { return _StructureData[_BufferOffset +3]; } }
		public UInt32 SizeOfCode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 SizeOfInitializedData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 SizeOfUninitializedData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 AddressOfEntryPoint { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 BaseOfCode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 BaseOfData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 BaseOfBss { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 GprMask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32[] CprMask
		{
			get
			{
				UInt32[] returnValue = new UInt32[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 36);
				return returnValue;
			}
		}
		public UInt32 GpValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
	}
	#endregion
	#region _ALPC_COMPLETION_LIST_STATE
 
	public class _ALPC_COMPLETION_LIST_STATE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ALPC_COMPLETION_LIST_STATE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ALPC_COMPLETION_LIST_STATE"": [ 8, {
				 ""u1"": [ 0, [ ""_UNNAMED_34403"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_34403 u1
		{
			get
			{
				_UNNAMED_34403 returnValue = new _UNNAMED_34403(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ALPC_COMPLETION_LIST_HEADER
 
	public class _ALPC_COMPLETION_LIST_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ALPC_COMPLETION_LIST_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 384; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ALPC_COMPLETION_LIST_HEADER"": [ 384, {
				 ""StartMagic"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""TotalSize"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""ListOffset"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""ListSize"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""BitmapOffset"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""BitmapSize"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""DataOffset"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""DataSize"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""AttributeFlags"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""AttributeSize"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""State"": [ 64, [ ""_ALPC_COMPLETION_LIST_STATE"", ""null"" ]],
				 ""LastMessageId"": [ 72, [ ""UInt32"", ""null"" ]],
				 ""LastCallbackId"": [ 76, [ ""UInt32"", ""null"" ]],
				 ""PostCount"": [ 128, [ ""UInt32"", ""null"" ]],
				 ""ReturnCount"": [ 192, [ ""UInt32"", ""null"" ]],
				 ""LogSequenceNumber"": [ 256, [ ""UInt32"", ""null"" ]],
				 ""UserLock"": [ 320, [ ""_RTL_SRWLOCK"", ""null"" ]],
				 ""EndMagic"": [ 328, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 StartMagic { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 TotalSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 ListOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 ListSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 BitmapOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 BitmapSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 DataOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 DataSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 AttributeFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public UInt32 AttributeSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public _ALPC_COMPLETION_LIST_STATE State
		{
			get
			{
				_ALPC_COMPLETION_LIST_STATE returnValue = new _ALPC_COMPLETION_LIST_STATE(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public UInt32 LastMessageId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 72); } }
		public UInt32 LastCallbackId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 76); } }
		public UInt32 PostCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 128); } }
		public UInt32 ReturnCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 192); } }
		public UInt32 LogSequenceNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 256); } }
		public _RTL_SRWLOCK UserLock
		{
			get
			{
				_RTL_SRWLOCK returnValue = new _RTL_SRWLOCK(_StructureData, _BufferOffset + 320);
				return returnValue;
			}
		}
		public UInt64 EndMagic { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 328); } }
	}
	#endregion
	#region _IMAGE_DEBUG_DIRECTORY
 
	public class _IMAGE_DEBUG_DIRECTORY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IMAGE_DEBUG_DIRECTORY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 28; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IMAGE_DEBUG_DIRECTORY"": [ 28, {
				 ""Characteristics"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""TimeDateStamp"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""MajorVersion"": [ 8, [ ""UInt16"", ""null"" ]],
				 ""MinorVersion"": [ 10, [ ""UInt16"", ""null"" ]],
				 ""Type"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""SizeOfData"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""AddressOfRawData"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""PointerToRawData"": [ 24, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Characteristics { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 TimeDateStamp { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt16 MajorVersion { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 8); } }
		public UInt16 MinorVersion { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 10); } }
		public UInt32 Type { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 SizeOfData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 AddressOfRawData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 PointerToRawData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _WHEA_AER_ENDPOINT_DESCRIPTOR
 
	public class _WHEA_AER_ENDPOINT_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_AER_ENDPOINT_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_AER_ENDPOINT_DESCRIPTOR"": [ 32, {
				 ""Type"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Enabled"": [ 2, [ ""Byte"", ""null"" ]],
				 ""Reserved"": [ 3, [ ""Byte"", ""null"" ]],
				 ""BusNumber"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Slot"": [ 8, [ ""_WHEA_PCI_SLOT_NUMBER"", ""null"" ]],
				 ""DeviceControl"": [ 12, [ ""UInt16"", ""null"" ]],
				 ""Flags"": [ 14, [ ""_AER_ENDPOINT_DESCRIPTOR_FLAGS"", ""null"" ]],
				 ""UncorrectableErrorMask"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""UncorrectableErrorSeverity"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""CorrectableErrorMask"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""AdvancedCapsAndControl"": [ 28, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Type { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public Byte Enabled{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte Reserved{ get { return _StructureData[_BufferOffset +3]; } }
		public UInt32 BusNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _WHEA_PCI_SLOT_NUMBER Slot
		{
			get
			{
				_WHEA_PCI_SLOT_NUMBER returnValue = new _WHEA_PCI_SLOT_NUMBER(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt16 DeviceControl { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 12); } }
		public _AER_ENDPOINT_DESCRIPTOR_FLAGS Flags
		{
			get
			{
				_AER_ENDPOINT_DESCRIPTOR_FLAGS returnValue = new _AER_ENDPOINT_DESCRIPTOR_FLAGS(_StructureData, _BufferOffset + 14);
				return returnValue;
			}
		}
		public UInt32 UncorrectableErrorMask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 UncorrectableErrorSeverity { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 CorrectableErrorMask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 AdvancedCapsAndControl { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
	}
	#endregion
	#region _ETW_WMITRACE_WORK
 
	public class _ETW_WMITRACE_WORK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETW_WMITRACE_WORK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 240; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETW_WMITRACE_WORK"": [ 240, {
				 ""LoggerId"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""SpareUlong"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""LoggerName"": [ 8, [ ""Array"", ""{\""count\"":65,\""target\"":\""Char\""}"" ]],
				 ""FileName"": [ 73, [ ""Array"", ""{\""count\"":129,\""target\"":\""Char\""}"" ]],
				 ""MaximumFileSize"": [ 204, [ ""UInt32"", ""null"" ]],
				 ""MinBuffers"": [ 208, [ ""UInt32"", ""null"" ]],
				 ""MaxBuffers"": [ 212, [ ""UInt32"", ""null"" ]],
				 ""BufferSize"": [ 216, [ ""UInt32"", ""null"" ]],
				 ""Mode"": [ 220, [ ""UInt32"", ""null"" ]],
				 ""FlushTimer"": [ 224, [ ""UInt32"", ""null"" ]],
				 ""MatchAny"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""MatchAll"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""EnableProperty"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""Guid"": [ 28, [ ""_GUID"", ""null"" ]],
				 ""Level"": [ 44, [ ""Byte"", ""null"" ]],
				 ""Status"": [ 232, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 LoggerId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 SpareUlong { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public Char[] LoggerName
		{
			get
			{
				Char[] returnValue = new Char[65];
				for(int i=0; i<65; i++ )
					returnValue[i] = BitConverter.ToChar(_StructureData, (i * sizeof(Char)) + _BufferOffset + 8);
				return returnValue;
			}
		}
		public Char[] FileName
		{
			get
			{
				Char[] returnValue = new Char[129];
				for(int i=0; i<129; i++ )
					returnValue[i] = BitConverter.ToChar(_StructureData, (i * sizeof(Char)) + _BufferOffset + 73);
				return returnValue;
			}
		}
		public UInt32 MaximumFileSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 204); } }
		public UInt32 MinBuffers { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 208); } }
		public UInt32 MaxBuffers { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 212); } }
		public UInt32 BufferSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 216); } }
		public UInt32 Mode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 220); } }
		public UInt32 FlushTimer { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 224); } }
		public UInt64 MatchAny { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 MatchAll { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 EnableProperty { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public _GUID Guid
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 28);
				return returnValue;
			}
		}
		public Byte Level{ get { return _StructureData[_BufferOffset +44]; } }
		public Int32 Status { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 232); } }
	}
	#endregion
	#region _DEVICE_MAP
 
	public class _DEVICE_MAP
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DEVICE_MAP(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DEVICE_MAP"": [ 64, {
				 ""DosDevicesDirectory"": [ 0, [ ""Pointer"", ""{\""target\"":\""_OBJECT_DIRECTORY\""}"" ]],
				 ""GlobalDosDevicesDirectory"": [ 8, [ ""Pointer"", ""{\""target\"":\""_OBJECT_DIRECTORY\""}"" ]],
				 ""DosDevicesDirectoryHandle"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ReferenceCount"": [ 24, [ ""Int32"", ""null"" ]],
				 ""DriveMap"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""DriveType"": [ 32, [ ""Array"", ""{\""count\"":32,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 DosDevicesDirectory { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 GlobalDosDevicesDirectory { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 DosDevicesDirectoryHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public Int32 ReferenceCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 DriveMap { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public Byte[] DriveType
		{
			get
			{
				Byte[] returnValue = new Byte[32];
				for(int i=0; i<32; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 32];
				return returnValue;
			}
		}
	}
	#endregion
	#region _CHILD_LIST
 
	public class _CHILD_LIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CHILD_LIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CHILD_LIST"": [ 8, {
				 ""Count"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""List"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Count { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 List { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _IO_RESOURCE_LIST
 
	public class _IO_RESOURCE_LIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IO_RESOURCE_LIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IO_RESOURCE_LIST"": [ 40, {
				 ""Version"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Revision"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Count"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Descriptors"": [ 8, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Version { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 Revision { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt32 Count { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _IO_RESOURCE_DESCRIPTOR[] Descriptors
		{
			get
			{
				_IO_RESOURCE_DESCRIPTOR[] returnValue = new _IO_RESOURCE_DESCRIPTOR[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _IO_RESOURCE_DESCRIPTOR(_StructureData, (i * size) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ARMCE_DBGKD_CONTROL_SET
 
	public class _ARMCE_DBGKD_CONTROL_SET
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ARMCE_DBGKD_CONTROL_SET(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ARMCE_DBGKD_CONTROL_SET"": [ 12, {
				 ""Continue"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""CurrentSymbolStart"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""CurrentSymbolEnd"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Continue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 CurrentSymbolStart { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 CurrentSymbolEnd { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _WHEA_ERROR_RECORD_HEADER_FLAGS
 
	public class _WHEA_ERROR_RECORD_HEADER_FLAGS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_ERROR_RECORD_HEADER_FLAGS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_ERROR_RECORD_HEADER_FLAGS"": [ 4, {
				 ""Recovered"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""PreviousError"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""Simulated"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""Reserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""AsULONG"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Recovered
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 PreviousError
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 Simulated
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 Reserved
		{
			get
			{
				// start: 3  end: 32  Mask: 11111111111111111111111111111000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967288) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 AsULONG { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _XSAVE_AREA_HEADER
 
	public class _XSAVE_AREA_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _XSAVE_AREA_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_XSAVE_AREA_HEADER"": [ 64, {
				 ""Mask"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Reserved"": [ 8, [ ""Array"", ""{\""count\"":7,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Mask { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64[] Reserved
		{
			get
			{
				UInt64[] returnValue = new UInt64[7];
				for(int i=0; i<7; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _RTL_CRITICAL_SECTION
 
	public class _RTL_CRITICAL_SECTION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_CRITICAL_SECTION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_CRITICAL_SECTION"": [ 40, {
				 ""DebugInfo"": [ 0, [ ""Pointer"", ""{\""target\"":\""_RTL_CRITICAL_SECTION_DEBUG\""}"" ]],
				 ""LockCount"": [ 8, [ ""Int32"", ""null"" ]],
				 ""RecursionCount"": [ 12, [ ""Int32"", ""null"" ]],
				 ""OwningThread"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""LockSemaphore"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SpinCount"": [ 32, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 DebugInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public Int32 LockCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 8); } }
		public Int32 RecursionCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 12); } }
		public UInt64 OwningThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 LockSemaphore { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 SpinCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _PNP_DEVICE_COMPLETION_REQUEST
 
	public class _PNP_DEVICE_COMPLETION_REQUEST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PNP_DEVICE_COMPLETION_REQUEST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PNP_DEVICE_COMPLETION_REQUEST"": [ 64, {
				 ""ListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""DeviceNode"": [ 16, [ ""Pointer"", ""{\""target\"":\""_DEVICE_NODE\""}"" ]],
				 ""Context"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CompletionState"": [ 32, [ ""Enumeration"", ""{\""enum_name\"":\""_PNP_DEVNODE_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""IrpPended"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""Status"": [ 40, [ ""Int32"", ""null"" ]],
				 ""Information"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ReferenceCount"": [ 56, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 DeviceNode { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Context { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public _PNP_DEVNODE_STATE CompletionState { get { return (_PNP_DEVNODE_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 IrpPended { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public Int32 Status { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 40); } }
		public UInt64 Information { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public Int32 ReferenceCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 56); } }
	}
	#endregion
	#region _KTSS64
 
	public class _KTSS64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KTSS64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 104; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KTSS64"": [ 104, {
				 ""Reserved0"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Rsp0"": [ 4, [ ""UInt64"", ""null"" ]],
				 ""Rsp1"": [ 12, [ ""UInt64"", ""null"" ]],
				 ""Rsp2"": [ 20, [ ""UInt64"", ""null"" ]],
				 ""Ist"": [ 28, [ ""Array"", ""{\""count\"":8,\""target\"":\""UInt64\""}"" ]],
				 ""Reserved1"": [ 92, [ ""UInt64"", ""null"" ]],
				 ""Reserved2"": [ 100, [ ""UInt16"", ""null"" ]],
				 ""IoMapBase"": [ 102, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Reserved0 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 Rsp0 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 4); } }
		public UInt64 Rsp1 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 12); } }
		public UInt64 Rsp2 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 20); } }
		public UInt64[] Ist
		{
			get
			{
				UInt64[] returnValue = new UInt64[8];
				for(int i=0; i<8; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 28);
				return returnValue;
			}
		}
		public UInt64 Reserved1 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 92); } }
		public UInt16 Reserved2 { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 100); } }
		public UInt16 IoMapBase { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 102); } }
	}
	#endregion
	#region _UNNAMED_34513
 
	public class _UNNAMED_34513
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34513(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34513"": [ 8, {
				 ""Start"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Length"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Start { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _UNNAMED_34516
 
	public class _UNNAMED_34516
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34516(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34516"": [ 8, {
				 ""RangeCount"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""SetBitCount"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 RangeCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 SetBitCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _UNNAMED_34519
 
	public class _UNNAMED_34519
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34519(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34519"": [ 8, {
				 ""Context1"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Context2"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Context1 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Context2 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _UNNAMED_34522
 
	public class _UNNAMED_34522
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34522(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34522"": [ 8, {
				 ""DirtyVectorModifiedContext"": [ 0, [ ""_UNNAMED_34513"", ""null"" ]],
				 ""DirtyDataCaptureContext"": [ 0, [ ""_UNNAMED_34516"", ""null"" ]],
				 ""Raw"": [ 0, [ ""_UNNAMED_34519"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_34513 DirtyVectorModifiedContext
		{
			get
			{
				_UNNAMED_34513 returnValue = new _UNNAMED_34513(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_34516 DirtyDataCaptureContext
		{
			get
			{
				_UNNAMED_34516 returnValue = new _UNNAMED_34516(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_34519 Raw
		{
			get
			{
				_UNNAMED_34519 returnValue = new _UNNAMED_34519(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _CM_DIRTY_VECTOR_LOG_ENTRY
 
	public class _CM_DIRTY_VECTOR_LOG_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_DIRTY_VECTOR_LOG_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 80; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_DIRTY_VECTOR_LOG_ENTRY"": [ 80, {
				 ""Thread"": [ 0, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]],
				 ""Operation"": [ 8, [ ""Enumeration"", ""{\""enum_name\"":\""_CM_DIRTY_VECTOR_OPERATION\"",\""target\"":\""UInt32\""}"" ]],
				 ""Data"": [ 12, [ ""_UNNAMED_34522"", ""null"" ]],
				 ""Stack"": [ 24, [ ""Array"", ""{\""count\"":7,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Thread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _CM_DIRTY_VECTOR_OPERATION Operation { get { return (_CM_DIRTY_VECTOR_OPERATION)BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public _UNNAMED_34522 Data
		{
			get
			{
				_UNNAMED_34522 returnValue = new _UNNAMED_34522(_StructureData, _BufferOffset + 12);
				return returnValue;
			}
		}
		public UInt64[] Stack
		{
			get
			{
				UInt64[] returnValue = new UInt64[7];
				int size = 8;
				for(int i=0; i<7; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 24);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_34530
 
	public class _UNNAMED_34530
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34530(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34530"": [ 4, {
				 ""LongFlags"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""VadFlags"": [ 0, [ ""_MMVAD_FLAGS"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 LongFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _MMVAD_FLAGS VadFlags
		{
			get
			{
				_MMVAD_FLAGS returnValue = new _MMVAD_FLAGS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_34534
 
	public class _UNNAMED_34534
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34534(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34534"": [ 4, {
				 ""LongFlags1"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""VadFlags1"": [ 0, [ ""_MMVAD_FLAGS1"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 LongFlags1 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _MMVAD_FLAGS1 VadFlags1
		{
			get
			{
				_MMVAD_FLAGS1 returnValue = new _MMVAD_FLAGS1(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MMVAD_SHORT
 
	public class _MMVAD_SHORT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMVAD_SHORT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMVAD_SHORT"": [ 64, {
				 ""VadNode"": [ 0, [ ""_RTL_BALANCED_NODE"", ""null"" ]],
				 ""NextVad"": [ 0, [ ""Pointer"", ""{\""target\"":\""_MMVAD_SHORT\""}"" ]],
				 ""StartingVpn"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""EndingVpn"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""StartingVpnHigh"": [ 32, [ ""Byte"", ""null"" ]],
				 ""EndingVpnHigh"": [ 33, [ ""Byte"", ""null"" ]],
				 ""CommitChargeHigh"": [ 34, [ ""Byte"", ""null"" ]],
				 ""LargeImageBias"": [ 35, [ ""Byte"", ""null"" ]],
				 ""ReferenceCount"": [ 36, [ ""Int32"", ""null"" ]],
				 ""PushLock"": [ 40, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""u"": [ 48, [ ""_UNNAMED_34530"", ""null"" ]],
				 ""u1"": [ 52, [ ""_UNNAMED_34534"", ""null"" ]],
				 ""EventList"": [ 56, [ ""Pointer"", ""{\""target\"":\""_MI_VAD_EVENT_BLOCK\""}"" ]] }]
				 }
				)";
			}
		}
		public _RTL_BALANCED_NODE VadNode
		{
			get
			{
				_RTL_BALANCED_NODE returnValue = new _RTL_BALANCED_NODE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 NextVad { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 StartingVpn { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 EndingVpn { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public Byte StartingVpnHigh{ get { return _StructureData[_BufferOffset +32]; } }
		public Byte EndingVpnHigh{ get { return _StructureData[_BufferOffset +33]; } }
		public Byte CommitChargeHigh{ get { return _StructureData[_BufferOffset +34]; } }
		public Byte LargeImageBias{ get { return _StructureData[_BufferOffset +35]; } }
		public Int32 ReferenceCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 36); } }
		public _EX_PUSH_LOCK PushLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public _UNNAMED_34530 u
		{
			get
			{
				_UNNAMED_34530 returnValue = new _UNNAMED_34530(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public _UNNAMED_34534 u1
		{
			get
			{
				_UNNAMED_34534 returnValue = new _UNNAMED_34534(_StructureData, _BufferOffset + 52);
				return returnValue;
			}
		}
		public UInt64 EventList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
	}
	#endregion
	#region _KLOCK_ENTRY_LOCK_STATE
 
	public class _KLOCK_ENTRY_LOCK_STATE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KLOCK_ENTRY_LOCK_STATE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KLOCK_ENTRY_LOCK_STATE"": [ 16, {
				 ""Waiting"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""Busy"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt64\""}"" ]],
				 ""Spare"": [ 0, [ ""BitField"", ""{\""end_bit\"":63,\""start_bit\"":2,\""target\"":\""UInt64\""}"" ]],
				 ""InTree"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":63,\""target\"":\""UInt64\""}"" ]],
				 ""LockState"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SessionState"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SessionId"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""SessionPad"": [ 12, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Waiting
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 Busy
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt64)value2;
			}
		}
		public UInt64 Spare
		{
			get
			{
				// start: 2  end: 63  Mask: 000000000000000000000000000000011111111111111111111111111111100
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967292) >> 2;
				return (UInt64)value2;
			}
		}
		public UInt64 InTree
		{
			get
			{
				// start: 63  end: 64  Mask: 0000000000000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 63;
				return (UInt64)value2;
			}
		}
		public UInt64 LockState { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 SessionState { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 SessionId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 SessionPad { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
	}
	#endregion
	#region _WAIT_CONTEXT_BLOCK
 
	public class _WAIT_CONTEXT_BLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WAIT_CONTEXT_BLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WAIT_CONTEXT_BLOCK"": [ 72, {
				 ""WaitQueueEntry"": [ 0, [ ""_KDEVICE_QUEUE_ENTRY"", ""null"" ]],
				 ""DmaWaitEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""NumberOfChannels"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""SyncCallback"": [ 20, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""DmaContext"": [ 20, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""Reserved"": [ 20, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""DeviceRoutine"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DeviceContext"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""NumberOfMapRegisters"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""DeviceObject"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CurrentIrp"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""BufferChainingDpc"": [ 64, [ ""Pointer"", ""{\""target\"":\""_KDPC\""}"" ]] }]
				 }
				)";
			}
		}
		public _KDEVICE_QUEUE_ENTRY WaitQueueEntry
		{
			get
			{
				_KDEVICE_QUEUE_ENTRY returnValue = new _KDEVICE_QUEUE_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LIST_ENTRY DmaWaitEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 NumberOfChannels { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 SyncCallback
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 20);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 DmaContext
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 20);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 Reserved
		{
			get
			{
				// start: 2  end: 32  Mask: 11111111111111111111111111111100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 20);
				var value2 = (value & 4294967292) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt64 DeviceRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 DeviceContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt32 NumberOfMapRegisters { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt64 DeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 CurrentIrp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 BufferChainingDpc { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
	}
	#endregion
	#region _SECTION_OBJECT
 
	public class _SECTION_OBJECT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SECTION_OBJECT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SECTION_OBJECT"": [ 48, {
				 ""StartingVa"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""EndingVa"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Parent"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""LeftChild"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""RightChild"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Segment"": [ 40, [ ""Pointer"", ""{\""target\"":\""_SEGMENT_OBJECT\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 StartingVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 EndingVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Parent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 LeftChild { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 RightChild { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 Segment { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
	}
	#endregion
	#region _CM_NAME_CONTROL_BLOCK
 
	public class _CM_NAME_CONTROL_BLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_NAME_CONTROL_BLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_NAME_CONTROL_BLOCK"": [ 32, {
				 ""Compressed"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""RefCount"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""NameHash"": [ 8, [ ""_CM_NAME_HASH"", ""null"" ]],
				 ""ConvKey"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""NextHash"": [ 16, [ ""Pointer"", ""{\""target\"":\""_CM_KEY_HASH\""}"" ]],
				 ""NameLength"": [ 24, [ ""UInt16"", ""null"" ]],
				 ""Name"": [ 26, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt16\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Compressed
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 RefCount
		{
			get
			{
				// start: 1  end: 32  Mask: 11111111111111111111111111111110
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967294) >> 1;
				return (UInt32)value2;
			}
		}
		public _CM_NAME_HASH NameHash
		{
			get
			{
				_CM_NAME_HASH returnValue = new _CM_NAME_HASH(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt32 ConvKey { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt64 NextHash { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt16 NameLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 24); } }
		public UInt16[] Name
		{
			get
			{
				UInt16[] returnValue = new UInt16[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 26);
				return returnValue;
			}
		}
	}
	#endregion
	#region _u
 
	public class _u
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _u(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 80; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_u"": [ 80, {
				 ""KeyNode"": [ 0, [ ""_CM_KEY_NODE"", ""null"" ]],
				 ""KeyValue"": [ 0, [ ""_CM_KEY_VALUE"", ""null"" ]],
				 ""KeySecurity"": [ 0, [ ""_CM_KEY_SECURITY"", ""null"" ]],
				 ""KeyIndex"": [ 0, [ ""_CM_KEY_INDEX"", ""null"" ]],
				 ""ValueData"": [ 0, [ ""_CM_BIG_DATA"", ""null"" ]],
				 ""KeyList"": [ 0, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""KeyString"": [ 0, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt16\""}"" ]] }]
				 }
				)";
			}
		}
		public _CM_KEY_NODE KeyNode
		{
			get
			{
				_CM_KEY_NODE returnValue = new _CM_KEY_NODE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _CM_KEY_VALUE KeyValue
		{
			get
			{
				_CM_KEY_VALUE returnValue = new _CM_KEY_VALUE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _CM_KEY_SECURITY KeySecurity
		{
			get
			{
				_CM_KEY_SECURITY returnValue = new _CM_KEY_SECURITY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _CM_KEY_INDEX KeyIndex
		{
			get
			{
				_CM_KEY_INDEX returnValue = new _CM_KEY_INDEX(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _CM_BIG_DATA ValueData
		{
			get
			{
				_CM_BIG_DATA returnValue = new _CM_BIG_DATA(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32[] KeyList
		{
			get
			{
				UInt32[] returnValue = new UInt32[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt16[] KeyString
		{
			get
			{
				UInt16[] returnValue = new UInt16[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _HBASE_BLOCK
 
	public class _HBASE_BLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HBASE_BLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4096; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HBASE_BLOCK"": [ 4096, {
				 ""Signature"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Sequence1"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Sequence2"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""TimeStamp"": [ 12, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""Major"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""Minor"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""Type"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""Format"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""RootCell"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""Length"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""Cluster"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""FileName"": [ 48, [ ""Array"", ""{\""count\"":64,\""target\"":\""Byte\""}"" ]],
				 ""RmId"": [ 112, [ ""_GUID"", ""null"" ]],
				 ""LogId"": [ 128, [ ""_GUID"", ""null"" ]],
				 ""Flags"": [ 144, [ ""UInt32"", ""null"" ]],
				 ""TmId"": [ 148, [ ""_GUID"", ""null"" ]],
				 ""GuidSignature"": [ 164, [ ""UInt32"", ""null"" ]],
				 ""LastReorganizeTime"": [ 168, [ ""UInt64"", ""null"" ]],
				 ""Reserved1"": [ 176, [ ""Array"", ""{\""count\"":83,\""target\"":\""UInt32\""}"" ]],
				 ""CheckSum"": [ 508, [ ""UInt32"", ""null"" ]],
				 ""Reserved2"": [ 512, [ ""Array"", ""{\""count\"":882,\""target\"":\""UInt32\""}"" ]],
				 ""ThawTmId"": [ 4040, [ ""_GUID"", ""null"" ]],
				 ""ThawRmId"": [ 4056, [ ""_GUID"", ""null"" ]],
				 ""ThawLogId"": [ 4072, [ ""_GUID"", ""null"" ]],
				 ""BootType"": [ 4088, [ ""UInt32"", ""null"" ]],
				 ""BootRecover"": [ 4092, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Signature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Sequence1 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 Sequence2 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public _LARGE_INTEGER TimeStamp
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 12);
				return returnValue;
			}
		}
		public UInt32 Major { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 Minor { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 Type { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 Format { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 RootCell { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32 Cluster { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public Byte[] FileName
		{
			get
			{
				Byte[] returnValue = new Byte[64];
				for(int i=0; i<64; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 48];
				return returnValue;
			}
		}
		public _GUID RmId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 112);
				return returnValue;
			}
		}
		public _GUID LogId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 128);
				return returnValue;
			}
		}
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 144); } }
		public _GUID TmId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 148);
				return returnValue;
			}
		}
		public UInt32 GuidSignature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 164); } }
		public UInt64 LastReorganizeTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 168); } }
		public UInt32[] Reserved1
		{
			get
			{
				UInt32[] returnValue = new UInt32[83];
				for(int i=0; i<83; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 176);
				return returnValue;
			}
		}
		public UInt32 CheckSum { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 508); } }
		public UInt32[] Reserved2
		{
			get
			{
				UInt32[] returnValue = new UInt32[882];
				for(int i=0; i<882; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 512);
				return returnValue;
			}
		}
		public _GUID ThawTmId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 4040);
				return returnValue;
			}
		}
		public _GUID ThawRmId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 4056);
				return returnValue;
			}
		}
		public _GUID ThawLogId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 4072);
				return returnValue;
			}
		}
		public UInt32 BootType { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4088); } }
		public UInt32 BootRecover { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4092); } }
	}
	#endregion
	#region _GENERAL_LOOKASIDE_POOL
 
	public class _GENERAL_LOOKASIDE_POOL
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _GENERAL_LOOKASIDE_POOL(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 96; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_GENERAL_LOOKASIDE_POOL"": [ 96, {
				 ""ListHead"": [ 0, [ ""_SLIST_HEADER"", ""null"" ]],
				 ""SingleListHead"": [ 0, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""Depth"": [ 16, [ ""UInt16"", ""null"" ]],
				 ""MaximumDepth"": [ 18, [ ""UInt16"", ""null"" ]],
				 ""TotalAllocates"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""AllocateMisses"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""AllocateHits"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""TotalFrees"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""FreeMisses"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""FreeHits"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""Type"": [ 36, [ ""Enumeration"", ""{\""enum_name\"":\""_POOL_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""Tag"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""Size"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""AllocateEx"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Allocate"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FreeEx"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Free"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ListEntry"": [ 64, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""LastTotalAllocates"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""LastAllocateMisses"": [ 84, [ ""UInt32"", ""null"" ]],
				 ""LastAllocateHits"": [ 84, [ ""UInt32"", ""null"" ]],
				 ""Future"": [ 88, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public _SLIST_HEADER ListHead
		{
			get
			{
				_SLIST_HEADER returnValue = new _SLIST_HEADER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _SINGLE_LIST_ENTRY SingleListHead
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt16 Depth { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 16); } }
		public UInt16 MaximumDepth { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 18); } }
		public UInt32 TotalAllocates { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 AllocateMisses { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 AllocateHits { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 TotalFrees { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 FreeMisses { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 FreeHits { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public _POOL_TYPE Type { get { return (_POOL_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public UInt32 Tag { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32 Size { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public UInt64 AllocateEx { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 Allocate { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 FreeEx { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 Free { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public UInt32 LastTotalAllocates { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 LastAllocateMisses { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
		public UInt32 LastAllocateHits { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
		public UInt32[] Future
		{
			get
			{
				UInt32[] returnValue = new UInt32[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 88);
				return returnValue;
			}
		}
	}
	#endregion
	#region _RTL_DYNAMIC_HASH_TABLE_ENTRY
 
	public class _RTL_DYNAMIC_HASH_TABLE_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_DYNAMIC_HASH_TABLE_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_DYNAMIC_HASH_TABLE_ENTRY"": [ 24, {
				 ""Linkage"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Signature"": [ 16, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY Linkage
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Signature { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _M128A
 
	public class _M128A
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _M128A(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_M128A"": [ 16, {
				 ""Low"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""High"": [ 8, [ ""Int64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Low { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public Int64 High { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _HEAP_LOOKASIDE
 
	public class _HEAP_LOOKASIDE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HEAP_LOOKASIDE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HEAP_LOOKASIDE"": [ 64, {
				 ""ListHead"": [ 0, [ ""_SLIST_HEADER"", ""null"" ]],
				 ""Depth"": [ 16, [ ""UInt16"", ""null"" ]],
				 ""MaximumDepth"": [ 18, [ ""UInt16"", ""null"" ]],
				 ""TotalAllocates"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""AllocateMisses"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""TotalFrees"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""FreeMisses"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""LastTotalAllocates"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""LastAllocateMisses"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""Counters"": [ 44, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public _SLIST_HEADER ListHead
		{
			get
			{
				_SLIST_HEADER returnValue = new _SLIST_HEADER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt16 Depth { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 16); } }
		public UInt16 MaximumDepth { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 18); } }
		public UInt32 TotalAllocates { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 AllocateMisses { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 TotalFrees { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 FreeMisses { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 LastTotalAllocates { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public UInt32 LastAllocateMisses { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32[] Counters
		{
			get
			{
				UInt32[] returnValue = new UInt32[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 44);
				return returnValue;
			}
		}
	}
	#endregion
	#region _KTIMER
 
	public class _KTIMER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KTIMER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KTIMER"": [ 64, {
				 ""Header"": [ 0, [ ""_DISPATCHER_HEADER"", ""null"" ]],
				 ""DueTime"": [ 24, [ ""_ULARGE_INTEGER"", ""null"" ]],
				 ""TimerListEntry"": [ 32, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Dpc"": [ 48, [ ""Pointer"", ""{\""target\"":\""_KDPC\""}"" ]],
				 ""Processor"": [ 56, [ ""UInt32"", ""null"" ]],
				 ""Period"": [ 60, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _DISPATCHER_HEADER Header
		{
			get
			{
				_DISPATCHER_HEADER returnValue = new _DISPATCHER_HEADER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _ULARGE_INTEGER DueTime
		{
			get
			{
				_ULARGE_INTEGER returnValue = new _ULARGE_INTEGER(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public _LIST_ENTRY TimerListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt64 Dpc { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt32 Processor { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public UInt32 Period { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
	}
	#endregion
	#region _RTL_ATOM_TABLE
 
	public class _RTL_ATOM_TABLE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_ATOM_TABLE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_ATOM_TABLE"": [ 40, {
				 ""Signature"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ReferenceCount"": [ 4, [ ""Int32"", ""null"" ]],
				 ""PushLock"": [ 8, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""ExHandleTable"": [ 16, [ ""Pointer"", ""{\""target\"":\""_HANDLE_TABLE\""}"" ]],
				 ""Flags"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""NumberOfBuckets"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""Buckets"": [ 32, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""_RTL_ATOM_TABLE_ENTRY\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Signature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Int32 ReferenceCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 4); } }
		public _EX_PUSH_LOCK PushLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt64 ExHandleTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 NumberOfBuckets { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt64[] Buckets
		{
			get
			{
				UInt64[] returnValue = new UInt64[1];
				int size = 8;
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 32);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_34687
 
	public class _UNNAMED_34687
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34687(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34687"": [ 16, {
				 ""ProgrammedTime"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""TimerInfo"": [ 8, [ ""Pointer"", ""{\""target\"":\""_DIAGNOSTIC_BUFFER\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ProgrammedTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 TimerInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _POP_POWER_ACTION
 
	public class _POP_POWER_ACTION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_POWER_ACTION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 224; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_POWER_ACTION"": [ 224, {
				 ""Updates"": [ 0, [ ""Byte"", ""null"" ]],
				 ""State"": [ 1, [ ""Byte"", ""null"" ]],
				 ""Shutdown"": [ 2, [ ""Byte"", ""null"" ]],
				 ""Action"": [ 4, [ ""Enumeration"", ""{\""enum_name\"":\""POWER_ACTION\"",\""target\"":\""UInt32\""}"" ]],
				 ""LightestState"": [ 8, [ ""Enumeration"", ""{\""enum_name\"":\""_SYSTEM_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""Flags"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""Status"": [ 16, [ ""Int32"", ""null"" ]],
				 ""DeviceType"": [ 20, [ ""Enumeration"", ""{\""enum_name\"":\""POWER_POLICY_DEVICE_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""DeviceTypeFlags"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""IrpMinor"": [ 28, [ ""Byte"", ""null"" ]],
				 ""Waking"": [ 29, [ ""Byte"", ""null"" ]],
				 ""SystemState"": [ 32, [ ""Enumeration"", ""{\""enum_name\"":\""_SYSTEM_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""NextSystemState"": [ 36, [ ""Enumeration"", ""{\""enum_name\"":\""_SYSTEM_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""EffectiveSystemState"": [ 40, [ ""Enumeration"", ""{\""enum_name\"":\""_SYSTEM_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""CurrentSystemState"": [ 44, [ ""Enumeration"", ""{\""enum_name\"":\""_SYSTEM_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""ShutdownBugCode"": [ 48, [ ""Pointer"", ""{\""target\"":\""_POP_SHUTDOWN_BUG_CHECK\""}"" ]],
				 ""DevState"": [ 56, [ ""Pointer"", ""{\""target\"":\""_POP_DEVICE_SYS_STATE\""}"" ]],
				 ""HiberContext"": [ 64, [ ""Pointer"", ""{\""target\"":\""_POP_HIBER_CONTEXT\""}"" ]],
				 ""WakeTime"": [ 72, [ ""UInt64"", ""null"" ]],
				 ""SleepTime"": [ 80, [ ""UInt64"", ""null"" ]],
				 ""WakeAlarmSignaled"": [ 88, [ ""Enumeration"", ""{\""enum_name\"":\""SYSTEM_POWER_CONDITION\"",\""target\"":\""UInt32\""}"" ]],
				 ""WakeAlarm"": [ 96, [ ""Array"", ""{\""count\"":3,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""FilteredCapabilities"": [ 144, [ ""SYSTEM_POWER_CAPABILITIES"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte Updates{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte State{ get { return _StructureData[_BufferOffset +1]; } }
		public Byte Shutdown{ get { return _StructureData[_BufferOffset +2]; } }
		public POWER_ACTION Action { get { return (POWER_ACTION)BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _SYSTEM_POWER_STATE LightestState { get { return (_SYSTEM_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public Int32 Status { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 16); } }
		public POWER_POLICY_DEVICE_TYPE DeviceType { get { return (POWER_POLICY_DEVICE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 DeviceTypeFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public Byte IrpMinor{ get { return _StructureData[_BufferOffset +28]; } }
		public Byte Waking{ get { return _StructureData[_BufferOffset +29]; } }
		public _SYSTEM_POWER_STATE SystemState { get { return (_SYSTEM_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public _SYSTEM_POWER_STATE NextSystemState { get { return (_SYSTEM_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public _SYSTEM_POWER_STATE EffectiveSystemState { get { return (_SYSTEM_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public _SYSTEM_POWER_STATE CurrentSystemState { get { return (_SYSTEM_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public UInt64 ShutdownBugCode { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 DevState { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 HiberContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 WakeTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 SleepTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public SYSTEM_POWER_CONDITION WakeAlarmSignaled { get { return (SYSTEM_POWER_CONDITION)BitConverter.ToUInt32(_StructureData, _BufferOffset + 88); } }
		public _UNNAMED_34687[] WakeAlarm
		{
			get
			{
				_UNNAMED_34687[] returnValue = new _UNNAMED_34687[3];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<3; i++ )
					returnValue[i] = new _UNNAMED_34687(_StructureData, (i * size) + _BufferOffset + 96);
				return returnValue;
			}
		}
		public SYSTEM_POWER_CAPABILITIES FilteredCapabilities
		{
			get
			{
				SYSTEM_POWER_CAPABILITIES returnValue = new SYSTEM_POWER_CAPABILITIES(_StructureData, _BufferOffset + 144);
				return returnValue;
			}
		}
	}
	#endregion
	#region _CM_KEY_VALUE
 
	public class _CM_KEY_VALUE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_KEY_VALUE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_KEY_VALUE"": [ 24, {
				 ""Signature"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""NameLength"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""DataLength"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Data"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Type"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""Flags"": [ 16, [ ""UInt16"", ""null"" ]],
				 ""Spare"": [ 18, [ ""UInt16"", ""null"" ]],
				 ""Name"": [ 20, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt16\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Signature { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 NameLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt32 DataLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 Data { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Type { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt16 Flags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 16); } }
		public UInt16 Spare { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 18); } }
		public UInt16[] Name
		{
			get
			{
				UInt16[] returnValue = new UInt16[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 20);
				return returnValue;
			}
		}
	}
	#endregion
	#region _CM_KEY_HASH
 
	public class _CM_KEY_HASH
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_KEY_HASH(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_KEY_HASH"": [ 32, {
				 ""ConvKey"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""NextHash"": [ 8, [ ""Pointer"", ""{\""target\"":\""_CM_KEY_HASH\""}"" ]],
				 ""KeyHive"": [ 16, [ ""Pointer"", ""{\""target\"":\""_HHIVE\""}"" ]],
				 ""KeyCell"": [ 24, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 ConvKey { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 NextHash { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 KeyHive { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 KeyCell { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _WHEA_IPF_CMC_DESCRIPTOR
 
	public class _WHEA_IPF_CMC_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_IPF_CMC_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_IPF_CMC_DESCRIPTOR"": [ 4, {
				 ""Type"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Enabled"": [ 2, [ ""Byte"", ""null"" ]],
				 ""Reserved"": [ 3, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Type { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public Byte Enabled{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte Reserved{ get { return _StructureData[_BufferOffset +3]; } }
	}
	#endregion
	#region _PROCESSOR_IDLE_DEPENDENCY
 
	public class _PROCESSOR_IDLE_DEPENDENCY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROCESSOR_IDLE_DEPENDENCY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROCESSOR_IDLE_DEPENDENCY"": [ 8, {
				 ""ProcessorIndex"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ExpectedState"": [ 4, [ ""Byte"", ""null"" ]],
				 ""AllowDeeperStates"": [ 5, [ ""Byte"", ""null"" ]],
				 ""LooseDependency"": [ 6, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 ProcessorIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Byte ExpectedState{ get { return _StructureData[_BufferOffset +4]; } }
		public Byte AllowDeeperStates{ get { return _StructureData[_BufferOffset +5]; } }
		public Byte LooseDependency{ get { return _StructureData[_BufferOffset +6]; } }
	}
	#endregion
	#region _AMD64_DBGKD_CONTROL_SET
 
	public class _AMD64_DBGKD_CONTROL_SET
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _AMD64_DBGKD_CONTROL_SET(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 28; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_AMD64_DBGKD_CONTROL_SET"": [ 28, {
				 ""TraceFlag"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Dr7"": [ 4, [ ""UInt64"", ""null"" ]],
				 ""CurrentSymbolStart"": [ 12, [ ""UInt64"", ""null"" ]],
				 ""CurrentSymbolEnd"": [ 20, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 TraceFlag { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 Dr7 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 4); } }
		public UInt64 CurrentSymbolStart { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 12); } }
		public UInt64 CurrentSymbolEnd { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 20); } }
	}
	#endregion
	#region _PO_DEVICE_NOTIFY
 
	public class _PO_DEVICE_NOTIFY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PO_DEVICE_NOTIFY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 104; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PO_DEVICE_NOTIFY"": [ 104, {
				 ""Link"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""PowerChildren"": [ 16, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""PowerParents"": [ 32, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""TargetDevice"": [ 48, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""OrderLevel"": [ 56, [ ""Byte"", ""null"" ]],
				 ""DeviceObject"": [ 64, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""DeviceName"": [ 72, [ ""Pointer"", ""{\""target\"":\""UInt16\""}"" ]],
				 ""DriverName"": [ 80, [ ""Pointer"", ""{\""target\"":\""UInt16\""}"" ]],
				 ""ChildCount"": [ 88, [ ""UInt32"", ""null"" ]],
				 ""ActiveChild"": [ 92, [ ""UInt32"", ""null"" ]],
				 ""ParentCount"": [ 96, [ ""UInt32"", ""null"" ]],
				 ""ActiveParent"": [ 100, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY Link
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LIST_ENTRY PowerChildren
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _LIST_ENTRY PowerParents
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt64 TargetDevice { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public Byte OrderLevel{ get { return _StructureData[_BufferOffset +56]; } }
		public UInt64 DeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 DeviceName { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 DriverName { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt32 ChildCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 88); } }
		public UInt32 ActiveChild { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 92); } }
		public UInt32 ParentCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 96); } }
		public UInt32 ActiveParent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 100); } }
	}
	#endregion
	#region _CM_KEY_SECURITY_CACHE_ENTRY
 
	public class _CM_KEY_SECURITY_CACHE_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_KEY_SECURITY_CACHE_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_KEY_SECURITY_CACHE_ENTRY"": [ 16, {
				 ""Cell"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""CachedSecurity"": [ 8, [ ""Pointer"", ""{\""target\"":\""_CM_KEY_SECURITY_CACHE\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Cell { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 CachedSecurity { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _FS_FILTER_CALLBACK_DATA
 
	public class _FS_FILTER_CALLBACK_DATA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _FS_FILTER_CALLBACK_DATA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_FS_FILTER_CALLBACK_DATA"": [ 64, {
				 ""SizeOfFsFilterCallbackData"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Operation"": [ 4, [ ""Byte"", ""null"" ]],
				 ""Reserved"": [ 5, [ ""Byte"", ""null"" ]],
				 ""DeviceObject"": [ 8, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""FileObject"": [ 16, [ ""Pointer"", ""{\""target\"":\""_FILE_OBJECT\""}"" ]],
				 ""Parameters"": [ 24, [ ""_FS_FILTER_PARAMETERS"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 SizeOfFsFilterCallbackData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Byte Operation{ get { return _StructureData[_BufferOffset +4]; } }
		public Byte Reserved{ get { return _StructureData[_BufferOffset +5]; } }
		public UInt64 DeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 FileObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public _FS_FILTER_PARAMETERS Parameters
		{
			get
			{
				_FS_FILTER_PARAMETERS returnValue = new _FS_FILTER_PARAMETERS(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
	}
	#endregion
	#region _WHEA_AER_ROOTPORT_DESCRIPTOR
 
	public class _WHEA_AER_ROOTPORT_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_AER_ROOTPORT_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 36; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_AER_ROOTPORT_DESCRIPTOR"": [ 36, {
				 ""Type"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Enabled"": [ 2, [ ""Byte"", ""null"" ]],
				 ""Reserved"": [ 3, [ ""Byte"", ""null"" ]],
				 ""BusNumber"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Slot"": [ 8, [ ""_WHEA_PCI_SLOT_NUMBER"", ""null"" ]],
				 ""DeviceControl"": [ 12, [ ""UInt16"", ""null"" ]],
				 ""Flags"": [ 14, [ ""_AER_ROOTPORT_DESCRIPTOR_FLAGS"", ""null"" ]],
				 ""UncorrectableErrorMask"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""UncorrectableErrorSeverity"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""CorrectableErrorMask"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""AdvancedCapsAndControl"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""RootErrorCommand"": [ 32, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Type { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public Byte Enabled{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte Reserved{ get { return _StructureData[_BufferOffset +3]; } }
		public UInt32 BusNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _WHEA_PCI_SLOT_NUMBER Slot
		{
			get
			{
				_WHEA_PCI_SLOT_NUMBER returnValue = new _WHEA_PCI_SLOT_NUMBER(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt16 DeviceControl { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 12); } }
		public _AER_ROOTPORT_DESCRIPTOR_FLAGS Flags
		{
			get
			{
				_AER_ROOTPORT_DESCRIPTOR_FLAGS returnValue = new _AER_ROOTPORT_DESCRIPTOR_FLAGS(_StructureData, _BufferOffset + 14);
				return returnValue;
			}
		}
		public UInt32 UncorrectableErrorMask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 UncorrectableErrorSeverity { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 CorrectableErrorMask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 AdvancedCapsAndControl { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 RootErrorCommand { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _PROC_IDLE_STATE_ACCOUNTING
 
	public class _PROC_IDLE_STATE_ACCOUNTING
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROC_IDLE_STATE_ACCOUNTING(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 976; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROC_IDLE_STATE_ACCOUNTING"": [ 976, {
				 ""TotalTime"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""CancelCount"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""FailureCount"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""SuccessCount"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""InvalidBucketIndex"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""MinTime"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""MaxTime"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""SelectionStatistics"": [ 40, [ ""_PPM_SELECTION_STATISTICS"", ""null"" ]],
				 ""IdleTimeBuckets"": [ 144, [ ""Array"", ""{\""count\"":26,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 TotalTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 CancelCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 FailureCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 SuccessCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 InvalidBucketIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt64 MinTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 MaxTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public _PPM_SELECTION_STATISTICS SelectionStatistics
		{
			get
			{
				_PPM_SELECTION_STATISTICS returnValue = new _PPM_SELECTION_STATISTICS(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public _PROC_IDLE_STATE_BUCKET[] IdleTimeBuckets
		{
			get
			{
				_PROC_IDLE_STATE_BUCKET[] returnValue = new _PROC_IDLE_STATE_BUCKET[26];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<26; i++ )
					returnValue[i] = new _PROC_IDLE_STATE_BUCKET(_StructureData, (i * size) + _BufferOffset + 144);
				return returnValue;
			}
		}
	}
	#endregion
	#region _IMAGE_SECURITY_CONTEXT
 
	public class _IMAGE_SECURITY_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IMAGE_SECURITY_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IMAGE_SECURITY_CONTEXT"": [ 8, {
				 ""PageHashes"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Value"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""SecurityBeingCreated"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""SecurityMandatory"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt64\""}"" ]],
				 ""PageHashPointer"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":3,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 PageHashes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Value { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 SecurityBeingCreated
		{
			get
			{
				// start: 0  end: 2  Mask: 0000000000000011
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 3) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 SecurityMandatory
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt64)value2;
			}
		}
		public UInt64 PageHashPointer
		{
			get
			{
				// start: 3  end: 64  Mask: 0000000000000000000000000000000011111111111111111111111111111000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967288) >> 3;
				return (UInt64)value2;
			}
		}
	}
	#endregion
	#region _KENLISTMENT_HISTORY
 
	public class _KENLISTMENT_HISTORY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KENLISTMENT_HISTORY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KENLISTMENT_HISTORY"": [ 8, {
				 ""Notification"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""NewState"": [ 4, [ ""Enumeration"", ""{\""enum_name\"":\""_KENLISTMENT_STATE\"",\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Notification { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _KENLISTMENT_STATE NewState { get { return (_KENLISTMENT_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _FAST_IO_DISPATCH
 
	public class _FAST_IO_DISPATCH
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _FAST_IO_DISPATCH(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 224; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_FAST_IO_DISPATCH"": [ 224, {
				 ""SizeOfFastIoDispatch"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""FastIoCheckIfPossible"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FastIoRead"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FastIoWrite"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FastIoQueryBasicInfo"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FastIoQueryStandardInfo"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FastIoLock"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FastIoUnlockSingle"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FastIoUnlockAll"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FastIoUnlockAllByKey"": [ 72, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FastIoDeviceControl"": [ 80, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""AcquireFileForNtCreateSection"": [ 88, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ReleaseFileForNtCreateSection"": [ 96, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FastIoDetachDevice"": [ 104, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FastIoQueryNetworkOpenInfo"": [ 112, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""AcquireForModWrite"": [ 120, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""MdlRead"": [ 128, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""MdlReadComplete"": [ 136, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PrepareMdlWrite"": [ 144, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""MdlWriteComplete"": [ 152, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FastIoReadCompressed"": [ 160, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FastIoWriteCompressed"": [ 168, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""MdlReadCompleteCompressed"": [ 176, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""MdlWriteCompleteCompressed"": [ 184, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FastIoQueryOpen"": [ 192, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ReleaseForModWrite"": [ 200, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""AcquireForCcFlush"": [ 208, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ReleaseForCcFlush"": [ 216, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 SizeOfFastIoDispatch { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 FastIoCheckIfPossible { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 FastIoRead { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 FastIoWrite { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 FastIoQueryBasicInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 FastIoQueryStandardInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 FastIoLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 FastIoUnlockSingle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 FastIoUnlockAll { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 FastIoUnlockAllByKey { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 FastIoDeviceControl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 AcquireFileForNtCreateSection { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 ReleaseFileForNtCreateSection { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt64 FastIoDetachDevice { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public UInt64 FastIoQueryNetworkOpenInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 112); } }
		public UInt64 AcquireForModWrite { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 120); } }
		public UInt64 MdlRead { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 128); } }
		public UInt64 MdlReadComplete { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 136); } }
		public UInt64 PrepareMdlWrite { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 144); } }
		public UInt64 MdlWriteComplete { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 152); } }
		public UInt64 FastIoReadCompressed { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public UInt64 FastIoWriteCompressed { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 168); } }
		public UInt64 MdlReadCompleteCompressed { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 176); } }
		public UInt64 MdlWriteCompleteCompressed { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 184); } }
		public UInt64 FastIoQueryOpen { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 192); } }
		public UInt64 ReleaseForModWrite { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 200); } }
		public UInt64 AcquireForCcFlush { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 208); } }
		public UInt64 ReleaseForCcFlush { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 216); } }
	}
	#endregion
	#region _PERFINFO_PPM_STATE_SELECTION
 
	public class _PERFINFO_PPM_STATE_SELECTION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PERFINFO_PPM_STATE_SELECTION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PERFINFO_PPM_STATE_SELECTION"": [ 12, {
				 ""SelectedState"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""VetoedStates"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""VetoReason"": [ 8, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 SelectedState { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 VetoedStates { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32[] VetoReason
		{
			get
			{
				UInt32[] returnValue = new UInt32[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _KIDTENTRY64
 
	public class _KIDTENTRY64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KIDTENTRY64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KIDTENTRY64"": [ 16, {
				 ""OffsetLow"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Selector"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""IstIndex"": [ 4, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""Reserved0"": [ 4, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":3,\""target\"":\""UInt16\""}"" ]],
				 ""Type"": [ 4, [ ""BitField"", ""{\""end_bit\"":13,\""start_bit\"":8,\""target\"":\""UInt16\""}"" ]],
				 ""Dpl"": [ 4, [ ""BitField"", ""{\""end_bit\"":15,\""start_bit\"":13,\""target\"":\""UInt16\""}"" ]],
				 ""Present"": [ 4, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":15,\""target\"":\""UInt16\""}"" ]],
				 ""OffsetMiddle"": [ 6, [ ""UInt16"", ""null"" ]],
				 ""OffsetHigh"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Reserved1"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""Alignment"": [ 0, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 OffsetLow { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 Selector { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt16 IstIndex
		{
			get
			{
				// start: 0  end: 3  Mask: 0000000000000111
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 4);
				var value2 = (value & 7) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 Reserved0
		{
			get
			{
				// start: 3  end: 8  Mask: 0000000011111000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 4);
				var value2 = (value & 248) >> 3;
				return (UInt16)value2;
			}
		}
		public UInt16 Type
		{
			get
			{
				// start: 8  end: 13  Mask: 0001111100000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 4);
				var value2 = (value & 7936) >> 8;
				return (UInt16)value2;
			}
		}
		public UInt16 Dpl
		{
			get
			{
				// start: 13  end: 15  Mask: 0110000000000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 4);
				var value2 = (value & 24576) >> 13;
				return (UInt16)value2;
			}
		}
		public UInt16 Present
		{
			get
			{
				// start: 15  end: 16  Mask: 1000000000000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 4);
				var value2 = (value & 32768) >> 15;
				return (UInt16)value2;
			}
		}
		public UInt16 OffsetMiddle { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
		public UInt32 OffsetHigh { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Reserved1 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt64 Alignment { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _CM_CELL_REMAP_BLOCK
 
	public class _CM_CELL_REMAP_BLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_CELL_REMAP_BLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_CELL_REMAP_BLOCK"": [ 8, {
				 ""OldCell"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""NewCell"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 OldCell { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 NewCell { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _PI_RESOURCE_ARBITER_ENTRY
 
	public class _PI_RESOURCE_ARBITER_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PI_RESOURCE_ARBITER_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 112; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PI_RESOURCE_ARBITER_ENTRY"": [ 112, {
				 ""DeviceArbiterList"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ResourceType"": [ 16, [ ""Byte"", ""null"" ]],
				 ""ArbiterInterface"": [ 24, [ ""Pointer"", ""{\""target\"":\""_ARBITER_INTERFACE\""}"" ]],
				 ""DeviceNode"": [ 32, [ ""Pointer"", ""{\""target\"":\""_DEVICE_NODE\""}"" ]],
				 ""ResourceList"": [ 40, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""BestResourceList"": [ 56, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""BestConfig"": [ 72, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ActiveArbiterList"": [ 88, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""State"": [ 104, [ ""Byte"", ""null"" ]],
				 ""ResourcesChanged"": [ 105, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY DeviceArbiterList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public Byte ResourceType{ get { return _StructureData[_BufferOffset +16]; } }
		public UInt64 ArbiterInterface { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 DeviceNode { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public _LIST_ENTRY ResourceList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public _LIST_ENTRY BestResourceList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public _LIST_ENTRY BestConfig
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 72);
				return returnValue;
			}
		}
		public _LIST_ENTRY ActiveArbiterList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 88);
				return returnValue;
			}
		}
		public Byte State{ get { return _StructureData[_BufferOffset +104]; } }
		public Byte ResourcesChanged{ get { return _StructureData[_BufferOffset +105]; } }
	}
	#endregion
	#region _SECURITY_DESCRIPTOR
 
	public class _SECURITY_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SECURITY_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SECURITY_DESCRIPTOR"": [ 40, {
				 ""Revision"": [ 0, [ ""Byte"", ""null"" ]],
				 ""Sbz1"": [ 1, [ ""Byte"", ""null"" ]],
				 ""Control"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Owner"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Group"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Sacl"": [ 24, [ ""Pointer"", ""{\""target\"":\""_ACL\""}"" ]],
				 ""Dacl"": [ 32, [ ""Pointer"", ""{\""target\"":\""_ACL\""}"" ]] }]
				 }
				)";
			}
		}
		public Byte Revision{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte Sbz1{ get { return _StructureData[_BufferOffset +1]; } }
		public UInt16 Control { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt64 Owner { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Group { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Sacl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 Dacl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _MODWRITER_FLAGS
 
	public class _MODWRITER_FLAGS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MODWRITER_FLAGS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MODWRITER_FLAGS"": [ 4, {
				 ""KeepForever"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""Networked"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""IoPriority"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""ModifiedStoreWrite"": [ 0, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 KeepForever
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 Networked
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 IoPriority
		{
			get
			{
				// start: 2  end: 5  Mask: 0000000000011100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 28) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 ModifiedStoreWrite
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _KQUEUE
 
	public class _KQUEUE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KQUEUE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KQUEUE"": [ 64, {
				 ""Header"": [ 0, [ ""_DISPATCHER_HEADER"", ""null"" ]],
				 ""EntryListHead"": [ 24, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""CurrentCount"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""MaximumCount"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""ThreadListHead"": [ 48, [ ""_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _DISPATCHER_HEADER Header
		{
			get
			{
				_DISPATCHER_HEADER returnValue = new _DISPATCHER_HEADER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LIST_ENTRY EntryListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt32 CurrentCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32 MaximumCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public _LIST_ENTRY ThreadListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
	}
	#endregion
	#region _RTL_USER_PROCESS_PARAMETERS
 
	public class _RTL_USER_PROCESS_PARAMETERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_USER_PROCESS_PARAMETERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1040; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_USER_PROCESS_PARAMETERS"": [ 1040, {
				 ""MaximumLength"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Length"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Flags"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""DebugFlags"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""ConsoleHandle"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ConsoleFlags"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""StandardInput"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""StandardOutput"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""StandardError"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CurrentDirectory"": [ 56, [ ""_CURDIR"", ""null"" ]],
				 ""DllPath"": [ 80, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""ImagePathName"": [ 96, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""CommandLine"": [ 112, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""Environment"": [ 128, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""StartingX"": [ 136, [ ""UInt32"", ""null"" ]],
				 ""StartingY"": [ 140, [ ""UInt32"", ""null"" ]],
				 ""CountX"": [ 144, [ ""UInt32"", ""null"" ]],
				 ""CountY"": [ 148, [ ""UInt32"", ""null"" ]],
				 ""CountCharsX"": [ 152, [ ""UInt32"", ""null"" ]],
				 ""CountCharsY"": [ 156, [ ""UInt32"", ""null"" ]],
				 ""FillAttribute"": [ 160, [ ""UInt32"", ""null"" ]],
				 ""WindowFlags"": [ 164, [ ""UInt32"", ""null"" ]],
				 ""ShowWindowFlags"": [ 168, [ ""UInt32"", ""null"" ]],
				 ""WindowTitle"": [ 176, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""DesktopInfo"": [ 192, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""ShellInfo"": [ 208, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""RuntimeData"": [ 224, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""CurrentDirectores"": [ 240, [ ""Array"", ""{\""count\"":32,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""EnvironmentSize"": [ 1008, [ ""UInt64"", ""null"" ]],
				 ""EnvironmentVersion"": [ 1016, [ ""UInt64"", ""null"" ]],
				 ""PackageDependencyData"": [ 1024, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ProcessGroupId"": [ 1032, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 MaximumLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 DebugFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt64 ConsoleHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 ConsoleFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt64 StandardInput { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 StandardOutput { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 StandardError { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public _CURDIR CurrentDirectory
		{
			get
			{
				_CURDIR returnValue = new _CURDIR(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public _UNICODE_STRING DllPath
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 80);
				return returnValue;
			}
		}
		public _UNICODE_STRING ImagePathName
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 96);
				return returnValue;
			}
		}
		public _UNICODE_STRING CommandLine
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 112);
				return returnValue;
			}
		}
		public UInt64 Environment { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 128); } }
		public UInt32 StartingX { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 136); } }
		public UInt32 StartingY { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 140); } }
		public UInt32 CountX { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 144); } }
		public UInt32 CountY { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 148); } }
		public UInt32 CountCharsX { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 152); } }
		public UInt32 CountCharsY { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 156); } }
		public UInt32 FillAttribute { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 160); } }
		public UInt32 WindowFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 164); } }
		public UInt32 ShowWindowFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 168); } }
		public _UNICODE_STRING WindowTitle
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 176);
				return returnValue;
			}
		}
		public _UNICODE_STRING DesktopInfo
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 192);
				return returnValue;
			}
		}
		public _UNICODE_STRING ShellInfo
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 208);
				return returnValue;
			}
		}
		public _UNICODE_STRING RuntimeData
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 224);
				return returnValue;
			}
		}
		public _RTL_DRIVE_LETTER_CURDIR[] CurrentDirectores
		{
			get
			{
				_RTL_DRIVE_LETTER_CURDIR[] returnValue = new _RTL_DRIVE_LETTER_CURDIR[32];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<32; i++ )
					returnValue[i] = new _RTL_DRIVE_LETTER_CURDIR(_StructureData, (i * size) + _BufferOffset + 240);
				return returnValue;
			}
		}
		public UInt64 EnvironmentSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1008); } }
		public UInt64 EnvironmentVersion { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1016); } }
		public UInt64 PackageDependencyData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1024); } }
		public UInt32 ProcessGroupId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1032); } }
	}
	#endregion
	#region _PHYSICAL_MEMORY_RUN
 
	public class _PHYSICAL_MEMORY_RUN
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PHYSICAL_MEMORY_RUN(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PHYSICAL_MEMORY_RUN"": [ 16, {
				 ""BasePage"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""PageCount"": [ 8, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 BasePage { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 PageCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _RTL_SRWLOCK
 
	public class _RTL_SRWLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_SRWLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_SRWLOCK"": [ 8, {
				 ""Locked"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""Waiting"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt64\""}"" ]],
				 ""Waking"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt64\""}"" ]],
				 ""MultipleShared"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt64\""}"" ]],
				 ""Shared"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":4,\""target\"":\""UInt64\""}"" ]],
				 ""Value"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Ptr"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Locked
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 Waiting
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt64)value2;
			}
		}
		public UInt64 Waking
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt64)value2;
			}
		}
		public UInt64 MultipleShared
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8) >> 3;
				return (UInt64)value2;
			}
		}
		public UInt64 Shared
		{
			get
			{
				// start: 4  end: 64  Mask: 0000000000000000000000000000000011111111111111111111111111110000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967280) >> 4;
				return (UInt64)value2;
			}
		}
		public UInt64 Value { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Ptr { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _KTMOBJECT_NAMESPACE_LINK
 
	public class _KTMOBJECT_NAMESPACE_LINK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KTMOBJECT_NAMESPACE_LINK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KTMOBJECT_NAMESPACE_LINK"": [ 40, {
				 ""Links"": [ 0, [ ""_RTL_BALANCED_LINKS"", ""null"" ]],
				 ""Expired"": [ 32, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _RTL_BALANCED_LINKS Links
		{
			get
			{
				_RTL_BALANCED_LINKS returnValue = new _RTL_BALANCED_LINKS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public Byte Expired{ get { return _StructureData[_BufferOffset +32]; } }
	}
	#endregion
	#region _CACHE_MANAGER_CALLBACKS
 
	public class _CACHE_MANAGER_CALLBACKS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CACHE_MANAGER_CALLBACKS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CACHE_MANAGER_CALLBACKS"": [ 32, {
				 ""AcquireForLazyWrite"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ReleaseFromLazyWrite"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""AcquireForReadAhead"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ReleaseFromReadAhead"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 AcquireForLazyWrite { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 ReleaseFromLazyWrite { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 AcquireForReadAhead { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 ReleaseFromReadAhead { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _PROC_PERF_LOAD
 
	public class _PROC_PERF_LOAD
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROC_PERF_LOAD(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 2; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROC_PERF_LOAD"": [ 2, {
				 ""BusyPercentage"": [ 0, [ ""Byte"", ""null"" ]],
				 ""FrequencyPercentage"": [ 1, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte BusyPercentage{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte FrequencyPercentage{ get { return _StructureData[_BufferOffset +1]; } }
	}
	#endregion
	#region _RTL_RANGE
 
	public class _RTL_RANGE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_RANGE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_RANGE"": [ 40, {
				 ""Start"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""End"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""UserData"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Owner"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Attributes"": [ 32, [ ""Byte"", ""null"" ]],
				 ""Flags"": [ 33, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Start { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 End { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 UserData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Owner { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public Byte Attributes{ get { return _StructureData[_BufferOffset +32]; } }
		public Byte Flags{ get { return _StructureData[_BufferOffset +33]; } }
	}
	#endregion
	#region _LOCK_HEADER
 
	public class _LOCK_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _LOCK_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_LOCK_HEADER"": [ 32, {
				 ""LockTree"": [ 0, [ ""_RTL_AVL_TREE"", ""null"" ]],
				 ""Count"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""Lock"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""Valid"": [ 24, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _RTL_AVL_TREE LockTree
		{
			get
			{
				_RTL_AVL_TREE returnValue = new _RTL_AVL_TREE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Count { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Lock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 Valid { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _WHEA_IPF_MCA_DESCRIPTOR
 
	public class _WHEA_IPF_MCA_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_IPF_MCA_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_IPF_MCA_DESCRIPTOR"": [ 4, {
				 ""Type"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Enabled"": [ 2, [ ""Byte"", ""null"" ]],
				 ""Reserved"": [ 3, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Type { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public Byte Enabled{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte Reserved{ get { return _StructureData[_BufferOffset +3]; } }
	}
	#endregion
	#region _KSPECIAL_REGISTERS
 
	public class _KSPECIAL_REGISTERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KSPECIAL_REGISTERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 224; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KSPECIAL_REGISTERS"": [ 224, {
				 ""Cr0"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Cr2"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""Cr3"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""Cr4"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""KernelDr0"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""KernelDr1"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""KernelDr2"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""KernelDr3"": [ 56, [ ""UInt64"", ""null"" ]],
				 ""KernelDr6"": [ 64, [ ""UInt64"", ""null"" ]],
				 ""KernelDr7"": [ 72, [ ""UInt64"", ""null"" ]],
				 ""Gdtr"": [ 80, [ ""_KDESCRIPTOR"", ""null"" ]],
				 ""Idtr"": [ 96, [ ""_KDESCRIPTOR"", ""null"" ]],
				 ""Tr"": [ 112, [ ""UInt16"", ""null"" ]],
				 ""Ldtr"": [ 114, [ ""UInt16"", ""null"" ]],
				 ""MxCsr"": [ 116, [ ""UInt32"", ""null"" ]],
				 ""DebugControl"": [ 120, [ ""UInt64"", ""null"" ]],
				 ""LastBranchToRip"": [ 128, [ ""UInt64"", ""null"" ]],
				 ""LastBranchFromRip"": [ 136, [ ""UInt64"", ""null"" ]],
				 ""LastExceptionToRip"": [ 144, [ ""UInt64"", ""null"" ]],
				 ""LastExceptionFromRip"": [ 152, [ ""UInt64"", ""null"" ]],
				 ""Cr8"": [ 160, [ ""UInt64"", ""null"" ]],
				 ""MsrGsBase"": [ 168, [ ""UInt64"", ""null"" ]],
				 ""MsrGsSwap"": [ 176, [ ""UInt64"", ""null"" ]],
				 ""MsrStar"": [ 184, [ ""UInt64"", ""null"" ]],
				 ""MsrLStar"": [ 192, [ ""UInt64"", ""null"" ]],
				 ""MsrCStar"": [ 200, [ ""UInt64"", ""null"" ]],
				 ""MsrSyscallMask"": [ 208, [ ""UInt64"", ""null"" ]],
				 ""Xcr0"": [ 216, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Cr0 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Cr2 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Cr3 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Cr4 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 KernelDr0 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 KernelDr1 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 KernelDr2 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 KernelDr3 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 KernelDr6 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 KernelDr7 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public _KDESCRIPTOR Gdtr
		{
			get
			{
				_KDESCRIPTOR returnValue = new _KDESCRIPTOR(_StructureData, _BufferOffset + 80);
				return returnValue;
			}
		}
		public _KDESCRIPTOR Idtr
		{
			get
			{
				_KDESCRIPTOR returnValue = new _KDESCRIPTOR(_StructureData, _BufferOffset + 96);
				return returnValue;
			}
		}
		public UInt16 Tr { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 112); } }
		public UInt16 Ldtr { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 114); } }
		public UInt32 MxCsr { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 116); } }
		public UInt64 DebugControl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 120); } }
		public UInt64 LastBranchToRip { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 128); } }
		public UInt64 LastBranchFromRip { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 136); } }
		public UInt64 LastExceptionToRip { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 144); } }
		public UInt64 LastExceptionFromRip { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 152); } }
		public UInt64 Cr8 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public UInt64 MsrGsBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 168); } }
		public UInt64 MsrGsSwap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 176); } }
		public UInt64 MsrStar { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 184); } }
		public UInt64 MsrLStar { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 192); } }
		public UInt64 MsrCStar { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 200); } }
		public UInt64 MsrSyscallMask { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 208); } }
		public UInt64 Xcr0 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 216); } }
	}
	#endregion
	#region _SYSTEM_POWER_POLICY
 
	public class _SYSTEM_POWER_POLICY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SYSTEM_POWER_POLICY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 232; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SYSTEM_POWER_POLICY"": [ 232, {
				 ""Revision"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""PowerButton"": [ 4, [ ""POWER_ACTION_POLICY"", ""null"" ]],
				 ""SleepButton"": [ 16, [ ""POWER_ACTION_POLICY"", ""null"" ]],
				 ""LidClose"": [ 28, [ ""POWER_ACTION_POLICY"", ""null"" ]],
				 ""LidOpenWake"": [ 40, [ ""Enumeration"", ""{\""enum_name\"":\""_SYSTEM_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""Reserved"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""Idle"": [ 48, [ ""POWER_ACTION_POLICY"", ""null"" ]],
				 ""IdleTimeout"": [ 60, [ ""UInt32"", ""null"" ]],
				 ""IdleSensitivity"": [ 64, [ ""Byte"", ""null"" ]],
				 ""DynamicThrottle"": [ 65, [ ""Byte"", ""null"" ]],
				 ""Spare2"": [ 66, [ ""Array"", ""{\""count\"":2,\""target\"":\""Byte\""}"" ]],
				 ""MinSleep"": [ 68, [ ""Enumeration"", ""{\""enum_name\"":\""_SYSTEM_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""MaxSleep"": [ 72, [ ""Enumeration"", ""{\""enum_name\"":\""_SYSTEM_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""ReducedLatencySleep"": [ 76, [ ""Enumeration"", ""{\""enum_name\"":\""_SYSTEM_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""WinLogonFlags"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""Spare3"": [ 84, [ ""UInt32"", ""null"" ]],
				 ""DozeS4Timeout"": [ 88, [ ""UInt32"", ""null"" ]],
				 ""BroadcastCapacityResolution"": [ 92, [ ""UInt32"", ""null"" ]],
				 ""DischargePolicy"": [ 96, [ ""Array"", ""{\""count\"":4,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""VideoTimeout"": [ 192, [ ""UInt32"", ""null"" ]],
				 ""VideoDimDisplay"": [ 196, [ ""Byte"", ""null"" ]],
				 ""VideoReserved"": [ 200, [ ""Array"", ""{\""count\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""SpindownTimeout"": [ 212, [ ""UInt32"", ""null"" ]],
				 ""OptimizeForPower"": [ 216, [ ""Byte"", ""null"" ]],
				 ""FanThrottleTolerance"": [ 217, [ ""Byte"", ""null"" ]],
				 ""ForcedThrottle"": [ 218, [ ""Byte"", ""null"" ]],
				 ""MinThrottle"": [ 219, [ ""Byte"", ""null"" ]],
				 ""OverThrottled"": [ 220, [ ""POWER_ACTION_POLICY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Revision { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public POWER_ACTION_POLICY PowerButton
		{
			get
			{
				POWER_ACTION_POLICY returnValue = new POWER_ACTION_POLICY(_StructureData, _BufferOffset + 4);
				return returnValue;
			}
		}
		public POWER_ACTION_POLICY SleepButton
		{
			get
			{
				POWER_ACTION_POLICY returnValue = new POWER_ACTION_POLICY(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public POWER_ACTION_POLICY LidClose
		{
			get
			{
				POWER_ACTION_POLICY returnValue = new POWER_ACTION_POLICY(_StructureData, _BufferOffset + 28);
				return returnValue;
			}
		}
		public _SYSTEM_POWER_STATE LidOpenWake { get { return (_SYSTEM_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32 Reserved { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public POWER_ACTION_POLICY Idle
		{
			get
			{
				POWER_ACTION_POLICY returnValue = new POWER_ACTION_POLICY(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public UInt32 IdleTimeout { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
		public Byte IdleSensitivity{ get { return _StructureData[_BufferOffset +64]; } }
		public Byte DynamicThrottle{ get { return _StructureData[_BufferOffset +65]; } }
		public Byte[] Spare2
		{
			get
			{
				Byte[] returnValue = new Byte[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 66];
				return returnValue;
			}
		}
		public _SYSTEM_POWER_STATE MinSleep { get { return (_SYSTEM_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 68); } }
		public _SYSTEM_POWER_STATE MaxSleep { get { return (_SYSTEM_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 72); } }
		public _SYSTEM_POWER_STATE ReducedLatencySleep { get { return (_SYSTEM_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 76); } }
		public UInt32 WinLogonFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 Spare3 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
		public UInt32 DozeS4Timeout { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 88); } }
		public UInt32 BroadcastCapacityResolution { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 92); } }
		public SYSTEM_POWER_LEVEL[] DischargePolicy
		{
			get
			{
				SYSTEM_POWER_LEVEL[] returnValue = new SYSTEM_POWER_LEVEL[4];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<4; i++ )
					returnValue[i] = new SYSTEM_POWER_LEVEL(_StructureData, (i * size) + _BufferOffset + 96);
				return returnValue;
			}
		}
		public UInt32 VideoTimeout { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 192); } }
		public Byte VideoDimDisplay{ get { return _StructureData[_BufferOffset +196]; } }
		public UInt32[] VideoReserved
		{
			get
			{
				UInt32[] returnValue = new UInt32[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 200);
				return returnValue;
			}
		}
		public UInt32 SpindownTimeout { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 212); } }
		public Byte OptimizeForPower{ get { return _StructureData[_BufferOffset +216]; } }
		public Byte FanThrottleTolerance{ get { return _StructureData[_BufferOffset +217]; } }
		public Byte ForcedThrottle{ get { return _StructureData[_BufferOffset +218]; } }
		public Byte MinThrottle{ get { return _StructureData[_BufferOffset +219]; } }
		public POWER_ACTION_POLICY OverThrottled
		{
			get
			{
				POWER_ACTION_POLICY returnValue = new POWER_ACTION_POLICY(_StructureData, _BufferOffset + 220);
				return returnValue;
			}
		}
	}
	#endregion
	#region _POOL_HEADER
 
	public class _POOL_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POOL_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POOL_HEADER"": [ 16, {
				 ""PreviousSize"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""PoolIndex"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":8,\""target\"":\""UInt16\""}"" ]],
				 ""BlockSize"": [ 2, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""PoolType"": [ 2, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":8,\""target\"":\""UInt16\""}"" ]],
				 ""Ulong1"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""PoolTag"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""ProcessBilled"": [ 8, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""AllocatorBackTraceIndex"": [ 8, [ ""UInt16"", ""null"" ]],
				 ""PoolTagHash"": [ 10, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 PreviousSize
		{
			get
			{
				// start: 0  end: 8  Mask: 0000000011111111
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 255) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 PoolIndex
		{
			get
			{
				// start: 8  end: 16  Mask: 1111111100000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 65280) >> 8;
				return (UInt16)value2;
			}
		}
		public UInt16 BlockSize
		{
			get
			{
				// start: 0  end: 8  Mask: 0000000011111111
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 2);
				var value2 = (value & 255) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 PoolType
		{
			get
			{
				// start: 8  end: 16  Mask: 1111111100000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 2);
				var value2 = (value & 65280) >> 8;
				return (UInt16)value2;
			}
		}
		public UInt32 Ulong1 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 PoolTag { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 ProcessBilled { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt16 AllocatorBackTraceIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 8); } }
		public UInt16 PoolTagHash { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 10); } }
	}
	#endregion
	#region _PEB64
 
	public class _PEB64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PEB64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 904; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PEB64"": [ 904, {
				 ""InheritedAddressSpace"": [ 0, [ ""Byte"", ""null"" ]],
				 ""ReadImageFileExecOptions"": [ 1, [ ""Byte"", ""null"" ]],
				 ""BeingDebugged"": [ 2, [ ""Byte"", ""null"" ]],
				 ""BitField"": [ 3, [ ""Byte"", ""null"" ]],
				 ""ImageUsesLargePages"": [ 3, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""IsProtectedProcess"": [ 3, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""IsImageDynamicallyRelocated"": [ 3, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""SkipPatchingUser32Forwarders"": [ 3, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""IsPackagedProcess"": [ 3, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""IsAppContainer"": [ 3, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""Byte\""}"" ]],
				 ""IsProtectedProcessLight"": [ 3, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""Byte\""}"" ]],
				 ""SpareBits"": [ 3, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""Byte\""}"" ]],
				 ""Padding0"": [ 4, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""Mutant"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""ImageBaseAddress"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""Ldr"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""ProcessParameters"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""SubSystemData"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""ProcessHeap"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""FastPebLock"": [ 56, [ ""UInt64"", ""null"" ]],
				 ""AtlThunkSListPtr"": [ 64, [ ""UInt64"", ""null"" ]],
				 ""IFEOKey"": [ 72, [ ""UInt64"", ""null"" ]],
				 ""CrossProcessFlags"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""ProcessInJob"": [ 80, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessInitializing"": [ 80, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessUsingVEH"": [ 80, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessUsingVCH"": [ 80, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessUsingFTH"": [ 80, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""ReservedBits0"": [ 80, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""Padding1"": [ 84, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""KernelCallbackTable"": [ 88, [ ""UInt64"", ""null"" ]],
				 ""UserSharedInfoPtr"": [ 88, [ ""UInt64"", ""null"" ]],
				 ""SystemReserved"": [ 96, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""AtlThunkSListPtr32"": [ 100, [ ""UInt32"", ""null"" ]],
				 ""ApiSetMap"": [ 104, [ ""UInt64"", ""null"" ]],
				 ""TlsExpansionCounter"": [ 112, [ ""UInt32"", ""null"" ]],
				 ""Padding2"": [ 116, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""TlsBitmap"": [ 120, [ ""UInt64"", ""null"" ]],
				 ""TlsBitmapBits"": [ 128, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""ReadOnlySharedMemoryBase"": [ 136, [ ""UInt64"", ""null"" ]],
				 ""SparePvoid0"": [ 144, [ ""UInt64"", ""null"" ]],
				 ""ReadOnlyStaticServerData"": [ 152, [ ""UInt64"", ""null"" ]],
				 ""AnsiCodePageData"": [ 160, [ ""UInt64"", ""null"" ]],
				 ""OemCodePageData"": [ 168, [ ""UInt64"", ""null"" ]],
				 ""UnicodeCaseTableData"": [ 176, [ ""UInt64"", ""null"" ]],
				 ""NumberOfProcessors"": [ 184, [ ""UInt32"", ""null"" ]],
				 ""NtGlobalFlag"": [ 188, [ ""UInt32"", ""null"" ]],
				 ""CriticalSectionTimeout"": [ 192, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""HeapSegmentReserve"": [ 200, [ ""UInt64"", ""null"" ]],
				 ""HeapSegmentCommit"": [ 208, [ ""UInt64"", ""null"" ]],
				 ""HeapDeCommitTotalFreeThreshold"": [ 216, [ ""UInt64"", ""null"" ]],
				 ""HeapDeCommitFreeBlockThreshold"": [ 224, [ ""UInt64"", ""null"" ]],
				 ""NumberOfHeaps"": [ 232, [ ""UInt32"", ""null"" ]],
				 ""MaximumNumberOfHeaps"": [ 236, [ ""UInt32"", ""null"" ]],
				 ""ProcessHeaps"": [ 240, [ ""UInt64"", ""null"" ]],
				 ""GdiSharedHandleTable"": [ 248, [ ""UInt64"", ""null"" ]],
				 ""ProcessStarterHelper"": [ 256, [ ""UInt64"", ""null"" ]],
				 ""GdiDCAttributeList"": [ 264, [ ""UInt32"", ""null"" ]],
				 ""Padding3"": [ 268, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""LoaderLock"": [ 272, [ ""UInt64"", ""null"" ]],
				 ""OSMajorVersion"": [ 280, [ ""UInt32"", ""null"" ]],
				 ""OSMinorVersion"": [ 284, [ ""UInt32"", ""null"" ]],
				 ""OSBuildNumber"": [ 288, [ ""UInt16"", ""null"" ]],
				 ""OSCSDVersion"": [ 290, [ ""UInt16"", ""null"" ]],
				 ""OSPlatformId"": [ 292, [ ""UInt32"", ""null"" ]],
				 ""ImageSubsystem"": [ 296, [ ""UInt32"", ""null"" ]],
				 ""ImageSubsystemMajorVersion"": [ 300, [ ""UInt32"", ""null"" ]],
				 ""ImageSubsystemMinorVersion"": [ 304, [ ""UInt32"", ""null"" ]],
				 ""Padding4"": [ 308, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""ActiveProcessAffinityMask"": [ 312, [ ""UInt64"", ""null"" ]],
				 ""GdiHandleBuffer"": [ 320, [ ""Array"", ""{\""count\"":60,\""target\"":\""UInt32\""}"" ]],
				 ""PostProcessInitRoutine"": [ 560, [ ""UInt64"", ""null"" ]],
				 ""TlsExpansionBitmap"": [ 568, [ ""UInt64"", ""null"" ]],
				 ""TlsExpansionBitmapBits"": [ 576, [ ""Array"", ""{\""count\"":32,\""target\"":\""UInt32\""}"" ]],
				 ""SessionId"": [ 704, [ ""UInt32"", ""null"" ]],
				 ""Padding5"": [ 708, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""AppCompatFlags"": [ 712, [ ""_ULARGE_INTEGER"", ""null"" ]],
				 ""AppCompatFlagsUser"": [ 720, [ ""_ULARGE_INTEGER"", ""null"" ]],
				 ""pShimData"": [ 728, [ ""UInt64"", ""null"" ]],
				 ""AppCompatInfo"": [ 736, [ ""UInt64"", ""null"" ]],
				 ""CSDVersion"": [ 744, [ ""_STRING64"", ""null"" ]],
				 ""ActivationContextData"": [ 760, [ ""UInt64"", ""null"" ]],
				 ""ProcessAssemblyStorageMap"": [ 768, [ ""UInt64"", ""null"" ]],
				 ""SystemDefaultActivationContextData"": [ 776, [ ""UInt64"", ""null"" ]],
				 ""SystemAssemblyStorageMap"": [ 784, [ ""UInt64"", ""null"" ]],
				 ""MinimumStackCommit"": [ 792, [ ""UInt64"", ""null"" ]],
				 ""FlsCallback"": [ 800, [ ""UInt64"", ""null"" ]],
				 ""FlsListHead"": [ 808, [ ""LIST_ENTRY64"", ""null"" ]],
				 ""FlsBitmap"": [ 824, [ ""UInt64"", ""null"" ]],
				 ""FlsBitmapBits"": [ 832, [ ""Array"", ""{\""count\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""FlsHighIndex"": [ 848, [ ""UInt32"", ""null"" ]],
				 ""WerRegistrationData"": [ 856, [ ""UInt64"", ""null"" ]],
				 ""WerShipAssertPtr"": [ 864, [ ""UInt64"", ""null"" ]],
				 ""pUnused"": [ 872, [ ""UInt64"", ""null"" ]],
				 ""pImageHeaderHash"": [ 880, [ ""UInt64"", ""null"" ]],
				 ""TracingFlags"": [ 888, [ ""UInt32"", ""null"" ]],
				 ""HeapTracingEnabled"": [ 888, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""CritSecTracingEnabled"": [ 888, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""LibLoaderTracingEnabled"": [ 888, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""SpareTracingBits"": [ 888, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""Padding6"": [ 892, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""CsrServerReadOnlySharedMemoryBase"": [ 896, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte InheritedAddressSpace{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte ReadImageFileExecOptions{ get { return _StructureData[_BufferOffset +1]; } }
		public Byte BeingDebugged{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte BitField{ get { return _StructureData[_BufferOffset +3]; } }
		public Byte ImageUsesLargePages
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte IsProtectedProcess
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte IsImageDynamicallyRelocated
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte SkipPatchingUser32Forwarders
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte IsPackagedProcess
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 16) >> 4;
				return (Byte)value2;
			}
		}
		public Byte IsAppContainer
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 32) >> 5;
				return (Byte)value2;
			}
		}
		public Byte IsProtectedProcessLight
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 64) >> 6;
				return (Byte)value2;
			}
		}
		public Byte SpareBits
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 128) >> 7;
				return (Byte)value2;
			}
		}
		public Byte[] Padding0
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 4];
				return returnValue;
			}
		}
		public UInt64 Mutant { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 ImageBaseAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Ldr { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 ProcessParameters { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 SubSystemData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 ProcessHeap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 FastPebLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 AtlThunkSListPtr { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 IFEOKey { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt32 CrossProcessFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 ProcessInJob
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 80);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessInitializing
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 80);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessUsingVEH
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 80);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessUsingVCH
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 80);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessUsingFTH
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 80);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 ReservedBits0
		{
			get
			{
				// start: 5  end: 32  Mask: 11111111111111111111111111100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 80);
				var value2 = (value & 4294967264) >> 5;
				return (UInt32)value2;
			}
		}
		public Byte[] Padding1
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 84];
				return returnValue;
			}
		}
		public UInt64 KernelCallbackTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 UserSharedInfoPtr { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt32[] SystemReserved
		{
			get
			{
				UInt32[] returnValue = new UInt32[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 96);
				return returnValue;
			}
		}
		public UInt32 AtlThunkSListPtr32 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 100); } }
		public UInt64 ApiSetMap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public UInt32 TlsExpansionCounter { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 112); } }
		public Byte[] Padding2
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 116];
				return returnValue;
			}
		}
		public UInt64 TlsBitmap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 120); } }
		public UInt32[] TlsBitmapBits
		{
			get
			{
				UInt32[] returnValue = new UInt32[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 128);
				return returnValue;
			}
		}
		public UInt64 ReadOnlySharedMemoryBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 136); } }
		public UInt64 SparePvoid0 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 144); } }
		public UInt64 ReadOnlyStaticServerData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 152); } }
		public UInt64 AnsiCodePageData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public UInt64 OemCodePageData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 168); } }
		public UInt64 UnicodeCaseTableData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 176); } }
		public UInt32 NumberOfProcessors { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 184); } }
		public UInt32 NtGlobalFlag { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 188); } }
		public _LARGE_INTEGER CriticalSectionTimeout
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 192);
				return returnValue;
			}
		}
		public UInt64 HeapSegmentReserve { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 200); } }
		public UInt64 HeapSegmentCommit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 208); } }
		public UInt64 HeapDeCommitTotalFreeThreshold { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 216); } }
		public UInt64 HeapDeCommitFreeBlockThreshold { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 224); } }
		public UInt32 NumberOfHeaps { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 232); } }
		public UInt32 MaximumNumberOfHeaps { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 236); } }
		public UInt64 ProcessHeaps { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 240); } }
		public UInt64 GdiSharedHandleTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 248); } }
		public UInt64 ProcessStarterHelper { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 256); } }
		public UInt32 GdiDCAttributeList { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 264); } }
		public Byte[] Padding3
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 268];
				return returnValue;
			}
		}
		public UInt64 LoaderLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 272); } }
		public UInt32 OSMajorVersion { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 280); } }
		public UInt32 OSMinorVersion { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 284); } }
		public UInt16 OSBuildNumber { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 288); } }
		public UInt16 OSCSDVersion { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 290); } }
		public UInt32 OSPlatformId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 292); } }
		public UInt32 ImageSubsystem { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 296); } }
		public UInt32 ImageSubsystemMajorVersion { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 300); } }
		public UInt32 ImageSubsystemMinorVersion { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 304); } }
		public Byte[] Padding4
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 308];
				return returnValue;
			}
		}
		public UInt64 ActiveProcessAffinityMask { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 312); } }
		public UInt32[] GdiHandleBuffer
		{
			get
			{
				UInt32[] returnValue = new UInt32[60];
				for(int i=0; i<60; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 320);
				return returnValue;
			}
		}
		public UInt64 PostProcessInitRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 560); } }
		public UInt64 TlsExpansionBitmap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 568); } }
		public UInt32[] TlsExpansionBitmapBits
		{
			get
			{
				UInt32[] returnValue = new UInt32[32];
				for(int i=0; i<32; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 576);
				return returnValue;
			}
		}
		public UInt32 SessionId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 704); } }
		public Byte[] Padding5
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 708];
				return returnValue;
			}
		}
		public _ULARGE_INTEGER AppCompatFlags
		{
			get
			{
				_ULARGE_INTEGER returnValue = new _ULARGE_INTEGER(_StructureData, _BufferOffset + 712);
				return returnValue;
			}
		}
		public _ULARGE_INTEGER AppCompatFlagsUser
		{
			get
			{
				_ULARGE_INTEGER returnValue = new _ULARGE_INTEGER(_StructureData, _BufferOffset + 720);
				return returnValue;
			}
		}
		public UInt64 pShimData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 728); } }
		public UInt64 AppCompatInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 736); } }
		public _STRING64 CSDVersion
		{
			get
			{
				_STRING64 returnValue = new _STRING64(_StructureData, _BufferOffset + 744);
				return returnValue;
			}
		}
		public UInt64 ActivationContextData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 760); } }
		public UInt64 ProcessAssemblyStorageMap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 768); } }
		public UInt64 SystemDefaultActivationContextData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 776); } }
		public UInt64 SystemAssemblyStorageMap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 784); } }
		public UInt64 MinimumStackCommit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 792); } }
		public UInt64 FlsCallback { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 800); } }
		public LIST_ENTRY64 FlsListHead
		{
			get
			{
				LIST_ENTRY64 returnValue = new LIST_ENTRY64(_StructureData, _BufferOffset + 808);
				return returnValue;
			}
		}
		public UInt64 FlsBitmap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 824); } }
		public UInt32[] FlsBitmapBits
		{
			get
			{
				UInt32[] returnValue = new UInt32[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 832);
				return returnValue;
			}
		}
		public UInt32 FlsHighIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 848); } }
		public UInt64 WerRegistrationData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 856); } }
		public UInt64 WerShipAssertPtr { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 864); } }
		public UInt64 pUnused { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 872); } }
		public UInt64 pImageHeaderHash { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 880); } }
		public UInt32 TracingFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 888); } }
		public UInt32 HeapTracingEnabled
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 888);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 CritSecTracingEnabled
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 888);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 LibLoaderTracingEnabled
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 888);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 SpareTracingBits
		{
			get
			{
				// start: 3  end: 32  Mask: 11111111111111111111111111111000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 888);
				var value2 = (value & 4294967288) >> 3;
				return (UInt32)value2;
			}
		}
		public Byte[] Padding6
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 892];
				return returnValue;
			}
		}
		public UInt64 CsrServerReadOnlySharedMemoryBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 896); } }
	}
	#endregion
	#region _SE_AUDIT_PROCESS_CREATION_INFO
 
	public class _SE_AUDIT_PROCESS_CREATION_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SE_AUDIT_PROCESS_CREATION_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SE_AUDIT_PROCESS_CREATION_INFO"": [ 8, {
				 ""ImageFileName"": [ 0, [ ""Pointer"", ""{\""target\"":\""_OBJECT_NAME_INFORMATION\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ImageFileName { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _HEAP_ENTRY_EXTRA
 
	public class _HEAP_ENTRY_EXTRA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HEAP_ENTRY_EXTRA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HEAP_ENTRY_EXTRA"": [ 16, {
				 ""AllocatorBackTraceIndex"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""TagIndex"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Settable"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""ZeroInit"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""ZeroInit1"": [ 8, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 AllocatorBackTraceIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 TagIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt64 Settable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 ZeroInit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 ZeroInit1 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _VF_POOL_TRACE
 
	public class _VF_POOL_TRACE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VF_POOL_TRACE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 128; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VF_POOL_TRACE"": [ 128, {
				 ""Address"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Size"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""Thread"": [ 16, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]],
				 ""StackTrace"": [ 24, [ ""Array"", ""{\""count\"":13,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Address { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Size { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Thread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64[] StackTrace
		{
			get
			{
				UInt64[] returnValue = new UInt64[13];
				int size = 8;
				for(int i=0; i<13; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 24);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_35170
 
	public class _UNNAMED_35170
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_35170(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_35170"": [ 4, {
				 ""LongFlags"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Flags"": [ 0, [ ""_MM_SESSION_SPACE_FLAGS"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 LongFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _MM_SESSION_SPACE_FLAGS Flags
		{
			get
			{
				_MM_SESSION_SPACE_FLAGS returnValue = new _MM_SESSION_SPACE_FLAGS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MM_SESSION_SPACE
 
	public class _MM_SESSION_SPACE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MM_SESSION_SPACE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8192; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MM_SESSION_SPACE"": [ 8192, {
				 ""ReferenceCount"": [ 0, [ ""Int32"", ""null"" ]],
				 ""u"": [ 4, [ ""_UNNAMED_35170"", ""null"" ]],
				 ""SessionId"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""ProcessReferenceToSession"": [ 12, [ ""Int32"", ""null"" ]],
				 ""ProcessList"": [ 16, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""SessionPageDirectoryIndex"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""NonPagablePages"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""CommittedPages"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""PagedPoolStart"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PagedPoolEnd"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SessionObject"": [ 72, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SessionObjectHandle"": [ 80, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SessionPoolAllocationFailures"": [ 88, [ ""Array"", ""{\""count\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""ImageList"": [ 104, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""LocaleId"": [ 120, [ ""UInt32"", ""null"" ]],
				 ""AttachCount"": [ 124, [ ""UInt32"", ""null"" ]],
				 ""AttachGate"": [ 128, [ ""_KGATE"", ""null"" ]],
				 ""WsListEntry"": [ 152, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Lookaside"": [ 192, [ ""Array"", ""{\""count\"":21,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""Session"": [ 2880, [ ""_MMSESSION"", ""null"" ]],
				 ""PagedPoolInfo"": [ 2968, [ ""_MM_PAGED_POOL_INFO"", ""null"" ]],
				 ""Vm"": [ 3072, [ ""_MMSUPPORT"", ""null"" ]],
				 ""Wsle"": [ 3304, [ ""Pointer"", ""{\""target\"":\""_MMWSLE\""}"" ]],
				 ""DriverUnload"": [ 3312, [ ""_MI_SESSION_DRIVER_UNLOAD"", ""null"" ]],
				 ""PagedPool"": [ 3328, [ ""_POOL_DESCRIPTOR"", ""null"" ]],
				 ""PageDirectory"": [ 7744, [ ""_MMPTE"", ""null"" ]],
				 ""SessionVaLock"": [ 7752, [ ""_FAST_MUTEX"", ""null"" ]],
				 ""DynamicVaBitMap"": [ 7808, [ ""_RTL_BITMAP"", ""null"" ]],
				 ""DynamicVaHint"": [ 7824, [ ""UInt32"", ""null"" ]],
				 ""SpecialPool"": [ 7832, [ ""_MI_SPECIAL_POOL"", ""null"" ]],
				 ""SessionPteLock"": [ 7912, [ ""_FAST_MUTEX"", ""null"" ]],
				 ""PoolBigEntriesInUse"": [ 7968, [ ""Int32"", ""null"" ]],
				 ""PagedPoolPdeCount"": [ 7972, [ ""UInt32"", ""null"" ]],
				 ""SpecialPoolPdeCount"": [ 7976, [ ""UInt32"", ""null"" ]],
				 ""DynamicSessionPdeCount"": [ 7980, [ ""UInt32"", ""null"" ]],
				 ""SystemPteInfo"": [ 7984, [ ""_MI_SYSTEM_PTE_TYPE"", ""null"" ]],
				 ""PoolTrackTableExpansion"": [ 8088, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PoolTrackTableExpansionSize"": [ 8096, [ ""UInt64"", ""null"" ]],
				 ""PoolTrackBigPages"": [ 8104, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PoolTrackBigPagesSize"": [ 8112, [ ""UInt64"", ""null"" ]],
				 ""IoState"": [ 8120, [ ""Enumeration"", ""{\""enum_name\"":\""_IO_SESSION_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""IoStateSequence"": [ 8124, [ ""UInt32"", ""null"" ]],
				 ""IoNotificationEvent"": [ 8128, [ ""_KEVENT"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int32 ReferenceCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public _UNNAMED_35170 u
		{
			get
			{
				_UNNAMED_35170 returnValue = new _UNNAMED_35170(_StructureData, _BufferOffset + 4);
				return returnValue;
			}
		}
		public UInt32 SessionId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public Int32 ProcessReferenceToSession { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 12); } }
		public _LIST_ENTRY ProcessList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt64 SessionPageDirectoryIndex { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 NonPagablePages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 CommittedPages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 PagedPoolStart { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 PagedPoolEnd { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 SessionObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 SessionObjectHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt32[] SessionPoolAllocationFailures
		{
			get
			{
				UInt32[] returnValue = new UInt32[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 88);
				return returnValue;
			}
		}
		public _LIST_ENTRY ImageList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 104);
				return returnValue;
			}
		}
		public UInt32 LocaleId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 120); } }
		public UInt32 AttachCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 124); } }
		public _KGATE AttachGate
		{
			get
			{
				_KGATE returnValue = new _KGATE(_StructureData, _BufferOffset + 128);
				return returnValue;
			}
		}
		public _LIST_ENTRY WsListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 152);
				return returnValue;
			}
		}
		public _GENERAL_LOOKASIDE[] Lookaside
		{
			get
			{
				_GENERAL_LOOKASIDE[] returnValue = new _GENERAL_LOOKASIDE[21];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<21; i++ )
					returnValue[i] = new _GENERAL_LOOKASIDE(_StructureData, (i * size) + _BufferOffset + 192);
				return returnValue;
			}
		}
		public _MMSESSION Session
		{
			get
			{
				_MMSESSION returnValue = new _MMSESSION(_StructureData, _BufferOffset + 2880);
				return returnValue;
			}
		}
		public _MM_PAGED_POOL_INFO PagedPoolInfo
		{
			get
			{
				_MM_PAGED_POOL_INFO returnValue = new _MM_PAGED_POOL_INFO(_StructureData, _BufferOffset + 2968);
				return returnValue;
			}
		}
		public _MMSUPPORT Vm
		{
			get
			{
				_MMSUPPORT returnValue = new _MMSUPPORT(_StructureData, _BufferOffset + 3072);
				return returnValue;
			}
		}
		public UInt64 Wsle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 3304); } }
		public _MI_SESSION_DRIVER_UNLOAD DriverUnload
		{
			get
			{
				_MI_SESSION_DRIVER_UNLOAD returnValue = new _MI_SESSION_DRIVER_UNLOAD(_StructureData, _BufferOffset + 3312);
				return returnValue;
			}
		}
		public _POOL_DESCRIPTOR PagedPool
		{
			get
			{
				_POOL_DESCRIPTOR returnValue = new _POOL_DESCRIPTOR(_StructureData, _BufferOffset + 3328);
				return returnValue;
			}
		}
		public _MMPTE PageDirectory
		{
			get
			{
				_MMPTE returnValue = new _MMPTE(_StructureData, _BufferOffset + 7744);
				return returnValue;
			}
		}
		public _FAST_MUTEX SessionVaLock
		{
			get
			{
				_FAST_MUTEX returnValue = new _FAST_MUTEX(_StructureData, _BufferOffset + 7752);
				return returnValue;
			}
		}
		public _RTL_BITMAP DynamicVaBitMap
		{
			get
			{
				_RTL_BITMAP returnValue = new _RTL_BITMAP(_StructureData, _BufferOffset + 7808);
				return returnValue;
			}
		}
		public UInt32 DynamicVaHint { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 7824); } }
		public _MI_SPECIAL_POOL SpecialPool
		{
			get
			{
				_MI_SPECIAL_POOL returnValue = new _MI_SPECIAL_POOL(_StructureData, _BufferOffset + 7832);
				return returnValue;
			}
		}
		public _FAST_MUTEX SessionPteLock
		{
			get
			{
				_FAST_MUTEX returnValue = new _FAST_MUTEX(_StructureData, _BufferOffset + 7912);
				return returnValue;
			}
		}
		public Int32 PoolBigEntriesInUse { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 7968); } }
		public UInt32 PagedPoolPdeCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 7972); } }
		public UInt32 SpecialPoolPdeCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 7976); } }
		public UInt32 DynamicSessionPdeCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 7980); } }
		public _MI_SYSTEM_PTE_TYPE SystemPteInfo
		{
			get
			{
				_MI_SYSTEM_PTE_TYPE returnValue = new _MI_SYSTEM_PTE_TYPE(_StructureData, _BufferOffset + 7984);
				return returnValue;
			}
		}
		public UInt64 PoolTrackTableExpansion { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8088); } }
		public UInt64 PoolTrackTableExpansionSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8096); } }
		public UInt64 PoolTrackBigPages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8104); } }
		public UInt64 PoolTrackBigPagesSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8112); } }
		public _IO_SESSION_STATE IoState { get { return (_IO_SESSION_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 8120); } }
		public UInt32 IoStateSequence { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8124); } }
		public _KEVENT IoNotificationEvent
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 8128);
				return returnValue;
			}
		}
	}
	#endregion
	#region _WHEA_XPF_MC_BANK_DESCRIPTOR
 
	public class _WHEA_XPF_MC_BANK_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_XPF_MC_BANK_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 28; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_XPF_MC_BANK_DESCRIPTOR"": [ 28, {
				 ""BankNumber"": [ 0, [ ""Byte"", ""null"" ]],
				 ""ClearOnInitialization"": [ 1, [ ""Byte"", ""null"" ]],
				 ""StatusDataFormat"": [ 2, [ ""Byte"", ""null"" ]],
				 ""Flags"": [ 3, [ ""_XPF_MC_BANK_FLAGS"", ""null"" ]],
				 ""ControlMsr"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""StatusMsr"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""AddressMsr"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""MiscMsr"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""ControlData"": [ 20, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte BankNumber{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte ClearOnInitialization{ get { return _StructureData[_BufferOffset +1]; } }
		public Byte StatusDataFormat{ get { return _StructureData[_BufferOffset +2]; } }
		public _XPF_MC_BANK_FLAGS Flags
		{
			get
			{
				_XPF_MC_BANK_FLAGS returnValue = new _XPF_MC_BANK_FLAGS(_StructureData, _BufferOffset + 3);
				return returnValue;
			}
		}
		public UInt32 ControlMsr { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 StatusMsr { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 AddressMsr { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 MiscMsr { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt64 ControlData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 20); } }
	}
	#endregion
	#region _UNNAMED_35233
 
	public class _UNNAMED_35233
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_35233(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_35233"": [ 4, {
				 ""LongFlags2"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""VadFlags2"": [ 0, [ ""_MMVAD_FLAGS2"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 LongFlags2 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _MMVAD_FLAGS2 VadFlags2
		{
			get
			{
				_MMVAD_FLAGS2 returnValue = new _MMVAD_FLAGS2(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_35237
 
	public class _UNNAMED_35237
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_35237(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_35237"": [ 8, {
				 ""SequentialVa"": [ 0, [ ""_MI_VAD_SEQUENTIAL_INFO"", ""null"" ]],
				 ""ExtendedInfo"": [ 0, [ ""Pointer"", ""{\""target\"":\""_MMEXTEND_INFO\""}"" ]] }]
				 }
				)";
			}
		}
		public _MI_VAD_SEQUENTIAL_INFO SequentialVa
		{
			get
			{
				_MI_VAD_SEQUENTIAL_INFO returnValue = new _MI_VAD_SEQUENTIAL_INFO(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 ExtendedInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _MMVAD
 
	public class _MMVAD
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMVAD(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 128; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMVAD"": [ 128, {
				 ""Core"": [ 0, [ ""_MMVAD_SHORT"", ""null"" ]],
				 ""u2"": [ 64, [ ""_UNNAMED_35233"", ""null"" ]],
				 ""Subsection"": [ 72, [ ""Pointer"", ""{\""target\"":\""_SUBSECTION\""}"" ]],
				 ""FirstPrototypePte"": [ 80, [ ""Pointer"", ""{\""target\"":\""_MMPTE\""}"" ]],
				 ""LastContiguousPte"": [ 88, [ ""Pointer"", ""{\""target\"":\""_MMPTE\""}"" ]],
				 ""ViewLinks"": [ 96, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""VadsProcess"": [ 112, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""u4"": [ 120, [ ""_UNNAMED_35237"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _MMVAD_SHORT Core
		{
			get
			{
				_MMVAD_SHORT returnValue = new _MMVAD_SHORT(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_35233 u2
		{
			get
			{
				_UNNAMED_35233 returnValue = new _UNNAMED_35233(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public UInt64 Subsection { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 FirstPrototypePte { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 LastContiguousPte { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public _LIST_ENTRY ViewLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 96);
				return returnValue;
			}
		}
		public UInt64 VadsProcess { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 112); } }
		public _UNNAMED_35237 u4
		{
			get
			{
				_UNNAMED_35237 returnValue = new _UNNAMED_35237(_StructureData, _BufferOffset + 120);
				return returnValue;
			}
		}
	}
	#endregion
	#region _SEP_SID_VALUES_BLOCK
 
	public class _SEP_SID_VALUES_BLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SEP_SID_VALUES_BLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SEP_SID_VALUES_BLOCK"": [ 32, {
				 ""BlockLength"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ReferenceCount"": [ 8, [ ""Int64"", ""null"" ]],
				 ""SidCount"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""SidValuesStart"": [ 24, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 BlockLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Int64 ReferenceCount { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 SidCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt64 SidValuesStart { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _CM_RM
 
	public class _CM_RM
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_RM(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 136; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_RM"": [ 136, {
				 ""RmListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""TransactionListHead"": [ 16, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""TmHandle"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Tm"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""RmHandle"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""KtmRm"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""RefCount"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""ContainerNum"": [ 68, [ ""UInt32"", ""null"" ]],
				 ""ContainerSize"": [ 72, [ ""UInt64"", ""null"" ]],
				 ""CmHive"": [ 80, [ ""Pointer"", ""{\""target\"":\""_CMHIVE\""}"" ]],
				 ""LogFileObject"": [ 88, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""MarshallingContext"": [ 96, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""RmFlags"": [ 104, [ ""UInt32"", ""null"" ]],
				 ""LogStartStatus1"": [ 108, [ ""Int32"", ""null"" ]],
				 ""LogStartStatus2"": [ 112, [ ""Int32"", ""null"" ]],
				 ""BaseLsn"": [ 120, [ ""UInt64"", ""null"" ]],
				 ""RmLock"": [ 128, [ ""Pointer"", ""{\""target\"":\""_ERESOURCE\""}"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY RmListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LIST_ENTRY TransactionListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt64 TmHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 Tm { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 RmHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 KtmRm { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt32 RefCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt32 ContainerNum { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 68); } }
		public UInt64 ContainerSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 CmHive { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 LogFileObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 MarshallingContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt32 RmFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 104); } }
		public Int32 LogStartStatus1 { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 108); } }
		public Int32 LogStartStatus2 { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 112); } }
		public UInt64 BaseLsn { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 120); } }
		public UInt64 RmLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 128); } }
	}
	#endregion
	#region _NONOPAQUE_OPLOCK
 
	public class _NONOPAQUE_OPLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _NONOPAQUE_OPLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 160; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_NONOPAQUE_OPLOCK"": [ 160, {
				 ""IrpExclusiveOplock"": [ 0, [ ""Pointer"", ""{\""target\"":\""_IRP\""}"" ]],
				 ""FileObject"": [ 8, [ ""Pointer"", ""{\""target\"":\""_FILE_OBJECT\""}"" ]],
				 ""ExclusiveOplockOwner"": [ 16, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""ExclusiveOplockOwnerThread"": [ 24, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]],
				 ""WaiterPriority"": [ 32, [ ""Byte"", ""null"" ]],
				 ""IrpOplocksR"": [ 40, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""IrpOplocksRH"": [ 56, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""RHBreakQueue"": [ 72, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""WaitingIrps"": [ 88, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""DelayAckFileObjectQueue"": [ 104, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""AtomicQueue"": [ 120, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""DeleterParentKey"": [ 136, [ ""Pointer"", ""{\""target\"":\""_GUID\""}"" ]],
				 ""OplockState"": [ 144, [ ""UInt32"", ""null"" ]],
				 ""FastMutex"": [ 152, [ ""Pointer"", ""{\""target\"":\""_FAST_MUTEX\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 IrpExclusiveOplock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 FileObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 ExclusiveOplockOwner { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 ExclusiveOplockOwnerThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public Byte WaiterPriority{ get { return _StructureData[_BufferOffset +32]; } }
		public _LIST_ENTRY IrpOplocksR
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public _LIST_ENTRY IrpOplocksRH
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public _LIST_ENTRY RHBreakQueue
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 72);
				return returnValue;
			}
		}
		public _LIST_ENTRY WaitingIrps
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 88);
				return returnValue;
			}
		}
		public _LIST_ENTRY DelayAckFileObjectQueue
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 104);
				return returnValue;
			}
		}
		public _LIST_ENTRY AtomicQueue
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 120);
				return returnValue;
			}
		}
		public UInt64 DeleterParentKey { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 136); } }
		public UInt32 OplockState { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 144); } }
		public UInt64 FastMutex { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 152); } }
	}
	#endregion
	#region _OBJECT_HANDLE_COUNT_ENTRY
 
	public class _OBJECT_HANDLE_COUNT_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_HANDLE_COUNT_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_HANDLE_COUNT_ENTRY"": [ 16, {
				 ""Process"": [ 0, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""HandleCount"": [ 8, [ ""BitField"", ""{\""end_bit\"":24,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""LockCount"": [ 8, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":24,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Process { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 HandleCount
		{
			get
			{
				// start: 0  end: 24  Mask: 111111111111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 8);
				var value2 = (value & 16777215) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 LockCount
		{
			get
			{
				// start: 24  end: 32  Mask: 11111111000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 8);
				var value2 = (value & 4278190080) >> 24;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _CLIENT_ID
 
	public class _CLIENT_ID
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CLIENT_ID(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CLIENT_ID"": [ 16, {
				 ""UniqueProcess"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""UniqueThread"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 UniqueProcess { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 UniqueThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _WHEA_MEMORY_ERROR_SECTION
 
	public class _WHEA_MEMORY_ERROR_SECTION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_MEMORY_ERROR_SECTION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 73; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_MEMORY_ERROR_SECTION"": [ 73, {
				 ""ValidBits"": [ 0, [ ""_WHEA_MEMORY_ERROR_SECTION_VALIDBITS"", ""null"" ]],
				 ""ErrorStatus"": [ 8, [ ""_WHEA_ERROR_STATUS"", ""null"" ]],
				 ""PhysicalAddress"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""PhysicalAddressMask"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""Node"": [ 32, [ ""UInt16"", ""null"" ]],
				 ""Card"": [ 34, [ ""UInt16"", ""null"" ]],
				 ""Module"": [ 36, [ ""UInt16"", ""null"" ]],
				 ""Bank"": [ 38, [ ""UInt16"", ""null"" ]],
				 ""Device"": [ 40, [ ""UInt16"", ""null"" ]],
				 ""Row"": [ 42, [ ""UInt16"", ""null"" ]],
				 ""Column"": [ 44, [ ""UInt16"", ""null"" ]],
				 ""BitPosition"": [ 46, [ ""UInt16"", ""null"" ]],
				 ""RequesterId"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""ResponderId"": [ 56, [ ""UInt64"", ""null"" ]],
				 ""TargetId"": [ 64, [ ""UInt64"", ""null"" ]],
				 ""ErrorType"": [ 72, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _WHEA_MEMORY_ERROR_SECTION_VALIDBITS ValidBits
		{
			get
			{
				_WHEA_MEMORY_ERROR_SECTION_VALIDBITS returnValue = new _WHEA_MEMORY_ERROR_SECTION_VALIDBITS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _WHEA_ERROR_STATUS ErrorStatus
		{
			get
			{
				_WHEA_ERROR_STATUS returnValue = new _WHEA_ERROR_STATUS(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt64 PhysicalAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 PhysicalAddressMask { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt16 Node { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 32); } }
		public UInt16 Card { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 34); } }
		public UInt16 Module { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 36); } }
		public UInt16 Bank { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 38); } }
		public UInt16 Device { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 40); } }
		public UInt16 Row { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 42); } }
		public UInt16 Column { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 44); } }
		public UInt16 BitPosition { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 46); } }
		public UInt64 RequesterId { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 ResponderId { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 TargetId { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public Byte ErrorType{ get { return _StructureData[_BufferOffset +72]; } }
	}
	#endregion
	#region _KWAIT_STATUS_REGISTER
 
	public class _KWAIT_STATUS_REGISTER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KWAIT_STATUS_REGISTER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KWAIT_STATUS_REGISTER"": [ 1, {
				 ""Flags"": [ 0, [ ""Byte"", ""null"" ]],
				 ""State"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""Affinity"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""Priority"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""Apc"": [ 0, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""Byte\""}"" ]],
				 ""UserApc"": [ 0, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""Byte\""}"" ]],
				 ""Alert"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public Byte Flags{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte State
		{
			get
			{
				// start: 0  end: 3  Mask: 0000000000000111
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 7) >> 0;
				return (Byte)value2;
			}
		}
		public Byte Affinity
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte Priority
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 16) >> 4;
				return (Byte)value2;
			}
		}
		public Byte Apc
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 32) >> 5;
				return (Byte)value2;
			}
		}
		public Byte UserApc
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 64) >> 6;
				return (Byte)value2;
			}
		}
		public Byte Alert
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 128) >> 7;
				return (Byte)value2;
			}
		}
	}
	#endregion
	#region _VI_DEADLOCK_RESOURCE
 
	public class _VI_DEADLOCK_RESOURCE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VI_DEADLOCK_RESOURCE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 248; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VI_DEADLOCK_RESOURCE"": [ 248, {
				 ""Type"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""_VI_DEADLOCK_RESOURCE_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""NodeCount"": [ 4, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""RecursionCount"": [ 4, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""ResourceAddress"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ThreadOwner"": [ 16, [ ""Pointer"", ""{\""target\"":\""_VI_DEADLOCK_THREAD\""}"" ]],
				 ""ResourceList"": [ 24, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""HashChainList"": [ 40, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""FreeListEntry"": [ 40, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""StackTrace"": [ 56, [ ""Array"", ""{\""count\"":8,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]],
				 ""LastAcquireTrace"": [ 120, [ ""Array"", ""{\""count\"":8,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]],
				 ""LastReleaseTrace"": [ 184, [ ""Array"", ""{\""count\"":8,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]] }]
				 }
				)";
			}
		}
		public _VI_DEADLOCK_RESOURCE_TYPE Type { get { return (_VI_DEADLOCK_RESOURCE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 NodeCount
		{
			get
			{
				// start: 0  end: 16  Mask: 1111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 65535) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 RecursionCount
		{
			get
			{
				// start: 16  end: 32  Mask: 11111111111111110000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 4294901760) >> 16;
				return (UInt32)value2;
			}
		}
		public UInt64 ResourceAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 ThreadOwner { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public _LIST_ENTRY ResourceList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public _LIST_ENTRY HashChainList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public _LIST_ENTRY FreeListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public UInt64[] StackTrace
		{
			get
			{
				UInt64[] returnValue = new UInt64[8];
				int size = 8;
				for(int i=0; i<8; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 56);
				return returnValue;
			}
		}
		public UInt64[] LastAcquireTrace
		{
			get
			{
				UInt64[] returnValue = new UInt64[8];
				int size = 8;
				for(int i=0; i<8; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 120);
				return returnValue;
			}
		}
		public UInt64[] LastReleaseTrace
		{
			get
			{
				UInt64[] returnValue = new UInt64[8];
				int size = 8;
				for(int i=0; i<8; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 184);
				return returnValue;
			}
		}
	}
	#endregion
	#region _DBGKD_GET_SET_BUS_DATA
 
	public class _DBGKD_GET_SET_BUS_DATA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_GET_SET_BUS_DATA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 20; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_GET_SET_BUS_DATA"": [ 20, {
				 ""BusDataType"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""BusNumber"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""SlotNumber"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Offset"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""Length"": [ 16, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 BusDataType { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 BusNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 SlotNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Offset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _MMSECTION_FLAGS
 
	public class _MMSECTION_FLAGS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMSECTION_FLAGS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMSECTION_FLAGS"": [ 4, {
				 ""BeingDeleted"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""BeingCreated"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""BeingPurged"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""NoModifiedWriting"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""FailAllIo"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""Image"": [ 0, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""Based"": [ 0, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""File"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt32\""}"" ]],
				 ""AttemptingDelete"": [ 0, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]],
				 ""PrefetchCreated"": [ 0, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt32\""}"" ]],
				 ""PhysicalMemory"": [ 0, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt32\""}"" ]],
				 ""CopyOnWrite"": [ 0, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt32\""}"" ]],
				 ""Reserve"": [ 0, [ ""BitField"", ""{\""end_bit\"":13,\""start_bit\"":12,\""target\"":\""UInt32\""}"" ]],
				 ""Commit"": [ 0, [ ""BitField"", ""{\""end_bit\"":14,\""start_bit\"":13,\""target\"":\""UInt32\""}"" ]],
				 ""NoChange"": [ 0, [ ""BitField"", ""{\""end_bit\"":15,\""start_bit\"":14,\""target\"":\""UInt32\""}"" ]],
				 ""WasPurged"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":15,\""target\"":\""UInt32\""}"" ]],
				 ""UserReference"": [ 0, [ ""BitField"", ""{\""end_bit\"":17,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""GlobalMemory"": [ 0, [ ""BitField"", ""{\""end_bit\"":18,\""start_bit\"":17,\""target\"":\""UInt32\""}"" ]],
				 ""DeleteOnClose"": [ 0, [ ""BitField"", ""{\""end_bit\"":19,\""start_bit\"":18,\""target\"":\""UInt32\""}"" ]],
				 ""FilePointerNull"": [ 0, [ ""BitField"", ""{\""end_bit\"":20,\""start_bit\"":19,\""target\"":\""UInt32\""}"" ]],
				 ""PreferredNode"": [ 0, [ ""BitField"", ""{\""end_bit\"":26,\""start_bit\"":20,\""target\"":\""UInt32\""}"" ]],
				 ""GlobalOnlyPerSession"": [ 0, [ ""BitField"", ""{\""end_bit\"":27,\""start_bit\"":26,\""target\"":\""UInt32\""}"" ]],
				 ""UserWritable"": [ 0, [ ""BitField"", ""{\""end_bit\"":28,\""start_bit\"":27,\""target\"":\""UInt32\""}"" ]],
				 ""Spare"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":28,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 BeingDeleted
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 BeingCreated
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 BeingPurged
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 NoModifiedWriting
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 FailAllIo
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 Image
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 Based
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 64) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 File
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 128) >> 7;
				return (UInt32)value2;
			}
		}
		public UInt32 AttemptingDelete
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 256) >> 8;
				return (UInt32)value2;
			}
		}
		public UInt32 PrefetchCreated
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 512) >> 9;
				return (UInt32)value2;
			}
		}
		public UInt32 PhysicalMemory
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1024) >> 10;
				return (UInt32)value2;
			}
		}
		public UInt32 CopyOnWrite
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2048) >> 11;
				return (UInt32)value2;
			}
		}
		public UInt32 Reserve
		{
			get
			{
				// start: 12  end: 13  Mask: 0001000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4096) >> 12;
				return (UInt32)value2;
			}
		}
		public UInt32 Commit
		{
			get
			{
				// start: 13  end: 14  Mask: 0010000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8192) >> 13;
				return (UInt32)value2;
			}
		}
		public UInt32 NoChange
		{
			get
			{
				// start: 14  end: 15  Mask: 0100000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16384) >> 14;
				return (UInt32)value2;
			}
		}
		public UInt32 WasPurged
		{
			get
			{
				// start: 15  end: 16  Mask: 1000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 32768) >> 15;
				return (UInt32)value2;
			}
		}
		public UInt32 UserReference
		{
			get
			{
				// start: 16  end: 17  Mask: 10000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 65536) >> 16;
				return (UInt32)value2;
			}
		}
		public UInt32 GlobalMemory
		{
			get
			{
				// start: 17  end: 18  Mask: 100000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 131072) >> 17;
				return (UInt32)value2;
			}
		}
		public UInt32 DeleteOnClose
		{
			get
			{
				// start: 18  end: 19  Mask: 1000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 262144) >> 18;
				return (UInt32)value2;
			}
		}
		public UInt32 FilePointerNull
		{
			get
			{
				// start: 19  end: 20  Mask: 10000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 524288) >> 19;
				return (UInt32)value2;
			}
		}
		public UInt32 PreferredNode
		{
			get
			{
				// start: 20  end: 26  Mask: 11111100000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 66060288) >> 20;
				return (UInt32)value2;
			}
		}
		public UInt32 GlobalOnlyPerSession
		{
			get
			{
				// start: 26  end: 27  Mask: 100000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 67108864) >> 26;
				return (UInt32)value2;
			}
		}
		public UInt32 UserWritable
		{
			get
			{
				// start: 27  end: 28  Mask: 1000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 134217728) >> 27;
				return (UInt32)value2;
			}
		}
		public UInt32 Spare
		{
			get
			{
				// start: 28  end: 32  Mask: 11110000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4026531840) >> 28;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _SECURITY_CLIENT_CONTEXT
 
	public class _SECURITY_CLIENT_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SECURITY_CLIENT_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SECURITY_CLIENT_CONTEXT"": [ 72, {
				 ""SecurityQos"": [ 0, [ ""_SECURITY_QUALITY_OF_SERVICE"", ""null"" ]],
				 ""ClientToken"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DirectlyAccessClientToken"": [ 24, [ ""Byte"", ""null"" ]],
				 ""DirectAccessEffectiveOnly"": [ 25, [ ""Byte"", ""null"" ]],
				 ""ServerIsRemote"": [ 26, [ ""Byte"", ""null"" ]],
				 ""ClientTokenControl"": [ 28, [ ""_TOKEN_CONTROL"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _SECURITY_QUALITY_OF_SERVICE SecurityQos
		{
			get
			{
				_SECURITY_QUALITY_OF_SERVICE returnValue = new _SECURITY_QUALITY_OF_SERVICE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 ClientToken { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public Byte DirectlyAccessClientToken{ get { return _StructureData[_BufferOffset +24]; } }
		public Byte DirectAccessEffectiveOnly{ get { return _StructureData[_BufferOffset +25]; } }
		public Byte ServerIsRemote{ get { return _StructureData[_BufferOffset +26]; } }
		public _TOKEN_CONTROL ClientTokenControl
		{
			get
			{
				_TOKEN_CONTROL returnValue = new _TOKEN_CONTROL(_StructureData, _BufferOffset + 28);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MM_PAGED_POOL_INFO
 
	public class _MM_PAGED_POOL_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MM_PAGED_POOL_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 104; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MM_PAGED_POOL_INFO"": [ 104, {
				 ""Mutex"": [ 0, [ ""_FAST_MUTEX"", ""null"" ]],
				 ""PagedPoolAllocationMap"": [ 56, [ ""_RTL_BITMAP_EX"", ""null"" ]],
				 ""FirstPteForPagedPool"": [ 72, [ ""Pointer"", ""{\""target\"":\""_MMPTE\""}"" ]],
				 ""MaximumSize"": [ 80, [ ""UInt64"", ""null"" ]],
				 ""PagedPoolHint"": [ 88, [ ""UInt64"", ""null"" ]],
				 ""AllocatedPagedPool"": [ 96, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _FAST_MUTEX Mutex
		{
			get
			{
				_FAST_MUTEX returnValue = new _FAST_MUTEX(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _RTL_BITMAP_EX PagedPoolAllocationMap
		{
			get
			{
				_RTL_BITMAP_EX returnValue = new _RTL_BITMAP_EX(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public UInt64 FirstPteForPagedPool { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 MaximumSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 PagedPoolHint { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 AllocatedPagedPool { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
	}
	#endregion
	#region _NT_TIB64
 
	public class _NT_TIB64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _NT_TIB64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_NT_TIB64"": [ 56, {
				 ""ExceptionList"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""StackBase"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""StackLimit"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""SubSystemTib"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""FiberData"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""Version"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""ArbitraryUserPointer"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""Self"": [ 48, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ExceptionList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 StackBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 StackLimit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 SubSystemTib { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 FiberData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt32 Version { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt64 ArbitraryUserPointer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 Self { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
	}
	#endregion
	#region _MI_REVERSE_VIEW_MAP
 
	public class _MI_REVERSE_VIEW_MAP
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MI_REVERSE_VIEW_MAP(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MI_REVERSE_VIEW_MAP"": [ 40, {
				 ""ViewLinks"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""SystemCacheVa"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SessionViewVa"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""VadsProcess"": [ 16, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""Type"": [ 16, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""Subsection"": [ 24, [ ""Pointer"", ""{\""target\"":\""_SUBSECTION\""}"" ]],
				 ""SubsectionType"": [ 24, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""SectionOffset"": [ 32, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ViewLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 SystemCacheVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 SessionViewVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 VadsProcess { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Type
		{
			get
			{
				// start: 0  end: 2  Mask: 0000000000000011
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 16);
				var value2 = (value & 3) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 Subsection { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 SubsectionType
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 24);
				var value2 = (value & 1) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 SectionOffset { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _IO_SECURITY_CONTEXT
 
	public class _IO_SECURITY_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IO_SECURITY_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IO_SECURITY_CONTEXT"": [ 24, {
				 ""SecurityQos"": [ 0, [ ""Pointer"", ""{\""target\"":\""_SECURITY_QUALITY_OF_SERVICE\""}"" ]],
				 ""AccessState"": [ 8, [ ""Pointer"", ""{\""target\"":\""_ACCESS_STATE\""}"" ]],
				 ""DesiredAccess"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""FullCreateOptions"": [ 20, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 SecurityQos { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 AccessState { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 DesiredAccess { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 FullCreateOptions { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
	}
	#endregion
	#region _PROC_PERF_DOMAIN
 
	public class _PROC_PERF_DOMAIN
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROC_PERF_DOMAIN(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 344; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROC_PERF_DOMAIN"": [ 344, {
				 ""Link"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Master"": [ 16, [ ""Pointer"", ""{\""target\"":\""_KPRCB\""}"" ]],
				 ""Members"": [ 24, [ ""_KAFFINITY_EX"", ""null"" ]],
				 ""ProcessorCount"": [ 192, [ ""UInt32"", ""null"" ]],
				 ""Processors"": [ 200, [ ""Pointer"", ""{\""target\"":\""_PROC_PERF_CONSTRAINT\""}"" ]],
				 ""GetFFHThrottleState"": [ 208, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""BoostPolicyHandler"": [ 216, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""BoostModeHandler"": [ 224, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PerfSelectionHandler"": [ 232, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PerfControlHandler"": [ 240, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""MaxFrequency"": [ 248, [ ""UInt32"", ""null"" ]],
				 ""NominalFrequency"": [ 252, [ ""UInt32"", ""null"" ]],
				 ""MaxPercent"": [ 256, [ ""UInt32"", ""null"" ]],
				 ""MinPerfPercent"": [ 260, [ ""UInt32"", ""null"" ]],
				 ""MinThrottlePercent"": [ 264, [ ""UInt32"", ""null"" ]],
				 ""Coordination"": [ 268, [ ""Byte"", ""null"" ]],
				 ""HardPlatformCap"": [ 269, [ ""Byte"", ""null"" ]],
				 ""AffinitizeControl"": [ 270, [ ""Byte"", ""null"" ]],
				 ""SelectedPercent"": [ 272, [ ""UInt32"", ""null"" ]],
				 ""SelectedFrequency"": [ 276, [ ""UInt32"", ""null"" ]],
				 ""DesiredPercent"": [ 280, [ ""UInt32"", ""null"" ]],
				 ""MaxPolicyPercent"": [ 284, [ ""UInt32"", ""null"" ]],
				 ""MinPolicyPercent"": [ 288, [ ""UInt32"", ""null"" ]],
				 ""ConstrainedMaxPercent"": [ 292, [ ""UInt32"", ""null"" ]],
				 ""ConstrainedMinPercent"": [ 296, [ ""UInt32"", ""null"" ]],
				 ""GuaranteedPercent"": [ 300, [ ""UInt32"", ""null"" ]],
				 ""TolerancePercent"": [ 304, [ ""UInt32"", ""null"" ]],
				 ""SelectedState"": [ 312, [ ""UInt64"", ""null"" ]],
				 ""Force"": [ 320, [ ""Byte"", ""null"" ]],
				 ""PerfChangeTime"": [ 328, [ ""UInt64"", ""null"" ]],
				 ""PerfChangeIntervalCount"": [ 336, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY Link
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Master { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public _KAFFINITY_EX Members
		{
			get
			{
				_KAFFINITY_EX returnValue = new _KAFFINITY_EX(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt32 ProcessorCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 192); } }
		public UInt64 Processors { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 200); } }
		public UInt64 GetFFHThrottleState { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 208); } }
		public UInt64 BoostPolicyHandler { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 216); } }
		public UInt64 BoostModeHandler { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 224); } }
		public UInt64 PerfSelectionHandler { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 232); } }
		public UInt64 PerfControlHandler { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 240); } }
		public UInt32 MaxFrequency { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 248); } }
		public UInt32 NominalFrequency { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 252); } }
		public UInt32 MaxPercent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 256); } }
		public UInt32 MinPerfPercent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 260); } }
		public UInt32 MinThrottlePercent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 264); } }
		public Byte Coordination{ get { return _StructureData[_BufferOffset +268]; } }
		public Byte HardPlatformCap{ get { return _StructureData[_BufferOffset +269]; } }
		public Byte AffinitizeControl{ get { return _StructureData[_BufferOffset +270]; } }
		public UInt32 SelectedPercent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 272); } }
		public UInt32 SelectedFrequency { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 276); } }
		public UInt32 DesiredPercent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 280); } }
		public UInt32 MaxPolicyPercent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 284); } }
		public UInt32 MinPolicyPercent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 288); } }
		public UInt32 ConstrainedMaxPercent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 292); } }
		public UInt32 ConstrainedMinPercent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 296); } }
		public UInt32 GuaranteedPercent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 300); } }
		public UInt32 TolerancePercent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 304); } }
		public UInt64 SelectedState { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 312); } }
		public Byte Force{ get { return _StructureData[_BufferOffset +320]; } }
		public UInt64 PerfChangeTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 328); } }
		public UInt32 PerfChangeIntervalCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 336); } }
	}
	#endregion
	#region _X86_DBGKD_CONTROL_SET
 
	public class _X86_DBGKD_CONTROL_SET
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _X86_DBGKD_CONTROL_SET(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_X86_DBGKD_CONTROL_SET"": [ 16, {
				 ""TraceFlag"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Dr7"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""CurrentSymbolStart"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""CurrentSymbolEnd"": [ 12, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 TraceFlag { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Dr7 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 CurrentSymbolStart { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 CurrentSymbolEnd { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
	}
	#endregion
	#region _HANDLE_TRACE_DB_ENTRY
 
	public class _HANDLE_TRACE_DB_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HANDLE_TRACE_DB_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 160; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HANDLE_TRACE_DB_ENTRY"": [ 160, {
				 ""ClientId"": [ 0, [ ""_CLIENT_ID"", ""null"" ]],
				 ""Handle"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Type"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""StackTrace"": [ 32, [ ""Array"", ""{\""count\"":16,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]] }]
				 }
				)";
			}
		}
		public _CLIENT_ID ClientId
		{
			get
			{
				_CLIENT_ID returnValue = new _CLIENT_ID(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Handle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 Type { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt64[] StackTrace
		{
			get
			{
				UInt64[] returnValue = new UInt64[16];
				int size = 8;
				for(int i=0; i<16; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 32);
				return returnValue;
			}
		}
	}
	#endregion
	#region _WHEA_IPF_CPE_DESCRIPTOR
 
	public class _WHEA_IPF_CPE_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_IPF_CPE_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_IPF_CPE_DESCRIPTOR"": [ 4, {
				 ""Type"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Enabled"": [ 2, [ ""Byte"", ""null"" ]],
				 ""Reserved"": [ 3, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Type { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public Byte Enabled{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte Reserved{ get { return _StructureData[_BufferOffset +3]; } }
	}
	#endregion
	#region _DUMMY_FILE_OBJECT
 
	public class _DUMMY_FILE_OBJECT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DUMMY_FILE_OBJECT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 272; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DUMMY_FILE_OBJECT"": [ 272, {
				 ""ObjectHeader"": [ 0, [ ""_OBJECT_HEADER"", ""null"" ]],
				 ""FileObjectBody"": [ 56, [ ""Array"", ""{\""count\"":216,\""target\"":\""Char\""}"" ]] }]
				 }
				)";
			}
		}
		public _OBJECT_HEADER ObjectHeader
		{
			get
			{
				_OBJECT_HEADER returnValue = new _OBJECT_HEADER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public Char[] FileObjectBody
		{
			get
			{
				Char[] returnValue = new Char[216];
				for(int i=0; i<216; i++ )
					returnValue[i] = BitConverter.ToChar(_StructureData, (i * sizeof(Char)) + _BufferOffset + 56);
				return returnValue;
			}
		}
	}
	#endregion
	#region _RELATION_LIST
 
	public class _RELATION_LIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RELATION_LIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RELATION_LIST"": [ 24, {
				 ""Count"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""TagCount"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""FirstLevel"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""MaxLevel"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""Entries"": [ 16, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""_RELATION_LIST_ENTRY\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Count { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 TagCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 FirstLevel { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 MaxLevel { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt64[] Entries
		{
			get
			{
				UInt64[] returnValue = new UInt64[1];
				int size = 8;
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _IO_TIMER
 
	public class _IO_TIMER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IO_TIMER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IO_TIMER"": [ 48, {
				 ""Type"": [ 0, [ ""Int16"", ""null"" ]],
				 ""TimerFlag"": [ 2, [ ""Int16"", ""null"" ]],
				 ""TimerList"": [ 8, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""TimerRoutine"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Context"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DeviceObject"": [ 40, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]] }]
				 }
				)";
			}
		}
		public Int16 Type { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 0); } }
		public Int16 TimerFlag { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 2); } }
		public _LIST_ENTRY TimerList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt64 TimerRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 Context { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 DeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
	}
	#endregion
	#region _ETW_BUFFER_QUEUE
 
	public class _ETW_BUFFER_QUEUE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETW_BUFFER_QUEUE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETW_BUFFER_QUEUE"": [ 24, {
				 ""QueueHead"": [ 0, [ ""Pointer"", ""{\""target\"":\""_SINGLE_LIST_ENTRY\""}"" ]],
				 ""QueueTail"": [ 8, [ ""Pointer"", ""{\""target\"":\""_SINGLE_LIST_ENTRY\""}"" ]],
				 ""QueueEntry"": [ 16, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 QueueHead { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 QueueTail { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _SINGLE_LIST_ENTRY QueueEntry
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ARBITER_TEST_ALLOCATION_PARAMETERS
 
	public class _ARBITER_TEST_ALLOCATION_PARAMETERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ARBITER_TEST_ALLOCATION_PARAMETERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ARBITER_TEST_ALLOCATION_PARAMETERS"": [ 24, {
				 ""ArbitrationList"": [ 0, [ ""Pointer"", ""{\""target\"":\""_LIST_ENTRY\""}"" ]],
				 ""AllocateFromCount"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""AllocateFrom"": [ 16, [ ""Pointer"", ""{\""target\"":\""_CM_PARTIAL_RESOURCE_DESCRIPTOR\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ArbitrationList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 AllocateFromCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt64 AllocateFrom { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _MI_SPECIAL_POOL
 
	public class _MI_SPECIAL_POOL
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MI_SPECIAL_POOL(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 80; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MI_SPECIAL_POOL"": [ 80, {
				 ""Lock"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Paged"": [ 8, [ ""_MI_PTE_CHAIN_HEAD"", ""null"" ]],
				 ""NonPaged"": [ 32, [ ""_MI_PTE_CHAIN_HEAD"", ""null"" ]],
				 ""PagesInUse"": [ 56, [ ""UInt64"", ""null"" ]],
				 ""SpecialPoolPdes"": [ 64, [ ""_RTL_BITMAP"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Lock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _MI_PTE_CHAIN_HEAD Paged
		{
			get
			{
				_MI_PTE_CHAIN_HEAD returnValue = new _MI_PTE_CHAIN_HEAD(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _MI_PTE_CHAIN_HEAD NonPaged
		{
			get
			{
				_MI_PTE_CHAIN_HEAD returnValue = new _MI_PTE_CHAIN_HEAD(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt64 PagesInUse { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public _RTL_BITMAP SpecialPoolPdes
		{
			get
			{
				_RTL_BITMAP returnValue = new _RTL_BITMAP(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
	}
	#endregion
	#region _LOGGED_STREAM_CALLBACK_V2
 
	public class _LOGGED_STREAM_CALLBACK_V2
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _LOGGED_STREAM_CALLBACK_V2(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_LOGGED_STREAM_CALLBACK_V2"": [ 8, {
				 ""LogHandleContext"": [ 0, [ ""Pointer"", ""{\""target\"":\""_LOG_HANDLE_CONTEXT\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 LogHandleContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _ARBITER_QUERY_CONFLICT_PARAMETERS
 
	public class _ARBITER_QUERY_CONFLICT_PARAMETERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ARBITER_QUERY_CONFLICT_PARAMETERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ARBITER_QUERY_CONFLICT_PARAMETERS"": [ 32, {
				 ""PhysicalDeviceObject"": [ 0, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""ConflictingResource"": [ 8, [ ""Pointer"", ""{\""target\"":\""_IO_RESOURCE_DESCRIPTOR\""}"" ]],
				 ""ConflictCount"": [ 16, [ ""Pointer"", ""{\""target\"":\""unsigned long\""}"" ]],
				 ""Conflicts"": [ 24, [ ""Pointer"", ""{\""target\"":\""_ARBITER_CONFLICT_INFO*\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 PhysicalDeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 ConflictingResource { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 ConflictCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Conflicts { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _POP_CURRENT_BROADCAST
 
	public class _POP_CURRENT_BROADCAST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_CURRENT_BROADCAST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_CURRENT_BROADCAST"": [ 24, {
				 ""InProgress"": [ 0, [ ""Byte"", ""null"" ]],
				 ""SystemContext"": [ 4, [ ""_SYSTEM_POWER_STATE_CONTEXT"", ""null"" ]],
				 ""PowerAction"": [ 8, [ ""Enumeration"", ""{\""enum_name\"":\""POWER_ACTION\"",\""target\"":\""UInt32\""}"" ]],
				 ""DeviceState"": [ 16, [ ""Pointer"", ""{\""target\"":\""_POP_DEVICE_SYS_STATE\""}"" ]] }]
				 }
				)";
			}
		}
		public Byte InProgress{ get { return _StructureData[_BufferOffset +0]; } }
		public _SYSTEM_POWER_STATE_CONTEXT SystemContext
		{
			get
			{
				_SYSTEM_POWER_STATE_CONTEXT returnValue = new _SYSTEM_POWER_STATE_CONTEXT(_StructureData, _BufferOffset + 4);
				return returnValue;
			}
		}
		public POWER_ACTION PowerAction { get { return (POWER_ACTION)BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt64 DeviceState { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _PHYSICAL_MEMORY_DESCRIPTOR
 
	public class _PHYSICAL_MEMORY_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PHYSICAL_MEMORY_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PHYSICAL_MEMORY_DESCRIPTOR"": [ 32, {
				 ""NumberOfRuns"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""NumberOfPages"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""Run"": [ 16, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 NumberOfRuns { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 NumberOfPages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _PHYSICAL_MEMORY_RUN[] Run
		{
			get
			{
				_PHYSICAL_MEMORY_RUN[] returnValue = new _PHYSICAL_MEMORY_RUN[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _PHYSICAL_MEMORY_RUN(_StructureData, (i * size) + _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region PEPHANDLE__
 
	public class PEPHANDLE__
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public PEPHANDLE__(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""PEPHANDLE__"": [ 4, {
				 ""unused"": [ 0, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int32 unused { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_35500
 
	public class _UNNAMED_35500
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_35500(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_35500"": [ 4, {
				 ""BaseMiddle"": [ 0, [ ""Byte"", ""null"" ]],
				 ""Flags1"": [ 1, [ ""Byte"", ""null"" ]],
				 ""Flags2"": [ 2, [ ""Byte"", ""null"" ]],
				 ""BaseHigh"": [ 3, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte BaseMiddle{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte Flags1{ get { return _StructureData[_BufferOffset +1]; } }
		public Byte Flags2{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte BaseHigh{ get { return _StructureData[_BufferOffset +3]; } }
	}
	#endregion
	#region _UNNAMED_35505
 
	public class _UNNAMED_35505
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_35505(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_35505"": [ 4, {
				 ""BaseMiddle"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""Type"": [ 0, [ ""BitField"", ""{\""end_bit\"":13,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]],
				 ""Dpl"": [ 0, [ ""BitField"", ""{\""end_bit\"":15,\""start_bit\"":13,\""target\"":\""UInt32\""}"" ]],
				 ""Present"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":15,\""target\"":\""UInt32\""}"" ]],
				 ""LimitHigh"": [ 0, [ ""BitField"", ""{\""end_bit\"":20,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""System"": [ 0, [ ""BitField"", ""{\""end_bit\"":21,\""start_bit\"":20,\""target\"":\""UInt32\""}"" ]],
				 ""LongMode"": [ 0, [ ""BitField"", ""{\""end_bit\"":22,\""start_bit\"":21,\""target\"":\""UInt32\""}"" ]],
				 ""DefaultBig"": [ 0, [ ""BitField"", ""{\""end_bit\"":23,\""start_bit\"":22,\""target\"":\""UInt32\""}"" ]],
				 ""Granularity"": [ 0, [ ""BitField"", ""{\""end_bit\"":24,\""start_bit\"":23,\""target\"":\""UInt32\""}"" ]],
				 ""BaseHigh"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":24,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 BaseMiddle
		{
			get
			{
				// start: 0  end: 8  Mask: 0000000011111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 255) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 Type
		{
			get
			{
				// start: 8  end: 13  Mask: 0001111100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 7936) >> 8;
				return (UInt32)value2;
			}
		}
		public UInt32 Dpl
		{
			get
			{
				// start: 13  end: 15  Mask: 0110000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 24576) >> 13;
				return (UInt32)value2;
			}
		}
		public UInt32 Present
		{
			get
			{
				// start: 15  end: 16  Mask: 1000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 32768) >> 15;
				return (UInt32)value2;
			}
		}
		public UInt32 LimitHigh
		{
			get
			{
				// start: 16  end: 20  Mask: 11110000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 983040) >> 16;
				return (UInt32)value2;
			}
		}
		public UInt32 System
		{
			get
			{
				// start: 20  end: 21  Mask: 100000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1048576) >> 20;
				return (UInt32)value2;
			}
		}
		public UInt32 LongMode
		{
			get
			{
				// start: 21  end: 22  Mask: 1000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2097152) >> 21;
				return (UInt32)value2;
			}
		}
		public UInt32 DefaultBig
		{
			get
			{
				// start: 22  end: 23  Mask: 10000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4194304) >> 22;
				return (UInt32)value2;
			}
		}
		public UInt32 Granularity
		{
			get
			{
				// start: 23  end: 24  Mask: 100000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8388608) >> 23;
				return (UInt32)value2;
			}
		}
		public UInt32 BaseHigh
		{
			get
			{
				// start: 24  end: 32  Mask: 11111111000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4278190080) >> 24;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _KGDTENTRY64
 
	public class _KGDTENTRY64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KGDTENTRY64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KGDTENTRY64"": [ 16, {
				 ""LimitLow"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""BaseLow"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Bytes"": [ 4, [ ""_UNNAMED_35500"", ""null"" ]],
				 ""Bits"": [ 4, [ ""_UNNAMED_35505"", ""null"" ]],
				 ""BaseUpper"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""MustBeZero"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""DataLow"": [ 0, [ ""Int64"", ""null"" ]],
				 ""DataHigh"": [ 8, [ ""Int64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 LimitLow { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 BaseLow { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public _UNNAMED_35500 Bytes
		{
			get
			{
				_UNNAMED_35500 returnValue = new _UNNAMED_35500(_StructureData, _BufferOffset + 4);
				return returnValue;
			}
		}
		public _UNNAMED_35505 Bits
		{
			get
			{
				_UNNAMED_35505 returnValue = new _UNNAMED_35505(_StructureData, _BufferOffset + 4);
				return returnValue;
			}
		}
		public UInt32 BaseUpper { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 MustBeZero { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public Int64 DataLow { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 0); } }
		public Int64 DataHigh { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _PNP_DEVICE_EVENT_LIST
 
	public class _PNP_DEVICE_EVENT_LIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PNP_DEVICE_EVENT_LIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 136; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PNP_DEVICE_EVENT_LIST"": [ 136, {
				 ""Status"": [ 0, [ ""Int32"", ""null"" ]],
				 ""EventQueueMutex"": [ 8, [ ""_KMUTANT"", ""null"" ]],
				 ""Lock"": [ 64, [ ""_FAST_MUTEX"", ""null"" ]],
				 ""List"": [ 120, [ ""_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int32 Status { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public _KMUTANT EventQueueMutex
		{
			get
			{
				_KMUTANT returnValue = new _KMUTANT(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _FAST_MUTEX Lock
		{
			get
			{
				_FAST_MUTEX returnValue = new _FAST_MUTEX(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public _LIST_ENTRY List
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 120);
				return returnValue;
			}
		}
	}
	#endregion
	#region _IOV_IRP_TRACE
 
	public class _IOV_IRP_TRACE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IOV_IRP_TRACE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 128; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IOV_IRP_TRACE"": [ 128, {
				 ""Irp"": [ 0, [ ""Pointer"", ""{\""target\"":\""_IRP\""}"" ]],
				 ""Thread"": [ 8, [ ""Pointer"", ""{\""target\"":\""_KTHREAD\""}"" ]],
				 ""KernelApcDisable"": [ 16, [ ""Int16"", ""null"" ]],
				 ""SpecialApcDisable"": [ 18, [ ""Int16"", ""null"" ]],
				 ""CombinedApcDisable"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""Irql"": [ 20, [ ""Byte"", ""null"" ]],
				 ""StackTrace"": [ 24, [ ""Array"", ""{\""count\"":13,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Irp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Thread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public Int16 KernelApcDisable { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 16); } }
		public Int16 SpecialApcDisable { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 18); } }
		public UInt32 CombinedApcDisable { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public Byte Irql{ get { return _StructureData[_BufferOffset +20]; } }
		public UInt64[] StackTrace
		{
			get
			{
				UInt64[] returnValue = new UInt64[13];
				int size = 8;
				for(int i=0; i<13; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 24);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MAILSLOT_CREATE_PARAMETERS
 
	public class _MAILSLOT_CREATE_PARAMETERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MAILSLOT_CREATE_PARAMETERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MAILSLOT_CREATE_PARAMETERS"": [ 24, {
				 ""MailslotQuota"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""MaximumMessageSize"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""ReadTimeout"": [ 8, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""TimeoutSpecified"": [ 16, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 MailslotQuota { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 MaximumMessageSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _LARGE_INTEGER ReadTimeout
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public Byte TimeoutSpecified{ get { return _StructureData[_BufferOffset +16]; } }
	}
	#endregion
	#region _PO_IRP_MANAGER
 
	public class _PO_IRP_MANAGER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PO_IRP_MANAGER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PO_IRP_MANAGER"": [ 32, {
				 ""DeviceIrpQueue"": [ 0, [ ""_PO_IRP_QUEUE"", ""null"" ]],
				 ""SystemIrpQueue"": [ 16, [ ""_PO_IRP_QUEUE"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _PO_IRP_QUEUE DeviceIrpQueue
		{
			get
			{
				_PO_IRP_QUEUE returnValue = new _PO_IRP_QUEUE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _PO_IRP_QUEUE SystemIrpQueue
		{
			get
			{
				_PO_IRP_QUEUE returnValue = new _PO_IRP_QUEUE(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _DYNAMIC_FUNCTION_TABLE
 
	public class _DYNAMIC_FUNCTION_TABLE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DYNAMIC_FUNCTION_TABLE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 88; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DYNAMIC_FUNCTION_TABLE"": [ 88, {
				 ""ListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""FunctionTable"": [ 16, [ ""Pointer"", ""{\""target\"":\""_IMAGE_RUNTIME_FUNCTION_ENTRY\""}"" ]],
				 ""TimeStamp"": [ 24, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""MinimumAddress"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""MaximumAddress"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""BaseAddress"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""Callback"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Context"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""OutOfProcessCallbackDll"": [ 72, [ ""Pointer"", ""{\""target\"":\""UInt16\""}"" ]],
				 ""Type"": [ 80, [ ""Enumeration"", ""{\""enum_name\"":\""_FUNCTION_TABLE_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""EntryCount"": [ 84, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 FunctionTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public _LARGE_INTEGER TimeStamp
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt64 MinimumAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 MaximumAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 BaseAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 Callback { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 Context { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 OutOfProcessCallbackDll { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public _FUNCTION_TABLE_TYPE Type { get { return (_FUNCTION_TABLE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 EntryCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
	}
	#endregion
	#region _SEP_LOWBOX_HANDLES_TABLE
 
	public class _SEP_LOWBOX_HANDLES_TABLE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SEP_LOWBOX_HANDLES_TABLE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SEP_LOWBOX_HANDLES_TABLE"": [ 16, {
				 ""Lock"": [ 0, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""HashTable"": [ 8, [ ""Pointer"", ""{\""target\"":\""_RTL_DYNAMIC_HASH_TABLE\""}"" ]] }]
				 }
				)";
			}
		}
		public _EX_PUSH_LOCK Lock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 HashTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _CLIENT_ID64
 
	public class _CLIENT_ID64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CLIENT_ID64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CLIENT_ID64"": [ 16, {
				 ""UniqueProcess"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""UniqueThread"": [ 8, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 UniqueProcess { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 UniqueThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_35561
 
	public class _UNNAMED_35561
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_35561(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_35561"": [ 4, {
				 ""Level"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Level { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_35563
 
	public class _UNNAMED_35563
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_35563(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_35563"": [ 4, {
				 ""Type"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Type { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _POP_ACTION_TRIGGER
 
	public class _POP_ACTION_TRIGGER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_ACTION_TRIGGER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_ACTION_TRIGGER"": [ 24, {
				 ""Type"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""POWER_POLICY_DEVICE_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""Flags"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Wait"": [ 8, [ ""Pointer"", ""{\""target\"":\""_POP_TRIGGER_WAIT\""}"" ]],
				 ""Battery"": [ 16, [ ""_UNNAMED_35561"", ""null"" ]],
				 ""Button"": [ 16, [ ""_UNNAMED_35563"", ""null"" ]] }]
				 }
				)";
			}
		}
		public POWER_POLICY_DEVICE_TYPE Type { get { return (POWER_POLICY_DEVICE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 Wait { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _UNNAMED_35561 Battery
		{
			get
			{
				_UNNAMED_35561 returnValue = new _UNNAMED_35561(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _UNNAMED_35563 Button
		{
			get
			{
				_UNNAMED_35563 returnValue = new _UNNAMED_35563(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _KDPC_DATA
 
	public class _KDPC_DATA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KDPC_DATA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KDPC_DATA"": [ 40, {
				 ""DpcList"": [ 0, [ ""_KDPC_LIST"", ""null"" ]],
				 ""DpcLock"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""DpcQueueDepth"": [ 24, [ ""Int32"", ""null"" ]],
				 ""DpcCount"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""ActiveDpc"": [ 32, [ ""Pointer"", ""{\""target\"":\""_KDPC\""}"" ]] }]
				 }
				)";
			}
		}
		public _KDPC_LIST DpcList
		{
			get
			{
				_KDPC_LIST returnValue = new _KDPC_LIST(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 DpcLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public Int32 DpcQueueDepth { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 DpcCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt64 ActiveDpc { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _NAMED_PIPE_CREATE_PARAMETERS
 
	public class _NAMED_PIPE_CREATE_PARAMETERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _NAMED_PIPE_CREATE_PARAMETERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_NAMED_PIPE_CREATE_PARAMETERS"": [ 40, {
				 ""NamedPipeType"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ReadMode"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""CompletionMode"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""MaximumInstances"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""InboundQuota"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""OutboundQuota"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""DefaultTimeout"": [ 24, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""TimeoutSpecified"": [ 32, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 NamedPipeType { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 ReadMode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 CompletionMode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 MaximumInstances { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 InboundQuota { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 OutboundQuota { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public _LARGE_INTEGER DefaultTimeout
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public Byte TimeoutSpecified{ get { return _StructureData[_BufferOffset +32]; } }
	}
	#endregion
	#region _CM_BIG_DATA
 
	public class _CM_BIG_DATA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_BIG_DATA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_BIG_DATA"": [ 8, {
				 ""Signature"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Count"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""List"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Signature { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 Count { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt32 List { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _KSCB
 
	public class _KSCB
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KSCB(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 368; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KSCB"": [ 368, {
				 ""GenerationCycles"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""UnderQuotaCycleTarget"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""RankCycleTarget"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""LongTermCycles"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""LastReportedCycles"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""OverQuotaHistory"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""ReadyTime"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""InsertTime"": [ 56, [ ""UInt64"", ""null"" ]],
				 ""PerProcessorList"": [ 64, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""QueueNode"": [ 80, [ ""_RTL_BALANCED_NODE"", ""null"" ]],
				 ""Inserted"": [ 104, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""OverQuota"": [ 104, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""HardCap"": [ 104, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""RankBias"": [ 104, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""Spare1"": [ 104, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""Spare2"": [ 105, [ ""Byte"", ""null"" ]],
				 ""ReadySummary"": [ 106, [ ""UInt16"", ""null"" ]],
				 ""Rank"": [ 108, [ ""UInt32"", ""null"" ]],
				 ""ReadyListHead"": [ 112, [ ""Array"", ""{\""count\"":16,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 GenerationCycles { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 UnderQuotaCycleTarget { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 RankCycleTarget { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 LongTermCycles { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 LastReportedCycles { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 OverQuotaHistory { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 ReadyTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 InsertTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public _LIST_ENTRY PerProcessorList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public _RTL_BALANCED_NODE QueueNode
		{
			get
			{
				_RTL_BALANCED_NODE returnValue = new _RTL_BALANCED_NODE(_StructureData, _BufferOffset + 80);
				return returnValue;
			}
		}
		public Byte Inserted
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 104];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte OverQuota
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 104];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte HardCap
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 104];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte RankBias
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 104];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte Spare1
		{
			get
			{
				// start: 4  end: 8  Mask: 0000000011110000
				Byte value = _StructureData[_BufferOffset + 104];
				var value2 = (value & 240) >> 4;
				return (Byte)value2;
			}
		}
		public Byte Spare2{ get { return _StructureData[_BufferOffset +105]; } }
		public UInt16 ReadySummary { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 106); } }
		public UInt32 Rank { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 108); } }
		public _LIST_ENTRY[] ReadyListHead
		{
			get
			{
				_LIST_ENTRY[] returnValue = new _LIST_ENTRY[16];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<16; i++ )
					returnValue[i] = new _LIST_ENTRY(_StructureData, (i * size) + _BufferOffset + 112);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_35611
 
	public class _UNNAMED_35611
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_35611(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_35611"": [ 16, {
				 ""UserData"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Owner"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 UserData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Owner { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_35614
 
	public class _UNNAMED_35614
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_35614(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_35614"": [ 16, {
				 ""ListHead"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _RTLP_RANGE_LIST_ENTRY
 
	public class _RTLP_RANGE_LIST_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTLP_RANGE_LIST_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTLP_RANGE_LIST_ENTRY"": [ 56, {
				 ""Start"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""End"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""Allocated"": [ 16, [ ""_UNNAMED_35611"", ""null"" ]],
				 ""Merged"": [ 16, [ ""_UNNAMED_35614"", ""null"" ]],
				 ""Attributes"": [ 32, [ ""Byte"", ""null"" ]],
				 ""PublicFlags"": [ 33, [ ""Byte"", ""null"" ]],
				 ""PrivateFlags"": [ 34, [ ""UInt16"", ""null"" ]],
				 ""ListEntry"": [ 40, [ ""_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Start { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 End { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _UNNAMED_35611 Allocated
		{
			get
			{
				_UNNAMED_35611 returnValue = new _UNNAMED_35611(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _UNNAMED_35614 Merged
		{
			get
			{
				_UNNAMED_35614 returnValue = new _UNNAMED_35614(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public Byte Attributes{ get { return _StructureData[_BufferOffset +32]; } }
		public Byte PublicFlags{ get { return _StructureData[_BufferOffset +33]; } }
		public UInt16 PrivateFlags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 34); } }
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ALPC_COMPLETION_PACKET_LOOKASIDE_ENTRY
 
	public class _ALPC_COMPLETION_PACKET_LOOKASIDE_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ALPC_COMPLETION_PACKET_LOOKASIDE_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ALPC_COMPLETION_PACKET_LOOKASIDE_ENTRY"": [ 24, {
				 ""ListEntry"": [ 0, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""Packet"": [ 8, [ ""Pointer"", ""{\""target\"":\""_IO_MINI_COMPLETION_PACKET_USER\""}"" ]],
				 ""Lookaside"": [ 16, [ ""Pointer"", ""{\""target\"":\""_ALPC_COMPLETION_PACKET_LOOKASIDE\""}"" ]] }]
				 }
				)";
			}
		}
		public _SINGLE_LIST_ENTRY ListEntry
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Packet { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Lookaside { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _PROC_PERF_HISTORY
 
	public class _PROC_PERF_HISTORY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROC_PERF_HISTORY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROC_PERF_HISTORY"": [ 16, {
				 ""Count"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Slot"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""HistoryList"": [ 8, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Count { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Slot { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _PROC_PERF_HISTORY_ENTRY[] HistoryList
		{
			get
			{
				_PROC_PERF_HISTORY_ENTRY[] returnValue = new _PROC_PERF_HISTORY_ENTRY[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _PROC_PERF_HISTORY_ENTRY(_StructureData, (i * size) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _IMAGE_RUNTIME_FUNCTION_ENTRY
 
	public class _IMAGE_RUNTIME_FUNCTION_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IMAGE_RUNTIME_FUNCTION_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IMAGE_RUNTIME_FUNCTION_ENTRY"": [ 12, {
				 ""BeginAddress"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""EndAddress"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""UnwindInfoAddress"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""UnwindData"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 BeginAddress { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 EndAddress { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 UnwindInfoAddress { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 UnwindData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_35637
 
	public class _UNNAMED_35637
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_35637(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 2; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_35637"": [ 2, {
				 ""AsUSHORT"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""AllowScaling"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""Disabled"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt16\""}"" ]],
				 ""Reserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":2,\""target\"":\""UInt16\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 AsUSHORT { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 AllowScaling
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 Disabled
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt16)value2;
			}
		}
		public UInt16 Reserved
		{
			get
			{
				// start: 2  end: 16  Mask: 1111111111111100
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 65532) >> 2;
				return (UInt16)value2;
			}
		}
	}
	#endregion
	#region PROCESSOR_IDLESTATE_POLICY
 
	public class PROCESSOR_IDLESTATE_POLICY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public PROCESSOR_IDLESTATE_POLICY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""PROCESSOR_IDLESTATE_POLICY"": [ 32, {
				 ""Revision"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Flags"": [ 2, [ ""_UNNAMED_35637"", ""null"" ]],
				 ""PolicyCount"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Policy"": [ 8, [ ""Array"", ""{\""count\"":3,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Revision { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public _UNNAMED_35637 Flags
		{
			get
			{
				_UNNAMED_35637 returnValue = new _UNNAMED_35637(_StructureData, _BufferOffset + 2);
				return returnValue;
			}
		}
		public UInt32 PolicyCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public PROCESSOR_IDLESTATE_INFO[] Policy
		{
			get
			{
				PROCESSOR_IDLESTATE_INFO[] returnValue = new PROCESSOR_IDLESTATE_INFO[3];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<3; i++ )
					returnValue[i] = new PROCESSOR_IDLESTATE_INFO(_StructureData, (i * size) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ACTIVATION_CONTEXT_STACK
 
	public class _ACTIVATION_CONTEXT_STACK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ACTIVATION_CONTEXT_STACK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ACTIVATION_CONTEXT_STACK"": [ 40, {
				 ""ActiveFrame"": [ 0, [ ""Pointer"", ""{\""target\"":\""_RTL_ACTIVATION_CONTEXT_STACK_FRAME\""}"" ]],
				 ""FrameListCache"": [ 8, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Flags"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""NextCookieSequenceNumber"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""StackId"": [ 32, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ActiveFrame { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _LIST_ENTRY FrameListCache
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 NextCookieSequenceNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 StackId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _RTL_DRIVE_LETTER_CURDIR
 
	public class _RTL_DRIVE_LETTER_CURDIR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_DRIVE_LETTER_CURDIR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_DRIVE_LETTER_CURDIR"": [ 24, {
				 ""Flags"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Length"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""TimeStamp"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""DosPath"": [ 8, [ ""_STRING"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Flags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 Length { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt32 TimeStamp { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _STRING DosPath
		{
			get
			{
				_STRING returnValue = new _STRING(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MI_PTE_CHAIN_HEAD
 
	public class _MI_PTE_CHAIN_HEAD
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MI_PTE_CHAIN_HEAD(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MI_PTE_CHAIN_HEAD"": [ 24, {
				 ""Flink"": [ 0, [ ""_MMPTE"", ""null"" ]],
				 ""Blink"": [ 8, [ ""_MMPTE"", ""null"" ]],
				 ""PteBase"": [ 16, [ ""Pointer"", ""{\""target\"":\""_MMPTE\""}"" ]] }]
				 }
				)";
			}
		}
		public _MMPTE Flink
		{
			get
			{
				_MMPTE returnValue = new _MMPTE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _MMPTE Blink
		{
			get
			{
				_MMPTE returnValue = new _MMPTE(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt64 PteBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region SYSTEM_POWER_CAPABILITIES
 
	public class SYSTEM_POWER_CAPABILITIES
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public SYSTEM_POWER_CAPABILITIES(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 76; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""SYSTEM_POWER_CAPABILITIES"": [ 76, {
				 ""PowerButtonPresent"": [ 0, [ ""Byte"", ""null"" ]],
				 ""SleepButtonPresent"": [ 1, [ ""Byte"", ""null"" ]],
				 ""LidPresent"": [ 2, [ ""Byte"", ""null"" ]],
				 ""SystemS1"": [ 3, [ ""Byte"", ""null"" ]],
				 ""SystemS2"": [ 4, [ ""Byte"", ""null"" ]],
				 ""SystemS3"": [ 5, [ ""Byte"", ""null"" ]],
				 ""SystemS4"": [ 6, [ ""Byte"", ""null"" ]],
				 ""SystemS5"": [ 7, [ ""Byte"", ""null"" ]],
				 ""HiberFilePresent"": [ 8, [ ""Byte"", ""null"" ]],
				 ""FullWake"": [ 9, [ ""Byte"", ""null"" ]],
				 ""VideoDimPresent"": [ 10, [ ""Byte"", ""null"" ]],
				 ""ApmPresent"": [ 11, [ ""Byte"", ""null"" ]],
				 ""UpsPresent"": [ 12, [ ""Byte"", ""null"" ]],
				 ""ThermalControl"": [ 13, [ ""Byte"", ""null"" ]],
				 ""ProcessorThrottle"": [ 14, [ ""Byte"", ""null"" ]],
				 ""ProcessorMinThrottle"": [ 15, [ ""Byte"", ""null"" ]],
				 ""ProcessorMaxThrottle"": [ 16, [ ""Byte"", ""null"" ]],
				 ""FastSystemS4"": [ 17, [ ""Byte"", ""null"" ]],
				 ""Hiberboot"": [ 18, [ ""Byte"", ""null"" ]],
				 ""WakeAlarmPresent"": [ 19, [ ""Byte"", ""null"" ]],
				 ""AoAc"": [ 20, [ ""Byte"", ""null"" ]],
				 ""DiskSpinDown"": [ 21, [ ""Byte"", ""null"" ]],
				 ""spare3"": [ 22, [ ""Array"", ""{\""count\"":8,\""target\"":\""Byte\""}"" ]],
				 ""SystemBatteriesPresent"": [ 30, [ ""Byte"", ""null"" ]],
				 ""BatteriesAreShortTerm"": [ 31, [ ""Byte"", ""null"" ]],
				 ""BatteryScale"": [ 32, [ ""Array"", ""{\""count\"":3,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""AcOnLineWake"": [ 56, [ ""Enumeration"", ""{\""enum_name\"":\""_SYSTEM_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""SoftLidWake"": [ 60, [ ""Enumeration"", ""{\""enum_name\"":\""_SYSTEM_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""RtcWake"": [ 64, [ ""Enumeration"", ""{\""enum_name\"":\""_SYSTEM_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""MinDeviceWakeState"": [ 68, [ ""Enumeration"", ""{\""enum_name\"":\""_SYSTEM_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""DefaultLowLatencyWake"": [ 72, [ ""Enumeration"", ""{\""enum_name\"":\""_SYSTEM_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public Byte PowerButtonPresent{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte SleepButtonPresent{ get { return _StructureData[_BufferOffset +1]; } }
		public Byte LidPresent{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte SystemS1{ get { return _StructureData[_BufferOffset +3]; } }
		public Byte SystemS2{ get { return _StructureData[_BufferOffset +4]; } }
		public Byte SystemS3{ get { return _StructureData[_BufferOffset +5]; } }
		public Byte SystemS4{ get { return _StructureData[_BufferOffset +6]; } }
		public Byte SystemS5{ get { return _StructureData[_BufferOffset +7]; } }
		public Byte HiberFilePresent{ get { return _StructureData[_BufferOffset +8]; } }
		public Byte FullWake{ get { return _StructureData[_BufferOffset +9]; } }
		public Byte VideoDimPresent{ get { return _StructureData[_BufferOffset +10]; } }
		public Byte ApmPresent{ get { return _StructureData[_BufferOffset +11]; } }
		public Byte UpsPresent{ get { return _StructureData[_BufferOffset +12]; } }
		public Byte ThermalControl{ get { return _StructureData[_BufferOffset +13]; } }
		public Byte ProcessorThrottle{ get { return _StructureData[_BufferOffset +14]; } }
		public Byte ProcessorMinThrottle{ get { return _StructureData[_BufferOffset +15]; } }
		public Byte ProcessorMaxThrottle{ get { return _StructureData[_BufferOffset +16]; } }
		public Byte FastSystemS4{ get { return _StructureData[_BufferOffset +17]; } }
		public Byte Hiberboot{ get { return _StructureData[_BufferOffset +18]; } }
		public Byte WakeAlarmPresent{ get { return _StructureData[_BufferOffset +19]; } }
		public Byte AoAc{ get { return _StructureData[_BufferOffset +20]; } }
		public Byte DiskSpinDown{ get { return _StructureData[_BufferOffset +21]; } }
		public Byte[] spare3
		{
			get
			{
				Byte[] returnValue = new Byte[8];
				for(int i=0; i<8; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 22];
				return returnValue;
			}
		}
		public Byte SystemBatteriesPresent{ get { return _StructureData[_BufferOffset +30]; } }
		public Byte BatteriesAreShortTerm{ get { return _StructureData[_BufferOffset +31]; } }
		public BATTERY_REPORTING_SCALE[] BatteryScale
		{
			get
			{
				BATTERY_REPORTING_SCALE[] returnValue = new BATTERY_REPORTING_SCALE[3];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<3; i++ )
					returnValue[i] = new BATTERY_REPORTING_SCALE(_StructureData, (i * size) + _BufferOffset + 32);
				return returnValue;
			}
		}
		public _SYSTEM_POWER_STATE AcOnLineWake { get { return (_SYSTEM_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public _SYSTEM_POWER_STATE SoftLidWake { get { return (_SYSTEM_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
		public _SYSTEM_POWER_STATE RtcWake { get { return (_SYSTEM_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public _SYSTEM_POWER_STATE MinDeviceWakeState { get { return (_SYSTEM_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 68); } }
		public _SYSTEM_POWER_STATE DefaultLowLatencyWake { get { return (_SYSTEM_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 72); } }
	}
	#endregion
	#region _UNNAMED_35696
 
	public class _UNNAMED_35696
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_35696(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_35696"": [ 8, {
				 ""ImageCommitment"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""CreatingProcess"": [ 0, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ImageCommitment { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 CreatingProcess { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_35699
 
	public class _UNNAMED_35699
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_35699(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_35699"": [ 8, {
				 ""ImageInformation"": [ 0, [ ""Pointer"", ""{\""target\"":\""_MI_SECTION_IMAGE_INFORMATION\""}"" ]],
				 ""FirstMappedVa"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ImageInformation { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 FirstMappedVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _SEGMENT
 
	public class _SEGMENT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SEGMENT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SEGMENT"": [ 72, {
				 ""ControlArea"": [ 0, [ ""Pointer"", ""{\""target\"":\""_CONTROL_AREA\""}"" ]],
				 ""TotalNumberOfPtes"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""SegmentFlags"": [ 12, [ ""_SEGMENT_FLAGS"", ""null"" ]],
				 ""NumberOfCommittedPages"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""SizeOfSegment"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""ExtendInfo"": [ 32, [ ""Pointer"", ""{\""target\"":\""_MMEXTEND_INFO\""}"" ]],
				 ""BasedAddress"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SegmentLock"": [ 40, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""u1"": [ 48, [ ""_UNNAMED_35696"", ""null"" ]],
				 ""u2"": [ 56, [ ""_UNNAMED_35699"", ""null"" ]],
				 ""PrototypePte"": [ 64, [ ""Pointer"", ""{\""target\"":\""_MMPTE\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ControlArea { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 TotalNumberOfPtes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public _SEGMENT_FLAGS SegmentFlags
		{
			get
			{
				_SEGMENT_FLAGS returnValue = new _SEGMENT_FLAGS(_StructureData, _BufferOffset + 12);
				return returnValue;
			}
		}
		public UInt64 NumberOfCommittedPages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 SizeOfSegment { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 ExtendInfo { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 BasedAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public _EX_PUSH_LOCK SegmentLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public _UNNAMED_35696 u1
		{
			get
			{
				_UNNAMED_35696 returnValue = new _UNNAMED_35696(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public _UNNAMED_35699 u2
		{
			get
			{
				_UNNAMED_35699 returnValue = new _UNNAMED_35699(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public UInt64 PrototypePte { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
	}
	#endregion
	#region _DIAGNOSTIC_CONTEXT
 
	public class _DIAGNOSTIC_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DIAGNOSTIC_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DIAGNOSTIC_CONTEXT"": [ 32, {
				 ""CallerType"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""_REQUESTER_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""Process"": [ 8, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""ServiceTag"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""DeviceObject"": [ 8, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""ReasonSize"": [ 24, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _REQUESTER_TYPE CallerType { get { return (_REQUESTER_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 Process { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 ServiceTag { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt64 DeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 ReasonSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _UNNAMED_35720
 
	public class _UNNAMED_35720
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_35720(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_35720"": [ 4, {
				 ""MissedEtwRegistration"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""Spare"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 MissedEtwRegistration
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 Spare
		{
			get
			{
				// start: 1  end: 32  Mask: 11111111111111111111111111111110
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967294) >> 1;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _UNNAMED_35723
 
	public class _UNNAMED_35723
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_35723(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_35723"": [ 4, {
				 ""Flags"": [ 0, [ ""_UNNAMED_35720"", ""null"" ]],
				 ""Whole"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_35720 Flags
		{
			get
			{
				_UNNAMED_35720 returnValue = new _UNNAMED_35720(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 Whole { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _VF_TARGET_VERIFIED_DRIVER_DATA
 
	public class _VF_TARGET_VERIFIED_DRIVER_DATA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VF_TARGET_VERIFIED_DRIVER_DATA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 256; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VF_TARGET_VERIFIED_DRIVER_DATA"": [ 256, {
				 ""SuspectDriverEntry"": [ 0, [ ""Pointer"", ""{\""target\"":\""_VF_SUSPECT_DRIVER_ENTRY\""}"" ]],
				 ""WMICallback"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""EtwHandlesListHead"": [ 16, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""u1"": [ 32, [ ""_UNNAMED_35723"", ""null"" ]],
				 ""Signature"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""PoolPageHeaders"": [ 48, [ ""_SLIST_HEADER"", ""null"" ]],
				 ""PoolTrackers"": [ 64, [ ""_SLIST_HEADER"", ""null"" ]],
				 ""CurrentPagedPoolAllocations"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""CurrentNonPagedPoolAllocations"": [ 84, [ ""UInt32"", ""null"" ]],
				 ""PeakPagedPoolAllocations"": [ 88, [ ""UInt32"", ""null"" ]],
				 ""PeakNonPagedPoolAllocations"": [ 92, [ ""UInt32"", ""null"" ]],
				 ""PagedBytes"": [ 96, [ ""UInt64"", ""null"" ]],
				 ""NonPagedBytes"": [ 104, [ ""UInt64"", ""null"" ]],
				 ""PeakPagedBytes"": [ 112, [ ""UInt64"", ""null"" ]],
				 ""PeakNonPagedBytes"": [ 120, [ ""UInt64"", ""null"" ]],
				 ""RaiseIrqls"": [ 128, [ ""UInt32"", ""null"" ]],
				 ""AcquireSpinLocks"": [ 132, [ ""UInt32"", ""null"" ]],
				 ""SynchronizeExecutions"": [ 136, [ ""UInt32"", ""null"" ]],
				 ""AllocationsWithNoTag"": [ 140, [ ""UInt32"", ""null"" ]],
				 ""AllocationsFailed"": [ 144, [ ""UInt32"", ""null"" ]],
				 ""AllocationsFailedDeliberately"": [ 148, [ ""UInt32"", ""null"" ]],
				 ""LockedBytes"": [ 152, [ ""UInt64"", ""null"" ]],
				 ""PeakLockedBytes"": [ 160, [ ""UInt64"", ""null"" ]],
				 ""MappedLockedBytes"": [ 168, [ ""UInt64"", ""null"" ]],
				 ""PeakMappedLockedBytes"": [ 176, [ ""UInt64"", ""null"" ]],
				 ""MappedIoSpaceBytes"": [ 184, [ ""UInt64"", ""null"" ]],
				 ""PeakMappedIoSpaceBytes"": [ 192, [ ""UInt64"", ""null"" ]],
				 ""PagesForMdlBytes"": [ 200, [ ""UInt64"", ""null"" ]],
				 ""PeakPagesForMdlBytes"": [ 208, [ ""UInt64"", ""null"" ]],
				 ""ContiguousMemoryBytes"": [ 216, [ ""UInt64"", ""null"" ]],
				 ""PeakContiguousMemoryBytes"": [ 224, [ ""UInt64"", ""null"" ]],
				 ""ContiguousMemoryListHead"": [ 232, [ ""_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 SuspectDriverEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 WMICallback { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _LIST_ENTRY EtwHandlesListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _UNNAMED_35723 u1
		{
			get
			{
				_UNNAMED_35723 returnValue = new _UNNAMED_35723(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt64 Signature { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public _SLIST_HEADER PoolPageHeaders
		{
			get
			{
				_SLIST_HEADER returnValue = new _SLIST_HEADER(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public _SLIST_HEADER PoolTrackers
		{
			get
			{
				_SLIST_HEADER returnValue = new _SLIST_HEADER(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public UInt32 CurrentPagedPoolAllocations { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 CurrentNonPagedPoolAllocations { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
		public UInt32 PeakPagedPoolAllocations { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 88); } }
		public UInt32 PeakNonPagedPoolAllocations { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 92); } }
		public UInt64 PagedBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt64 NonPagedBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public UInt64 PeakPagedBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 112); } }
		public UInt64 PeakNonPagedBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 120); } }
		public UInt32 RaiseIrqls { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 128); } }
		public UInt32 AcquireSpinLocks { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 132); } }
		public UInt32 SynchronizeExecutions { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 136); } }
		public UInt32 AllocationsWithNoTag { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 140); } }
		public UInt32 AllocationsFailed { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 144); } }
		public UInt32 AllocationsFailedDeliberately { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 148); } }
		public UInt64 LockedBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 152); } }
		public UInt64 PeakLockedBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public UInt64 MappedLockedBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 168); } }
		public UInt64 PeakMappedLockedBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 176); } }
		public UInt64 MappedIoSpaceBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 184); } }
		public UInt64 PeakMappedIoSpaceBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 192); } }
		public UInt64 PagesForMdlBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 200); } }
		public UInt64 PeakPagesForMdlBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 208); } }
		public UInt64 ContiguousMemoryBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 216); } }
		public UInt64 PeakContiguousMemoryBytes { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 224); } }
		public _LIST_ENTRY ContiguousMemoryListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 232);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MMVAD_FLAGS1
 
	public class _MMVAD_FLAGS1
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMVAD_FLAGS1(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMVAD_FLAGS1"": [ 4, {
				 ""CommitCharge"": [ 0, [ ""BitField"", ""{\""end_bit\"":31,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""MemCommit"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":31,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 CommitCharge
		{
			get
			{
				// start: 0  end: 31  Mask: 1111111111111111111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2147483647) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 MemCommit
		{
			get
			{
				// start: 31  end: 32  Mask: 10000000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2147483648) >> 31;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _PRIVATE_CACHE_MAP
 
	public class _PRIVATE_CACHE_MAP
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PRIVATE_CACHE_MAP(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 120; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PRIVATE_CACHE_MAP"": [ 120, {
				 ""NodeTypeCode"": [ 0, [ ""Int16"", ""null"" ]],
				 ""Flags"": [ 0, [ ""_PRIVATE_CACHE_MAP_FLAGS"", ""null"" ]],
				 ""ReadAheadMask"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""FileObject"": [ 8, [ ""Pointer"", ""{\""target\"":\""_FILE_OBJECT\""}"" ]],
				 ""FileOffset1"": [ 16, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""BeyondLastByte1"": [ 24, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""FileOffset2"": [ 32, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""BeyondLastByte2"": [ 40, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""SequentialReadCount"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""ReadAheadLength"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""ReadAheadOffset"": [ 56, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""ReadAheadBeyondLastByte"": [ 64, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""PrevReadAheadBeyondLastByte"": [ 72, [ ""UInt64"", ""null"" ]],
				 ""ReadAheadSpinLock"": [ 80, [ ""UInt64"", ""null"" ]],
				 ""PipelinedReadAheadRequestSize"": [ 88, [ ""UInt32"", ""null"" ]],
				 ""ReadAheadGrowth"": [ 92, [ ""UInt32"", ""null"" ]],
				 ""PrivateLinks"": [ 96, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ReadAheadWorkItem"": [ 112, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public Int16 NodeTypeCode { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 0); } }
		public _PRIVATE_CACHE_MAP_FLAGS Flags
		{
			get
			{
				_PRIVATE_CACHE_MAP_FLAGS returnValue = new _PRIVATE_CACHE_MAP_FLAGS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 ReadAheadMask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 FileObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _LARGE_INTEGER FileOffset1
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _LARGE_INTEGER BeyondLastByte1
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public _LARGE_INTEGER FileOffset2
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public _LARGE_INTEGER BeyondLastByte2
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public UInt32 SequentialReadCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public UInt32 ReadAheadLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public _LARGE_INTEGER ReadAheadOffset
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public _LARGE_INTEGER ReadAheadBeyondLastByte
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public UInt64 PrevReadAheadBeyondLastByte { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 ReadAheadSpinLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt32 PipelinedReadAheadRequestSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 88); } }
		public UInt32 ReadAheadGrowth { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 92); } }
		public _LIST_ENTRY PrivateLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 96);
				return returnValue;
			}
		}
		public UInt64 ReadAheadWorkItem { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 112); } }
	}
	#endregion
	#region _CM_KEY_NODE
 
	public class _CM_KEY_NODE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_KEY_NODE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 80; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_KEY_NODE"": [ 80, {
				 ""Signature"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Flags"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""LastWriteTime"": [ 4, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""AccessBits"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""Parent"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""SubKeyCounts"": [ 20, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""SubKeyLists"": [ 28, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""ValueList"": [ 36, [ ""_CHILD_LIST"", ""null"" ]],
				 ""ChildHiveReference"": [ 28, [ ""_CM_KEY_REFERENCE"", ""null"" ]],
				 ""Security"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""Class"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""MaxNameLen"": [ 52, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""UserFlags"": [ 52, [ ""BitField"", ""{\""end_bit\"":20,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""VirtControlFlags"": [ 52, [ ""BitField"", ""{\""end_bit\"":24,\""start_bit\"":20,\""target\"":\""UInt32\""}"" ]],
				 ""Debug"": [ 52, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":24,\""target\"":\""UInt32\""}"" ]],
				 ""MaxClassLen"": [ 56, [ ""UInt32"", ""null"" ]],
				 ""MaxValueNameLen"": [ 60, [ ""UInt32"", ""null"" ]],
				 ""MaxValueDataLen"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""WorkVar"": [ 68, [ ""UInt32"", ""null"" ]],
				 ""NameLength"": [ 72, [ ""UInt16"", ""null"" ]],
				 ""ClassLength"": [ 74, [ ""UInt16"", ""null"" ]],
				 ""Name"": [ 76, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt16\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Signature { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 Flags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public _LARGE_INTEGER LastWriteTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 4);
				return returnValue;
			}
		}
		public UInt32 AccessBits { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 Parent { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32[] SubKeyCounts
		{
			get
			{
				UInt32[] returnValue = new UInt32[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 20);
				return returnValue;
			}
		}
		public UInt32[] SubKeyLists
		{
			get
			{
				UInt32[] returnValue = new UInt32[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 28);
				return returnValue;
			}
		}
		public _CHILD_LIST ValueList
		{
			get
			{
				_CHILD_LIST returnValue = new _CHILD_LIST(_StructureData, _BufferOffset + 36);
				return returnValue;
			}
		}
		public _CM_KEY_REFERENCE ChildHiveReference
		{
			get
			{
				_CM_KEY_REFERENCE returnValue = new _CM_KEY_REFERENCE(_StructureData, _BufferOffset + 28);
				return returnValue;
			}
		}
		public UInt32 Security { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public UInt32 Class { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public UInt32 MaxNameLen
		{
			get
			{
				// start: 0  end: 16  Mask: 1111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 52);
				var value2 = (value & 65535) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 UserFlags
		{
			get
			{
				// start: 16  end: 20  Mask: 11110000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 52);
				var value2 = (value & 983040) >> 16;
				return (UInt32)value2;
			}
		}
		public UInt32 VirtControlFlags
		{
			get
			{
				// start: 20  end: 24  Mask: 111100000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 52);
				var value2 = (value & 15728640) >> 20;
				return (UInt32)value2;
			}
		}
		public UInt32 Debug
		{
			get
			{
				// start: 24  end: 32  Mask: 11111111000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 52);
				var value2 = (value & 4278190080) >> 24;
				return (UInt32)value2;
			}
		}
		public UInt32 MaxClassLen { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public UInt32 MaxValueNameLen { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
		public UInt32 MaxValueDataLen { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt32 WorkVar { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 68); } }
		public UInt16 NameLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 72); } }
		public UInt16 ClassLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 74); } }
		public UInt16[] Name
		{
			get
			{
				UInt16[] returnValue = new UInt16[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 76);
				return returnValue;
			}
		}
	}
	#endregion
	#region _AER_ROOTPORT_DESCRIPTOR_FLAGS
 
	public class _AER_ROOTPORT_DESCRIPTOR_FLAGS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _AER_ROOTPORT_DESCRIPTOR_FLAGS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 2; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_AER_ROOTPORT_DESCRIPTOR_FLAGS"": [ 2, {
				 ""UncorrectableErrorMaskRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""UncorrectableErrorSeverityRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt16\""}"" ]],
				 ""CorrectableErrorMaskRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt16\""}"" ]],
				 ""AdvancedCapsAndControlRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt16\""}"" ]],
				 ""RootErrorCommandRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt16\""}"" ]],
				 ""Reserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":5,\""target\"":\""UInt16\""}"" ]],
				 ""AsUSHORT"": [ 0, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 UncorrectableErrorMaskRW
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 UncorrectableErrorSeverityRW
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt16)value2;
			}
		}
		public UInt16 CorrectableErrorMaskRW
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt16)value2;
			}
		}
		public UInt16 AdvancedCapsAndControlRW
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8) >> 3;
				return (UInt16)value2;
			}
		}
		public UInt16 RootErrorCommandRW
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16) >> 4;
				return (UInt16)value2;
			}
		}
		public UInt16 Reserved
		{
			get
			{
				// start: 5  end: 16  Mask: 1111111111100000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 65504) >> 5;
				return (UInt16)value2;
			}
		}
		public UInt16 AsUSHORT { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _PTE_TRACKER
 
	public class _PTE_TRACKER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PTE_TRACKER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 128; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PTE_TRACKER"": [ 128, {
				 ""ListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Mdl"": [ 16, [ ""Pointer"", ""{\""target\"":\""_MDL\""}"" ]],
				 ""Count"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""SystemVa"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""StartVa"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Offset"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""Length"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""Page"": [ 56, [ ""UInt64"", ""null"" ]],
				 ""IoMapping"": [ 64, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""Matched"": [ 64, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""CacheAttribute"": [ 64, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""Spare"": [ 64, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""StackTrace"": [ 72, [ ""Array"", ""{\""count\"":7,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Mdl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Count { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 SystemVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 StartVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt32 Offset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public UInt64 Page { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt32 IoMapping
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 64);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 Matched
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 64);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 CacheAttribute
		{
			get
			{
				// start: 2  end: 4  Mask: 0000000000001100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 64);
				var value2 = (value & 12) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 Spare
		{
			get
			{
				// start: 4  end: 32  Mask: 11111111111111111111111111110000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 64);
				var value2 = (value & 4294967280) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt64[] StackTrace
		{
			get
			{
				UInt64[] returnValue = new UInt64[7];
				int size = 8;
				for(int i=0; i<7; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 72);
				return returnValue;
			}
		}
	}
	#endregion
	#region _KTHREAD_COUNTERS
 
	public class _KTHREAD_COUNTERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KTHREAD_COUNTERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 424; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KTHREAD_COUNTERS"": [ 424, {
				 ""WaitReasonBitMap"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""UserData"": [ 8, [ ""Pointer"", ""{\""target\"":\""_THREAD_PERFORMANCE_DATA\""}"" ]],
				 ""Flags"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""ContextSwitches"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""CycleTimeBias"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""HardwareCounters"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""HwCounter"": [ 40, [ ""Array"", ""{\""count\"":16,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 WaitReasonBitMap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 UserData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 ContextSwitches { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt64 CycleTimeBias { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 HardwareCounters { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public _COUNTER_READING[] HwCounter
		{
			get
			{
				_COUNTER_READING[] returnValue = new _COUNTER_READING[16];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<16; i++ )
					returnValue[i] = new _COUNTER_READING(_StructureData, (i * size) + _BufferOffset + 40);
				return returnValue;
			}
		}
	}
	#endregion
	#region _SHARED_CACHE_MAP_LIST_CURSOR
 
	public class _SHARED_CACHE_MAP_LIST_CURSOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SHARED_CACHE_MAP_LIST_CURSOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SHARED_CACHE_MAP_LIST_CURSOR"": [ 24, {
				 ""SharedCacheMapLinks"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Flags"": [ 16, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY SharedCacheMapLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _DBGKD_GET_VERSION64
 
	public class _DBGKD_GET_VERSION64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DBGKD_GET_VERSION64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DBGKD_GET_VERSION64"": [ 40, {
				 ""MajorVersion"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""MinorVersion"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""ProtocolVersion"": [ 4, [ ""Byte"", ""null"" ]],
				 ""KdSecondaryVersion"": [ 5, [ ""Byte"", ""null"" ]],
				 ""Flags"": [ 6, [ ""UInt16"", ""null"" ]],
				 ""MachineType"": [ 8, [ ""UInt16"", ""null"" ]],
				 ""MaxPacketType"": [ 10, [ ""Byte"", ""null"" ]],
				 ""MaxStateChange"": [ 11, [ ""Byte"", ""null"" ]],
				 ""MaxManipulate"": [ 12, [ ""Byte"", ""null"" ]],
				 ""Simulation"": [ 13, [ ""Byte"", ""null"" ]],
				 ""Unused"": [ 14, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt16\""}"" ]],
				 ""KernBase"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""PsLoadedModuleList"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""DebuggerDataList"": [ 32, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 MajorVersion { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 MinorVersion { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public Byte ProtocolVersion{ get { return _StructureData[_BufferOffset +4]; } }
		public Byte KdSecondaryVersion{ get { return _StructureData[_BufferOffset +5]; } }
		public UInt16 Flags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
		public UInt16 MachineType { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 8); } }
		public Byte MaxPacketType{ get { return _StructureData[_BufferOffset +10]; } }
		public Byte MaxStateChange{ get { return _StructureData[_BufferOffset +11]; } }
		public Byte MaxManipulate{ get { return _StructureData[_BufferOffset +12]; } }
		public Byte Simulation{ get { return _StructureData[_BufferOffset +13]; } }
		public UInt16[] Unused
		{
			get
			{
				UInt16[] returnValue = new UInt16[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 14);
				return returnValue;
			}
		}
		public UInt64 KernBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 PsLoadedModuleList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 DebuggerDataList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _PROC_FEEDBACK_COUNTER
 
	public class _PROC_FEEDBACK_COUNTER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROC_FEEDBACK_COUNTER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROC_FEEDBACK_COUNTER"": [ 48, {
				 ""InstantaneousRead"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DifferentialRead"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""LastActualCount"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""LastReferenceCount"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""CachedValue"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""Affinitized"": [ 32, [ ""Byte"", ""null"" ]],
				 ""Differential"": [ 33, [ ""Byte"", ""null"" ]],
				 ""DisableInterrupts"": [ 34, [ ""Byte"", ""null"" ]],
				 ""Context"": [ 40, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 InstantaneousRead { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 DifferentialRead { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 LastActualCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 LastReferenceCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 CachedValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public Byte Affinitized{ get { return _StructureData[_BufferOffset +32]; } }
		public Byte Differential{ get { return _StructureData[_BufferOffset +33]; } }
		public Byte DisableInterrupts{ get { return _StructureData[_BufferOffset +34]; } }
		public UInt64 Context { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
	}
	#endregion
	#region _STRING32
 
	public class _STRING32
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _STRING32(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_STRING32"": [ 8, {
				 ""Length"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""MaximumLength"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Buffer"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Length { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 MaximumLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt32 Buffer { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _PROCESSOR_PLATFORM_STATE_RESIDENCIES
 
	public class _PROCESSOR_PLATFORM_STATE_RESIDENCIES
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROCESSOR_PLATFORM_STATE_RESIDENCIES(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROCESSOR_PLATFORM_STATE_RESIDENCIES"": [ 24, {
				 ""Count"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""States"": [ 8, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Count { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _PROCESSOR_PLATFORM_STATE_RESIDENCY[] States
		{
			get
			{
				_PROCESSOR_PLATFORM_STATE_RESIDENCY[] returnValue = new _PROCESSOR_PLATFORM_STATE_RESIDENCY[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _PROCESSOR_PLATFORM_STATE_RESIDENCY(_StructureData, (i * size) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _HMAP_ENTRY
 
	public class _HMAP_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HMAP_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HMAP_ENTRY"": [ 24, {
				 ""BlockAddress"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""BinAddress"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""MemAlloc"": [ 16, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 BlockAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 BinAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 MemAlloc { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _RTL_ATOM_TABLE_ENTRY
 
	public class _RTL_ATOM_TABLE_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_ATOM_TABLE_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_ATOM_TABLE_ENTRY"": [ 48, {
				 ""HashLink"": [ 0, [ ""Pointer"", ""{\""target\"":\""_RTL_ATOM_TABLE_ENTRY\""}"" ]],
				 ""HandleIndex"": [ 8, [ ""UInt16"", ""null"" ]],
				 ""Atom"": [ 10, [ ""UInt16"", ""null"" ]],
				 ""Reference"": [ 16, [ ""_RTL_ATOM_TABLE_REFERENCE"", ""null"" ]],
				 ""NameLength"": [ 40, [ ""Byte"", ""null"" ]],
				 ""Name"": [ 42, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt16\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 HashLink { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt16 HandleIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 8); } }
		public UInt16 Atom { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 10); } }
		public _RTL_ATOM_TABLE_REFERENCE Reference
		{
			get
			{
				_RTL_ATOM_TABLE_REFERENCE returnValue = new _RTL_ATOM_TABLE_REFERENCE(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public Byte NameLength{ get { return _StructureData[_BufferOffset +40]; } }
		public UInt16[] Name
		{
			get
			{
				UInt16[] returnValue = new UInt16[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 42);
				return returnValue;
			}
		}
	}
	#endregion
	#region _TXN_PARAMETER_BLOCK
 
	public class _TXN_PARAMETER_BLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _TXN_PARAMETER_BLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_TXN_PARAMETER_BLOCK"": [ 16, {
				 ""Length"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""TxFsContext"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""TransactionObject"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Length { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 TxFsContext { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt64 TransactionObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _DUAL
 
	public class _DUAL
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DUAL(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 632; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DUAL"": [ 632, {
				 ""Length"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Map"": [ 8, [ ""Pointer"", ""{\""target\"":\""_HMAP_DIRECTORY\""}"" ]],
				 ""SmallDir"": [ 16, [ ""Pointer"", ""{\""target\"":\""_HMAP_TABLE\""}"" ]],
				 ""Guard"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""FreeDisplay"": [ 32, [ ""Array"", ""{\""count\"":24,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""FreeBins"": [ 608, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""FreeSummary"": [ 624, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 Map { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 SmallDir { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 Guard { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public _FREE_DISPLAY[] FreeDisplay
		{
			get
			{
				_FREE_DISPLAY[] returnValue = new _FREE_DISPLAY[24];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<24; i++ )
					returnValue[i] = new _FREE_DISPLAY(_StructureData, (i * size) + _BufferOffset + 32);
				return returnValue;
			}
		}
		public _LIST_ENTRY FreeBins
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 608);
				return returnValue;
			}
		}
		public UInt32 FreeSummary { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 624); } }
	}
	#endregion
	#region _MI_VAD_SEQUENTIAL_INFO
 
	public class _MI_VAD_SEQUENTIAL_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MI_VAD_SEQUENTIAL_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MI_VAD_SEQUENTIAL_INFO"": [ 8, {
				 ""Length"": [ 0, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""Vpn"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":12,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Length
		{
			get
			{
				// start: 0  end: 12  Mask: 0000111111111111
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4095) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 Vpn
		{
			get
			{
				// start: 12  end: 64  Mask: 0000000000000000000000000000000011111111111111111111000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294963200) >> 12;
				return (UInt64)value2;
			}
		}
	}
	#endregion
	#region _PNP_DEVICE_ACTION_ENTRY
 
	public class _PNP_DEVICE_ACTION_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PNP_DEVICE_ACTION_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PNP_DEVICE_ACTION_ENTRY"": [ 56, {
				 ""ListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""DeviceObject"": [ 16, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""RequestType"": [ 24, [ ""Enumeration"", ""{\""enum_name\"":\""_PNP_DEVICE_ACTION_REQUEST\"",\""target\"":\""UInt32\""}"" ]],
				 ""ReorderingBarrier"": [ 28, [ ""Byte"", ""null"" ]],
				 ""RequestArgument"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""CompletionEvent"": [ 40, [ ""Pointer"", ""{\""target\"":\""_KEVENT\""}"" ]],
				 ""CompletionStatus"": [ 48, [ ""Pointer"", ""{\""target\"":\""long\""}"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 DeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public _PNP_DEVICE_ACTION_REQUEST RequestType { get { return (_PNP_DEVICE_ACTION_REQUEST)BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public Byte ReorderingBarrier{ get { return _StructureData[_BufferOffset +28]; } }
		public UInt64 RequestArgument { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 CompletionEvent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 CompletionStatus { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
	}
	#endregion
	#region _SEP_LOWBOX_NUMBER_ENTRY
 
	public class _SEP_LOWBOX_NUMBER_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SEP_LOWBOX_NUMBER_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SEP_LOWBOX_NUMBER_ENTRY"": [ 56, {
				 ""HashEntry"": [ 0, [ ""_RTL_DYNAMIC_HASH_TABLE_ENTRY"", ""null"" ]],
				 ""ReferenceCount"": [ 24, [ ""Int64"", ""null"" ]],
				 ""PackageSid"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""LowboxNumber"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""AtomTable"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public _RTL_DYNAMIC_HASH_TABLE_ENTRY HashEntry
		{
			get
			{
				_RTL_DYNAMIC_HASH_TABLE_ENTRY returnValue = new _RTL_DYNAMIC_HASH_TABLE_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public Int64 ReferenceCount { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 PackageSid { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt32 LowboxNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt64 AtomTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
	}
	#endregion
	#region _MI_CFG_BITMAP_INFO
 
	public class _MI_CFG_BITMAP_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MI_CFG_BITMAP_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MI_CFG_BITMAP_INFO"": [ 32, {
				 ""BaseAddress"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""RegionSize"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""VadBaseAddress"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""BitmapVad"": [ 24, [ ""Pointer"", ""{\""target\"":\""_MMVAD\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 BaseAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 RegionSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 VadBaseAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 BitmapVad { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _COUNTER_READING
 
	public class _COUNTER_READING
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _COUNTER_READING(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_COUNTER_READING"": [ 24, {
				 ""Type"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""_HARDWARE_COUNTER_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""Index"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Start"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""Total"": [ 16, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _HARDWARE_COUNTER_TYPE Type { get { return (_HARDWARE_COUNTER_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Index { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 Start { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Total { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _MMSESSION
 
	public class _MMSESSION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMSESSION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 88; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMSESSION"": [ 88, {
				 ""SystemSpaceViewLock"": [ 0, [ ""_FAST_MUTEX"", ""null"" ]],
				 ""SystemSpaceViewLockPointer"": [ 56, [ ""Pointer"", ""{\""target\"":\""_FAST_MUTEX\""}"" ]],
				 ""SystemSpaceViewTable"": [ 64, [ ""Pointer"", ""{\""target\"":\""_MMVIEW\""}"" ]],
				 ""SystemSpaceHashSize"": [ 72, [ ""UInt32"", ""null"" ]],
				 ""SystemSpaceHashEntries"": [ 76, [ ""UInt32"", ""null"" ]],
				 ""SystemSpaceHashKey"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""BitmapFailures"": [ 84, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _FAST_MUTEX SystemSpaceViewLock
		{
			get
			{
				_FAST_MUTEX returnValue = new _FAST_MUTEX(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 SystemSpaceViewLockPointer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 SystemSpaceViewTable { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt32 SystemSpaceHashSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 72); } }
		public UInt32 SystemSpaceHashEntries { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 76); } }
		public UInt32 SystemSpaceHashKey { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 BitmapFailures { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
	}
	#endregion
	#region _ETW_REG_ENTRY
 
	public class _ETW_REG_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETW_REG_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 80; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETW_REG_ENTRY"": [ 80, {
				 ""RegList"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""GuidEntry"": [ 16, [ ""Pointer"", ""{\""target\"":\""_ETW_GUID_ENTRY\""}"" ]],
				 ""ReplyQueue"": [ 24, [ ""Pointer"", ""{\""target\"":\""_ETW_REPLY_QUEUE\""}"" ]],
				 ""ReplySlot"": [ 24, [ ""Array"", ""{\""count\"":4,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""_ETW_QUEUE_ENTRY\""}}"" ]],
				 ""Caller"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SessionId"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""Process"": [ 56, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""CallbackContext"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Callback"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Index"": [ 72, [ ""UInt16"", ""null"" ]],
				 ""Flags"": [ 74, [ ""Byte"", ""null"" ]],
				 ""DbgKernelRegistration"": [ 74, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""DbgUserRegistration"": [ 74, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""DbgReplyRegistration"": [ 74, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""DbgClassicRegistration"": [ 74, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""DbgSessionSpaceRegistration"": [ 74, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""DbgModernRegistration"": [ 74, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""Byte\""}"" ]],
				 ""DbgClosed"": [ 74, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""Byte\""}"" ]],
				 ""DbgInserted"": [ 74, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""Byte\""}"" ]],
				 ""EnableMask"": [ 75, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY RegList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 GuidEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 ReplyQueue { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64[] ReplySlot
		{
			get
			{
				UInt64[] returnValue = new UInt64[4];
				int size = 8;
				for(int i=0; i<4; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt64 Caller { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt32 SessionId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt64 Process { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 CallbackContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 Callback { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt16 Index { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 72); } }
		public Byte Flags{ get { return _StructureData[_BufferOffset +74]; } }
		public Byte DbgKernelRegistration
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 74];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte DbgUserRegistration
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 74];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte DbgReplyRegistration
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 74];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte DbgClassicRegistration
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 74];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte DbgSessionSpaceRegistration
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				Byte value = _StructureData[_BufferOffset + 74];
				var value2 = (value & 16) >> 4;
				return (Byte)value2;
			}
		}
		public Byte DbgModernRegistration
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				Byte value = _StructureData[_BufferOffset + 74];
				var value2 = (value & 32) >> 5;
				return (Byte)value2;
			}
		}
		public Byte DbgClosed
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				Byte value = _StructureData[_BufferOffset + 74];
				var value2 = (value & 64) >> 6;
				return (Byte)value2;
			}
		}
		public Byte DbgInserted
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				Byte value = _StructureData[_BufferOffset + 74];
				var value2 = (value & 128) >> 7;
				return (Byte)value2;
			}
		}
		public Byte EnableMask{ get { return _StructureData[_BufferOffset +75]; } }
	}
	#endregion
	#region _LPCP_PORT_OBJECT
 
	public class _LPCP_PORT_OBJECT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _LPCP_PORT_OBJECT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 256; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_LPCP_PORT_OBJECT"": [ 256, {
				 ""ConnectionPort"": [ 0, [ ""Pointer"", ""{\""target\"":\""_LPCP_PORT_OBJECT\""}"" ]],
				 ""ConnectedPort"": [ 8, [ ""Pointer"", ""{\""target\"":\""_LPCP_PORT_OBJECT\""}"" ]],
				 ""MsgQueue"": [ 16, [ ""_LPCP_PORT_QUEUE"", ""null"" ]],
				 ""Creator"": [ 48, [ ""_CLIENT_ID"", ""null"" ]],
				 ""ClientSectionBase"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ServerSectionBase"": [ 72, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PortContext"": [ 80, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ClientThread"": [ 88, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]],
				 ""SecurityQos"": [ 96, [ ""_SECURITY_QUALITY_OF_SERVICE"", ""null"" ]],
				 ""StaticSecurity"": [ 112, [ ""_SECURITY_CLIENT_CONTEXT"", ""null"" ]],
				 ""LpcReplyChainHead"": [ 184, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""LpcDataInfoChainHead"": [ 200, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ServerProcess"": [ 216, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""MappingProcess"": [ 216, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""MaxMessageLength"": [ 224, [ ""UInt16"", ""null"" ]],
				 ""MaxConnectionInfoLength"": [ 226, [ ""UInt16"", ""null"" ]],
				 ""Flags"": [ 228, [ ""UInt32"", ""null"" ]],
				 ""WaitEvent"": [ 232, [ ""_KEVENT"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ConnectionPort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 ConnectedPort { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _LPCP_PORT_QUEUE MsgQueue
		{
			get
			{
				_LPCP_PORT_QUEUE returnValue = new _LPCP_PORT_QUEUE(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _CLIENT_ID Creator
		{
			get
			{
				_CLIENT_ID returnValue = new _CLIENT_ID(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public UInt64 ClientSectionBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 ServerSectionBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 PortContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 ClientThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public _SECURITY_QUALITY_OF_SERVICE SecurityQos
		{
			get
			{
				_SECURITY_QUALITY_OF_SERVICE returnValue = new _SECURITY_QUALITY_OF_SERVICE(_StructureData, _BufferOffset + 96);
				return returnValue;
			}
		}
		public _SECURITY_CLIENT_CONTEXT StaticSecurity
		{
			get
			{
				_SECURITY_CLIENT_CONTEXT returnValue = new _SECURITY_CLIENT_CONTEXT(_StructureData, _BufferOffset + 112);
				return returnValue;
			}
		}
		public _LIST_ENTRY LpcReplyChainHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 184);
				return returnValue;
			}
		}
		public _LIST_ENTRY LpcDataInfoChainHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 200);
				return returnValue;
			}
		}
		public UInt64 ServerProcess { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 216); } }
		public UInt64 MappingProcess { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 216); } }
		public UInt16 MaxMessageLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 224); } }
		public UInt16 MaxConnectionInfoLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 226); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 228); } }
		public _KEVENT WaitEvent
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 232);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ARBITER_LIST_ENTRY
 
	public class _ARBITER_LIST_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ARBITER_LIST_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 96; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ARBITER_LIST_ENTRY"": [ 96, {
				 ""ListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""AlternativeCount"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""Alternatives"": [ 24, [ ""Pointer"", ""{\""target\"":\""_IO_RESOURCE_DESCRIPTOR\""}"" ]],
				 ""PhysicalDeviceObject"": [ 32, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""RequestSource"": [ 40, [ ""Enumeration"", ""{\""enum_name\"":\""_ARBITER_REQUEST_SOURCE\"",\""target\"":\""UInt32\""}"" ]],
				 ""Flags"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""WorkSpace"": [ 48, [ ""Int64"", ""null"" ]],
				 ""InterfaceType"": [ 56, [ ""Enumeration"", ""{\""enum_name\"":\""_INTERFACE_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""SlotNumber"": [ 60, [ ""UInt32"", ""null"" ]],
				 ""BusNumber"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""Assignment"": [ 72, [ ""Pointer"", ""{\""target\"":\""_CM_PARTIAL_RESOURCE_DESCRIPTOR\""}"" ]],
				 ""SelectedAlternative"": [ 80, [ ""Pointer"", ""{\""target\"":\""_IO_RESOURCE_DESCRIPTOR\""}"" ]],
				 ""Result"": [ 88, [ ""Enumeration"", ""{\""enum_name\"":\""_ARBITER_RESULT\"",\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 AlternativeCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt64 Alternatives { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 PhysicalDeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public _ARBITER_REQUEST_SOURCE RequestSource { get { return (_ARBITER_REQUEST_SOURCE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public Int64 WorkSpace { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 48); } }
		public _INTERFACE_TYPE InterfaceType { get { return (_INTERFACE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public UInt32 SlotNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
		public UInt32 BusNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt64 Assignment { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 SelectedAlternative { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public _ARBITER_RESULT Result { get { return (_ARBITER_RESULT)BitConverter.ToUInt32(_StructureData, _BufferOffset + 88); } }
	}
	#endregion
	#region _INTERRUPT_CONNECTION_DATA
 
	public class _INTERRUPT_CONNECTION_DATA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _INTERRUPT_CONNECTION_DATA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 168; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_INTERRUPT_CONNECTION_DATA"": [ 168, {
				 ""Count"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""OriginalAffinity"": [ 8, [ ""_GROUP_AFFINITY"", ""null"" ]],
				 ""SteeringListEntry"": [ 24, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""SteeringListRoot"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""IsrTime"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""DpcTime"": [ 56, [ ""UInt64"", ""null"" ]],
				 ""IsrLoad"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""DpcLoad"": [ 68, [ ""UInt32"", ""null"" ]],
				 ""IsPrimaryInterrupt"": [ 72, [ ""Byte"", ""null"" ]],
				 ""InterruptObjectArray"": [ 80, [ ""Pointer"", ""{\""target\"":\""_KINTERRUPT*\""}"" ]],
				 ""InterruptObjectCount"": [ 88, [ ""UInt32"", ""null"" ]],
				 ""Vectors"": [ 96, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Count { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _GROUP_AFFINITY OriginalAffinity
		{
			get
			{
				_GROUP_AFFINITY returnValue = new _GROUP_AFFINITY(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _LIST_ENTRY SteeringListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt64 SteeringListRoot { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 IsrTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 DpcTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt32 IsrLoad { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt32 DpcLoad { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 68); } }
		public Byte IsPrimaryInterrupt{ get { return _StructureData[_BufferOffset +72]; } }
		public UInt64 InterruptObjectArray { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt32 InterruptObjectCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 88); } }
		public _INTERRUPT_VECTOR_DATA[] Vectors
		{
			get
			{
				_INTERRUPT_VECTOR_DATA[] returnValue = new _INTERRUPT_VECTOR_DATA[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _INTERRUPT_VECTOR_DATA(_StructureData, (i * size) + _BufferOffset + 96);
				return returnValue;
			}
		}
	}
	#endregion
	#region _LDRP_DLL_SNAP_CONTEXT
 
	public class _LDRP_DLL_SNAP_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _LDRP_DLL_SNAP_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_LDRP_DLL_SNAP_CONTEXT"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _LDR_DATA_TABLE_ENTRY
 
	public class _LDR_DATA_TABLE_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _LDR_DATA_TABLE_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 280; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_LDR_DATA_TABLE_ENTRY"": [ 280, {
				 ""InLoadOrderLinks"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""InMemoryOrderLinks"": [ 16, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""InInitializationOrderLinks"": [ 32, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""InProgressLinks"": [ 32, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""DllBase"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""EntryPoint"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SizeOfImage"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""FullDllName"": [ 72, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""BaseDllName"": [ 88, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""FlagGroup"": [ 104, [ ""Array"", ""{\""count\"":4,\""target\"":\""Byte\""}"" ]],
				 ""Flags"": [ 104, [ ""UInt32"", ""null"" ]],
				 ""PackagedBinary"": [ 104, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""MarkedForRemoval"": [ 104, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""ImageDll"": [ 104, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""LoadNotificationsSent"": [ 104, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""TelemetryEntryProcessed"": [ 104, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessStaticImport"": [ 104, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""InLegacyLists"": [ 104, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""InIndexes"": [ 104, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt32\""}"" ]],
				 ""ShimDll"": [ 104, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]],
				 ""InExceptionTable"": [ 104, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt32\""}"" ]],
				 ""ReservedFlags1"": [ 104, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":10,\""target\"":\""UInt32\""}"" ]],
				 ""LoadInProgress"": [ 104, [ ""BitField"", ""{\""end_bit\"":13,\""start_bit\"":12,\""target\"":\""UInt32\""}"" ]],
				 ""ReservedFlags2"": [ 104, [ ""BitField"", ""{\""end_bit\"":14,\""start_bit\"":13,\""target\"":\""UInt32\""}"" ]],
				 ""EntryProcessed"": [ 104, [ ""BitField"", ""{\""end_bit\"":15,\""start_bit\"":14,\""target\"":\""UInt32\""}"" ]],
				 ""ReservedFlags3"": [ 104, [ ""BitField"", ""{\""end_bit\"":18,\""start_bit\"":15,\""target\"":\""UInt32\""}"" ]],
				 ""DontCallForThreads"": [ 104, [ ""BitField"", ""{\""end_bit\"":19,\""start_bit\"":18,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessAttachCalled"": [ 104, [ ""BitField"", ""{\""end_bit\"":20,\""start_bit\"":19,\""target\"":\""UInt32\""}"" ]],
				 ""ProcessAttachFailed"": [ 104, [ ""BitField"", ""{\""end_bit\"":21,\""start_bit\"":20,\""target\"":\""UInt32\""}"" ]],
				 ""CorDeferredValidate"": [ 104, [ ""BitField"", ""{\""end_bit\"":22,\""start_bit\"":21,\""target\"":\""UInt32\""}"" ]],
				 ""CorImage"": [ 104, [ ""BitField"", ""{\""end_bit\"":23,\""start_bit\"":22,\""target\"":\""UInt32\""}"" ]],
				 ""DontRelocate"": [ 104, [ ""BitField"", ""{\""end_bit\"":24,\""start_bit\"":23,\""target\"":\""UInt32\""}"" ]],
				 ""CorILOnly"": [ 104, [ ""BitField"", ""{\""end_bit\"":25,\""start_bit\"":24,\""target\"":\""UInt32\""}"" ]],
				 ""ReservedFlags5"": [ 104, [ ""BitField"", ""{\""end_bit\"":28,\""start_bit\"":25,\""target\"":\""UInt32\""}"" ]],
				 ""Redirected"": [ 104, [ ""BitField"", ""{\""end_bit\"":29,\""start_bit\"":28,\""target\"":\""UInt32\""}"" ]],
				 ""ReservedFlags6"": [ 104, [ ""BitField"", ""{\""end_bit\"":31,\""start_bit\"":29,\""target\"":\""UInt32\""}"" ]],
				 ""CompatDatabaseProcessed"": [ 104, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":31,\""target\"":\""UInt32\""}"" ]],
				 ""ObsoleteLoadCount"": [ 108, [ ""UInt16"", ""null"" ]],
				 ""TlsIndex"": [ 110, [ ""UInt16"", ""null"" ]],
				 ""HashLinks"": [ 112, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""TimeDateStamp"": [ 128, [ ""UInt32"", ""null"" ]],
				 ""EntryPointActivationContext"": [ 136, [ ""Pointer"", ""{\""target\"":\""_ACTIVATION_CONTEXT\""}"" ]],
				 ""Spare"": [ 144, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DdagNode"": [ 152, [ ""Pointer"", ""{\""target\"":\""_LDR_DDAG_NODE\""}"" ]],
				 ""NodeModuleLink"": [ 160, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""SnapContext"": [ 176, [ ""Pointer"", ""{\""target\"":\""_LDRP_DLL_SNAP_CONTEXT\""}"" ]],
				 ""ParentDllBase"": [ 184, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SwitchBackContext"": [ 192, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""BaseAddressIndexNode"": [ 200, [ ""_RTL_BALANCED_NODE"", ""null"" ]],
				 ""MappingInfoIndexNode"": [ 224, [ ""_RTL_BALANCED_NODE"", ""null"" ]],
				 ""OriginalBase"": [ 248, [ ""UInt64"", ""null"" ]],
				 ""LoadTime"": [ 256, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""BaseNameHashValue"": [ 264, [ ""UInt32"", ""null"" ]],
				 ""LoadReason"": [ 268, [ ""Enumeration"", ""{\""enum_name\"":\""_LDR_DLL_LOAD_REASON\"",\""target\"":\""UInt32\""}"" ]],
				 ""ImplicitPathOptions"": [ 272, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY InLoadOrderLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LIST_ENTRY InMemoryOrderLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _LIST_ENTRY InInitializationOrderLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public _LIST_ENTRY InProgressLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt64 DllBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 EntryPoint { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt32 SizeOfImage { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public _UNICODE_STRING FullDllName
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 72);
				return returnValue;
			}
		}
		public _UNICODE_STRING BaseDllName
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 88);
				return returnValue;
			}
		}
		public Byte[] FlagGroup
		{
			get
			{
				Byte[] returnValue = new Byte[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 104];
				return returnValue;
			}
		}
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 104); } }
		public UInt32 PackagedBinary
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 MarkedForRemoval
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 ImageDll
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 LoadNotificationsSent
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 TelemetryEntryProcessed
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessStaticImport
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 InLegacyLists
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 64) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 InIndexes
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 128) >> 7;
				return (UInt32)value2;
			}
		}
		public UInt32 ShimDll
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 256) >> 8;
				return (UInt32)value2;
			}
		}
		public UInt32 InExceptionTable
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 512) >> 9;
				return (UInt32)value2;
			}
		}
		public UInt32 ReservedFlags1
		{
			get
			{
				// start: 10  end: 12  Mask: 0000110000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 3072) >> 10;
				return (UInt32)value2;
			}
		}
		public UInt32 LoadInProgress
		{
			get
			{
				// start: 12  end: 13  Mask: 0001000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 4096) >> 12;
				return (UInt32)value2;
			}
		}
		public UInt32 ReservedFlags2
		{
			get
			{
				// start: 13  end: 14  Mask: 0010000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 8192) >> 13;
				return (UInt32)value2;
			}
		}
		public UInt32 EntryProcessed
		{
			get
			{
				// start: 14  end: 15  Mask: 0100000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 16384) >> 14;
				return (UInt32)value2;
			}
		}
		public UInt32 ReservedFlags3
		{
			get
			{
				// start: 15  end: 18  Mask: 111000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 229376) >> 15;
				return (UInt32)value2;
			}
		}
		public UInt32 DontCallForThreads
		{
			get
			{
				// start: 18  end: 19  Mask: 1000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 262144) >> 18;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessAttachCalled
		{
			get
			{
				// start: 19  end: 20  Mask: 10000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 524288) >> 19;
				return (UInt32)value2;
			}
		}
		public UInt32 ProcessAttachFailed
		{
			get
			{
				// start: 20  end: 21  Mask: 100000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 1048576) >> 20;
				return (UInt32)value2;
			}
		}
		public UInt32 CorDeferredValidate
		{
			get
			{
				// start: 21  end: 22  Mask: 1000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 2097152) >> 21;
				return (UInt32)value2;
			}
		}
		public UInt32 CorImage
		{
			get
			{
				// start: 22  end: 23  Mask: 10000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 4194304) >> 22;
				return (UInt32)value2;
			}
		}
		public UInt32 DontRelocate
		{
			get
			{
				// start: 23  end: 24  Mask: 100000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 8388608) >> 23;
				return (UInt32)value2;
			}
		}
		public UInt32 CorILOnly
		{
			get
			{
				// start: 24  end: 25  Mask: 1000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 16777216) >> 24;
				return (UInt32)value2;
			}
		}
		public UInt32 ReservedFlags5
		{
			get
			{
				// start: 25  end: 28  Mask: 1110000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 234881024) >> 25;
				return (UInt32)value2;
			}
		}
		public UInt32 Redirected
		{
			get
			{
				// start: 28  end: 29  Mask: 10000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 268435456) >> 28;
				return (UInt32)value2;
			}
		}
		public UInt32 ReservedFlags6
		{
			get
			{
				// start: 29  end: 31  Mask: 1100000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 1610612736) >> 29;
				return (UInt32)value2;
			}
		}
		public UInt32 CompatDatabaseProcessed
		{
			get
			{
				// start: 31  end: 32  Mask: 10000000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 104);
				var value2 = (value & 2147483648) >> 31;
				return (UInt32)value2;
			}
		}
		public UInt16 ObsoleteLoadCount { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 108); } }
		public UInt16 TlsIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 110); } }
		public _LIST_ENTRY HashLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 112);
				return returnValue;
			}
		}
		public UInt32 TimeDateStamp { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 128); } }
		public UInt64 EntryPointActivationContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 136); } }
		public UInt64 Spare { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 144); } }
		public UInt64 DdagNode { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 152); } }
		public _LIST_ENTRY NodeModuleLink
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 160);
				return returnValue;
			}
		}
		public UInt64 SnapContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 176); } }
		public UInt64 ParentDllBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 184); } }
		public UInt64 SwitchBackContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 192); } }
		public _RTL_BALANCED_NODE BaseAddressIndexNode
		{
			get
			{
				_RTL_BALANCED_NODE returnValue = new _RTL_BALANCED_NODE(_StructureData, _BufferOffset + 200);
				return returnValue;
			}
		}
		public _RTL_BALANCED_NODE MappingInfoIndexNode
		{
			get
			{
				_RTL_BALANCED_NODE returnValue = new _RTL_BALANCED_NODE(_StructureData, _BufferOffset + 224);
				return returnValue;
			}
		}
		public UInt64 OriginalBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 248); } }
		public _LARGE_INTEGER LoadTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 256);
				return returnValue;
			}
		}
		public UInt32 BaseNameHashValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 264); } }
		public _LDR_DLL_LOAD_REASON LoadReason { get { return (_LDR_DLL_LOAD_REASON)BitConverter.ToUInt32(_StructureData, _BufferOffset + 268); } }
		public UInt32 ImplicitPathOptions { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 272); } }
	}
	#endregion
	#region _LDR_DDAG_NODE
 
	public class _LDR_DDAG_NODE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _LDR_DDAG_NODE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 80; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_LDR_DDAG_NODE"": [ 80, {
				 ""Modules"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ServiceTagList"": [ 16, [ ""Pointer"", ""{\""target\"":\""_LDR_SERVICE_TAG_RECORD\""}"" ]],
				 ""LoadCount"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""ReferenceCount"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""DependencyCount"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""Dependencies"": [ 40, [ ""_LDRP_CSLIST"", ""null"" ]],
				 ""RemovalLink"": [ 40, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""IncomingDependencies"": [ 48, [ ""_LDRP_CSLIST"", ""null"" ]],
				 ""State"": [ 56, [ ""Enumeration"", ""{\""enum_name\"":\""_LDR_DDAG_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""CondenseLink"": [ 64, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""PreorderNumber"": [ 72, [ ""UInt32"", ""null"" ]],
				 ""LowestLink"": [ 76, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY Modules
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 ServiceTagList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 LoadCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 ReferenceCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 DependencyCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public _LDRP_CSLIST Dependencies
		{
			get
			{
				_LDRP_CSLIST returnValue = new _LDRP_CSLIST(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public _SINGLE_LIST_ENTRY RemovalLink
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public _LDRP_CSLIST IncomingDependencies
		{
			get
			{
				_LDRP_CSLIST returnValue = new _LDRP_CSLIST(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public _LDR_DDAG_STATE State { get { return (_LDR_DDAG_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public _SINGLE_LIST_ENTRY CondenseLink
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public UInt32 PreorderNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 72); } }
		public UInt32 LowestLink { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 76); } }
	}
	#endregion
	#region _POP_DEVICE_SYS_STATE
 
	public class _POP_DEVICE_SYS_STATE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_DEVICE_SYS_STATE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 464; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_DEVICE_SYS_STATE"": [ 464, {
				 ""IrpMinor"": [ 0, [ ""Byte"", ""null"" ]],
				 ""SystemState"": [ 4, [ ""Enumeration"", ""{\""enum_name\"":\""_SYSTEM_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""SpinLock"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""Thread"": [ 16, [ ""Pointer"", ""{\""target\"":\""_KTHREAD\""}"" ]],
				 ""AbortEvent"": [ 24, [ ""Pointer"", ""{\""target\"":\""_KEVENT\""}"" ]],
				 ""ReadySemaphore"": [ 32, [ ""Pointer"", ""{\""target\"":\""_KSEMAPHORE\""}"" ]],
				 ""FinishedSemaphore"": [ 40, [ ""Pointer"", ""{\""target\"":\""_KSEMAPHORE\""}"" ]],
				 ""Order"": [ 48, [ ""_PO_DEVICE_NOTIFY_ORDER"", ""null"" ]],
				 ""Pending"": [ 424, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Status"": [ 440, [ ""Int32"", ""null"" ]],
				 ""FailedDevice"": [ 448, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""Waking"": [ 456, [ ""Byte"", ""null"" ]],
				 ""Cancelled"": [ 457, [ ""Byte"", ""null"" ]],
				 ""IgnoreErrors"": [ 458, [ ""Byte"", ""null"" ]],
				 ""IgnoreNotImplemented"": [ 459, [ ""Byte"", ""null"" ]],
				 ""TimeRefreshLockAcquired"": [ 460, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte IrpMinor{ get { return _StructureData[_BufferOffset +0]; } }
		public _SYSTEM_POWER_STATE SystemState { get { return (_SYSTEM_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 SpinLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Thread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 AbortEvent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 ReadySemaphore { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 FinishedSemaphore { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public _PO_DEVICE_NOTIFY_ORDER Order
		{
			get
			{
				_PO_DEVICE_NOTIFY_ORDER returnValue = new _PO_DEVICE_NOTIFY_ORDER(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public _LIST_ENTRY Pending
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 424);
				return returnValue;
			}
		}
		public Int32 Status { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 440); } }
		public UInt64 FailedDevice { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 448); } }
		public Byte Waking{ get { return _StructureData[_BufferOffset +456]; } }
		public Byte Cancelled{ get { return _StructureData[_BufferOffset +457]; } }
		public Byte IgnoreErrors{ get { return _StructureData[_BufferOffset +458]; } }
		public Byte IgnoreNotImplemented{ get { return _StructureData[_BufferOffset +459]; } }
		public Byte TimeRefreshLockAcquired{ get { return _StructureData[_BufferOffset +460]; } }
	}
	#endregion
	#region _SEGMENT_FLAGS
 
	public class _SEGMENT_FLAGS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SEGMENT_FLAGS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SEGMENT_FLAGS"": [ 4, {
				 ""TotalNumberOfPtes4132"": [ 0, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""Spare0"": [ 0, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt16\""}"" ]],
				 ""LargePages"": [ 0, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt16\""}"" ]],
				 ""LockedPages"": [ 0, [ ""BitField"", ""{\""end_bit\"":13,\""start_bit\"":12,\""target\"":\""UInt16\""}"" ]],
				 ""DebugSymbolsLoaded"": [ 0, [ ""BitField"", ""{\""end_bit\"":14,\""start_bit\"":13,\""target\"":\""UInt16\""}"" ]],
				 ""WriteCombined"": [ 0, [ ""BitField"", ""{\""end_bit\"":15,\""start_bit\"":14,\""target\"":\""UInt16\""}"" ]],
				 ""NoCache"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":15,\""target\"":\""UInt16\""}"" ]],
				 ""Short0"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""FloppyMedia"": [ 2, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""DefaultProtectionMask"": [ 2, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""Binary32"": [ 2, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""Byte\""}"" ]],
				 ""ContainsDebug"": [ 2, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""Byte\""}"" ]],
				 ""UChar1"": [ 2, [ ""Byte"", ""null"" ]],
				 ""ILOnly"": [ 3, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""ImageSigningType"": [ 3, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""ImageSigningLevel"": [ 3, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""UChar2"": [ 3, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 TotalNumberOfPtes4132
		{
			get
			{
				// start: 0  end: 10  Mask: 0000001111111111
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1023) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 Spare0
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1024) >> 10;
				return (UInt16)value2;
			}
		}
		public UInt16 LargePages
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2048) >> 11;
				return (UInt16)value2;
			}
		}
		public UInt16 LockedPages
		{
			get
			{
				// start: 12  end: 13  Mask: 0001000000000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4096) >> 12;
				return (UInt16)value2;
			}
		}
		public UInt16 DebugSymbolsLoaded
		{
			get
			{
				// start: 13  end: 14  Mask: 0010000000000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8192) >> 13;
				return (UInt16)value2;
			}
		}
		public UInt16 WriteCombined
		{
			get
			{
				// start: 14  end: 15  Mask: 0100000000000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16384) >> 14;
				return (UInt16)value2;
			}
		}
		public UInt16 NoCache
		{
			get
			{
				// start: 15  end: 16  Mask: 1000000000000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 32768) >> 15;
				return (UInt16)value2;
			}
		}
		public UInt16 Short0 { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public Byte FloppyMedia
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 2];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte DefaultProtectionMask
		{
			get
			{
				// start: 1  end: 6  Mask: 0000000000111110
				Byte value = _StructureData[_BufferOffset + 2];
				var value2 = (value & 62) >> 1;
				return (Byte)value2;
			}
		}
		public Byte Binary32
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				Byte value = _StructureData[_BufferOffset + 2];
				var value2 = (value & 64) >> 6;
				return (Byte)value2;
			}
		}
		public Byte ContainsDebug
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				Byte value = _StructureData[_BufferOffset + 2];
				var value2 = (value & 128) >> 7;
				return (Byte)value2;
			}
		}
		public Byte UChar1{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte ILOnly
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte ImageSigningType
		{
			get
			{
				// start: 1  end: 4  Mask: 0000000000001110
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 14) >> 1;
				return (Byte)value2;
			}
		}
		public Byte ImageSigningLevel
		{
			get
			{
				// start: 4  end: 8  Mask: 0000000011110000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 240) >> 4;
				return (Byte)value2;
			}
		}
		public Byte UChar2{ get { return _StructureData[_BufferOffset +3]; } }
	}
	#endregion
	#region _VF_KE_CRITICAL_REGION_TRACE
 
	public class _VF_KE_CRITICAL_REGION_TRACE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VF_KE_CRITICAL_REGION_TRACE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VF_KE_CRITICAL_REGION_TRACE"": [ 64, {
				 ""Thread"": [ 0, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]],
				 ""StackTrace"": [ 8, [ ""Array"", ""{\""count\"":7,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Thread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64[] StackTrace
		{
			get
			{
				UInt64[] returnValue = new UInt64[7];
				int size = 8;
				for(int i=0; i<7; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _LOGGED_STREAM_CALLBACK_V1
 
	public class _LOGGED_STREAM_CALLBACK_V1
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _LOGGED_STREAM_CALLBACK_V1(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_LOGGED_STREAM_CALLBACK_V1"": [ 16, {
				 ""LogHandle"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FlushToLsnRoutine"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 LogHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 FlushToLsnRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _DIAGNOSTIC_BUFFER
 
	public class _DIAGNOSTIC_BUFFER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DIAGNOSTIC_BUFFER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DIAGNOSTIC_BUFFER"": [ 40, {
				 ""Size"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""CallerType"": [ 8, [ ""Enumeration"", ""{\""enum_name\"":\""_REQUESTER_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""ProcessImageNameOffset"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""ProcessId"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""ServiceTag"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""DeviceDescriptionOffset"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""DevicePathOffset"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""ReasonOffset"": [ 32, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Size { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _REQUESTER_TYPE CallerType { get { return (_REQUESTER_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt64 ProcessImageNameOffset { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 ProcessId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 ServiceTag { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt64 DeviceDescriptionOffset { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 DevicePathOffset { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 ReasonOffset { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _CLIENT_ID32
 
	public class _CLIENT_ID32
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CLIENT_ID32(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CLIENT_ID32"": [ 8, {
				 ""UniqueProcess"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""UniqueThread"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 UniqueProcess { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 UniqueThread { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _TEB32
 
	public class _TEB32
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _TEB32(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4072; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_TEB32"": [ 4072, {
				 ""NtTib"": [ 0, [ ""_NT_TIB32"", ""null"" ]],
				 ""EnvironmentPointer"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""ClientId"": [ 32, [ ""_CLIENT_ID32"", ""null"" ]],
				 ""ActiveRpcHandle"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""ThreadLocalStoragePointer"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""ProcessEnvironmentBlock"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""LastErrorValue"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""CountOfOwnedCriticalSections"": [ 56, [ ""UInt32"", ""null"" ]],
				 ""CsrClientThread"": [ 60, [ ""UInt32"", ""null"" ]],
				 ""Win32ThreadInfo"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""User32Reserved"": [ 68, [ ""Array"", ""{\""count\"":26,\""target\"":\""UInt32\""}"" ]],
				 ""UserReserved"": [ 172, [ ""Array"", ""{\""count\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""WOW32Reserved"": [ 192, [ ""UInt32"", ""null"" ]],
				 ""CurrentLocale"": [ 196, [ ""UInt32"", ""null"" ]],
				 ""FpSoftwareStatusRegister"": [ 200, [ ""UInt32"", ""null"" ]],
				 ""SystemReserved1"": [ 204, [ ""Array"", ""{\""count\"":54,\""target\"":\""UInt32\""}"" ]],
				 ""ExceptionCode"": [ 420, [ ""Int32"", ""null"" ]],
				 ""ActivationContextStackPointer"": [ 424, [ ""UInt32"", ""null"" ]],
				 ""SpareBytes"": [ 428, [ ""Array"", ""{\""count\"":36,\""target\"":\""Byte\""}"" ]],
				 ""TxFsContext"": [ 464, [ ""UInt32"", ""null"" ]],
				 ""GdiTebBatch"": [ 468, [ ""_GDI_TEB_BATCH32"", ""null"" ]],
				 ""RealClientId"": [ 1716, [ ""_CLIENT_ID32"", ""null"" ]],
				 ""GdiCachedProcessHandle"": [ 1724, [ ""UInt32"", ""null"" ]],
				 ""GdiClientPID"": [ 1728, [ ""UInt32"", ""null"" ]],
				 ""GdiClientTID"": [ 1732, [ ""UInt32"", ""null"" ]],
				 ""GdiThreadLocalInfo"": [ 1736, [ ""UInt32"", ""null"" ]],
				 ""Win32ClientInfo"": [ 1740, [ ""Array"", ""{\""count\"":62,\""target\"":\""UInt32\""}"" ]],
				 ""glDispatchTable"": [ 1988, [ ""Array"", ""{\""count\"":233,\""target\"":\""UInt32\""}"" ]],
				 ""glReserved1"": [ 2920, [ ""Array"", ""{\""count\"":29,\""target\"":\""UInt32\""}"" ]],
				 ""glReserved2"": [ 3036, [ ""UInt32"", ""null"" ]],
				 ""glSectionInfo"": [ 3040, [ ""UInt32"", ""null"" ]],
				 ""glSection"": [ 3044, [ ""UInt32"", ""null"" ]],
				 ""glTable"": [ 3048, [ ""UInt32"", ""null"" ]],
				 ""glCurrentRC"": [ 3052, [ ""UInt32"", ""null"" ]],
				 ""glContext"": [ 3056, [ ""UInt32"", ""null"" ]],
				 ""LastStatusValue"": [ 3060, [ ""UInt32"", ""null"" ]],
				 ""StaticUnicodeString"": [ 3064, [ ""_STRING32"", ""null"" ]],
				 ""StaticUnicodeBuffer"": [ 3072, [ ""Array"", ""{\""count\"":261,\""target\"":\""UInt16\""}"" ]],
				 ""DeallocationStack"": [ 3596, [ ""UInt32"", ""null"" ]],
				 ""TlsSlots"": [ 3600, [ ""Array"", ""{\""count\"":64,\""target\"":\""UInt32\""}"" ]],
				 ""TlsLinks"": [ 3856, [ ""LIST_ENTRY32"", ""null"" ]],
				 ""Vdm"": [ 3864, [ ""UInt32"", ""null"" ]],
				 ""ReservedForNtRpc"": [ 3868, [ ""UInt32"", ""null"" ]],
				 ""DbgSsReserved"": [ 3872, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""HardErrorMode"": [ 3880, [ ""UInt32"", ""null"" ]],
				 ""Instrumentation"": [ 3884, [ ""Array"", ""{\""count\"":9,\""target\"":\""UInt32\""}"" ]],
				 ""ActivityId"": [ 3920, [ ""_GUID"", ""null"" ]],
				 ""SubProcessTag"": [ 3936, [ ""UInt32"", ""null"" ]],
				 ""PerflibData"": [ 3940, [ ""UInt32"", ""null"" ]],
				 ""EtwTraceData"": [ 3944, [ ""UInt32"", ""null"" ]],
				 ""WinSockData"": [ 3948, [ ""UInt32"", ""null"" ]],
				 ""GdiBatchCount"": [ 3952, [ ""UInt32"", ""null"" ]],
				 ""CurrentIdealProcessor"": [ 3956, [ ""_PROCESSOR_NUMBER"", ""null"" ]],
				 ""IdealProcessorValue"": [ 3956, [ ""UInt32"", ""null"" ]],
				 ""ReservedPad0"": [ 3956, [ ""Byte"", ""null"" ]],
				 ""ReservedPad1"": [ 3957, [ ""Byte"", ""null"" ]],
				 ""ReservedPad2"": [ 3958, [ ""Byte"", ""null"" ]],
				 ""IdealProcessor"": [ 3959, [ ""Byte"", ""null"" ]],
				 ""GuaranteedStackBytes"": [ 3960, [ ""UInt32"", ""null"" ]],
				 ""ReservedForPerf"": [ 3964, [ ""UInt32"", ""null"" ]],
				 ""ReservedForOle"": [ 3968, [ ""UInt32"", ""null"" ]],
				 ""WaitingOnLoaderLock"": [ 3972, [ ""UInt32"", ""null"" ]],
				 ""SavedPriorityState"": [ 3976, [ ""UInt32"", ""null"" ]],
				 ""ReservedForCodeCoverage"": [ 3980, [ ""UInt32"", ""null"" ]],
				 ""ThreadPoolData"": [ 3984, [ ""UInt32"", ""null"" ]],
				 ""TlsExpansionSlots"": [ 3988, [ ""UInt32"", ""null"" ]],
				 ""MuiGeneration"": [ 3992, [ ""UInt32"", ""null"" ]],
				 ""IsImpersonating"": [ 3996, [ ""UInt32"", ""null"" ]],
				 ""NlsCache"": [ 4000, [ ""UInt32"", ""null"" ]],
				 ""pShimData"": [ 4004, [ ""UInt32"", ""null"" ]],
				 ""HeapVirtualAffinity"": [ 4008, [ ""UInt16"", ""null"" ]],
				 ""LowFragHeapDataSlot"": [ 4010, [ ""UInt16"", ""null"" ]],
				 ""CurrentTransactionHandle"": [ 4012, [ ""UInt32"", ""null"" ]],
				 ""ActiveFrame"": [ 4016, [ ""UInt32"", ""null"" ]],
				 ""FlsData"": [ 4020, [ ""UInt32"", ""null"" ]],
				 ""PreferredLanguages"": [ 4024, [ ""UInt32"", ""null"" ]],
				 ""UserPrefLanguages"": [ 4028, [ ""UInt32"", ""null"" ]],
				 ""MergedPrefLanguages"": [ 4032, [ ""UInt32"", ""null"" ]],
				 ""MuiImpersonation"": [ 4036, [ ""UInt32"", ""null"" ]],
				 ""CrossTebFlags"": [ 4040, [ ""UInt16"", ""null"" ]],
				 ""SpareCrossTebBits"": [ 4040, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""SameTebFlags"": [ 4042, [ ""UInt16"", ""null"" ]],
				 ""SafeThunkCall"": [ 4042, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""InDebugPrint"": [ 4042, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt16\""}"" ]],
				 ""HasFiberData"": [ 4042, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt16\""}"" ]],
				 ""SkipThreadAttach"": [ 4042, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt16\""}"" ]],
				 ""WerInShipAssertCode"": [ 4042, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt16\""}"" ]],
				 ""RanProcessInit"": [ 4042, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt16\""}"" ]],
				 ""ClonedThread"": [ 4042, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt16\""}"" ]],
				 ""SuppressDebugMsg"": [ 4042, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt16\""}"" ]],
				 ""DisableUserStackWalk"": [ 4042, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt16\""}"" ]],
				 ""RtlExceptionAttached"": [ 4042, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt16\""}"" ]],
				 ""InitialThread"": [ 4042, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt16\""}"" ]],
				 ""SessionAware"": [ 4042, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt16\""}"" ]],
				 ""SpareSameTebBits"": [ 4042, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":12,\""target\"":\""UInt16\""}"" ]],
				 ""TxnScopeEnterCallback"": [ 4044, [ ""UInt32"", ""null"" ]],
				 ""TxnScopeExitCallback"": [ 4048, [ ""UInt32"", ""null"" ]],
				 ""TxnScopeContext"": [ 4052, [ ""UInt32"", ""null"" ]],
				 ""LockCount"": [ 4056, [ ""UInt32"", ""null"" ]],
				 ""SpareUlong0"": [ 4060, [ ""UInt32"", ""null"" ]],
				 ""ResourceRetValue"": [ 4064, [ ""UInt32"", ""null"" ]],
				 ""ReservedForWdf"": [ 4068, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _NT_TIB32 NtTib
		{
			get
			{
				_NT_TIB32 returnValue = new _NT_TIB32(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 EnvironmentPointer { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public _CLIENT_ID32 ClientId
		{
			get
			{
				_CLIENT_ID32 returnValue = new _CLIENT_ID32(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt32 ActiveRpcHandle { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32 ThreadLocalStoragePointer { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public UInt32 ProcessEnvironmentBlock { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public UInt32 LastErrorValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public UInt32 CountOfOwnedCriticalSections { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public UInt32 CsrClientThread { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
		public UInt32 Win32ThreadInfo { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt32[] User32Reserved
		{
			get
			{
				UInt32[] returnValue = new UInt32[26];
				for(int i=0; i<26; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 68);
				return returnValue;
			}
		}
		public UInt32[] UserReserved
		{
			get
			{
				UInt32[] returnValue = new UInt32[5];
				for(int i=0; i<5; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 172);
				return returnValue;
			}
		}
		public UInt32 WOW32Reserved { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 192); } }
		public UInt32 CurrentLocale { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 196); } }
		public UInt32 FpSoftwareStatusRegister { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 200); } }
		public UInt32[] SystemReserved1
		{
			get
			{
				UInt32[] returnValue = new UInt32[54];
				for(int i=0; i<54; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 204);
				return returnValue;
			}
		}
		public Int32 ExceptionCode { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 420); } }
		public UInt32 ActivationContextStackPointer { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 424); } }
		public Byte[] SpareBytes
		{
			get
			{
				Byte[] returnValue = new Byte[36];
				for(int i=0; i<36; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 428];
				return returnValue;
			}
		}
		public UInt32 TxFsContext { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 464); } }
		public _GDI_TEB_BATCH32 GdiTebBatch
		{
			get
			{
				_GDI_TEB_BATCH32 returnValue = new _GDI_TEB_BATCH32(_StructureData, _BufferOffset + 468);
				return returnValue;
			}
		}
		public _CLIENT_ID32 RealClientId
		{
			get
			{
				_CLIENT_ID32 returnValue = new _CLIENT_ID32(_StructureData, _BufferOffset + 1716);
				return returnValue;
			}
		}
		public UInt32 GdiCachedProcessHandle { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1724); } }
		public UInt32 GdiClientPID { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1728); } }
		public UInt32 GdiClientTID { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1732); } }
		public UInt32 GdiThreadLocalInfo { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1736); } }
		public UInt32[] Win32ClientInfo
		{
			get
			{
				UInt32[] returnValue = new UInt32[62];
				for(int i=0; i<62; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 1740);
				return returnValue;
			}
		}
		public UInt32[] glDispatchTable
		{
			get
			{
				UInt32[] returnValue = new UInt32[233];
				for(int i=0; i<233; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 1988);
				return returnValue;
			}
		}
		public UInt32[] glReserved1
		{
			get
			{
				UInt32[] returnValue = new UInt32[29];
				for(int i=0; i<29; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 2920);
				return returnValue;
			}
		}
		public UInt32 glReserved2 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3036); } }
		public UInt32 glSectionInfo { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3040); } }
		public UInt32 glSection { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3044); } }
		public UInt32 glTable { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3048); } }
		public UInt32 glCurrentRC { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3052); } }
		public UInt32 glContext { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3056); } }
		public UInt32 LastStatusValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3060); } }
		public _STRING32 StaticUnicodeString
		{
			get
			{
				_STRING32 returnValue = new _STRING32(_StructureData, _BufferOffset + 3064);
				return returnValue;
			}
		}
		public UInt16[] StaticUnicodeBuffer
		{
			get
			{
				UInt16[] returnValue = new UInt16[261];
				for(int i=0; i<261; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 3072);
				return returnValue;
			}
		}
		public UInt32 DeallocationStack { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3596); } }
		public UInt32[] TlsSlots
		{
			get
			{
				UInt32[] returnValue = new UInt32[64];
				for(int i=0; i<64; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 3600);
				return returnValue;
			}
		}
		public LIST_ENTRY32 TlsLinks
		{
			get
			{
				LIST_ENTRY32 returnValue = new LIST_ENTRY32(_StructureData, _BufferOffset + 3856);
				return returnValue;
			}
		}
		public UInt32 Vdm { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3864); } }
		public UInt32 ReservedForNtRpc { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3868); } }
		public UInt32[] DbgSsReserved
		{
			get
			{
				UInt32[] returnValue = new UInt32[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 3872);
				return returnValue;
			}
		}
		public UInt32 HardErrorMode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3880); } }
		public UInt32[] Instrumentation
		{
			get
			{
				UInt32[] returnValue = new UInt32[9];
				for(int i=0; i<9; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 3884);
				return returnValue;
			}
		}
		public _GUID ActivityId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 3920);
				return returnValue;
			}
		}
		public UInt32 SubProcessTag { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3936); } }
		public UInt32 PerflibData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3940); } }
		public UInt32 EtwTraceData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3944); } }
		public UInt32 WinSockData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3948); } }
		public UInt32 GdiBatchCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3952); } }
		public _PROCESSOR_NUMBER CurrentIdealProcessor
		{
			get
			{
				_PROCESSOR_NUMBER returnValue = new _PROCESSOR_NUMBER(_StructureData, _BufferOffset + 3956);
				return returnValue;
			}
		}
		public UInt32 IdealProcessorValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3956); } }
		public Byte ReservedPad0{ get { return _StructureData[_BufferOffset +3956]; } }
		public Byte ReservedPad1{ get { return _StructureData[_BufferOffset +3957]; } }
		public Byte ReservedPad2{ get { return _StructureData[_BufferOffset +3958]; } }
		public Byte IdealProcessor{ get { return _StructureData[_BufferOffset +3959]; } }
		public UInt32 GuaranteedStackBytes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3960); } }
		public UInt32 ReservedForPerf { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3964); } }
		public UInt32 ReservedForOle { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3968); } }
		public UInt32 WaitingOnLoaderLock { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3972); } }
		public UInt32 SavedPriorityState { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3976); } }
		public UInt32 ReservedForCodeCoverage { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3980); } }
		public UInt32 ThreadPoolData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3984); } }
		public UInt32 TlsExpansionSlots { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3988); } }
		public UInt32 MuiGeneration { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3992); } }
		public UInt32 IsImpersonating { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 3996); } }
		public UInt32 NlsCache { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4000); } }
		public UInt32 pShimData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4004); } }
		public UInt16 HeapVirtualAffinity { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 4008); } }
		public UInt16 LowFragHeapDataSlot { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 4010); } }
		public UInt32 CurrentTransactionHandle { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4012); } }
		public UInt32 ActiveFrame { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4016); } }
		public UInt32 FlsData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4020); } }
		public UInt32 PreferredLanguages { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4024); } }
		public UInt32 UserPrefLanguages { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4028); } }
		public UInt32 MergedPrefLanguages { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4032); } }
		public UInt32 MuiImpersonation { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4036); } }
		public UInt16 CrossTebFlags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 4040); } }
		public UInt16 SpareCrossTebBits
		{
			get
			{
				// start: 0  end: 16  Mask: 1111111111111111
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 4040);
				var value2 = (value & 65535) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 SameTebFlags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 4042); } }
		public UInt16 SafeThunkCall
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 4042);
				var value2 = (value & 1) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 InDebugPrint
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 4042);
				var value2 = (value & 2) >> 1;
				return (UInt16)value2;
			}
		}
		public UInt16 HasFiberData
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 4042);
				var value2 = (value & 4) >> 2;
				return (UInt16)value2;
			}
		}
		public UInt16 SkipThreadAttach
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 4042);
				var value2 = (value & 8) >> 3;
				return (UInt16)value2;
			}
		}
		public UInt16 WerInShipAssertCode
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 4042);
				var value2 = (value & 16) >> 4;
				return (UInt16)value2;
			}
		}
		public UInt16 RanProcessInit
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 4042);
				var value2 = (value & 32) >> 5;
				return (UInt16)value2;
			}
		}
		public UInt16 ClonedThread
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 4042);
				var value2 = (value & 64) >> 6;
				return (UInt16)value2;
			}
		}
		public UInt16 SuppressDebugMsg
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 4042);
				var value2 = (value & 128) >> 7;
				return (UInt16)value2;
			}
		}
		public UInt16 DisableUserStackWalk
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 4042);
				var value2 = (value & 256) >> 8;
				return (UInt16)value2;
			}
		}
		public UInt16 RtlExceptionAttached
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 4042);
				var value2 = (value & 512) >> 9;
				return (UInt16)value2;
			}
		}
		public UInt16 InitialThread
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 4042);
				var value2 = (value & 1024) >> 10;
				return (UInt16)value2;
			}
		}
		public UInt16 SessionAware
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 4042);
				var value2 = (value & 2048) >> 11;
				return (UInt16)value2;
			}
		}
		public UInt16 SpareSameTebBits
		{
			get
			{
				// start: 12  end: 16  Mask: 1111000000000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 4042);
				var value2 = (value & 61440) >> 12;
				return (UInt16)value2;
			}
		}
		public UInt32 TxnScopeEnterCallback { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4044); } }
		public UInt32 TxnScopeExitCallback { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4048); } }
		public UInt32 TxnScopeContext { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4052); } }
		public UInt32 LockCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4056); } }
		public UInt32 SpareUlong0 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4060); } }
		public UInt32 ResourceRetValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4064); } }
		public UInt32 ReservedForWdf { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4068); } }
	}
	#endregion
	#region _CM_KEY_INDEX
 
	public class _CM_KEY_INDEX
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_KEY_INDEX(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_KEY_INDEX"": [ 8, {
				 ""Signature"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Count"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""List"": [ 4, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Signature { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 Count { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt32[] List
		{
			get
			{
				UInt32[] returnValue = new UInt32[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 4);
				return returnValue;
			}
		}
	}
	#endregion
	#region _VI_DEADLOCK_THREAD
 
	public class _VI_DEADLOCK_THREAD
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VI_DEADLOCK_THREAD(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VI_DEADLOCK_THREAD"": [ 56, {
				 ""Thread"": [ 0, [ ""Pointer"", ""{\""target\"":\""_KTHREAD\""}"" ]],
				 ""CurrentSpinNode"": [ 8, [ ""Pointer"", ""{\""target\"":\""_VI_DEADLOCK_NODE\""}"" ]],
				 ""CurrentOtherNode"": [ 16, [ ""Pointer"", ""{\""target\"":\""_VI_DEADLOCK_NODE\""}"" ]],
				 ""ListEntry"": [ 24, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""FreeListEntry"": [ 24, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""NodeCount"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""PagingCount"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""ThreadUsesEresources"": [ 48, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Thread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 CurrentSpinNode { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 CurrentOtherNode { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public _LIST_ENTRY FreeListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt32 NodeCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32 PagingCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public Byte ThreadUsesEresources{ get { return _StructureData[_BufferOffset +48]; } }
	}
	#endregion
	#region _PPM_IDLE_STATE
 
	public class _PPM_IDLE_STATE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PPM_IDLE_STATE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 216; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PPM_IDLE_STATE"": [ 216, {
				 ""DomainMembers"": [ 0, [ ""_KAFFINITY_EX"", ""null"" ]],
				 ""Latency"": [ 168, [ ""UInt32"", ""null"" ]],
				 ""BreakEvenDuration"": [ 172, [ ""UInt32"", ""null"" ]],
				 ""Power"": [ 176, [ ""UInt32"", ""null"" ]],
				 ""StateFlags"": [ 180, [ ""UInt32"", ""null"" ]],
				 ""VetoAccounting"": [ 184, [ ""_PPM_VETO_ACCOUNTING"", ""null"" ]],
				 ""StateType"": [ 208, [ ""Byte"", ""null"" ]],
				 ""InterruptsEnabled"": [ 209, [ ""Byte"", ""null"" ]],
				 ""Interruptible"": [ 210, [ ""Byte"", ""null"" ]],
				 ""ContextRetained"": [ 211, [ ""Byte"", ""null"" ]],
				 ""CacheCoherent"": [ 212, [ ""Byte"", ""null"" ]],
				 ""WakesSpuriously"": [ 213, [ ""Byte"", ""null"" ]],
				 ""PlatformOnly"": [ 214, [ ""Byte"", ""null"" ]],
				 ""NoCState"": [ 215, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _KAFFINITY_EX DomainMembers
		{
			get
			{
				_KAFFINITY_EX returnValue = new _KAFFINITY_EX(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 Latency { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 168); } }
		public UInt32 BreakEvenDuration { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 172); } }
		public UInt32 Power { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 176); } }
		public UInt32 StateFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 180); } }
		public _PPM_VETO_ACCOUNTING VetoAccounting
		{
			get
			{
				_PPM_VETO_ACCOUNTING returnValue = new _PPM_VETO_ACCOUNTING(_StructureData, _BufferOffset + 184);
				return returnValue;
			}
		}
		public Byte StateType{ get { return _StructureData[_BufferOffset +208]; } }
		public Byte InterruptsEnabled{ get { return _StructureData[_BufferOffset +209]; } }
		public Byte Interruptible{ get { return _StructureData[_BufferOffset +210]; } }
		public Byte ContextRetained{ get { return _StructureData[_BufferOffset +211]; } }
		public Byte CacheCoherent{ get { return _StructureData[_BufferOffset +212]; } }
		public Byte WakesSpuriously{ get { return _StructureData[_BufferOffset +213]; } }
		public Byte PlatformOnly{ get { return _StructureData[_BufferOffset +214]; } }
		public Byte NoCState{ get { return _StructureData[_BufferOffset +215]; } }
	}
	#endregion
	#region _KRESOURCEMANAGER
 
	public class _KRESOURCEMANAGER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KRESOURCEMANAGER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 592; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KRESOURCEMANAGER"": [ 592, {
				 ""NotificationAvailable"": [ 0, [ ""_KEVENT"", ""null"" ]],
				 ""cookie"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""State"": [ 28, [ ""Enumeration"", ""{\""enum_name\"":\""_KRESOURCEMANAGER_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""Flags"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""Mutex"": [ 40, [ ""_KMUTANT"", ""null"" ]],
				 ""NamespaceLink"": [ 96, [ ""_KTMOBJECT_NAMESPACE_LINK"", ""null"" ]],
				 ""RmId"": [ 136, [ ""_GUID"", ""null"" ]],
				 ""NotificationQueue"": [ 152, [ ""_KQUEUE"", ""null"" ]],
				 ""NotificationMutex"": [ 216, [ ""_KMUTANT"", ""null"" ]],
				 ""EnlistmentHead"": [ 272, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""EnlistmentCount"": [ 288, [ ""UInt32"", ""null"" ]],
				 ""NotificationRoutine"": [ 296, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Key"": [ 304, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ProtocolListHead"": [ 312, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""PendingPropReqListHead"": [ 328, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""CRMListEntry"": [ 344, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Tm"": [ 360, [ ""Pointer"", ""{\""target\"":\""_KTM\""}"" ]],
				 ""Description"": [ 368, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""Enlistments"": [ 384, [ ""_KTMOBJECT_NAMESPACE"", ""null"" ]],
				 ""CompletionBinding"": [ 552, [ ""_KRESOURCEMANAGER_COMPLETION_BINDING"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _KEVENT NotificationAvailable
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 cookie { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public _KRESOURCEMANAGER_STATE State { get { return (_KRESOURCEMANAGER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public _KMUTANT Mutex
		{
			get
			{
				_KMUTANT returnValue = new _KMUTANT(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public _KTMOBJECT_NAMESPACE_LINK NamespaceLink
		{
			get
			{
				_KTMOBJECT_NAMESPACE_LINK returnValue = new _KTMOBJECT_NAMESPACE_LINK(_StructureData, _BufferOffset + 96);
				return returnValue;
			}
		}
		public _GUID RmId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 136);
				return returnValue;
			}
		}
		public _KQUEUE NotificationQueue
		{
			get
			{
				_KQUEUE returnValue = new _KQUEUE(_StructureData, _BufferOffset + 152);
				return returnValue;
			}
		}
		public _KMUTANT NotificationMutex
		{
			get
			{
				_KMUTANT returnValue = new _KMUTANT(_StructureData, _BufferOffset + 216);
				return returnValue;
			}
		}
		public _LIST_ENTRY EnlistmentHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 272);
				return returnValue;
			}
		}
		public UInt32 EnlistmentCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 288); } }
		public UInt64 NotificationRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 296); } }
		public UInt64 Key { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 304); } }
		public _LIST_ENTRY ProtocolListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 312);
				return returnValue;
			}
		}
		public _LIST_ENTRY PendingPropReqListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 328);
				return returnValue;
			}
		}
		public _LIST_ENTRY CRMListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 344);
				return returnValue;
			}
		}
		public UInt64 Tm { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 360); } }
		public _UNICODE_STRING Description
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 368);
				return returnValue;
			}
		}
		public _KTMOBJECT_NAMESPACE Enlistments
		{
			get
			{
				_KTMOBJECT_NAMESPACE returnValue = new _KTMOBJECT_NAMESPACE(_StructureData, _BufferOffset + 384);
				return returnValue;
			}
		}
		public _KRESOURCEMANAGER_COMPLETION_BINDING CompletionBinding
		{
			get
			{
				_KRESOURCEMANAGER_COMPLETION_BINDING returnValue = new _KRESOURCEMANAGER_COMPLETION_BINDING(_StructureData, _BufferOffset + 552);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MMEXTEND_INFO
 
	public class _MMEXTEND_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMEXTEND_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMEXTEND_INFO"": [ 16, {
				 ""CommittedSize"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""ReferenceCount"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 CommittedSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 ReferenceCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _HANDLE_TABLE_FREE_LIST
 
	public class _HANDLE_TABLE_FREE_LIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HANDLE_TABLE_FREE_LIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HANDLE_TABLE_FREE_LIST"": [ 64, {
				 ""FreeListLock"": [ 0, [ ""_EX_PUSH_LOCK"", ""null"" ]],
				 ""FirstFreeHandleEntry"": [ 8, [ ""Pointer"", ""{\""target\"":\""_HANDLE_TABLE_ENTRY\""}"" ]],
				 ""LastFreeHandleEntry"": [ 16, [ ""Pointer"", ""{\""target\"":\""_HANDLE_TABLE_ENTRY\""}"" ]],
				 ""HandleCount"": [ 24, [ ""Int32"", ""null"" ]],
				 ""HighWaterMark"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""Reserved"": [ 32, [ ""Array"", ""{\""count\"":8,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public _EX_PUSH_LOCK FreeListLock
		{
			get
			{
				_EX_PUSH_LOCK returnValue = new _EX_PUSH_LOCK(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 FirstFreeHandleEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 LastFreeHandleEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public Int32 HandleCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 HighWaterMark { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32[] Reserved
		{
			get
			{
				UInt32[] returnValue = new UInt32[8];
				for(int i=0; i<8; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 32);
				return returnValue;
			}
		}
	}
	#endregion
	#region _WHEAP_ERROR_RECORD_WRAPPER_FLAGS
 
	public class _WHEAP_ERROR_RECORD_WRAPPER_FLAGS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEAP_ERROR_RECORD_WRAPPER_FLAGS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEAP_ERROR_RECORD_WRAPPER_FLAGS"": [ 4, {
				 ""Preallocated"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""FromPersistentStore"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""PlatformPfaControl"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""PlatformDirectedOffline"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""Reserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""AsULONG"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Preallocated
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 FromPersistentStore
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 PlatformPfaControl
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 PlatformDirectedOffline
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 Reserved
		{
			get
			{
				// start: 4  end: 32  Mask: 11111111111111111111111111110000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967280) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 AsULONG { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _GDI_TEB_BATCH64
 
	public class _GDI_TEB_BATCH64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _GDI_TEB_BATCH64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1256; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_GDI_TEB_BATCH64"": [ 1256, {
				 ""Offset"": [ 0, [ ""BitField"", ""{\""end_bit\"":31,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""HasRenderingCommand"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":31,\""target\"":\""UInt32\""}"" ]],
				 ""HDC"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""Buffer"": [ 16, [ ""Array"", ""{\""count\"":310,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Offset
		{
			get
			{
				// start: 0  end: 31  Mask: 1111111111111111111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2147483647) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 HasRenderingCommand
		{
			get
			{
				// start: 31  end: 32  Mask: 10000000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2147483648) >> 31;
				return (UInt32)value2;
			}
		}
		public UInt64 HDC { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32[] Buffer
		{
			get
			{
				UInt32[] returnValue = new UInt32[310];
				for(int i=0; i<310; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_36314
 
	public class _UNNAMED_36314
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_36314(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_36314"": [ 4, {
				 ""NodeSize"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""UseLookaside"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 NodeSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 UseLookaside { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _VF_AVL_TREE
 
	public class _VF_AVL_TREE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VF_AVL_TREE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VF_AVL_TREE"": [ 32, {
				 ""NodeRangeSize"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""NodeCount"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""Tables"": [ 16, [ ""Pointer"", ""{\""target\"":\""_VF_AVL_TABLE\""}"" ]],
				 ""TablesNo"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""u1"": [ 28, [ ""_UNNAMED_36314"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 NodeRangeSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 NodeCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Tables { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 TablesNo { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public _UNNAMED_36314 u1
		{
			get
			{
				_UNNAMED_36314 returnValue = new _UNNAMED_36314(_StructureData, _BufferOffset + 28);
				return returnValue;
			}
		}
	}
	#endregion
	#region _FILE_NETWORK_OPEN_INFORMATION
 
	public class _FILE_NETWORK_OPEN_INFORMATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _FILE_NETWORK_OPEN_INFORMATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_FILE_NETWORK_OPEN_INFORMATION"": [ 56, {
				 ""CreationTime"": [ 0, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""LastAccessTime"": [ 8, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""LastWriteTime"": [ 16, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""ChangeTime"": [ 24, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""AllocationSize"": [ 32, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""EndOfFile"": [ 40, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""FileAttributes"": [ 48, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LARGE_INTEGER CreationTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LARGE_INTEGER LastAccessTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _LARGE_INTEGER LastWriteTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _LARGE_INTEGER ChangeTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public _LARGE_INTEGER AllocationSize
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public _LARGE_INTEGER EndOfFile
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public UInt32 FileAttributes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
	}
	#endregion
	#region _POP_FX_ACCOUNTING
 
	public class _POP_FX_ACCOUNTING
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_FX_ACCOUNTING(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_FX_ACCOUNTING"": [ 48, {
				 ""Lock"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Active"": [ 8, [ ""Byte"", ""null"" ]],
				 ""DripsRequiredState"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""Level"": [ 16, [ ""Int32"", ""null"" ]],
				 ""ActiveStamp"": [ 24, [ ""Int64"", ""null"" ]],
				 ""CsActiveTime"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""CriticalActiveTime"": [ 40, [ ""Int64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Lock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public Byte Active{ get { return _StructureData[_BufferOffset +8]; } }
		public UInt32 DripsRequiredState { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public Int32 Level { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 16); } }
		public Int64 ActiveStamp { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 CsActiveTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public Int64 CriticalActiveTime { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 40); } }
	}
	#endregion
	#region _WHEA_MEMORY_ERROR_SECTION_VALIDBITS
 
	public class _WHEA_MEMORY_ERROR_SECTION_VALIDBITS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_MEMORY_ERROR_SECTION_VALIDBITS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_MEMORY_ERROR_SECTION_VALIDBITS"": [ 8, {
				 ""ErrorStatus"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""PhysicalAddress"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt64\""}"" ]],
				 ""PhysicalAddressMask"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt64\""}"" ]],
				 ""Node"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt64\""}"" ]],
				 ""Card"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt64\""}"" ]],
				 ""Module"": [ 0, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt64\""}"" ]],
				 ""Bank"": [ 0, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt64\""}"" ]],
				 ""Device"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt64\""}"" ]],
				 ""Row"": [ 0, [ ""BitField"", ""{\""end_bit\"":9,\""start_bit\"":8,\""target\"":\""UInt64\""}"" ]],
				 ""Column"": [ 0, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":9,\""target\"":\""UInt64\""}"" ]],
				 ""BitPosition"": [ 0, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt64\""}"" ]],
				 ""RequesterId"": [ 0, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt64\""}"" ]],
				 ""ResponderId"": [ 0, [ ""BitField"", ""{\""end_bit\"":13,\""start_bit\"":12,\""target\"":\""UInt64\""}"" ]],
				 ""TargetId"": [ 0, [ ""BitField"", ""{\""end_bit\"":14,\""start_bit\"":13,\""target\"":\""UInt64\""}"" ]],
				 ""ErrorType"": [ 0, [ ""BitField"", ""{\""end_bit\"":15,\""start_bit\"":14,\""target\"":\""UInt64\""}"" ]],
				 ""Reserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":15,\""target\"":\""UInt64\""}"" ]],
				 ""ValidBits"": [ 0, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ErrorStatus
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 PhysicalAddress
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt64)value2;
			}
		}
		public UInt64 PhysicalAddressMask
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt64)value2;
			}
		}
		public UInt64 Node
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8) >> 3;
				return (UInt64)value2;
			}
		}
		public UInt64 Card
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16) >> 4;
				return (UInt64)value2;
			}
		}
		public UInt64 Module
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 32) >> 5;
				return (UInt64)value2;
			}
		}
		public UInt64 Bank
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 64) >> 6;
				return (UInt64)value2;
			}
		}
		public UInt64 Device
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 128) >> 7;
				return (UInt64)value2;
			}
		}
		public UInt64 Row
		{
			get
			{
				// start: 8  end: 9  Mask: 0000000100000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 256) >> 8;
				return (UInt64)value2;
			}
		}
		public UInt64 Column
		{
			get
			{
				// start: 9  end: 10  Mask: 0000001000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 512) >> 9;
				return (UInt64)value2;
			}
		}
		public UInt64 BitPosition
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1024) >> 10;
				return (UInt64)value2;
			}
		}
		public UInt64 RequesterId
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2048) >> 11;
				return (UInt64)value2;
			}
		}
		public UInt64 ResponderId
		{
			get
			{
				// start: 12  end: 13  Mask: 0001000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4096) >> 12;
				return (UInt64)value2;
			}
		}
		public UInt64 TargetId
		{
			get
			{
				// start: 13  end: 14  Mask: 0010000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8192) >> 13;
				return (UInt64)value2;
			}
		}
		public UInt64 ErrorType
		{
			get
			{
				// start: 14  end: 15  Mask: 0100000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16384) >> 14;
				return (UInt64)value2;
			}
		}
		public UInt64 Reserved
		{
			get
			{
				// start: 15  end: 64  Mask: 0000000000000000000000000000000011111111111111111000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294934528) >> 15;
				return (UInt64)value2;
			}
		}
		public UInt64 ValidBits { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _POP_TRIGGER_WAIT
 
	public class _POP_TRIGGER_WAIT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_TRIGGER_WAIT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_TRIGGER_WAIT"": [ 56, {
				 ""Event"": [ 0, [ ""_KEVENT"", ""null"" ]],
				 ""Status"": [ 24, [ ""Int32"", ""null"" ]],
				 ""Link"": [ 32, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Trigger"": [ 48, [ ""Pointer"", ""{\""target\"":\""_POP_ACTION_TRIGGER\""}"" ]] }]
				 }
				)";
			}
		}
		public _KEVENT Event
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public Int32 Status { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 24); } }
		public _LIST_ENTRY Link
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt64 Trigger { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
	}
	#endregion
	#region _AER_ENDPOINT_DESCRIPTOR_FLAGS
 
	public class _AER_ENDPOINT_DESCRIPTOR_FLAGS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _AER_ENDPOINT_DESCRIPTOR_FLAGS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 2; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_AER_ENDPOINT_DESCRIPTOR_FLAGS"": [ 2, {
				 ""UncorrectableErrorMaskRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""UncorrectableErrorSeverityRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt16\""}"" ]],
				 ""CorrectableErrorMaskRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt16\""}"" ]],
				 ""AdvancedCapsAndControlRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt16\""}"" ]],
				 ""Reserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":4,\""target\"":\""UInt16\""}"" ]],
				 ""AsUSHORT"": [ 0, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 UncorrectableErrorMaskRW
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 UncorrectableErrorSeverityRW
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt16)value2;
			}
		}
		public UInt16 CorrectableErrorMaskRW
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt16)value2;
			}
		}
		public UInt16 AdvancedCapsAndControlRW
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8) >> 3;
				return (UInt16)value2;
			}
		}
		public UInt16 Reserved
		{
			get
			{
				// start: 4  end: 16  Mask: 1111111111110000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 65520) >> 4;
				return (UInt16)value2;
			}
		}
		public UInt16 AsUSHORT { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _RELATION_LIST_ENTRY
 
	public class _RELATION_LIST_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RELATION_LIST_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RELATION_LIST_ENTRY"": [ 24, {
				 ""Count"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""MaxCount"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Devices"": [ 8, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Count { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 MaxCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _DEVICE_OBJECT_LIST_ENTRY[] Devices
		{
			get
			{
				_DEVICE_OBJECT_LIST_ENTRY[] returnValue = new _DEVICE_OBJECT_LIST_ENTRY[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _DEVICE_OBJECT_LIST_ENTRY(_StructureData, (i * size) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _HEAP_FREE_ENTRY_EXTRA
 
	public class _HEAP_FREE_ENTRY_EXTRA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HEAP_FREE_ENTRY_EXTRA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HEAP_FREE_ENTRY_EXTRA"": [ 4, {
				 ""TagIndex"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""FreeBackTraceIndex"": [ 2, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 TagIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 FreeBackTraceIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
	}
	#endregion
	#region _PROC_PERF_HISTORY_ENTRY
 
	public class _PROC_PERF_HISTORY_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROC_PERF_HISTORY_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 6; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROC_PERF_HISTORY_ENTRY"": [ 6, {
				 ""Utility"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""AffinitizedUtility"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Frequency"": [ 4, [ ""Byte"", ""null"" ]],
				 ""Reserved"": [ 5, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Utility { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 AffinitizedUtility { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public Byte Frequency{ get { return _StructureData[_BufferOffset +4]; } }
		public Byte Reserved{ get { return _StructureData[_BufferOffset +5]; } }
	}
	#endregion
	#region _POP_FX_COMPONENT
 
	public class _POP_FX_COMPONENT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_FX_COMPONENT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 248; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_FX_COMPONENT"": [ 248, {
				 ""Id"": [ 0, [ ""_GUID"", ""null"" ]],
				 ""Index"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""WorkOrder"": [ 24, [ ""_POP_FX_WORK_ORDER"", ""null"" ]],
				 ""Device"": [ 80, [ ""Pointer"", ""{\""target\"":\""_POP_FX_DEVICE\""}"" ]],
				 ""Flags"": [ 88, [ ""_POP_FX_COMPONENT_FLAGS"", ""null"" ]],
				 ""Resident"": [ 96, [ ""Int32"", ""null"" ]],
				 ""ActiveEvent"": [ 104, [ ""_KEVENT"", ""null"" ]],
				 ""IdleLock"": [ 128, [ ""UInt64"", ""null"" ]],
				 ""IdleConditionComplete"": [ 136, [ ""Int32"", ""null"" ]],
				 ""IdleStateComplete"": [ 140, [ ""Int32"", ""null"" ]],
				 ""IdleStamp"": [ 144, [ ""UInt64"", ""null"" ]],
				 ""CurrentIdleState"": [ 152, [ ""UInt32"", ""null"" ]],
				 ""IdleStateCount"": [ 156, [ ""UInt32"", ""null"" ]],
				 ""IdleStates"": [ 160, [ ""Pointer"", ""{\""target\"":\""_POP_FX_IDLE_STATE\""}"" ]],
				 ""DeepestWakeableIdleState"": [ 168, [ ""UInt32"", ""null"" ]],
				 ""ProviderCount"": [ 172, [ ""UInt32"", ""null"" ]],
				 ""Providers"": [ 176, [ ""Pointer"", ""{\""target\"":\""_POP_FX_PROVIDER\""}"" ]],
				 ""IdleProviderCount"": [ 184, [ ""UInt32"", ""null"" ]],
				 ""DependentCount"": [ 188, [ ""UInt32"", ""null"" ]],
				 ""Dependents"": [ 192, [ ""Pointer"", ""{\""target\"":\""_POP_FX_DEPENDENT\""}"" ]],
				 ""Accounting"": [ 200, [ ""_POP_FX_ACCOUNTING"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _GUID Id
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 Index { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public _POP_FX_WORK_ORDER WorkOrder
		{
			get
			{
				_POP_FX_WORK_ORDER returnValue = new _POP_FX_WORK_ORDER(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt64 Device { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public _POP_FX_COMPONENT_FLAGS Flags
		{
			get
			{
				_POP_FX_COMPONENT_FLAGS returnValue = new _POP_FX_COMPONENT_FLAGS(_StructureData, _BufferOffset + 88);
				return returnValue;
			}
		}
		public Int32 Resident { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 96); } }
		public _KEVENT ActiveEvent
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 104);
				return returnValue;
			}
		}
		public UInt64 IdleLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 128); } }
		public Int32 IdleConditionComplete { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 136); } }
		public Int32 IdleStateComplete { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 140); } }
		public UInt64 IdleStamp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 144); } }
		public UInt32 CurrentIdleState { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 152); } }
		public UInt32 IdleStateCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 156); } }
		public UInt64 IdleStates { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public UInt32 DeepestWakeableIdleState { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 168); } }
		public UInt32 ProviderCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 172); } }
		public UInt64 Providers { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 176); } }
		public UInt32 IdleProviderCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 184); } }
		public UInt32 DependentCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 188); } }
		public UInt64 Dependents { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 192); } }
		public _POP_FX_ACCOUNTING Accounting
		{
			get
			{
				_POP_FX_ACCOUNTING returnValue = new _POP_FX_ACCOUNTING(_StructureData, _BufferOffset + 200);
				return returnValue;
			}
		}
	}
	#endregion
	#region _PEP_CRASHDUMP_INFORMATION
 
	public class _PEP_CRASHDUMP_INFORMATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PEP_CRASHDUMP_INFORMATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PEP_CRASHDUMP_INFORMATION"": [ 16, {
				 ""DeviceHandle"": [ 0, [ ""Pointer"", ""{\""target\"":\""PEPHANDLE__\""}"" ]],
				 ""DeviceContext"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 DeviceHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 DeviceContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _POP_FX_DRIVER_CALLBACKS
 
	public class _POP_FX_DRIVER_CALLBACKS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_FX_DRIVER_CALLBACKS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_FX_DRIVER_CALLBACKS"": [ 56, {
				 ""ComponentActive"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ComponentIdle"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ComponentIdleState"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DevicePowerRequired"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DevicePowerNotRequired"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PowerControl"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ComponentCriticalTransition"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ComponentActive { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 ComponentIdle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 ComponentIdleState { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 DevicePowerRequired { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 DevicePowerNotRequired { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 PowerControl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 ComponentCriticalTransition { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
	}
	#endregion
	#region _PROVIDER_BINARY_ENTRY
 
	public class _PROVIDER_BINARY_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROVIDER_BINARY_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROVIDER_BINARY_ENTRY"": [ 56, {
				 ""ListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ConsumersNotified"": [ 16, [ ""Byte"", ""null"" ]],
				 ""Spare"": [ 17, [ ""Array"", ""{\""count\"":3,\""target\"":\""Byte\""}"" ]],
				 ""DebugIdSize"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""DebugId"": [ 24, [ ""_CVDD"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public Byte ConsumersNotified{ get { return _StructureData[_BufferOffset +16]; } }
		public Byte[] Spare
		{
			get
			{
				Byte[] returnValue = new Byte[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 17];
				return returnValue;
			}
		}
		public UInt32 DebugIdSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public _CVDD DebugId
		{
			get
			{
				_CVDD returnValue = new _CVDD(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
	}
	#endregion
	#region _VI_DEADLOCK_GLOBALS
 
	public class _VI_DEADLOCK_GLOBALS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VI_DEADLOCK_GLOBALS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 33152; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VI_DEADLOCK_GLOBALS"": [ 33152, {
				 ""TimeAcquire"": [ 0, [ ""Int64"", ""null"" ]],
				 ""TimeRelease"": [ 8, [ ""Int64"", ""null"" ]],
				 ""ResourceDatabase"": [ 16, [ ""Pointer"", ""{\""target\"":\""_LIST_ENTRY\""}"" ]],
				 ""ResourceDatabaseCount"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""ResourceAddressRange"": [ 32, [ ""Array"", ""{\""count\"":1023,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""ThreadDatabase"": [ 16400, [ ""Pointer"", ""{\""target\"":\""_LIST_ENTRY\""}"" ]],
				 ""ThreadDatabaseCount"": [ 16408, [ ""UInt64"", ""null"" ]],
				 ""ThreadAddressRange"": [ 16416, [ ""Array"", ""{\""count\"":1023,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""AllocationFailures"": [ 32784, [ ""UInt32"", ""null"" ]],
				 ""NodesTrimmedBasedOnAge"": [ 32788, [ ""UInt32"", ""null"" ]],
				 ""NodesTrimmedBasedOnCount"": [ 32792, [ ""UInt32"", ""null"" ]],
				 ""NodesSearched"": [ 32796, [ ""UInt32"", ""null"" ]],
				 ""MaxNodesSearched"": [ 32800, [ ""UInt32"", ""null"" ]],
				 ""SequenceNumber"": [ 32804, [ ""UInt32"", ""null"" ]],
				 ""RecursionDepthLimit"": [ 32808, [ ""UInt32"", ""null"" ]],
				 ""SearchedNodesLimit"": [ 32812, [ ""UInt32"", ""null"" ]],
				 ""DepthLimitHits"": [ 32816, [ ""UInt32"", ""null"" ]],
				 ""SearchLimitHits"": [ 32820, [ ""UInt32"", ""null"" ]],
				 ""StackLimitHits"": [ 32824, [ ""UInt32"", ""null"" ]],
				 ""ABC_ACB_Skipped"": [ 32828, [ ""UInt32"", ""null"" ]],
				 ""OutOfOrderReleases"": [ 32832, [ ""UInt32"", ""null"" ]],
				 ""NodesReleasedOutOfOrder"": [ 32836, [ ""UInt32"", ""null"" ]],
				 ""TotalReleases"": [ 32840, [ ""UInt32"", ""null"" ]],
				 ""RootNodesDeleted"": [ 32844, [ ""UInt32"", ""null"" ]],
				 ""ForgetHistoryCounter"": [ 32848, [ ""UInt32"", ""null"" ]],
				 ""Instigator"": [ 32856, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""NumberOfParticipants"": [ 32864, [ ""UInt32"", ""null"" ]],
				 ""Participant"": [ 32872, [ ""Array"", ""{\""count\"":32,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""_VI_DEADLOCK_NODE\""}}"" ]],
				 ""ChildrenCountWatermark"": [ 33128, [ ""Int32"", ""null"" ]],
				 ""StackType"": [ 33132, [ ""Enumeration"", ""{\""enum_name\"":\""_KERNEL_STACK_LIMITS\"",\""target\"":\""UInt32\""}"" ]],
				 ""StackLowLimit"": [ 33136, [ ""UInt64"", ""null"" ]],
				 ""StackHighLimit"": [ 33144, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int64 TimeAcquire { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 0); } }
		public Int64 TimeRelease { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 ResourceDatabase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 ResourceDatabaseCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public _VF_ADDRESS_RANGE[] ResourceAddressRange
		{
			get
			{
				_VF_ADDRESS_RANGE[] returnValue = new _VF_ADDRESS_RANGE[1023];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1023; i++ )
					returnValue[i] = new _VF_ADDRESS_RANGE(_StructureData, (i * size) + _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt64 ThreadDatabase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16400); } }
		public UInt64 ThreadDatabaseCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16408); } }
		public _VF_ADDRESS_RANGE[] ThreadAddressRange
		{
			get
			{
				_VF_ADDRESS_RANGE[] returnValue = new _VF_ADDRESS_RANGE[1023];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1023; i++ )
					returnValue[i] = new _VF_ADDRESS_RANGE(_StructureData, (i * size) + _BufferOffset + 16416);
				return returnValue;
			}
		}
		public UInt32 AllocationFailures { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32784); } }
		public UInt32 NodesTrimmedBasedOnAge { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32788); } }
		public UInt32 NodesTrimmedBasedOnCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32792); } }
		public UInt32 NodesSearched { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32796); } }
		public UInt32 MaxNodesSearched { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32800); } }
		public UInt32 SequenceNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32804); } }
		public UInt32 RecursionDepthLimit { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32808); } }
		public UInt32 SearchedNodesLimit { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32812); } }
		public UInt32 DepthLimitHits { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32816); } }
		public UInt32 SearchLimitHits { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32820); } }
		public UInt32 StackLimitHits { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32824); } }
		public UInt32 ABC_ACB_Skipped { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32828); } }
		public UInt32 OutOfOrderReleases { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32832); } }
		public UInt32 NodesReleasedOutOfOrder { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32836); } }
		public UInt32 TotalReleases { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32840); } }
		public UInt32 RootNodesDeleted { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32844); } }
		public UInt32 ForgetHistoryCounter { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32848); } }
		public UInt64 Instigator { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32856); } }
		public UInt32 NumberOfParticipants { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32864); } }
		public UInt64[] Participant
		{
			get
			{
				UInt64[] returnValue = new UInt64[32];
				int size = 8;
				for(int i=0; i<32; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 32872);
				return returnValue;
			}
		}
		public Int32 ChildrenCountWatermark { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 33128); } }
		public _KERNEL_STACK_LIMITS StackType { get { return (_KERNEL_STACK_LIMITS)BitConverter.ToUInt32(_StructureData, _BufferOffset + 33132); } }
		public UInt64 StackLowLimit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 33136); } }
		public UInt64 StackHighLimit { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 33144); } }
	}
	#endregion
	#region _KTM
 
	public class _KTM
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KTM(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 960; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KTM"": [ 960, {
				 ""cookie"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Mutex"": [ 8, [ ""_KMUTANT"", ""null"" ]],
				 ""State"": [ 64, [ ""Enumeration"", ""{\""enum_name\"":\""KTM_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""NamespaceLink"": [ 72, [ ""_KTMOBJECT_NAMESPACE_LINK"", ""null"" ]],
				 ""TmIdentity"": [ 112, [ ""_GUID"", ""null"" ]],
				 ""Flags"": [ 128, [ ""UInt32"", ""null"" ]],
				 ""VolatileFlags"": [ 132, [ ""UInt32"", ""null"" ]],
				 ""LogFileName"": [ 136, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""LogFileObject"": [ 152, [ ""Pointer"", ""{\""target\"":\""_FILE_OBJECT\""}"" ]],
				 ""MarshallingContext"": [ 160, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""LogManagementContext"": [ 168, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Transactions"": [ 176, [ ""_KTMOBJECT_NAMESPACE"", ""null"" ]],
				 ""ResourceManagers"": [ 344, [ ""_KTMOBJECT_NAMESPACE"", ""null"" ]],
				 ""LsnOrderedMutex"": [ 512, [ ""_KMUTANT"", ""null"" ]],
				 ""LsnOrderedList"": [ 568, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""CommitVirtualClock"": [ 584, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""CommitVirtualClockMutex"": [ 592, [ ""_FAST_MUTEX"", ""null"" ]],
				 ""BaseLsn"": [ 648, [ ""_CLS_LSN"", ""null"" ]],
				 ""CurrentReadLsn"": [ 656, [ ""_CLS_LSN"", ""null"" ]],
				 ""LastRecoveredLsn"": [ 664, [ ""_CLS_LSN"", ""null"" ]],
				 ""TmRmHandle"": [ 672, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""TmRm"": [ 680, [ ""Pointer"", ""{\""target\"":\""_KRESOURCEMANAGER\""}"" ]],
				 ""LogFullNotifyEvent"": [ 688, [ ""_KEVENT"", ""null"" ]],
				 ""CheckpointWorkItem"": [ 712, [ ""_WORK_QUEUE_ITEM"", ""null"" ]],
				 ""CheckpointTargetLsn"": [ 744, [ ""_CLS_LSN"", ""null"" ]],
				 ""LogFullCompletedWorkItem"": [ 752, [ ""_WORK_QUEUE_ITEM"", ""null"" ]],
				 ""LogWriteResource"": [ 784, [ ""_ERESOURCE"", ""null"" ]],
				 ""LogFlags"": [ 888, [ ""UInt32"", ""null"" ]],
				 ""LogFullStatus"": [ 892, [ ""Int32"", ""null"" ]],
				 ""RecoveryStatus"": [ 896, [ ""Int32"", ""null"" ]],
				 ""LastCheckBaseLsn"": [ 904, [ ""_CLS_LSN"", ""null"" ]],
				 ""RestartOrderedList"": [ 912, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""OfflineWorkItem"": [ 928, [ ""_WORK_QUEUE_ITEM"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 cookie { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _KMUTANT Mutex
		{
			get
			{
				_KMUTANT returnValue = new _KMUTANT(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public KTM_STATE State { get { return (KTM_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public _KTMOBJECT_NAMESPACE_LINK NamespaceLink
		{
			get
			{
				_KTMOBJECT_NAMESPACE_LINK returnValue = new _KTMOBJECT_NAMESPACE_LINK(_StructureData, _BufferOffset + 72);
				return returnValue;
			}
		}
		public _GUID TmIdentity
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 112);
				return returnValue;
			}
		}
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 128); } }
		public UInt32 VolatileFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 132); } }
		public _UNICODE_STRING LogFileName
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 136);
				return returnValue;
			}
		}
		public UInt64 LogFileObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 152); } }
		public UInt64 MarshallingContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public UInt64 LogManagementContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 168); } }
		public _KTMOBJECT_NAMESPACE Transactions
		{
			get
			{
				_KTMOBJECT_NAMESPACE returnValue = new _KTMOBJECT_NAMESPACE(_StructureData, _BufferOffset + 176);
				return returnValue;
			}
		}
		public _KTMOBJECT_NAMESPACE ResourceManagers
		{
			get
			{
				_KTMOBJECT_NAMESPACE returnValue = new _KTMOBJECT_NAMESPACE(_StructureData, _BufferOffset + 344);
				return returnValue;
			}
		}
		public _KMUTANT LsnOrderedMutex
		{
			get
			{
				_KMUTANT returnValue = new _KMUTANT(_StructureData, _BufferOffset + 512);
				return returnValue;
			}
		}
		public _LIST_ENTRY LsnOrderedList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 568);
				return returnValue;
			}
		}
		public _LARGE_INTEGER CommitVirtualClock
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 584);
				return returnValue;
			}
		}
		public _FAST_MUTEX CommitVirtualClockMutex
		{
			get
			{
				_FAST_MUTEX returnValue = new _FAST_MUTEX(_StructureData, _BufferOffset + 592);
				return returnValue;
			}
		}
		public _CLS_LSN BaseLsn
		{
			get
			{
				_CLS_LSN returnValue = new _CLS_LSN(_StructureData, _BufferOffset + 648);
				return returnValue;
			}
		}
		public _CLS_LSN CurrentReadLsn
		{
			get
			{
				_CLS_LSN returnValue = new _CLS_LSN(_StructureData, _BufferOffset + 656);
				return returnValue;
			}
		}
		public _CLS_LSN LastRecoveredLsn
		{
			get
			{
				_CLS_LSN returnValue = new _CLS_LSN(_StructureData, _BufferOffset + 664);
				return returnValue;
			}
		}
		public UInt64 TmRmHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 672); } }
		public UInt64 TmRm { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 680); } }
		public _KEVENT LogFullNotifyEvent
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 688);
				return returnValue;
			}
		}
		public _WORK_QUEUE_ITEM CheckpointWorkItem
		{
			get
			{
				_WORK_QUEUE_ITEM returnValue = new _WORK_QUEUE_ITEM(_StructureData, _BufferOffset + 712);
				return returnValue;
			}
		}
		public _CLS_LSN CheckpointTargetLsn
		{
			get
			{
				_CLS_LSN returnValue = new _CLS_LSN(_StructureData, _BufferOffset + 744);
				return returnValue;
			}
		}
		public _WORK_QUEUE_ITEM LogFullCompletedWorkItem
		{
			get
			{
				_WORK_QUEUE_ITEM returnValue = new _WORK_QUEUE_ITEM(_StructureData, _BufferOffset + 752);
				return returnValue;
			}
		}
		public _ERESOURCE LogWriteResource
		{
			get
			{
				_ERESOURCE returnValue = new _ERESOURCE(_StructureData, _BufferOffset + 784);
				return returnValue;
			}
		}
		public UInt32 LogFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 888); } }
		public Int32 LogFullStatus { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 892); } }
		public Int32 RecoveryStatus { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 896); } }
		public _CLS_LSN LastCheckBaseLsn
		{
			get
			{
				_CLS_LSN returnValue = new _CLS_LSN(_StructureData, _BufferOffset + 904);
				return returnValue;
			}
		}
		public _LIST_ENTRY RestartOrderedList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 912);
				return returnValue;
			}
		}
		public _WORK_QUEUE_ITEM OfflineWorkItem
		{
			get
			{
				_WORK_QUEUE_ITEM returnValue = new _WORK_QUEUE_ITEM(_StructureData, _BufferOffset + 928);
				return returnValue;
			}
		}
	}
	#endregion
	#region _KTRANSACTION
 
	public class _KTRANSACTION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KTRANSACTION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 728; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KTRANSACTION"": [ 728, {
				 ""OutcomeEvent"": [ 0, [ ""_KEVENT"", ""null"" ]],
				 ""cookie"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""Mutex"": [ 32, [ ""_KMUTANT"", ""null"" ]],
				 ""TreeTx"": [ 88, [ ""Pointer"", ""{\""target\"":\""_KTRANSACTION\""}"" ]],
				 ""GlobalNamespaceLink"": [ 96, [ ""_KTMOBJECT_NAMESPACE_LINK"", ""null"" ]],
				 ""TmNamespaceLink"": [ 136, [ ""_KTMOBJECT_NAMESPACE_LINK"", ""null"" ]],
				 ""UOW"": [ 176, [ ""_GUID"", ""null"" ]],
				 ""State"": [ 192, [ ""Enumeration"", ""{\""enum_name\"":\""_KTRANSACTION_STATE\"",\""target\"":\""UInt32\""}"" ]],
				 ""Flags"": [ 196, [ ""UInt32"", ""null"" ]],
				 ""EnlistmentHead"": [ 200, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""EnlistmentCount"": [ 216, [ ""UInt32"", ""null"" ]],
				 ""RecoverableEnlistmentCount"": [ 220, [ ""UInt32"", ""null"" ]],
				 ""PrePrepareRequiredEnlistmentCount"": [ 224, [ ""UInt32"", ""null"" ]],
				 ""PrepareRequiredEnlistmentCount"": [ 228, [ ""UInt32"", ""null"" ]],
				 ""OutcomeRequiredEnlistmentCount"": [ 232, [ ""UInt32"", ""null"" ]],
				 ""PendingResponses"": [ 236, [ ""UInt32"", ""null"" ]],
				 ""SuperiorEnlistment"": [ 240, [ ""Pointer"", ""{\""target\"":\""_KENLISTMENT\""}"" ]],
				 ""LastLsn"": [ 248, [ ""_CLS_LSN"", ""null"" ]],
				 ""PromotedEntry"": [ 256, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""PromoterTransaction"": [ 272, [ ""Pointer"", ""{\""target\"":\""_KTRANSACTION\""}"" ]],
				 ""PromotePropagation"": [ 280, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""IsolationLevel"": [ 288, [ ""UInt32"", ""null"" ]],
				 ""IsolationFlags"": [ 292, [ ""UInt32"", ""null"" ]],
				 ""Timeout"": [ 296, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""Description"": [ 304, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""RollbackThread"": [ 320, [ ""Pointer"", ""{\""target\"":\""_KTHREAD\""}"" ]],
				 ""RollbackWorkItem"": [ 328, [ ""_WORK_QUEUE_ITEM"", ""null"" ]],
				 ""RollbackDpc"": [ 360, [ ""_KDPC"", ""null"" ]],
				 ""RollbackTimer"": [ 424, [ ""_KTIMER"", ""null"" ]],
				 ""LsnOrderedEntry"": [ 488, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Outcome"": [ 504, [ ""Enumeration"", ""{\""enum_name\"":\""_KTRANSACTION_OUTCOME\"",\""target\"":\""UInt32\""}"" ]],
				 ""Tm"": [ 512, [ ""Pointer"", ""{\""target\"":\""_KTM\""}"" ]],
				 ""CommitReservation"": [ 520, [ ""Int64"", ""null"" ]],
				 ""TransactionHistory"": [ 528, [ ""Array"", ""{\""count\"":10,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""TransactionHistoryCount"": [ 608, [ ""UInt32"", ""null"" ]],
				 ""DTCPrivateInformation"": [ 616, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DTCPrivateInformationLength"": [ 624, [ ""UInt32"", ""null"" ]],
				 ""DTCPrivateInformationMutex"": [ 632, [ ""_KMUTANT"", ""null"" ]],
				 ""PromotedTxSelfHandle"": [ 688, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PendingPromotionCount"": [ 696, [ ""UInt32"", ""null"" ]],
				 ""PromotionCompletedEvent"": [ 704, [ ""_KEVENT"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _KEVENT OutcomeEvent
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 cookie { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public _KMUTANT Mutex
		{
			get
			{
				_KMUTANT returnValue = new _KMUTANT(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt64 TreeTx { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public _KTMOBJECT_NAMESPACE_LINK GlobalNamespaceLink
		{
			get
			{
				_KTMOBJECT_NAMESPACE_LINK returnValue = new _KTMOBJECT_NAMESPACE_LINK(_StructureData, _BufferOffset + 96);
				return returnValue;
			}
		}
		public _KTMOBJECT_NAMESPACE_LINK TmNamespaceLink
		{
			get
			{
				_KTMOBJECT_NAMESPACE_LINK returnValue = new _KTMOBJECT_NAMESPACE_LINK(_StructureData, _BufferOffset + 136);
				return returnValue;
			}
		}
		public _GUID UOW
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 176);
				return returnValue;
			}
		}
		public _KTRANSACTION_STATE State { get { return (_KTRANSACTION_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 192); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 196); } }
		public _LIST_ENTRY EnlistmentHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 200);
				return returnValue;
			}
		}
		public UInt32 EnlistmentCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 216); } }
		public UInt32 RecoverableEnlistmentCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 220); } }
		public UInt32 PrePrepareRequiredEnlistmentCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 224); } }
		public UInt32 PrepareRequiredEnlistmentCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 228); } }
		public UInt32 OutcomeRequiredEnlistmentCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 232); } }
		public UInt32 PendingResponses { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 236); } }
		public UInt64 SuperiorEnlistment { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 240); } }
		public _CLS_LSN LastLsn
		{
			get
			{
				_CLS_LSN returnValue = new _CLS_LSN(_StructureData, _BufferOffset + 248);
				return returnValue;
			}
		}
		public _LIST_ENTRY PromotedEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 256);
				return returnValue;
			}
		}
		public UInt64 PromoterTransaction { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 272); } }
		public UInt64 PromotePropagation { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 280); } }
		public UInt32 IsolationLevel { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 288); } }
		public UInt32 IsolationFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 292); } }
		public _LARGE_INTEGER Timeout
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 296);
				return returnValue;
			}
		}
		public _UNICODE_STRING Description
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 304);
				return returnValue;
			}
		}
		public UInt64 RollbackThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 320); } }
		public _WORK_QUEUE_ITEM RollbackWorkItem
		{
			get
			{
				_WORK_QUEUE_ITEM returnValue = new _WORK_QUEUE_ITEM(_StructureData, _BufferOffset + 328);
				return returnValue;
			}
		}
		public _KDPC RollbackDpc
		{
			get
			{
				_KDPC returnValue = new _KDPC(_StructureData, _BufferOffset + 360);
				return returnValue;
			}
		}
		public _KTIMER RollbackTimer
		{
			get
			{
				_KTIMER returnValue = new _KTIMER(_StructureData, _BufferOffset + 424);
				return returnValue;
			}
		}
		public _LIST_ENTRY LsnOrderedEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 488);
				return returnValue;
			}
		}
		public _KTRANSACTION_OUTCOME Outcome { get { return (_KTRANSACTION_OUTCOME)BitConverter.ToUInt32(_StructureData, _BufferOffset + 504); } }
		public UInt64 Tm { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 512); } }
		public Int64 CommitReservation { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 520); } }
		public _KTRANSACTION_HISTORY[] TransactionHistory
		{
			get
			{
				_KTRANSACTION_HISTORY[] returnValue = new _KTRANSACTION_HISTORY[10];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<10; i++ )
					returnValue[i] = new _KTRANSACTION_HISTORY(_StructureData, (i * size) + _BufferOffset + 528);
				return returnValue;
			}
		}
		public UInt32 TransactionHistoryCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 608); } }
		public UInt64 DTCPrivateInformation { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 616); } }
		public UInt32 DTCPrivateInformationLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 624); } }
		public _KMUTANT DTCPrivateInformationMutex
		{
			get
			{
				_KMUTANT returnValue = new _KMUTANT(_StructureData, _BufferOffset + 632);
				return returnValue;
			}
		}
		public UInt64 PromotedTxSelfHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 688); } }
		public UInt32 PendingPromotionCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 696); } }
		public _KEVENT PromotionCompletedEvent
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 704);
				return returnValue;
			}
		}
	}
	#endregion
	#region _PRIVATE_CACHE_MAP_FLAGS
 
	public class _PRIVATE_CACHE_MAP_FLAGS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PRIVATE_CACHE_MAP_FLAGS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PRIVATE_CACHE_MAP_FLAGS"": [ 4, {
				 ""DontUse"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""ReadAheadActive"": [ 0, [ ""BitField"", ""{\""end_bit\"":17,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""ReadAheadEnabled"": [ 0, [ ""BitField"", ""{\""end_bit\"":18,\""start_bit\"":17,\""target\"":\""UInt32\""}"" ]],
				 ""PagePriority"": [ 0, [ ""BitField"", ""{\""end_bit\"":21,\""start_bit\"":18,\""target\"":\""UInt32\""}"" ]],
				 ""PipelineReadAheads"": [ 0, [ ""BitField"", ""{\""end_bit\"":22,\""start_bit\"":21,\""target\"":\""UInt32\""}"" ]],
				 ""Available"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":22,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 DontUse
		{
			get
			{
				// start: 0  end: 16  Mask: 1111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 65535) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 ReadAheadActive
		{
			get
			{
				// start: 16  end: 17  Mask: 10000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 65536) >> 16;
				return (UInt32)value2;
			}
		}
		public UInt32 ReadAheadEnabled
		{
			get
			{
				// start: 17  end: 18  Mask: 100000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 131072) >> 17;
				return (UInt32)value2;
			}
		}
		public UInt32 PagePriority
		{
			get
			{
				// start: 18  end: 21  Mask: 111000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1835008) >> 18;
				return (UInt32)value2;
			}
		}
		public UInt32 PipelineReadAheads
		{
			get
			{
				// start: 21  end: 22  Mask: 1000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2097152) >> 21;
				return (UInt32)value2;
			}
		}
		public UInt32 Available
		{
			get
			{
				// start: 22  end: 32  Mask: 11111111110000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4290772992) >> 22;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _CM_KCB_UOW
 
	public class _CM_KCB_UOW
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_KCB_UOW(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 96; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_KCB_UOW"": [ 96, {
				 ""TransactionListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""KCBLock"": [ 16, [ ""Pointer"", ""{\""target\"":\""_CM_INTENT_LOCK\""}"" ]],
				 ""KeyLock"": [ 24, [ ""Pointer"", ""{\""target\"":\""_CM_INTENT_LOCK\""}"" ]],
				 ""KCBListEntry"": [ 32, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""KeyControlBlock"": [ 48, [ ""Pointer"", ""{\""target\"":\""_CM_KEY_CONTROL_BLOCK\""}"" ]],
				 ""Transaction"": [ 56, [ ""Pointer"", ""{\""target\"":\""_CM_TRANS\""}"" ]],
				 ""UoWState"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""ActionType"": [ 68, [ ""Enumeration"", ""{\""enum_name\"":\""UoWActionType\"",\""target\"":\""UInt32\""}"" ]],
				 ""StorageType"": [ 72, [ ""Enumeration"", ""{\""enum_name\"":\""HSTORAGE_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""ChildKCB"": [ 80, [ ""Pointer"", ""{\""target\"":\""_CM_KEY_CONTROL_BLOCK\""}"" ]],
				 ""VolatileKeyCell"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""OldValueCell"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""NewValueCell"": [ 84, [ ""UInt32"", ""null"" ]],
				 ""UserFlags"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""LastWriteTime"": [ 80, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""TxSecurityCell"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""OldChildKCB"": [ 80, [ ""Pointer"", ""{\""target\"":\""_CM_KEY_CONTROL_BLOCK\""}"" ]],
				 ""NewChildKCB"": [ 88, [ ""Pointer"", ""{\""target\"":\""_CM_KEY_CONTROL_BLOCK\""}"" ]],
				 ""OtherChildKCB"": [ 80, [ ""Pointer"", ""{\""target\"":\""_CM_KEY_CONTROL_BLOCK\""}"" ]],
				 ""ThisVolatileKeyCell"": [ 88, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY TransactionListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 KCBLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 KeyLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public _LIST_ENTRY KCBListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt64 KeyControlBlock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 Transaction { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt32 UoWState { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UoWActionType ActionType { get { return (UoWActionType)BitConverter.ToUInt32(_StructureData, _BufferOffset + 68); } }
		public HSTORAGE_TYPE StorageType { get { return (HSTORAGE_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 72); } }
		public UInt64 ChildKCB { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt32 VolatileKeyCell { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 OldValueCell { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt32 NewValueCell { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 84); } }
		public UInt32 UserFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public _LARGE_INTEGER LastWriteTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 80);
				return returnValue;
			}
		}
		public UInt32 TxSecurityCell { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt64 OldChildKCB { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 NewChildKCB { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 OtherChildKCB { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt32 ThisVolatileKeyCell { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 88); } }
	}
	#endregion
	#region _MMPTE_TRANSITION
 
	public class _MMPTE_TRANSITION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMPTE_TRANSITION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMPTE_TRANSITION"": [ 8, {
				 ""Valid"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""Write"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt64\""}"" ]],
				 ""Spare"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt64\""}"" ]],
				 ""WriteThrough"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt64\""}"" ]],
				 ""CacheDisable"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt64\""}"" ]],
				 ""Protection"": [ 0, [ ""BitField"", ""{\""end_bit\"":10,\""start_bit\"":5,\""target\"":\""UInt64\""}"" ]],
				 ""Prototype"": [ 0, [ ""BitField"", ""{\""end_bit\"":11,\""start_bit\"":10,\""target\"":\""UInt64\""}"" ]],
				 ""Transition"": [ 0, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":11,\""target\"":\""UInt64\""}"" ]],
				 ""PageFrameNumber"": [ 0, [ ""BitField"", ""{\""end_bit\"":48,\""start_bit\"":12,\""target\"":\""UInt64\""}"" ]],
				 ""Unused"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":48,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Valid
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 Write
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt64)value2;
			}
		}
		public UInt64 Spare
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt64)value2;
			}
		}
		public UInt64 WriteThrough
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8) >> 3;
				return (UInt64)value2;
			}
		}
		public UInt64 CacheDisable
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16) >> 4;
				return (UInt64)value2;
			}
		}
		public UInt64 Protection
		{
			get
			{
				// start: 5  end: 10  Mask: 0000001111100000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 992) >> 5;
				return (UInt64)value2;
			}
		}
		public UInt64 Prototype
		{
			get
			{
				// start: 10  end: 11  Mask: 0000010000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1024) >> 10;
				return (UInt64)value2;
			}
		}
		public UInt64 Transition
		{
			get
			{
				// start: 11  end: 12  Mask: 0000100000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2048) >> 11;
				return (UInt64)value2;
			}
		}
		public UInt64 PageFrameNumber
		{
			get
			{
				// start: 12  end: 48  Mask: 000000000000000011111111111111111111000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294963200) >> 12;
				return (UInt64)value2;
			}
		}
		public UInt64 Unused
		{
			get
			{
				// start: 48  end: 64  Mask: 0000000000000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 48;
				return (UInt64)value2;
			}
		}
	}
	#endregion
	#region _KREQUEST_PACKET
 
	public class _KREQUEST_PACKET
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KREQUEST_PACKET(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KREQUEST_PACKET"": [ 32, {
				 ""CurrentPacket"": [ 0, [ ""Array"", ""{\""count\"":3,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]],
				 ""WorkerRoutine"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64[] CurrentPacket
		{
			get
			{
				UInt64[] returnValue = new UInt64[3];
				int size = 8;
				for(int i=0; i<3; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 WorkerRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _PROCESSOR_IDLE_CONSTRAINTS
 
	public class _PROCESSOR_IDLE_CONSTRAINTS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROCESSOR_IDLE_CONSTRAINTS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROCESSOR_IDLE_CONSTRAINTS"": [ 64, {
				 ""TotalTime"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""IdleTime"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""ExpectedIdleDuration"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""MaxIdleDuration"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""OverrideState"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""TimeCheck"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""PromotePercent"": [ 40, [ ""Byte"", ""null"" ]],
				 ""DemotePercent"": [ 41, [ ""Byte"", ""null"" ]],
				 ""Parked"": [ 42, [ ""Byte"", ""null"" ]],
				 ""Interruptible"": [ 43, [ ""Byte"", ""null"" ]],
				 ""PlatformIdle"": [ 44, [ ""Byte"", ""null"" ]],
				 ""IRHints"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""IRTruncatedHints"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""ExpectedWakeReason"": [ 56, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 TotalTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 IdleTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 ExpectedIdleDuration { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 MaxIdleDuration { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt32 OverrideState { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 TimeCheck { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public Byte PromotePercent{ get { return _StructureData[_BufferOffset +40]; } }
		public Byte DemotePercent{ get { return _StructureData[_BufferOffset +41]; } }
		public Byte Parked{ get { return _StructureData[_BufferOffset +42]; } }
		public Byte Interruptible{ get { return _StructureData[_BufferOffset +43]; } }
		public Byte PlatformIdle{ get { return _StructureData[_BufferOffset +44]; } }
		public UInt32 IRHints { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public UInt32 IRTruncatedHints { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public Byte ExpectedWakeReason{ get { return _StructureData[_BufferOffset +56]; } }
	}
	#endregion
	#region _VF_WATCHDOG_IRP
 
	public class _VF_WATCHDOG_IRP
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VF_WATCHDOG_IRP(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VF_WATCHDOG_IRP"": [ 32, {
				 ""ListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Irp"": [ 16, [ ""Pointer"", ""{\""target\"":\""_IRP\""}"" ]],
				 ""DueTickCount"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""Inserted"": [ 28, [ ""Byte"", ""null"" ]],
				 ""TrackedStackLocation"": [ 29, [ ""Char"", ""null"" ]],
				 ""CancelTimeoutTicks"": [ 30, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Irp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 DueTickCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public Byte Inserted{ get { return _StructureData[_BufferOffset +28]; } }
		public Char TrackedStackLocation { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 29); } }
		public UInt16 CancelTimeoutTicks { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 30); } }
	}
	#endregion
	#region _MMVAD_FLAGS2
 
	public class _MMVAD_FLAGS2
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMVAD_FLAGS2(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMVAD_FLAGS2"": [ 4, {
				 ""FileOffset"": [ 0, [ ""BitField"", ""{\""end_bit\"":24,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""Large"": [ 0, [ ""BitField"", ""{\""end_bit\"":25,\""start_bit\"":24,\""target\"":\""UInt32\""}"" ]],
				 ""TrimBehind"": [ 0, [ ""BitField"", ""{\""end_bit\"":26,\""start_bit\"":25,\""target\"":\""UInt32\""}"" ]],
				 ""Inherit"": [ 0, [ ""BitField"", ""{\""end_bit\"":27,\""start_bit\"":26,\""target\"":\""UInt32\""}"" ]],
				 ""CopyOnWrite"": [ 0, [ ""BitField"", ""{\""end_bit\"":28,\""start_bit\"":27,\""target\"":\""UInt32\""}"" ]],
				 ""NoValidationNeeded"": [ 0, [ ""BitField"", ""{\""end_bit\"":29,\""start_bit\"":28,\""target\"":\""UInt32\""}"" ]],
				 ""Spare"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":29,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 FileOffset
		{
			get
			{
				// start: 0  end: 24  Mask: 111111111111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16777215) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 Large
		{
			get
			{
				// start: 24  end: 25  Mask: 1000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16777216) >> 24;
				return (UInt32)value2;
			}
		}
		public UInt32 TrimBehind
		{
			get
			{
				// start: 25  end: 26  Mask: 10000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 33554432) >> 25;
				return (UInt32)value2;
			}
		}
		public UInt32 Inherit
		{
			get
			{
				// start: 26  end: 27  Mask: 100000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 67108864) >> 26;
				return (UInt32)value2;
			}
		}
		public UInt32 CopyOnWrite
		{
			get
			{
				// start: 27  end: 28  Mask: 1000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 134217728) >> 27;
				return (UInt32)value2;
			}
		}
		public UInt32 NoValidationNeeded
		{
			get
			{
				// start: 28  end: 29  Mask: 10000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 268435456) >> 28;
				return (UInt32)value2;
			}
		}
		public UInt32 Spare
		{
			get
			{
				// start: 29  end: 32  Mask: 11100000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 3758096384) >> 29;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _flags
 
	public class _flags
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _flags(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_flags"": [ 1, {
				 ""Removable"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""GroupAssigned"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""GroupCommitted"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""GroupAssignmentFixed"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""Fill"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public Byte Removable
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte GroupAssigned
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte GroupCommitted
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte GroupAssignmentFixed
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte Fill
		{
			get
			{
				// start: 4  end: 8  Mask: 0000000011110000
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 240) >> 4;
				return (Byte)value2;
			}
		}
	}
	#endregion
	#region _UNNAMED_36617
 
	public class _UNNAMED_36617
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_36617(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_36617"": [ 8, {
				 ""Head"": [ 0, [ ""BitField"", ""{\""end_bit\"":24,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""Tail"": [ 0, [ ""BitField"", ""{\""end_bit\"":48,\""start_bit\"":24,\""target\"":\""UInt64\""}"" ]],
				 ""ActiveThreadCount"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":48,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Head
		{
			get
			{
				// start: 0  end: 24  Mask: 111111111111111111111111
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16777215) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 Tail
		{
			get
			{
				// start: 24  end: 48  Mask: 000000000000000011111111000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4278190080) >> 24;
				return (UInt64)value2;
			}
		}
		public UInt64 ActiveThreadCount
		{
			get
			{
				// start: 48  end: 64  Mask: 0000000000000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 48;
				return (UInt64)value2;
			}
		}
	}
	#endregion
	#region _UNNAMED_34403
 
	public class _UNNAMED_34403
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_34403(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_34403"": [ 8, {
				 ""s1"": [ 0, [ ""_UNNAMED_36617"", ""null"" ]],
				 ""Value"": [ 0, [ ""Int64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_36617 s1
		{
			get
			{
				_UNNAMED_36617 returnValue = new _UNNAMED_36617(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public Int64 Value { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _CM_KEY_SECURITY_CACHE
 
	public class _CM_KEY_SECURITY_CACHE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_KEY_SECURITY_CACHE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_KEY_SECURITY_CACHE"": [ 56, {
				 ""Cell"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ConvKey"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""List"": [ 8, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""DescriptorLength"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""RealRefCount"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""Descriptor"": [ 32, [ ""_SECURITY_DESCRIPTOR_RELATIVE"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Cell { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 ConvKey { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _LIST_ENTRY List
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt32 DescriptorLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 RealRefCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public _SECURITY_DESCRIPTOR_RELATIVE Descriptor
		{
			get
			{
				_SECURITY_DESCRIPTOR_RELATIVE returnValue = new _SECURITY_DESCRIPTOR_RELATIVE(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
	}
	#endregion
	#region _CM_NAME_HASH
 
	public class _CM_NAME_HASH
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_NAME_HASH(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_NAME_HASH"": [ 24, {
				 ""ConvKey"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""NextHash"": [ 8, [ ""Pointer"", ""{\""target\"":\""_CM_NAME_HASH\""}"" ]],
				 ""NameLength"": [ 16, [ ""UInt16"", ""null"" ]],
				 ""Name"": [ 18, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt16\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 ConvKey { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 NextHash { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt16 NameLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 16); } }
		public UInt16[] Name
		{
			get
			{
				UInt16[] returnValue = new UInt16[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 18);
				return returnValue;
			}
		}
	}
	#endregion
	#region _PROC_IDLE_STATE_BUCKET
 
	public class _PROC_IDLE_STATE_BUCKET
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROC_IDLE_STATE_BUCKET(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROC_IDLE_STATE_BUCKET"": [ 32, {
				 ""TotalTime"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""MinTime"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""MaxTime"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""Count"": [ 24, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 TotalTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 MinTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 MaxTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 Count { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _PO_IRP_QUEUE
 
	public class _PO_IRP_QUEUE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PO_IRP_QUEUE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PO_IRP_QUEUE"": [ 16, {
				 ""CurrentIrp"": [ 0, [ ""Pointer"", ""{\""target\"":\""_IRP\""}"" ]],
				 ""PendingIrpList"": [ 8, [ ""Pointer"", ""{\""target\"":\""_IRP\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 CurrentIrp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 PendingIrpList { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_36641
 
	public class _UNNAMED_36641
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_36641(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_36641"": [ 4, {
				 ""Active"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""OnlyTryAcquireUsed"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""ReleasedOutOfOrder"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""SequenceNumber"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""Whole"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Active
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 OnlyTryAcquireUsed
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 ReleasedOutOfOrder
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 SequenceNumber
		{
			get
			{
				// start: 3  end: 32  Mask: 11111111111111111111111111111000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967288) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 Whole { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _VI_DEADLOCK_NODE
 
	public class _VI_DEADLOCK_NODE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VI_DEADLOCK_NODE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 208; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VI_DEADLOCK_NODE"": [ 208, {
				 ""Parent"": [ 0, [ ""Pointer"", ""{\""target\"":\""_VI_DEADLOCK_NODE\""}"" ]],
				 ""ChildrenList"": [ 8, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""SiblingsList"": [ 24, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ResourceList"": [ 40, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""FreeListEntry"": [ 40, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Root"": [ 56, [ ""Pointer"", ""{\""target\"":\""_VI_DEADLOCK_RESOURCE\""}"" ]],
				 ""ThreadEntry"": [ 64, [ ""Pointer"", ""{\""target\"":\""_VI_DEADLOCK_THREAD\""}"" ]],
				 ""u1"": [ 72, [ ""_UNNAMED_36641"", ""null"" ]],
				 ""ChildrenCount"": [ 76, [ ""Int32"", ""null"" ]],
				 ""StackTrace"": [ 80, [ ""Array"", ""{\""count\"":8,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]],
				 ""ParentStackTrace"": [ 144, [ ""Array"", ""{\""count\"":8,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Parent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _LIST_ENTRY ChildrenList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _LIST_ENTRY SiblingsList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public _LIST_ENTRY ResourceList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public _LIST_ENTRY FreeListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public UInt64 Root { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 ThreadEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public _UNNAMED_36641 u1
		{
			get
			{
				_UNNAMED_36641 returnValue = new _UNNAMED_36641(_StructureData, _BufferOffset + 72);
				return returnValue;
			}
		}
		public Int32 ChildrenCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 76); } }
		public UInt64[] StackTrace
		{
			get
			{
				UInt64[] returnValue = new UInt64[8];
				int size = 8;
				for(int i=0; i<8; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 80);
				return returnValue;
			}
		}
		public UInt64[] ParentStackTrace
		{
			get
			{
				UInt64[] returnValue = new UInt64[8];
				int size = 8;
				for(int i=0; i<8; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 144);
				return returnValue;
			}
		}
	}
	#endregion
	#region PROCESSOR_IDLESTATE_INFO
 
	public class PROCESSOR_IDLESTATE_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public PROCESSOR_IDLESTATE_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""PROCESSOR_IDLESTATE_INFO"": [ 8, {
				 ""TimeCheck"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""DemotePercent"": [ 4, [ ""Byte"", ""null"" ]],
				 ""PromotePercent"": [ 5, [ ""Byte"", ""null"" ]],
				 ""Spare"": [ 6, [ ""Array"", ""{\""count\"":2,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 TimeCheck { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Byte DemotePercent{ get { return _StructureData[_BufferOffset +4]; } }
		public Byte PromotePercent{ get { return _StructureData[_BufferOffset +5]; } }
		public Byte[] Spare
		{
			get
			{
				Byte[] returnValue = new Byte[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 6];
				return returnValue;
			}
		}
	}
	#endregion
	#region _KTMOBJECT_NAMESPACE
 
	public class _KTMOBJECT_NAMESPACE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KTMOBJECT_NAMESPACE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 168; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KTMOBJECT_NAMESPACE"": [ 168, {
				 ""Table"": [ 0, [ ""_RTL_AVL_TABLE"", ""null"" ]],
				 ""Mutex"": [ 104, [ ""_KMUTANT"", ""null"" ]],
				 ""LinksOffset"": [ 160, [ ""UInt16"", ""null"" ]],
				 ""GuidOffset"": [ 162, [ ""UInt16"", ""null"" ]],
				 ""Expired"": [ 164, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _RTL_AVL_TABLE Table
		{
			get
			{
				_RTL_AVL_TABLE returnValue = new _RTL_AVL_TABLE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _KMUTANT Mutex
		{
			get
			{
				_KMUTANT returnValue = new _KMUTANT(_StructureData, _BufferOffset + 104);
				return returnValue;
			}
		}
		public UInt16 LinksOffset { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 160); } }
		public UInt16 GuidOffset { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 162); } }
		public Byte Expired{ get { return _StructureData[_BufferOffset +164]; } }
	}
	#endregion
	#region _LPCP_PORT_QUEUE
 
	public class _LPCP_PORT_QUEUE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _LPCP_PORT_QUEUE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_LPCP_PORT_QUEUE"": [ 32, {
				 ""NonPagedPortQueue"": [ 0, [ ""Pointer"", ""{\""target\"":\""_LPCP_NONPAGED_PORT_QUEUE\""}"" ]],
				 ""Semaphore"": [ 8, [ ""Pointer"", ""{\""target\"":\""_KSEMAPHORE\""}"" ]],
				 ""ReceiveHead"": [ 16, [ ""_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 NonPagedPortQueue { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Semaphore { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _LIST_ENTRY ReceiveHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _CM_KEY_REFERENCE
 
	public class _CM_KEY_REFERENCE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_KEY_REFERENCE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_KEY_REFERENCE"": [ 16, {
				 ""KeyCell"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""KeyHive"": [ 8, [ ""Pointer"", ""{\""target\"":\""_HHIVE\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 KeyCell { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 KeyHive { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region SYSTEM_POWER_LEVEL
 
	public class SYSTEM_POWER_LEVEL
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public SYSTEM_POWER_LEVEL(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""SYSTEM_POWER_LEVEL"": [ 24, {
				 ""Enable"": [ 0, [ ""Byte"", ""null"" ]],
				 ""Spare"": [ 1, [ ""Array"", ""{\""count\"":3,\""target\"":\""Byte\""}"" ]],
				 ""BatteryLevel"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""PowerPolicy"": [ 8, [ ""POWER_ACTION_POLICY"", ""null"" ]],
				 ""MinSystemState"": [ 20, [ ""Enumeration"", ""{\""enum_name\"":\""_SYSTEM_POWER_STATE\"",\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public Byte Enable{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte[] Spare
		{
			get
			{
				Byte[] returnValue = new Byte[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 1];
				return returnValue;
			}
		}
		public UInt32 BatteryLevel { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public POWER_ACTION_POLICY PowerPolicy
		{
			get
			{
				POWER_ACTION_POLICY returnValue = new POWER_ACTION_POLICY(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _SYSTEM_POWER_STATE MinSystemState { get { return (_SYSTEM_POWER_STATE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
	}
	#endregion
	#region _OBJECT_DUMP_CONTROL
 
	public class _OBJECT_DUMP_CONTROL
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_DUMP_CONTROL(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_DUMP_CONTROL"": [ 16, {
				 ""Stream"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Detail"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Stream { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 Detail { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _EVENT_HEADER_EXTENDED_DATA_ITEM
 
	public class _EVENT_HEADER_EXTENDED_DATA_ITEM
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EVENT_HEADER_EXTENDED_DATA_ITEM(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EVENT_HEADER_EXTENDED_DATA_ITEM"": [ 16, {
				 ""Reserved1"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""ExtType"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Linkage"": [ 4, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""Reserved2"": [ 4, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":1,\""target\"":\""UInt16\""}"" ]],
				 ""DataSize"": [ 6, [ ""UInt16"", ""null"" ]],
				 ""DataPtr"": [ 8, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Reserved1 { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 ExtType { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt16 Linkage
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 4);
				var value2 = (value & 1) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 Reserved2
		{
			get
			{
				// start: 1  end: 16  Mask: 1111111111111110
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 4);
				var value2 = (value & 65534) >> 1;
				return (UInt16)value2;
			}
		}
		public UInt16 DataSize { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
		public UInt64 DataPtr { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _VF_ADDRESS_RANGE
 
	public class _VF_ADDRESS_RANGE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VF_ADDRESS_RANGE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VF_ADDRESS_RANGE"": [ 16, {
				 ""Start"": [ 0, [ ""Pointer"", ""{\""target\"":\""Byte\""}"" ]],
				 ""End"": [ 8, [ ""Pointer"", ""{\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Start { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 End { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _OBJECT_SYMBOLIC_LINK
 
	public class _OBJECT_SYMBOLIC_LINK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_SYMBOLIC_LINK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_SYMBOLIC_LINK"": [ 32, {
				 ""CreationTime"": [ 0, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""LinkTarget"": [ 8, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""DosDeviceDriveIndex"": [ 24, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LARGE_INTEGER CreationTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNICODE_STRING LinkTarget
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt32 DosDeviceDriveIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _LPCP_NONPAGED_PORT_QUEUE
 
	public class _LPCP_NONPAGED_PORT_QUEUE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _LPCP_NONPAGED_PORT_QUEUE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_LPCP_NONPAGED_PORT_QUEUE"": [ 40, {
				 ""Semaphore"": [ 0, [ ""_KSEMAPHORE"", ""null"" ]],
				 ""BackPointer"": [ 32, [ ""Pointer"", ""{\""target\"":\""_LPCP_PORT_OBJECT\""}"" ]] }]
				 }
				)";
			}
		}
		public _KSEMAPHORE Semaphore
		{
			get
			{
				_KSEMAPHORE returnValue = new _KSEMAPHORE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 BackPointer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _THERMAL_POLICY
 
	public class _THERMAL_POLICY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _THERMAL_POLICY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 20; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_THERMAL_POLICY"": [ 20, {
				 ""Version"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""WaitForUpdate"": [ 4, [ ""Byte"", ""null"" ]],
				 ""Hibernate"": [ 5, [ ""Byte"", ""null"" ]],
				 ""Critical"": [ 6, [ ""Byte"", ""null"" ]],
				 ""ActivationReasons"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""PassiveLimit"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""ActiveLevel"": [ 16, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Version { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Byte WaitForUpdate{ get { return _StructureData[_BufferOffset +4]; } }
		public Byte Hibernate{ get { return _StructureData[_BufferOffset +5]; } }
		public Byte Critical{ get { return _StructureData[_BufferOffset +6]; } }
		public UInt32 ActivationReasons { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 PassiveLimit { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 ActiveLevel { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _KRESOURCEMANAGER_COMPLETION_BINDING
 
	public class _KRESOURCEMANAGER_COMPLETION_BINDING
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KRESOURCEMANAGER_COMPLETION_BINDING(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KRESOURCEMANAGER_COMPLETION_BINDING"": [ 40, {
				 ""NotificationListHead"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Port"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Key"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""BindingProcess"": [ 32, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY NotificationListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Port { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Key { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 BindingProcess { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _VF_TRACKER
 
	public class _VF_TRACKER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VF_TRACKER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VF_TRACKER"": [ 16, {
				 ""TrackerFlags"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""TrackerSize"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""TrackerIndex"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""TraceDepth"": [ 12, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 TrackerFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 TrackerSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 TrackerIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 TraceDepth { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
	}
	#endregion
	#region _CALL_PERFORMANCE_DATA
 
	public class _CALL_PERFORMANCE_DATA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CALL_PERFORMANCE_DATA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1032; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CALL_PERFORMANCE_DATA"": [ 1032, {
				 ""SpinLock"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""HashTable"": [ 8, [ ""Array"", ""{\""count\"":64,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 SpinLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _LIST_ENTRY[] HashTable
		{
			get
			{
				_LIST_ENTRY[] returnValue = new _LIST_ENTRY[64];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<64; i++ )
					returnValue[i] = new _LIST_ENTRY(_StructureData, (i * size) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _RTL_UMS_CONTEXT
 
	public class _RTL_UMS_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_UMS_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1312; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_UMS_CONTEXT"": [ 1312, {
				 ""Link"": [ 0, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""Context"": [ 16, [ ""_CONTEXT"", ""null"" ]],
				 ""Teb"": [ 1248, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""UserContext"": [ 1256, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ScheduledThread"": [ 1264, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""Suspended"": [ 1264, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""VolatileContext"": [ 1264, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""Terminated"": [ 1264, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""DebugActive"": [ 1264, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""RunningOnSelfThread"": [ 1264, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""DenyRunningOnSelfThread"": [ 1264, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""Flags"": [ 1264, [ ""Int32"", ""null"" ]],
				 ""KernelUpdateLock"": [ 1272, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""PrimaryClientID"": [ 1272, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":2,\""target\"":\""UInt64\""}"" ]],
				 ""ContextLock"": [ 1272, [ ""UInt64"", ""null"" ]],
				 ""PrimaryUmsContext"": [ 1280, [ ""Pointer"", ""{\""target\"":\""_RTL_UMS_CONTEXT\""}"" ]],
				 ""SwitchCount"": [ 1288, [ ""UInt32"", ""null"" ]],
				 ""KernelYieldCount"": [ 1292, [ ""UInt32"", ""null"" ]],
				 ""MixedYieldCount"": [ 1296, [ ""UInt32"", ""null"" ]],
				 ""YieldCount"": [ 1300, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _SINGLE_LIST_ENTRY Link
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _CONTEXT Context
		{
			get
			{
				_CONTEXT returnValue = new _CONTEXT(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt64 Teb { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1248); } }
		public UInt64 UserContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1256); } }
		public UInt32 ScheduledThread
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1264);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 Suspended
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1264);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 VolatileContext
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1264);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 Terminated
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1264);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 DebugActive
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1264);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 RunningOnSelfThread
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1264);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 DenyRunningOnSelfThread
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 1264);
				var value2 = (value & 64) >> 6;
				return (UInt32)value2;
			}
		}
		public Int32 Flags { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 1264); } }
		public UInt64 KernelUpdateLock
		{
			get
			{
				// start: 0  end: 2  Mask: 0000000000000011
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 1272);
				var value2 = (value & 3) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 PrimaryClientID
		{
			get
			{
				// start: 2  end: 64  Mask: 0000000000000000000000000000000011111111111111111111111111111100
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 1272);
				var value2 = (value & 4294967292) >> 2;
				return (UInt64)value2;
			}
		}
		public UInt64 ContextLock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1272); } }
		public UInt64 PrimaryUmsContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 1280); } }
		public UInt32 SwitchCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1288); } }
		public UInt32 KernelYieldCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1292); } }
		public UInt32 MixedYieldCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1296); } }
		public UInt32 YieldCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 1300); } }
	}
	#endregion
	#region _ARBITER_ALTERNATIVE
 
	public class _ARBITER_ALTERNATIVE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ARBITER_ALTERNATIVE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ARBITER_ALTERNATIVE"": [ 64, {
				 ""Minimum"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Maximum"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""Length"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""Alignment"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""Priority"": [ 32, [ ""Int32"", ""null"" ]],
				 ""Flags"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""Descriptor"": [ 40, [ ""Pointer"", ""{\""target\"":\""_IO_RESOURCE_DESCRIPTOR\""}"" ]],
				 ""Reserved"": [ 48, [ ""Array"", ""{\""count\"":3,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Minimum { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Maximum { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Length { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Alignment { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public Int32 Priority { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public UInt64 Descriptor { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt32[] Reserved
		{
			get
			{
				UInt32[] returnValue = new UInt32[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 48);
				return returnValue;
			}
		}
	}
	#endregion
	#region _WHEA_ERROR_STATUS
 
	public class _WHEA_ERROR_STATUS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_ERROR_STATUS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_ERROR_STATUS"": [ 8, {
				 ""ErrorStatus"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Reserved1"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""ErrorType"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":8,\""target\"":\""UInt64\""}"" ]],
				 ""Address"": [ 0, [ ""BitField"", ""{\""end_bit\"":17,\""start_bit\"":16,\""target\"":\""UInt64\""}"" ]],
				 ""Control"": [ 0, [ ""BitField"", ""{\""end_bit\"":18,\""start_bit\"":17,\""target\"":\""UInt64\""}"" ]],
				 ""Data"": [ 0, [ ""BitField"", ""{\""end_bit\"":19,\""start_bit\"":18,\""target\"":\""UInt64\""}"" ]],
				 ""Responder"": [ 0, [ ""BitField"", ""{\""end_bit\"":20,\""start_bit\"":19,\""target\"":\""UInt64\""}"" ]],
				 ""Requester"": [ 0, [ ""BitField"", ""{\""end_bit\"":21,\""start_bit\"":20,\""target\"":\""UInt64\""}"" ]],
				 ""FirstError"": [ 0, [ ""BitField"", ""{\""end_bit\"":22,\""start_bit\"":21,\""target\"":\""UInt64\""}"" ]],
				 ""Overflow"": [ 0, [ ""BitField"", ""{\""end_bit\"":23,\""start_bit\"":22,\""target\"":\""UInt64\""}"" ]],
				 ""Reserved2"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":23,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ErrorStatus { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Reserved1
		{
			get
			{
				// start: 0  end: 8  Mask: 0000000011111111
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 255) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 ErrorType
		{
			get
			{
				// start: 8  end: 16  Mask: 1111111100000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 65280) >> 8;
				return (UInt64)value2;
			}
		}
		public UInt64 Address
		{
			get
			{
				// start: 16  end: 17  Mask: 10000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 65536) >> 16;
				return (UInt64)value2;
			}
		}
		public UInt64 Control
		{
			get
			{
				// start: 17  end: 18  Mask: 100000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 131072) >> 17;
				return (UInt64)value2;
			}
		}
		public UInt64 Data
		{
			get
			{
				// start: 18  end: 19  Mask: 1000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 262144) >> 18;
				return (UInt64)value2;
			}
		}
		public UInt64 Responder
		{
			get
			{
				// start: 19  end: 20  Mask: 10000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 524288) >> 19;
				return (UInt64)value2;
			}
		}
		public UInt64 Requester
		{
			get
			{
				// start: 20  end: 21  Mask: 100000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1048576) >> 20;
				return (UInt64)value2;
			}
		}
		public UInt64 FirstError
		{
			get
			{
				// start: 21  end: 22  Mask: 1000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2097152) >> 21;
				return (UInt64)value2;
			}
		}
		public UInt64 Overflow
		{
			get
			{
				// start: 22  end: 23  Mask: 10000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4194304) >> 22;
				return (UInt64)value2;
			}
		}
		public UInt64 Reserved2
		{
			get
			{
				// start: 23  end: 64  Mask: 0000000000000000000000000000000011111111100000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4286578688) >> 23;
				return (UInt64)value2;
			}
		}
	}
	#endregion
	#region _WHEA_PERSISTENCE_INFO
 
	public class _WHEA_PERSISTENCE_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_PERSISTENCE_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_PERSISTENCE_INFO"": [ 8, {
				 ""Signature"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""Length"": [ 0, [ ""BitField"", ""{\""end_bit\"":40,\""start_bit\"":16,\""target\"":\""UInt64\""}"" ]],
				 ""Identifier"": [ 0, [ ""BitField"", ""{\""end_bit\"":56,\""start_bit\"":40,\""target\"":\""UInt64\""}"" ]],
				 ""Attributes"": [ 0, [ ""BitField"", ""{\""end_bit\"":58,\""start_bit\"":56,\""target\"":\""UInt64\""}"" ]],
				 ""DoNotLog"": [ 0, [ ""BitField"", ""{\""end_bit\"":59,\""start_bit\"":58,\""target\"":\""UInt64\""}"" ]],
				 ""Reserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":59,\""target\"":\""UInt64\""}"" ]],
				 ""AsULONGLONG"": [ 0, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Signature
		{
			get
			{
				// start: 0  end: 16  Mask: 1111111111111111
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 65535) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 Length
		{
			get
			{
				// start: 16  end: 40  Mask: 0000000011111111111111110000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294901760) >> 16;
				return (UInt64)value2;
			}
		}
		public UInt64 Identifier
		{
			get
			{
				// start: 40  end: 56  Mask: 00000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 40;
				return (UInt64)value2;
			}
		}
		public UInt64 Attributes
		{
			get
			{
				// start: 56  end: 58  Mask: 0000000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 56;
				return (UInt64)value2;
			}
		}
		public UInt64 DoNotLog
		{
			get
			{
				// start: 58  end: 59  Mask: 00000000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 58;
				return (UInt64)value2;
			}
		}
		public UInt64 Reserved
		{
			get
			{
				// start: 59  end: 64  Mask: 0000000000000000000000000000000000000000000000000000000000000000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 0) >> 59;
				return (UInt64)value2;
			}
		}
		public UInt64 AsULONGLONG { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _MI_SECTION_IMAGE_INFORMATION
 
	public class _MI_SECTION_IMAGE_INFORMATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MI_SECTION_IMAGE_INFORMATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MI_SECTION_IMAGE_INFORMATION"": [ 72, {
				 ""ExportedImageInformation"": [ 0, [ ""_SECTION_IMAGE_INFORMATION"", ""null"" ]],
				 ""InternalImageInformation"": [ 64, [ ""_MI_EXTRA_IMAGE_INFORMATION"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _SECTION_IMAGE_INFORMATION ExportedImageInformation
		{
			get
			{
				_SECTION_IMAGE_INFORMATION returnValue = new _SECTION_IMAGE_INFORMATION(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _MI_EXTRA_IMAGE_INFORMATION InternalImageInformation
		{
			get
			{
				_MI_EXTRA_IMAGE_INFORMATION returnValue = new _MI_EXTRA_IMAGE_INFORMATION(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
	}
	#endregion
	#region _STRING64
 
	public class _STRING64
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _STRING64(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_STRING64"": [ 16, {
				 ""Length"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""MaximumLength"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Buffer"": [ 8, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Length { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 MaximumLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt64 Buffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _STACK_TABLE
 
	public class _STACK_TABLE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _STACK_TABLE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32904; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_STACK_TABLE"": [ 32904, {
				 ""NumStackTraces"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""TraceCapacity"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""StackTrace"": [ 8, [ ""Array"", ""{\""count\"":16,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""_OBJECT_REF_TRACE\""}}"" ]],
				 ""StackTableHash"": [ 136, [ ""Array"", ""{\""count\"":16381,\""target\"":\""UInt16\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 NumStackTraces { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 TraceCapacity { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt64[] StackTrace
		{
			get
			{
				UInt64[] returnValue = new UInt64[16];
				int size = 8;
				for(int i=0; i<16; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt16[] StackTableHash
		{
			get
			{
				UInt16[] returnValue = new UInt16[16381];
				for(int i=0; i<16381; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 136);
				return returnValue;
			}
		}
	}
	#endregion
	#region _CM_INDEX_HINT_BLOCK
 
	public class _CM_INDEX_HINT_BLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_INDEX_HINT_BLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_INDEX_HINT_BLOCK"": [ 8, {
				 ""Count"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""HashKey"": [ 4, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Count { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32[] HashKey
		{
			get
			{
				UInt32[] returnValue = new UInt32[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 4);
				return returnValue;
			}
		}
	}
	#endregion
	#region _TOKEN_CONTROL
 
	public class _TOKEN_CONTROL
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _TOKEN_CONTROL(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_TOKEN_CONTROL"": [ 40, {
				 ""TokenId"": [ 0, [ ""_LUID"", ""null"" ]],
				 ""AuthenticationId"": [ 8, [ ""_LUID"", ""null"" ]],
				 ""ModifiedId"": [ 16, [ ""_LUID"", ""null"" ]],
				 ""TokenSource"": [ 24, [ ""_TOKEN_SOURCE"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LUID TokenId
		{
			get
			{
				_LUID returnValue = new _LUID(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LUID AuthenticationId
		{
			get
			{
				_LUID returnValue = new _LUID(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _LUID ModifiedId
		{
			get
			{
				_LUID returnValue = new _LUID(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _TOKEN_SOURCE TokenSource
		{
			get
			{
				_TOKEN_SOURCE returnValue = new _TOKEN_SOURCE(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ETW_GUID_ENTRY
 
	public class _ETW_GUID_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETW_GUID_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 376; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETW_GUID_ENTRY"": [ 376, {
				 ""GuidList"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""RefCount"": [ 16, [ ""Int64"", ""null"" ]],
				 ""Guid"": [ 24, [ ""_GUID"", ""null"" ]],
				 ""RegListHead"": [ 40, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""SecurityDescriptor"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""LastEnable"": [ 64, [ ""_ETW_LAST_ENABLE_INFO"", ""null"" ]],
				 ""MatchId"": [ 64, [ ""UInt64"", ""null"" ]],
				 ""ProviderEnableInfo"": [ 80, [ ""_TRACE_ENABLE_INFO"", ""null"" ]],
				 ""EnableInfo"": [ 112, [ ""Array"", ""{\""count\"":8,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""FilterData"": [ 368, [ ""Pointer"", ""{\""target\"":\""_ETW_FILTER_HEADER\""}"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY GuidList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public Int64 RefCount { get { return BitConverter.ToInt64(_StructureData, _BufferOffset + 16); } }
		public _GUID Guid
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public _LIST_ENTRY RegListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public UInt64 SecurityDescriptor { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public _ETW_LAST_ENABLE_INFO LastEnable
		{
			get
			{
				_ETW_LAST_ENABLE_INFO returnValue = new _ETW_LAST_ENABLE_INFO(_StructureData, _BufferOffset + 64);
				return returnValue;
			}
		}
		public UInt64 MatchId { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public _TRACE_ENABLE_INFO ProviderEnableInfo
		{
			get
			{
				_TRACE_ENABLE_INFO returnValue = new _TRACE_ENABLE_INFO(_StructureData, _BufferOffset + 80);
				return returnValue;
			}
		}
		public _TRACE_ENABLE_INFO[] EnableInfo
		{
			get
			{
				_TRACE_ENABLE_INFO[] returnValue = new _TRACE_ENABLE_INFO[8];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<8; i++ )
					returnValue[i] = new _TRACE_ENABLE_INFO(_StructureData, (i * size) + _BufferOffset + 112);
				return returnValue;
			}
		}
		public UInt64 FilterData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 368); } }
	}
	#endregion
	#region _KUMS_CONTEXT_HEADER
 
	public class _KUMS_CONTEXT_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KUMS_CONTEXT_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 112; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KUMS_CONTEXT_HEADER"": [ 112, {
				 ""P1Home"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""P2Home"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""P3Home"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""P4Home"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""StackTop"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""StackSize"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""RspOffset"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""Rip"": [ 56, [ ""UInt64"", ""null"" ]],
				 ""FltSave"": [ 64, [ ""Pointer"", ""{\""target\"":\""_XSAVE_FORMAT\""}"" ]],
				 ""Volatile"": [ 72, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""Reserved"": [ 72, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":1,\""target\"":\""UInt64\""}"" ]],
				 ""Flags"": [ 72, [ ""UInt64"", ""null"" ]],
				 ""TrapFrame"": [ 80, [ ""Pointer"", ""{\""target\"":\""_KTRAP_FRAME\""}"" ]],
				 ""ExceptionFrame"": [ 88, [ ""Pointer"", ""{\""target\"":\""_KEXCEPTION_FRAME\""}"" ]],
				 ""SourceThread"": [ 96, [ ""Pointer"", ""{\""target\"":\""_KTHREAD\""}"" ]],
				 ""Return"": [ 104, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 P1Home { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 P2Home { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 P3Home { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 P4Home { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 StackTop { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 StackSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 RspOffset { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 Rip { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 FltSave { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 Volatile
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 72);
				var value2 = (value & 1) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 Reserved
		{
			get
			{
				// start: 1  end: 64  Mask: 0000000000000000000000000000000011111111111111111111111111111110
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 72);
				var value2 = (value & 4294967294) >> 1;
				return (UInt64)value2;
			}
		}
		public UInt64 Flags { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 TrapFrame { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 ExceptionFrame { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 SourceThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt64 Return { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
	}
	#endregion
	#region _DEFERRED_WRITE
 
	public class _DEFERRED_WRITE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DEFERRED_WRITE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DEFERRED_WRITE"": [ 72, {
				 ""NodeTypeCode"": [ 0, [ ""Int16"", ""null"" ]],
				 ""NodeByteSize"": [ 2, [ ""Int16"", ""null"" ]],
				 ""FileObject"": [ 8, [ ""Pointer"", ""{\""target\"":\""_FILE_OBJECT\""}"" ]],
				 ""BytesToWrite"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""DeferredWriteLinks"": [ 24, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Event"": [ 40, [ ""Pointer"", ""{\""target\"":\""_KEVENT\""}"" ]],
				 ""PostRoutine"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Context1"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Context2"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public Int16 NodeTypeCode { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 0); } }
		public Int16 NodeByteSize { get { return BitConverter.ToInt16(_StructureData, _BufferOffset + 2); } }
		public UInt64 FileObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 BytesToWrite { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public _LIST_ENTRY DeferredWriteLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt64 Event { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 PostRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 Context1 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 Context2 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
	}
	#endregion
	#region _UNNAMED_36827
 
	public class _UNNAMED_36827
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_36827(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_36827"": [ 4, {
				 ""DeviceNumber"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""FunctionNumber"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""Reserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 DeviceNumber
		{
			get
			{
				// start: 0  end: 5  Mask: 0000000000011111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 31) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 FunctionNumber
		{
			get
			{
				// start: 5  end: 8  Mask: 0000000011100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 224) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 Reserved
		{
			get
			{
				// start: 8  end: 32  Mask: 11111111111111111111111100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967040) >> 8;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _UNNAMED_36831
 
	public class _UNNAMED_36831
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_36831(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_36831"": [ 4, {
				 ""bits"": [ 0, [ ""_UNNAMED_36827"", ""null"" ]],
				 ""AsULONG"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_36827 bits
		{
			get
			{
				_UNNAMED_36827 returnValue = new _UNNAMED_36827(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 AsULONG { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _WHEA_PCI_SLOT_NUMBER
 
	public class _WHEA_PCI_SLOT_NUMBER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_PCI_SLOT_NUMBER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_PCI_SLOT_NUMBER"": [ 4, {
				 ""u"": [ 0, [ ""_UNNAMED_36831"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_36831 u
		{
			get
			{
				_UNNAMED_36831 returnValue = new _UNNAMED_36831(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ARBITER_ORDERING_LIST
 
	public class _ARBITER_ORDERING_LIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ARBITER_ORDERING_LIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ARBITER_ORDERING_LIST"": [ 16, {
				 ""Count"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Maximum"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Orderings"": [ 8, [ ""Pointer"", ""{\""target\"":\""_ARBITER_ORDERING\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Count { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 Maximum { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt64 Orderings { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _SECTION_IMAGE_INFORMATION
 
	public class _SECTION_IMAGE_INFORMATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SECTION_IMAGE_INFORMATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 64; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SECTION_IMAGE_INFORMATION"": [ 64, {
				 ""TransferAddress"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ZeroBits"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""MaximumStackSize"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""CommittedStackSize"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""SubSystemType"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""SubSystemMinorVersion"": [ 36, [ ""UInt16"", ""null"" ]],
				 ""SubSystemMajorVersion"": [ 38, [ ""UInt16"", ""null"" ]],
				 ""SubSystemVersion"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""GpValue"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""ImageCharacteristics"": [ 44, [ ""UInt16"", ""null"" ]],
				 ""DllCharacteristics"": [ 46, [ ""UInt16"", ""null"" ]],
				 ""Machine"": [ 48, [ ""UInt16"", ""null"" ]],
				 ""ImageContainsCode"": [ 50, [ ""Byte"", ""null"" ]],
				 ""ImageFlags"": [ 51, [ ""Byte"", ""null"" ]],
				 ""ComPlusNativeReady"": [ 51, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""ComPlusILOnly"": [ 51, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""ImageDynamicallyRelocated"": [ 51, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""ImageMappedFlat"": [ 51, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""BaseBelow4gb"": [ 51, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""Reserved"": [ 51, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":5,\""target\"":\""Byte\""}"" ]],
				 ""LoaderFlags"": [ 52, [ ""UInt32"", ""null"" ]],
				 ""ImageFileSize"": [ 56, [ ""UInt32"", ""null"" ]],
				 ""CheckSum"": [ 60, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 TransferAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 ZeroBits { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt64 MaximumStackSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 CommittedStackSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt32 SubSystemType { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt16 SubSystemMinorVersion { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 36); } }
		public UInt16 SubSystemMajorVersion { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 38); } }
		public UInt32 SubSystemVersion { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public UInt32 GpValue { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt16 ImageCharacteristics { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 44); } }
		public UInt16 DllCharacteristics { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 46); } }
		public UInt16 Machine { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 48); } }
		public Byte ImageContainsCode{ get { return _StructureData[_BufferOffset +50]; } }
		public Byte ImageFlags{ get { return _StructureData[_BufferOffset +51]; } }
		public Byte ComPlusNativeReady
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 51];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte ComPlusILOnly
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 51];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte ImageDynamicallyRelocated
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 51];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte ImageMappedFlat
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 51];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte BaseBelow4gb
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				Byte value = _StructureData[_BufferOffset + 51];
				var value2 = (value & 16) >> 4;
				return (Byte)value2;
			}
		}
		public Byte Reserved
		{
			get
			{
				// start: 5  end: 8  Mask: 0000000011100000
				Byte value = _StructureData[_BufferOffset + 51];
				var value2 = (value & 224) >> 5;
				return (Byte)value2;
			}
		}
		public UInt32 LoaderFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
		public UInt32 ImageFileSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public UInt32 CheckSum { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
	}
	#endregion
	#region _VF_AVL_TABLE
 
	public class _VF_AVL_TABLE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _VF_AVL_TABLE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 192; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_VF_AVL_TABLE"": [ 192, {
				 ""RtlTable"": [ 0, [ ""_RTL_AVL_TABLE"", ""null"" ]],
				 ""ReservedNode"": [ 104, [ ""Pointer"", ""{\""target\"":\""_VF_AVL_TREE_NODE\""}"" ]],
				 ""NodeToFree"": [ 112, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Lock"": [ 128, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _RTL_AVL_TABLE RtlTable
		{
			get
			{
				_RTL_AVL_TABLE returnValue = new _RTL_AVL_TABLE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 ReservedNode { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public UInt64 NodeToFree { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 112); } }
		public Int32 Lock { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 128); } }
	}
	#endregion
	#region _XPF_MC_BANK_FLAGS
 
	public class _XPF_MC_BANK_FLAGS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _XPF_MC_BANK_FLAGS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_XPF_MC_BANK_FLAGS"": [ 1, {
				 ""ClearOnInitializationRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""ControlDataRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""Reserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""AsUCHAR"": [ 0, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte ClearOnInitializationRW
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte ControlDataRW
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte Reserved
		{
			get
			{
				// start: 2  end: 8  Mask: 0000000011111100
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 252) >> 2;
				return (Byte)value2;
			}
		}
		public Byte AsUCHAR{ get { return _StructureData[_BufferOffset +0]; } }
	}
	#endregion
	#region _TOKEN_AUDIT_POLICY
 
	public class _TOKEN_AUDIT_POLICY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _TOKEN_AUDIT_POLICY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 29; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_TOKEN_AUDIT_POLICY"": [ 29, {
				 ""PerUserPolicy"": [ 0, [ ""Array"", ""{\""count\"":29,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public Byte[] PerUserPolicy
		{
			get
			{
				Byte[] returnValue = new Byte[29];
				for(int i=0; i<29; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 0];
				return returnValue;
			}
		}
	}
	#endregion
	#region _ETW_LAST_ENABLE_INFO
 
	public class _ETW_LAST_ENABLE_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETW_LAST_ENABLE_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETW_LAST_ENABLE_INFO"": [ 16, {
				 ""EnableFlags"": [ 0, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""LoggerId"": [ 8, [ ""UInt16"", ""null"" ]],
				 ""Level"": [ 10, [ ""Byte"", ""null"" ]],
				 ""Enabled"": [ 11, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""InternalFlag"": [ 11, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public _LARGE_INTEGER EnableFlags
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt16 LoggerId { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 8); } }
		public Byte Level{ get { return _StructureData[_BufferOffset +10]; } }
		public Byte Enabled
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 11];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte InternalFlag
		{
			get
			{
				// start: 1  end: 8  Mask: 0000000011111110
				Byte value = _StructureData[_BufferOffset + 11];
				var value2 = (value & 254) >> 1;
				return (Byte)value2;
			}
		}
	}
	#endregion
	#region _UNNAMED_36879
 
	public class _UNNAMED_36879
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_36879(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_36879"": [ 16, {
				 ""EndingOffset"": [ 0, [ ""Pointer"", ""{\""target\"":\""_LARGE_INTEGER\""}"" ]],
				 ""ResourceToRelease"": [ 8, [ ""Pointer"", ""{\""target\"":\""_ERESOURCE*\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 EndingOffset { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 ResourceToRelease { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_36883
 
	public class _UNNAMED_36883
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_36883(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_36883"": [ 8, {
				 ""ResourceToRelease"": [ 0, [ ""Pointer"", ""{\""target\"":\""_ERESOURCE\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ResourceToRelease { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_36885
 
	public class _UNNAMED_36885
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_36885(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_36885"": [ 8, {
				 ""SyncType"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""_FS_FILTER_SECTION_SYNC_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""PageProtection"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _FS_FILTER_SECTION_SYNC_TYPE SyncType { get { return (_FS_FILTER_SECTION_SYNC_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 PageProtection { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _UNNAMED_36888
 
	public class _UNNAMED_36888
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_36888(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_36888"": [ 16, {
				 ""NotificationType"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""_FS_FILTER_STREAM_FO_NOTIFICATION_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""SafeToRecurse"": [ 8, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _FS_FILTER_STREAM_FO_NOTIFICATION_TYPE NotificationType { get { return (_FS_FILTER_STREAM_FO_NOTIFICATION_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Byte SafeToRecurse{ get { return _StructureData[_BufferOffset +8]; } }
	}
	#endregion
	#region _UNNAMED_36891
 
	public class _UNNAMED_36891
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_36891(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_36891"": [ 40, {
				 ""Argument1"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Argument2"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Argument3"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Argument4"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Argument5"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Argument1 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Argument2 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 Argument3 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 Argument4 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 Argument5 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _FS_FILTER_PARAMETERS
 
	public class _FS_FILTER_PARAMETERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _FS_FILTER_PARAMETERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_FS_FILTER_PARAMETERS"": [ 40, {
				 ""AcquireForModifiedPageWriter"": [ 0, [ ""_UNNAMED_36879"", ""null"" ]],
				 ""ReleaseForModifiedPageWriter"": [ 0, [ ""_UNNAMED_36883"", ""null"" ]],
				 ""AcquireForSectionSynchronization"": [ 0, [ ""_UNNAMED_36885"", ""null"" ]],
				 ""NotifyStreamFileObject"": [ 0, [ ""_UNNAMED_36888"", ""null"" ]],
				 ""Others"": [ 0, [ ""_UNNAMED_36891"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_36879 AcquireForModifiedPageWriter
		{
			get
			{
				_UNNAMED_36879 returnValue = new _UNNAMED_36879(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_36883 ReleaseForModifiedPageWriter
		{
			get
			{
				_UNNAMED_36883 returnValue = new _UNNAMED_36883(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_36885 AcquireForSectionSynchronization
		{
			get
			{
				_UNNAMED_36885 returnValue = new _UNNAMED_36885(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_36888 NotifyStreamFileObject
		{
			get
			{
				_UNNAMED_36888 returnValue = new _UNNAMED_36888(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_36891 Others
		{
			get
			{
				_UNNAMED_36891 returnValue = new _UNNAMED_36891(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MI_SESSION_DRIVER_UNLOAD
 
	public class _MI_SESSION_DRIVER_UNLOAD
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MI_SESSION_DRIVER_UNLOAD(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MI_SESSION_DRIVER_UNLOAD"": [ 8, {
				 ""Function"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FunctionValue"": [ 0, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Function { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 FunctionValue { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _PPM_SELECTION_STATISTICS
 
	public class _PPM_SELECTION_STATISTICS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PPM_SELECTION_STATISTICS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 104; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PPM_SELECTION_STATISTICS"": [ 104, {
				 ""PlatformOnlyCount"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""PreVetoCount"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""VetoCount"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""IdleDurationCount"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""LatencyCount"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""InterruptibleCount"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""DeviceDependencyCount"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""ProcessorDependencyCount"": [ 56, [ ""UInt64"", ""null"" ]],
				 ""WrongProcessorCount"": [ 64, [ ""UInt64"", ""null"" ]],
				 ""LegacyOverrideCount"": [ 72, [ ""UInt64"", ""null"" ]],
				 ""CstateCheckCount"": [ 80, [ ""UInt64"", ""null"" ]],
				 ""NoCStateCount"": [ 88, [ ""UInt64"", ""null"" ]],
				 ""SelectedCount"": [ 96, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 PlatformOnlyCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 PreVetoCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 VetoCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 IdleDurationCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 LatencyCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 InterruptibleCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 DeviceDependencyCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 ProcessorDependencyCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 WrongProcessorCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 LegacyOverrideCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 CstateCheckCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 NoCStateCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 SelectedCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
	}
	#endregion
	#region _LDR_SERVICE_TAG_RECORD
 
	public class _LDR_SERVICE_TAG_RECORD
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _LDR_SERVICE_TAG_RECORD(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_LDR_SERVICE_TAG_RECORD"": [ 16, {
				 ""Next"": [ 0, [ ""Pointer"", ""{\""target\"":\""_LDR_SERVICE_TAG_RECORD\""}"" ]],
				 ""ServiceTag"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Next { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 ServiceTag { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _COMPRESSED_DATA_INFO
 
	public class _COMPRESSED_DATA_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _COMPRESSED_DATA_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_COMPRESSED_DATA_INFO"": [ 12, {
				 ""CompressionFormatAndEngine"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""CompressionUnitShift"": [ 2, [ ""Byte"", ""null"" ]],
				 ""ChunkShift"": [ 3, [ ""Byte"", ""null"" ]],
				 ""ClusterShift"": [ 4, [ ""Byte"", ""null"" ]],
				 ""Reserved"": [ 5, [ ""Byte"", ""null"" ]],
				 ""NumberOfChunks"": [ 6, [ ""UInt16"", ""null"" ]],
				 ""CompressedChunkSizes"": [ 8, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 CompressionFormatAndEngine { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public Byte CompressionUnitShift{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte ChunkShift{ get { return _StructureData[_BufferOffset +3]; } }
		public Byte ClusterShift{ get { return _StructureData[_BufferOffset +4]; } }
		public Byte Reserved{ get { return _StructureData[_BufferOffset +5]; } }
		public UInt16 NumberOfChunks { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
		public UInt32[] CompressedChunkSizes
		{
			get
			{
				UInt32[] returnValue = new UInt32[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _HIVE_WAIT_PACKET
 
	public class _HIVE_WAIT_PACKET
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _HIVE_WAIT_PACKET(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_HIVE_WAIT_PACKET"": [ 40, {
				 ""WakeEvent"": [ 0, [ ""_KEVENT"", ""null"" ]],
				 ""Status"": [ 24, [ ""Int32"", ""null"" ]],
				 ""Next"": [ 32, [ ""Pointer"", ""{\""target\"":\""_HIVE_WAIT_PACKET\""}"" ]] }]
				 }
				)";
			}
		}
		public _KEVENT WakeEvent
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public Int32 Status { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 24); } }
		public UInt64 Next { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _UNNAMED_36930
 
	public class _UNNAMED_36930
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_36930(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_36930"": [ 4, {
				 ""PollInterval"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 PollInterval { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_36932
 
	public class _UNNAMED_36932
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_36932(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_36932"": [ 24, {
				 ""PollInterval"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Vector"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""SwitchToPollingThreshold"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""SwitchToPollingWindow"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""ErrorThreshold"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""ErrorThresholdWindow"": [ 20, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 PollInterval { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Vector { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 SwitchToPollingThreshold { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 SwitchToPollingWindow { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 ErrorThreshold { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 ErrorThresholdWindow { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
	}
	#endregion
	#region _UNNAMED_36939
 
	public class _UNNAMED_36939
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_36939(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_36939"": [ 24, {
				 ""Polled"": [ 0, [ ""_UNNAMED_36930"", ""null"" ]],
				 ""Interrupt"": [ 0, [ ""_UNNAMED_36932"", ""null"" ]],
				 ""LocalInterrupt"": [ 0, [ ""_UNNAMED_36932"", ""null"" ]],
				 ""Sci"": [ 0, [ ""_UNNAMED_36932"", ""null"" ]],
				 ""Nmi"": [ 0, [ ""_UNNAMED_36932"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_36930 Polled
		{
			get
			{
				_UNNAMED_36930 returnValue = new _UNNAMED_36930(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_36932 Interrupt
		{
			get
			{
				_UNNAMED_36932 returnValue = new _UNNAMED_36932(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_36932 LocalInterrupt
		{
			get
			{
				_UNNAMED_36932 returnValue = new _UNNAMED_36932(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_36932 Sci
		{
			get
			{
				_UNNAMED_36932 returnValue = new _UNNAMED_36932(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_36932 Nmi
		{
			get
			{
				_UNNAMED_36932 returnValue = new _UNNAMED_36932(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _WHEA_NOTIFICATION_DESCRIPTOR
 
	public class _WHEA_NOTIFICATION_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_NOTIFICATION_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 28; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_NOTIFICATION_DESCRIPTOR"": [ 28, {
				 ""Type"": [ 0, [ ""Byte"", ""null"" ]],
				 ""Length"": [ 1, [ ""Byte"", ""null"" ]],
				 ""Flags"": [ 2, [ ""_WHEA_NOTIFICATION_FLAGS"", ""null"" ]],
				 ""u"": [ 4, [ ""_UNNAMED_36939"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte Type{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte Length{ get { return _StructureData[_BufferOffset +1]; } }
		public _WHEA_NOTIFICATION_FLAGS Flags
		{
			get
			{
				_WHEA_NOTIFICATION_FLAGS returnValue = new _WHEA_NOTIFICATION_FLAGS(_StructureData, _BufferOffset + 2);
				return returnValue;
			}
		}
		public _UNNAMED_36939 u
		{
			get
			{
				_UNNAMED_36939 returnValue = new _UNNAMED_36939(_StructureData, _BufferOffset + 4);
				return returnValue;
			}
		}
	}
	#endregion
	#region _POP_HIBER_CONTEXT
 
	public class _POP_HIBER_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_HIBER_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 416; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_HIBER_CONTEXT"": [ 416, {
				 ""Reset"": [ 0, [ ""Byte"", ""null"" ]],
				 ""HiberFlags"": [ 1, [ ""Byte"", ""null"" ]],
				 ""WroteHiberFile"": [ 2, [ ""Byte"", ""null"" ]],
				 ""VerifyKernelPhaseOnResume"": [ 3, [ ""Byte"", ""null"" ]],
				 ""KernelPhaseVerificationActive"": [ 4, [ ""Byte"", ""null"" ]],
				 ""InitializationFinished"": [ 5, [ ""Byte"", ""null"" ]],
				 ""NextTableLockHeld"": [ 8, [ ""Int32"", ""null"" ]],
				 ""BootPhaseFinishedBarrier"": [ 12, [ ""Int32"", ""null"" ]],
				 ""KernelResumeFinishedBarrier"": [ 16, [ ""Int32"", ""null"" ]],
				 ""MapFrozen"": [ 20, [ ""Byte"", ""null"" ]],
				 ""DiscardMap"": [ 24, [ ""_RTL_BITMAP"", ""null"" ]],
				 ""KernelPhaseMap"": [ 24, [ ""_RTL_BITMAP"", ""null"" ]],
				 ""BootPhaseMap"": [ 40, [ ""_RTL_BITMAP"", ""null"" ]],
				 ""ClonedRanges"": [ 56, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ClonedRangeCount"": [ 72, [ ""UInt32"", ""null"" ]],
				 ""ClonedPageCount"": [ 80, [ ""UInt64"", ""null"" ]],
				 ""CurrentMap"": [ 88, [ ""Pointer"", ""{\""target\"":\""_RTL_BITMAP\""}"" ]],
				 ""NextCloneRange"": [ 96, [ ""Pointer"", ""{\""target\"":\""_LIST_ENTRY\""}"" ]],
				 ""NextPreserve"": [ 104, [ ""UInt64"", ""null"" ]],
				 ""LoaderMdl"": [ 112, [ ""Pointer"", ""{\""target\"":\""_MDL\""}"" ]],
				 ""AllocatedMdl"": [ 120, [ ""Pointer"", ""{\""target\"":\""_MDL\""}"" ]],
				 ""PagesOut"": [ 128, [ ""UInt64"", ""null"" ]],
				 ""IoPages"": [ 136, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""IoPagesCount"": [ 144, [ ""UInt32"", ""null"" ]],
				 ""CurrentMcb"": [ 152, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DumpStack"": [ 160, [ ""Pointer"", ""{\""target\"":\""_DUMP_STACK_CONTEXT\""}"" ]],
				 ""WakeState"": [ 168, [ ""Pointer"", ""{\""target\"":\""_KPROCESSOR_STATE\""}"" ]],
				 ""IoProgress"": [ 176, [ ""UInt32"", ""null"" ]],
				 ""Status"": [ 180, [ ""Int32"", ""null"" ]],
				 ""GraphicsProc"": [ 184, [ ""UInt32"", ""null"" ]],
				 ""MemoryImage"": [ 192, [ ""Pointer"", ""{\""target\"":\""PO_MEMORY_IMAGE\""}"" ]],
				 ""PerformanceStats"": [ 200, [ ""Pointer"", ""{\""target\"":\""unsigned long\""}"" ]],
				 ""BootLoaderLogMdl"": [ 208, [ ""Pointer"", ""{\""target\"":\""_MDL\""}"" ]],
				 ""SiLogOffset"": [ 216, [ ""UInt32"", ""null"" ]],
				 ""FirmwareRuntimeInformationMdl"": [ 224, [ ""Pointer"", ""{\""target\"":\""_MDL\""}"" ]],
				 ""FirmwareRuntimeInformationVa"": [ 232, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ResumeContext"": [ 240, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ResumeContextPages"": [ 248, [ ""UInt32"", ""null"" ]],
				 ""ProcessorCount"": [ 252, [ ""UInt32"", ""null"" ]],
				 ""ProcessorContext"": [ 256, [ ""Pointer"", ""{\""target\"":\""_POP_PER_PROCESSOR_CONTEXT\""}"" ]],
				 ""ProdConsBuffer"": [ 264, [ ""Pointer"", ""{\""target\"":\""char\""}"" ]],
				 ""ProdConsSize"": [ 272, [ ""UInt32"", ""null"" ]],
				 ""MaxDataPages"": [ 276, [ ""UInt32"", ""null"" ]],
				 ""ExtraBuffer"": [ 280, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ExtraBufferSize"": [ 288, [ ""UInt64"", ""null"" ]],
				 ""ExtraMapVa"": [ 296, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""BitlockerKeyPFN"": [ 304, [ ""UInt64"", ""null"" ]],
				 ""IoInfo"": [ 312, [ ""_POP_IO_INFO"", ""null"" ]],
				 ""HardwareConfigurationSignature"": [ 408, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte Reset{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte HiberFlags{ get { return _StructureData[_BufferOffset +1]; } }
		public Byte WroteHiberFile{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte VerifyKernelPhaseOnResume{ get { return _StructureData[_BufferOffset +3]; } }
		public Byte KernelPhaseVerificationActive{ get { return _StructureData[_BufferOffset +4]; } }
		public Byte InitializationFinished{ get { return _StructureData[_BufferOffset +5]; } }
		public Int32 NextTableLockHeld { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 8); } }
		public Int32 BootPhaseFinishedBarrier { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 12); } }
		public Int32 KernelResumeFinishedBarrier { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 16); } }
		public Byte MapFrozen{ get { return _StructureData[_BufferOffset +20]; } }
		public _RTL_BITMAP DiscardMap
		{
			get
			{
				_RTL_BITMAP returnValue = new _RTL_BITMAP(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public _RTL_BITMAP KernelPhaseMap
		{
			get
			{
				_RTL_BITMAP returnValue = new _RTL_BITMAP(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public _RTL_BITMAP BootPhaseMap
		{
			get
			{
				_RTL_BITMAP returnValue = new _RTL_BITMAP(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public _LIST_ENTRY ClonedRanges
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public UInt32 ClonedRangeCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 72); } }
		public UInt64 ClonedPageCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 CurrentMap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 NextCloneRange { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt64 NextPreserve { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public UInt64 LoaderMdl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 112); } }
		public UInt64 AllocatedMdl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 120); } }
		public UInt64 PagesOut { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 128); } }
		public UInt64 IoPages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 136); } }
		public UInt32 IoPagesCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 144); } }
		public UInt64 CurrentMcb { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 152); } }
		public UInt64 DumpStack { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public UInt64 WakeState { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 168); } }
		public UInt32 IoProgress { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 176); } }
		public Int32 Status { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 180); } }
		public UInt32 GraphicsProc { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 184); } }
		public UInt64 MemoryImage { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 192); } }
		public UInt64 PerformanceStats { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 200); } }
		public UInt64 BootLoaderLogMdl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 208); } }
		public UInt32 SiLogOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 216); } }
		public UInt64 FirmwareRuntimeInformationMdl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 224); } }
		public UInt64 FirmwareRuntimeInformationVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 232); } }
		public UInt64 ResumeContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 240); } }
		public UInt32 ResumeContextPages { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 248); } }
		public UInt32 ProcessorCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 252); } }
		public UInt64 ProcessorContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 256); } }
		public UInt64 ProdConsBuffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 264); } }
		public UInt32 ProdConsSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 272); } }
		public UInt32 MaxDataPages { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 276); } }
		public UInt64 ExtraBuffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 280); } }
		public UInt64 ExtraBufferSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 288); } }
		public UInt64 ExtraMapVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 296); } }
		public UInt64 BitlockerKeyPFN { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 304); } }
		public _POP_IO_INFO IoInfo
		{
			get
			{
				_POP_IO_INFO returnValue = new _POP_IO_INFO(_StructureData, _BufferOffset + 312);
				return returnValue;
			}
		}
		public UInt32 HardwareConfigurationSignature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 408); } }
	}
	#endregion
	#region _OBJECT_REF_TRACE
 
	public class _OBJECT_REF_TRACE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_REF_TRACE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 128; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_REF_TRACE"": [ 128, {
				 ""StackTrace"": [ 0, [ ""Array"", ""{\""count\"":16,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt64[] StackTrace
		{
			get
			{
				UInt64[] returnValue = new UInt64[16];
				int size = 8;
				for(int i=0; i<16; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _CVDD
 
	public class _CVDD
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CVDD(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 28; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CVDD"": [ 28, {
				 ""Signature"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""NB10"": [ 0, [ ""_NB10"", ""null"" ]],
				 ""RsDs"": [ 0, [ ""_RSDS"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Signature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _NB10 NB10
		{
			get
			{
				_NB10 returnValue = new _NB10(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _RSDS RsDs
		{
			get
			{
				_RSDS returnValue = new _RSDS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _OBJECT_NAME_INFORMATION
 
	public class _OBJECT_NAME_INFORMATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _OBJECT_NAME_INFORMATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_OBJECT_NAME_INFORMATION"": [ 16, {
				 ""Name"": [ 0, [ ""_UNICODE_STRING"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNICODE_STRING Name
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _WHEA_AER_BRIDGE_DESCRIPTOR
 
	public class _WHEA_AER_BRIDGE_DESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_AER_BRIDGE_DESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 44; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_AER_BRIDGE_DESCRIPTOR"": [ 44, {
				 ""Type"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Enabled"": [ 2, [ ""Byte"", ""null"" ]],
				 ""Reserved"": [ 3, [ ""Byte"", ""null"" ]],
				 ""BusNumber"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Slot"": [ 8, [ ""_WHEA_PCI_SLOT_NUMBER"", ""null"" ]],
				 ""DeviceControl"": [ 12, [ ""UInt16"", ""null"" ]],
				 ""Flags"": [ 14, [ ""_AER_BRIDGE_DESCRIPTOR_FLAGS"", ""null"" ]],
				 ""UncorrectableErrorMask"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""UncorrectableErrorSeverity"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""CorrectableErrorMask"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""AdvancedCapsAndControl"": [ 28, [ ""UInt32"", ""null"" ]],
				 ""SecondaryUncorrectableErrorMask"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""SecondaryUncorrectableErrorSev"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""SecondaryCapsAndControl"": [ 40, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Type { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public Byte Enabled{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte Reserved{ get { return _StructureData[_BufferOffset +3]; } }
		public UInt32 BusNumber { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _WHEA_PCI_SLOT_NUMBER Slot
		{
			get
			{
				_WHEA_PCI_SLOT_NUMBER returnValue = new _WHEA_PCI_SLOT_NUMBER(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt16 DeviceControl { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 12); } }
		public _AER_BRIDGE_DESCRIPTOR_FLAGS Flags
		{
			get
			{
				_AER_BRIDGE_DESCRIPTOR_FLAGS returnValue = new _AER_BRIDGE_DESCRIPTOR_FLAGS(_StructureData, _BufferOffset + 14);
				return returnValue;
			}
		}
		public UInt32 UncorrectableErrorMask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 UncorrectableErrorSeverity { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 CorrectableErrorMask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 AdvancedCapsAndControl { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 28); } }
		public UInt32 SecondaryUncorrectableErrorMask { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 SecondaryUncorrectableErrorSev { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public UInt32 SecondaryCapsAndControl { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
	}
	#endregion
	#region _KDESCRIPTOR
 
	public class _KDESCRIPTOR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KDESCRIPTOR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KDESCRIPTOR"": [ 16, {
				 ""Pad"": [ 0, [ ""Array"", ""{\""count\"":3,\""target\"":\""UInt16\""}"" ]],
				 ""Limit"": [ 6, [ ""UInt16"", ""null"" ]],
				 ""Base"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt16[] Pad
		{
			get
			{
				UInt16[] returnValue = new UInt16[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = BitConverter.ToUInt16(_StructureData, (i * sizeof(UInt16)) + _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt16 Limit { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
		public UInt64 Base { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _PCW_COUNTER_INFORMATION
 
	public class _PCW_COUNTER_INFORMATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PCW_COUNTER_INFORMATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PCW_COUNTER_INFORMATION"": [ 16, {
				 ""CounterMask"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""InstanceMask"": [ 8, [ ""Pointer"", ""{\""target\"":\""_UNICODE_STRING\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 CounterMask { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 InstanceMask { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _DUMP_STACK_CONTEXT
 
	public class _DUMP_STACK_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DUMP_STACK_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 376; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DUMP_STACK_CONTEXT"": [ 376, {
				 ""Init"": [ 0, [ ""_DUMP_INITIALIZATION_CONTEXT"", ""null"" ]],
				 ""PartitionOffset"": [ 264, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""DumpPointers"": [ 272, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PointersLength"": [ 280, [ ""UInt32"", ""null"" ]],
				 ""ModulePrefix"": [ 288, [ ""Pointer"", ""{\""target\"":\""UInt16\""}"" ]],
				 ""DriverList"": [ 296, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""InitMsg"": [ 312, [ ""_STRING"", ""null"" ]],
				 ""ProgMsg"": [ 328, [ ""_STRING"", ""null"" ]],
				 ""DoneMsg"": [ 344, [ ""_STRING"", ""null"" ]],
				 ""FileObject"": [ 360, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""UsageType"": [ 368, [ ""Enumeration"", ""{\""enum_name\"":\""_DEVICE_USAGE_NOTIFICATION_TYPE\"",\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public _DUMP_INITIALIZATION_CONTEXT Init
		{
			get
			{
				_DUMP_INITIALIZATION_CONTEXT returnValue = new _DUMP_INITIALIZATION_CONTEXT(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LARGE_INTEGER PartitionOffset
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 264);
				return returnValue;
			}
		}
		public UInt64 DumpPointers { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 272); } }
		public UInt32 PointersLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 280); } }
		public UInt64 ModulePrefix { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 288); } }
		public _LIST_ENTRY DriverList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 296);
				return returnValue;
			}
		}
		public _STRING InitMsg
		{
			get
			{
				_STRING returnValue = new _STRING(_StructureData, _BufferOffset + 312);
				return returnValue;
			}
		}
		public _STRING ProgMsg
		{
			get
			{
				_STRING returnValue = new _STRING(_StructureData, _BufferOffset + 328);
				return returnValue;
			}
		}
		public _STRING DoneMsg
		{
			get
			{
				_STRING returnValue = new _STRING(_StructureData, _BufferOffset + 344);
				return returnValue;
			}
		}
		public UInt64 FileObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 360); } }
		public _DEVICE_USAGE_NOTIFICATION_TYPE UsageType { get { return (_DEVICE_USAGE_NOTIFICATION_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 368); } }
	}
	#endregion
	#region _FILE_STANDARD_INFORMATION
 
	public class _FILE_STANDARD_INFORMATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _FILE_STANDARD_INFORMATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_FILE_STANDARD_INFORMATION"": [ 24, {
				 ""AllocationSize"": [ 0, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""EndOfFile"": [ 8, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""NumberOfLinks"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""DeletePending"": [ 20, [ ""Byte"", ""null"" ]],
				 ""Directory"": [ 21, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LARGE_INTEGER AllocationSize
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LARGE_INTEGER EndOfFile
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public UInt32 NumberOfLinks { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public Byte DeletePending{ get { return _StructureData[_BufferOffset +20]; } }
		public Byte Directory{ get { return _StructureData[_BufferOffset +21]; } }
	}
	#endregion
	#region _PPM_VETO_ACCOUNTING
 
	public class _PPM_VETO_ACCOUNTING
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PPM_VETO_ACCOUNTING(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PPM_VETO_ACCOUNTING"": [ 24, {
				 ""VetoPresent"": [ 0, [ ""Int32"", ""null"" ]],
				 ""VetoListHead"": [ 8, [ ""_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int32 VetoPresent { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public _LIST_ENTRY VetoListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _POP_SHUTDOWN_BUG_CHECK
 
	public class _POP_SHUTDOWN_BUG_CHECK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_SHUTDOWN_BUG_CHECK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_SHUTDOWN_BUG_CHECK"": [ 72, {
				 ""InitiatingThread"": [ 0, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]],
				 ""InitiatingProcess"": [ 8, [ ""Pointer"", ""{\""target\"":\""_EPROCESS\""}"" ]],
				 ""ThreadId"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""ProcessId"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""Code"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""Parameter1"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""Parameter2"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""Parameter3"": [ 56, [ ""UInt64"", ""null"" ]],
				 ""Parameter4"": [ 64, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 InitiatingThread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 InitiatingProcess { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 ThreadId { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 ProcessId { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt32 Code { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt64 Parameter1 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 Parameter2 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 Parameter3 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 Parameter4 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
	}
	#endregion
	#region _NB10
 
	public class _NB10
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _NB10(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 20; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_NB10"": [ 20, {
				 ""Signature"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Offset"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""TimeStamp"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Age"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""PdbName"": [ 16, [ ""Array"", ""{\""count\"":1,\""target\"":\""Char\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Signature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Offset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 TimeStamp { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Age { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public Char[] PdbName
		{
			get
			{
				Char[] returnValue = new Char[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToChar(_StructureData, (i * sizeof(Char)) + _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MI_EXTRA_IMAGE_INFORMATION
 
	public class _MI_EXTRA_IMAGE_INFORMATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MI_EXTRA_IMAGE_INFORMATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MI_EXTRA_IMAGE_INFORMATION"": [ 8, {
				 ""SizeOfHeaders"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""SizeOfImage"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 SizeOfHeaders { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 SizeOfImage { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _PCW_MASK_INFORMATION
 
	public class _PCW_MASK_INFORMATION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PCW_MASK_INFORMATION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PCW_MASK_INFORMATION"": [ 40, {
				 ""CounterMask"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""InstanceMask"": [ 8, [ ""Pointer"", ""{\""target\"":\""_UNICODE_STRING\""}"" ]],
				 ""InstanceId"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""CollectMultiple"": [ 20, [ ""Byte"", ""null"" ]],
				 ""Buffer"": [ 24, [ ""Pointer"", ""{\""target\"":\""_PCW_BUFFER\""}"" ]],
				 ""CancelEvent"": [ 32, [ ""Pointer"", ""{\""target\"":\""_KEVENT\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 CounterMask { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 InstanceMask { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 InstanceId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public Byte CollectMultiple{ get { return _StructureData[_BufferOffset +20]; } }
		public UInt64 Buffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 CancelEvent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
	}
	#endregion
	#region _MMVAD_FLAGS
 
	public class _MMVAD_FLAGS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMVAD_FLAGS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMVAD_FLAGS"": [ 4, {
				 ""VadType"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""Protection"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""PreferredNode"": [ 0, [ ""BitField"", ""{\""end_bit\"":14,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]],
				 ""NoChange"": [ 0, [ ""BitField"", ""{\""end_bit\"":15,\""start_bit\"":14,\""target\"":\""UInt32\""}"" ]],
				 ""PrivateMemory"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":15,\""target\"":\""UInt32\""}"" ]],
				 ""Teb"": [ 0, [ ""BitField"", ""{\""end_bit\"":17,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""PrivateFixup"": [ 0, [ ""BitField"", ""{\""end_bit\"":18,\""start_bit\"":17,\""target\"":\""UInt32\""}"" ]],
				 ""Spare"": [ 0, [ ""BitField"", ""{\""end_bit\"":31,\""start_bit\"":18,\""target\"":\""UInt32\""}"" ]],
				 ""DeleteInProgress"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":31,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 VadType
		{
			get
			{
				// start: 0  end: 3  Mask: 0000000000000111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 7) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 Protection
		{
			get
			{
				// start: 3  end: 8  Mask: 0000000011111000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 248) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 PreferredNode
		{
			get
			{
				// start: 8  end: 14  Mask: 0011111100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16128) >> 8;
				return (UInt32)value2;
			}
		}
		public UInt32 NoChange
		{
			get
			{
				// start: 14  end: 15  Mask: 0100000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16384) >> 14;
				return (UInt32)value2;
			}
		}
		public UInt32 PrivateMemory
		{
			get
			{
				// start: 15  end: 16  Mask: 1000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 32768) >> 15;
				return (UInt32)value2;
			}
		}
		public UInt32 Teb
		{
			get
			{
				// start: 16  end: 17  Mask: 10000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 65536) >> 16;
				return (UInt32)value2;
			}
		}
		public UInt32 PrivateFixup
		{
			get
			{
				// start: 17  end: 18  Mask: 100000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 131072) >> 17;
				return (UInt32)value2;
			}
		}
		public UInt32 Spare
		{
			get
			{
				// start: 18  end: 31  Mask: 1111111111111000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2147221504) >> 18;
				return (UInt32)value2;
			}
		}
		public UInt32 DeleteInProgress
		{
			get
			{
				// start: 31  end: 32  Mask: 10000000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2147483648) >> 31;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _SECURITY_DESCRIPTOR_RELATIVE
 
	public class _SECURITY_DESCRIPTOR_RELATIVE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _SECURITY_DESCRIPTOR_RELATIVE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 20; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_SECURITY_DESCRIPTOR_RELATIVE"": [ 20, {
				 ""Revision"": [ 0, [ ""Byte"", ""null"" ]],
				 ""Sbz1"": [ 1, [ ""Byte"", ""null"" ]],
				 ""Control"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Owner"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Group"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Sacl"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""Dacl"": [ 16, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte Revision{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte Sbz1{ get { return _StructureData[_BufferOffset +1]; } }
		public UInt16 Control { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt32 Owner { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 Group { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Sacl { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 Dacl { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _MI_VAD_EVENT_BLOCK
 
	public class _MI_VAD_EVENT_BLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MI_VAD_EVENT_BLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MI_VAD_EVENT_BLOCK"": [ 40, {
				 ""Next"": [ 0, [ ""Pointer"", ""{\""target\"":\""_MI_VAD_EVENT_BLOCK\""}"" ]],
				 ""WaitReason"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Gate"": [ 16, [ ""_KGATE"", ""null"" ]],
				 ""SecureInfo"": [ 16, [ ""_MMADDRESS_LIST"", ""null"" ]],
				 ""BitMap"": [ 16, [ ""_RTL_BITMAP_EX"", ""null"" ]],
				 ""InPageSupport"": [ 16, [ ""Pointer"", ""{\""target\"":\""_MMINPAGE_SUPPORT\""}"" ]],
				 ""PhysicalMemory"": [ 16, [ ""_MI_PHYSMEM_BLOCK"", ""null"" ]],
				 ""LargePage"": [ 16, [ ""Pointer"", ""{\""target\"":\""_MI_LARGEPAGE_MEMORY_INFO\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Next { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt32 WaitReason { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public _KGATE Gate
		{
			get
			{
				_KGATE returnValue = new _KGATE(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _MMADDRESS_LIST SecureInfo
		{
			get
			{
				_MMADDRESS_LIST returnValue = new _MMADDRESS_LIST(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _RTL_BITMAP_EX BitMap
		{
			get
			{
				_RTL_BITMAP_EX returnValue = new _RTL_BITMAP_EX(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt64 InPageSupport { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public _MI_PHYSMEM_BLOCK PhysicalMemory
		{
			get
			{
				_MI_PHYSMEM_BLOCK returnValue = new _MI_PHYSMEM_BLOCK(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt64 LargePage { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _UNNAMED_37109
 
	public class _UNNAMED_37109
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_37109(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_37109"": [ 32, {
				 ""TestAllocation"": [ 0, [ ""_ARBITER_TEST_ALLOCATION_PARAMETERS"", ""null"" ]],
				 ""RetestAllocation"": [ 0, [ ""_ARBITER_RETEST_ALLOCATION_PARAMETERS"", ""null"" ]],
				 ""BootAllocation"": [ 0, [ ""_ARBITER_BOOT_ALLOCATION_PARAMETERS"", ""null"" ]],
				 ""QueryAllocatedResources"": [ 0, [ ""_ARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS"", ""null"" ]],
				 ""QueryConflict"": [ 0, [ ""_ARBITER_QUERY_CONFLICT_PARAMETERS"", ""null"" ]],
				 ""QueryArbitrate"": [ 0, [ ""_ARBITER_QUERY_ARBITRATE_PARAMETERS"", ""null"" ]],
				 ""AddReserved"": [ 0, [ ""_ARBITER_ADD_RESERVED_PARAMETERS"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _ARBITER_TEST_ALLOCATION_PARAMETERS TestAllocation
		{
			get
			{
				_ARBITER_TEST_ALLOCATION_PARAMETERS returnValue = new _ARBITER_TEST_ALLOCATION_PARAMETERS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _ARBITER_RETEST_ALLOCATION_PARAMETERS RetestAllocation
		{
			get
			{
				_ARBITER_RETEST_ALLOCATION_PARAMETERS returnValue = new _ARBITER_RETEST_ALLOCATION_PARAMETERS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _ARBITER_BOOT_ALLOCATION_PARAMETERS BootAllocation
		{
			get
			{
				_ARBITER_BOOT_ALLOCATION_PARAMETERS returnValue = new _ARBITER_BOOT_ALLOCATION_PARAMETERS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _ARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS QueryAllocatedResources
		{
			get
			{
				_ARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS returnValue = new _ARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _ARBITER_QUERY_CONFLICT_PARAMETERS QueryConflict
		{
			get
			{
				_ARBITER_QUERY_CONFLICT_PARAMETERS returnValue = new _ARBITER_QUERY_CONFLICT_PARAMETERS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _ARBITER_QUERY_ARBITRATE_PARAMETERS QueryArbitrate
		{
			get
			{
				_ARBITER_QUERY_ARBITRATE_PARAMETERS returnValue = new _ARBITER_QUERY_ARBITRATE_PARAMETERS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _ARBITER_ADD_RESERVED_PARAMETERS AddReserved
		{
			get
			{
				_ARBITER_ADD_RESERVED_PARAMETERS returnValue = new _ARBITER_ADD_RESERVED_PARAMETERS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ARBITER_PARAMETERS
 
	public class _ARBITER_PARAMETERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ARBITER_PARAMETERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ARBITER_PARAMETERS"": [ 32, {
				 ""Parameters"": [ 0, [ ""_UNNAMED_37109"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_37109 Parameters
		{
			get
			{
				_UNNAMED_37109 returnValue = new _UNNAMED_37109(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_37120
 
	public class _UNNAMED_37120
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_37120(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_37120"": [ 8, {
				 ""idxRecord"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""cidContainer"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 idxRecord { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 cidContainer { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _CLS_LSN
 
	public class _CLS_LSN
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CLS_LSN(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CLS_LSN"": [ 8, {
				 ""offset"": [ 0, [ ""_UNNAMED_37120"", ""null"" ]],
				 ""ullOffset"": [ 0, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_37120 offset
		{
			get
			{
				_UNNAMED_37120 returnValue = new _UNNAMED_37120(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 ullOffset { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _NT_TIB32
 
	public class _NT_TIB32
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _NT_TIB32(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 28; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_NT_TIB32"": [ 28, {
				 ""ExceptionList"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""StackBase"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""StackLimit"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""SubSystemTib"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""FiberData"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""Version"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""ArbitraryUserPointer"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""Self"": [ 24, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 ExceptionList { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 StackBase { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 StackLimit { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 SubSystemTib { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 FiberData { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 Version { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 ArbitraryUserPointer { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 Self { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region POWER_ACTION_POLICY
 
	public class POWER_ACTION_POLICY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public POWER_ACTION_POLICY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 12; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""POWER_ACTION_POLICY"": [ 12, {
				 ""Action"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""POWER_ACTION\"",\""target\"":\""UInt32\""}"" ]],
				 ""Flags"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""EventCode"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public POWER_ACTION Action { get { return (POWER_ACTION)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 EventCode { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _RSDS
 
	public class _RSDS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RSDS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 28; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RSDS"": [ 28, {
				 ""Signature"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Guid"": [ 4, [ ""_GUID"", ""null"" ]],
				 ""Age"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""PdbName"": [ 24, [ ""Array"", ""{\""count\"":1,\""target\"":\""Char\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Signature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public _GUID Guid
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 4);
				return returnValue;
			}
		}
		public UInt32 Age { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public Char[] PdbName
		{
			get
			{
				Char[] returnValue = new Char[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToChar(_StructureData, (i * sizeof(Char)) + _BufferOffset + 24);
				return returnValue;
			}
		}
	}
	#endregion
	#region PO_MEMORY_IMAGE
 
	public class PO_MEMORY_IMAGE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public PO_MEMORY_IMAGE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 864; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""PO_MEMORY_IMAGE"": [ 864, {
				 ""Signature"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ImageType"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""CheckSum"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""LengthSelf"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""PageSelf"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""PageSize"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""SystemTime"": [ 32, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""InterruptTime"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""FeatureFlags"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""HiberFlags"": [ 56, [ ""Byte"", ""null"" ]],
				 ""spare"": [ 57, [ ""Array"", ""{\""count\"":3,\""target\"":\""Byte\""}"" ]],
				 ""NoHiberPtes"": [ 60, [ ""UInt32"", ""null"" ]],
				 ""HiberVa"": [ 64, [ ""UInt64"", ""null"" ]],
				 ""NoFreePages"": [ 72, [ ""UInt32"", ""null"" ]],
				 ""FreeMapCheck"": [ 76, [ ""UInt32"", ""null"" ]],
				 ""WakeCheck"": [ 80, [ ""UInt32"", ""null"" ]],
				 ""NumPagesForLoader"": [ 88, [ ""UInt64"", ""null"" ]],
				 ""FirstBootRestorePage"": [ 96, [ ""UInt64"", ""null"" ]],
				 ""FirstKernelRestorePage"": [ 104, [ ""UInt64"", ""null"" ]],
				 ""PerfInfo"": [ 112, [ ""_PO_HIBER_PERF"", ""null"" ]],
				 ""FirmwareRuntimeInformationPages"": [ 536, [ ""UInt32"", ""null"" ]],
				 ""FirmwareRuntimeInformation"": [ 544, [ ""Array"", ""{\""count\"":1,\""target\"":\""UInt64\""}"" ]],
				 ""SiLogOffset"": [ 552, [ ""UInt32"", ""null"" ]],
				 ""NoBootLoaderLogPages"": [ 556, [ ""UInt32"", ""null"" ]],
				 ""BootLoaderLogPages"": [ 560, [ ""Array"", ""{\""count\"":24,\""target\"":\""UInt64\""}"" ]],
				 ""NotUsed"": [ 752, [ ""UInt32"", ""null"" ]],
				 ""ResumeContextCheck"": [ 756, [ ""UInt32"", ""null"" ]],
				 ""ResumeContextPages"": [ 760, [ ""UInt32"", ""null"" ]],
				 ""Hiberboot"": [ 764, [ ""Byte"", ""null"" ]],
				 ""HvCr3"": [ 768, [ ""UInt64"", ""null"" ]],
				 ""HvEntryPoint"": [ 776, [ ""UInt64"", ""null"" ]],
				 ""HvReservedTransitionAddress"": [ 784, [ ""UInt64"", ""null"" ]],
				 ""HvReservedTransitionAddressSize"": [ 792, [ ""UInt64"", ""null"" ]],
				 ""BootFlags"": [ 800, [ ""UInt64"", ""null"" ]],
				 ""HalEntryPointPhysical"": [ 808, [ ""UInt64"", ""null"" ]],
				 ""HighestPhysicalPage"": [ 816, [ ""UInt64"", ""null"" ]],
				 ""BitlockerKeyPfns"": [ 824, [ ""Array"", ""{\""count\"":4,\""target\"":\""UInt64\""}"" ]],
				 ""HardwareSignature"": [ 856, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Signature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 ImageType { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 CheckSum { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 LengthSelf { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt64 PageSelf { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 PageSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public _LARGE_INTEGER SystemTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt64 InterruptTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 FeatureFlags { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public Byte HiberFlags{ get { return _StructureData[_BufferOffset +56]; } }
		public Byte[] spare
		{
			get
			{
				Byte[] returnValue = new Byte[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 57];
				return returnValue;
			}
		}
		public UInt32 NoHiberPtes { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
		public UInt64 HiberVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt32 NoFreePages { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 72); } }
		public UInt32 FreeMapCheck { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 76); } }
		public UInt32 WakeCheck { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 80); } }
		public UInt64 NumPagesForLoader { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 FirstBootRestorePage { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt64 FirstKernelRestorePage { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public _PO_HIBER_PERF PerfInfo
		{
			get
			{
				_PO_HIBER_PERF returnValue = new _PO_HIBER_PERF(_StructureData, _BufferOffset + 112);
				return returnValue;
			}
		}
		public UInt32 FirmwareRuntimeInformationPages { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 536); } }
		public UInt64[] FirmwareRuntimeInformation
		{
			get
			{
				UInt64[] returnValue = new UInt64[1];
				for(int i=0; i<1; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 544);
				return returnValue;
			}
		}
		public UInt32 SiLogOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 552); } }
		public UInt32 NoBootLoaderLogPages { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 556); } }
		public UInt64[] BootLoaderLogPages
		{
			get
			{
				UInt64[] returnValue = new UInt64[24];
				for(int i=0; i<24; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 560);
				return returnValue;
			}
		}
		public UInt32 NotUsed { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 752); } }
		public UInt32 ResumeContextCheck { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 756); } }
		public UInt32 ResumeContextPages { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 760); } }
		public Byte Hiberboot{ get { return _StructureData[_BufferOffset +764]; } }
		public UInt64 HvCr3 { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 768); } }
		public UInt64 HvEntryPoint { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 776); } }
		public UInt64 HvReservedTransitionAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 784); } }
		public UInt64 HvReservedTransitionAddressSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 792); } }
		public UInt64 BootFlags { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 800); } }
		public UInt64 HalEntryPointPhysical { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 808); } }
		public UInt64 HighestPhysicalPage { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 816); } }
		public UInt64[] BitlockerKeyPfns
		{
			get
			{
				UInt64[] returnValue = new UInt64[4];
				for(int i=0; i<4; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 824);
				return returnValue;
			}
		}
		public UInt32 HardwareSignature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 856); } }
	}
	#endregion
	#region BATTERY_REPORTING_SCALE
 
	public class BATTERY_REPORTING_SCALE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public BATTERY_REPORTING_SCALE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""BATTERY_REPORTING_SCALE"": [ 8, {
				 ""Granularity"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Capacity"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Granularity { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Capacity { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _RTL_ATOM_TABLE_REFERENCE
 
	public class _RTL_ATOM_TABLE_REFERENCE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_ATOM_TABLE_REFERENCE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_ATOM_TABLE_REFERENCE"": [ 24, {
				 ""LowBoxList"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""LowBoxID"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""ReferenceCount"": [ 20, [ ""UInt16"", ""null"" ]],
				 ""Flags"": [ 22, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY LowBoxList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 LowBoxID { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt16 ReferenceCount { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 20); } }
		public UInt16 Flags { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 22); } }
	}
	#endregion
	#region _CURDIR
 
	public class _CURDIR
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CURDIR(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CURDIR"": [ 24, {
				 ""DosPath"": [ 0, [ ""_UNICODE_STRING"", ""null"" ]],
				 ""Handle"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public _UNICODE_STRING DosPath
		{
			get
			{
				_UNICODE_STRING returnValue = new _UNICODE_STRING(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 Handle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _PO_HIBER_PERF
 
	public class _PO_HIBER_PERF
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PO_HIBER_PERF(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 424; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PO_HIBER_PERF"": [ 424, {
				 ""HiberIoTicks"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""HiberIoCpuTicks"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""HiberInitTicks"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""HiberHiberFileTicks"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""HiberCompressTicks"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""HiberSharedBufferTicks"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""TotalHibernateTime"": [ 48, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""POSTTime"": [ 56, [ ""UInt32"", ""null"" ]],
				 ""ResumeBootMgrTime"": [ 60, [ ""UInt32"", ""null"" ]],
				 ""BootmgrUserInputTime"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""ResumeAppTicks"": [ 72, [ ""UInt64"", ""null"" ]],
				 ""ResumeAppStartTimestamp"": [ 80, [ ""UInt64"", ""null"" ]],
				 ""ResumeLibraryInitTicks"": [ 88, [ ""UInt64"", ""null"" ]],
				 ""ResumeInitTicks"": [ 96, [ ""UInt64"", ""null"" ]],
				 ""ResumeRestoreImageStartTimestamp"": [ 104, [ ""UInt64"", ""null"" ]],
				 ""ResumeHiberFileTicks"": [ 112, [ ""UInt64"", ""null"" ]],
				 ""ResumeIoTicks"": [ 120, [ ""UInt64"", ""null"" ]],
				 ""ResumeDecompressTicks"": [ 128, [ ""UInt64"", ""null"" ]],
				 ""ResumeAllocateTicks"": [ 136, [ ""UInt64"", ""null"" ]],
				 ""ResumeUserInOutTicks"": [ 144, [ ""UInt64"", ""null"" ]],
				 ""ResumeMapTicks"": [ 152, [ ""UInt64"", ""null"" ]],
				 ""ResumeUnmapTicks"": [ 160, [ ""UInt64"", ""null"" ]],
				 ""ResumeKernelSwitchTimestamp"": [ 168, [ ""UInt64"", ""null"" ]],
				 ""WriteLogDataTimestamp"": [ 176, [ ""UInt64"", ""null"" ]],
				 ""KernelReturnFromHandler"": [ 184, [ ""UInt64"", ""null"" ]],
				 ""TimeStampCounterAtSwitchTime"": [ 192, [ ""UInt64"", ""null"" ]],
				 ""HalTscOffset"": [ 200, [ ""UInt64"", ""null"" ]],
				 ""HvlTscOffset"": [ 208, [ ""UInt64"", ""null"" ]],
				 ""SleeperThreadEnd"": [ 216, [ ""UInt64"", ""null"" ]],
				 ""KernelReturnSystemPowerStateTimestamp"": [ 224, [ ""UInt64"", ""null"" ]],
				 ""IoBoundedness"": [ 232, [ ""UInt64"", ""null"" ]],
				 ""KernelDecompressTicks"": [ 240, [ ""UInt64"", ""null"" ]],
				 ""KernelIoTicks"": [ 248, [ ""UInt64"", ""null"" ]],
				 ""KernelCopyTicks"": [ 256, [ ""UInt64"", ""null"" ]],
				 ""ReadCheckCount"": [ 264, [ ""UInt64"", ""null"" ]],
				 ""KernelInitTicks"": [ 272, [ ""UInt64"", ""null"" ]],
				 ""KernelResumeHiberFileTicks"": [ 280, [ ""UInt64"", ""null"" ]],
				 ""KernelIoCpuTicks"": [ 288, [ ""UInt64"", ""null"" ]],
				 ""KernelSharedBufferTicks"": [ 296, [ ""UInt64"", ""null"" ]],
				 ""KernelAnimationTicks"": [ 304, [ ""UInt64"", ""null"" ]],
				 ""AnimationStart"": [ 312, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""AnimationStop"": [ 320, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""DeviceResumeTime"": [ 328, [ ""UInt32"", ""null"" ]],
				 ""BootPagesProcessed"": [ 336, [ ""UInt64"", ""null"" ]],
				 ""KernelPagesProcessed"": [ 344, [ ""UInt64"", ""null"" ]],
				 ""BootBytesWritten"": [ 352, [ ""UInt64"", ""null"" ]],
				 ""KernelBytesWritten"": [ 360, [ ""UInt64"", ""null"" ]],
				 ""BootPagesWritten"": [ 368, [ ""UInt64"", ""null"" ]],
				 ""KernelPagesWritten"": [ 376, [ ""UInt64"", ""null"" ]],
				 ""BytesWritten"": [ 384, [ ""UInt64"", ""null"" ]],
				 ""PagesWritten"": [ 392, [ ""UInt32"", ""null"" ]],
				 ""FileRuns"": [ 396, [ ""UInt32"", ""null"" ]],
				 ""NoMultiStageResumeReason"": [ 400, [ ""UInt32"", ""null"" ]],
				 ""MaxHuffRatio"": [ 404, [ ""UInt32"", ""null"" ]],
				 ""AdjustedTotalResumeTime"": [ 408, [ ""UInt64"", ""null"" ]],
				 ""ResumeCompleteTimestamp"": [ 416, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 HiberIoTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 HiberIoCpuTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 HiberInitTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 HiberHiberFileTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 HiberCompressTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 HiberSharedBufferTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public _LARGE_INTEGER TotalHibernateTime
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public UInt32 POSTTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 56); } }
		public UInt32 ResumeBootMgrTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 60); } }
		public UInt32 BootmgrUserInputTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt64 ResumeAppTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 ResumeAppStartTimestamp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 ResumeLibraryInitTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 ResumeInitTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public UInt64 ResumeRestoreImageStartTimestamp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 104); } }
		public UInt64 ResumeHiberFileTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 112); } }
		public UInt64 ResumeIoTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 120); } }
		public UInt64 ResumeDecompressTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 128); } }
		public UInt64 ResumeAllocateTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 136); } }
		public UInt64 ResumeUserInOutTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 144); } }
		public UInt64 ResumeMapTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 152); } }
		public UInt64 ResumeUnmapTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public UInt64 ResumeKernelSwitchTimestamp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 168); } }
		public UInt64 WriteLogDataTimestamp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 176); } }
		public UInt64 KernelReturnFromHandler { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 184); } }
		public UInt64 TimeStampCounterAtSwitchTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 192); } }
		public UInt64 HalTscOffset { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 200); } }
		public UInt64 HvlTscOffset { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 208); } }
		public UInt64 SleeperThreadEnd { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 216); } }
		public UInt64 KernelReturnSystemPowerStateTimestamp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 224); } }
		public UInt64 IoBoundedness { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 232); } }
		public UInt64 KernelDecompressTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 240); } }
		public UInt64 KernelIoTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 248); } }
		public UInt64 KernelCopyTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 256); } }
		public UInt64 ReadCheckCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 264); } }
		public UInt64 KernelInitTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 272); } }
		public UInt64 KernelResumeHiberFileTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 280); } }
		public UInt64 KernelIoCpuTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 288); } }
		public UInt64 KernelSharedBufferTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 296); } }
		public UInt64 KernelAnimationTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 304); } }
		public _LARGE_INTEGER AnimationStart
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 312);
				return returnValue;
			}
		}
		public _LARGE_INTEGER AnimationStop
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 320);
				return returnValue;
			}
		}
		public UInt32 DeviceResumeTime { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 328); } }
		public UInt64 BootPagesProcessed { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 336); } }
		public UInt64 KernelPagesProcessed { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 344); } }
		public UInt64 BootBytesWritten { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 352); } }
		public UInt64 KernelBytesWritten { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 360); } }
		public UInt64 BootPagesWritten { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 368); } }
		public UInt64 KernelPagesWritten { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 376); } }
		public UInt64 BytesWritten { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 384); } }
		public UInt32 PagesWritten { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 392); } }
		public UInt32 FileRuns { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 396); } }
		public UInt32 NoMultiStageResumeReason { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 400); } }
		public UInt32 MaxHuffRatio { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 404); } }
		public UInt64 AdjustedTotalResumeTime { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 408); } }
		public UInt64 ResumeCompleteTimestamp { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 416); } }
	}
	#endregion
	#region _POP_FX_PROVIDER
 
	public class _POP_FX_PROVIDER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_FX_PROVIDER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_FX_PROVIDER"": [ 8, {
				 ""Index"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Activating"": [ 4, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Index { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Byte Activating{ get { return _StructureData[_BufferOffset +4]; } }
	}
	#endregion
	#region _RTL_BALANCED_LINKS
 
	public class _RTL_BALANCED_LINKS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_BALANCED_LINKS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_BALANCED_LINKS"": [ 32, {
				 ""Parent"": [ 0, [ ""Pointer"", ""{\""target\"":\""_RTL_BALANCED_LINKS\""}"" ]],
				 ""LeftChild"": [ 8, [ ""Pointer"", ""{\""target\"":\""_RTL_BALANCED_LINKS\""}"" ]],
				 ""RightChild"": [ 16, [ ""Pointer"", ""{\""target\"":\""_RTL_BALANCED_LINKS\""}"" ]],
				 ""Balance"": [ 24, [ ""Char"", ""null"" ]],
				 ""Reserved"": [ 25, [ ""Array"", ""{\""count\"":3,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Parent { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 LeftChild { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 RightChild { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public Char Balance { get { return BitConverter.ToChar(_StructureData, _BufferOffset + 24); } }
		public Byte[] Reserved
		{
			get
			{
				Byte[] returnValue = new Byte[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 25];
				return returnValue;
			}
		}
	}
	#endregion
	#region _FREE_DISPLAY
 
	public class _FREE_DISPLAY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _FREE_DISPLAY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_FREE_DISPLAY"": [ 24, {
				 ""RealVectorSize"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Hint"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Display"": [ 8, [ ""_RTL_BITMAP"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 RealVectorSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Hint { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _RTL_BITMAP Display
		{
			get
			{
				_RTL_BITMAP returnValue = new _RTL_BITMAP(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_37256
 
	public class _UNNAMED_37256
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_37256(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_37256"": [ 8, {
				 ""Flags"": [ 0, [ ""_MMSECURE_FLAGS"", ""null"" ]],
				 ""FlagsLong"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""StartVa"": [ 0, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public _MMSECURE_FLAGS Flags
		{
			get
			{
				_MMSECURE_FLAGS returnValue = new _MMSECURE_FLAGS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 FlagsLong { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 StartVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _MMADDRESS_LIST
 
	public class _MMADDRESS_LIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMADDRESS_LIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMADDRESS_LIST"": [ 16, {
				 ""u1"": [ 0, [ ""_UNNAMED_37256"", ""null"" ]],
				 ""EndVa"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_37256 u1
		{
			get
			{
				_UNNAMED_37256 returnValue = new _UNNAMED_37256(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 EndVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _MI_PHYSMEM_BLOCK
 
	public class _MI_PHYSMEM_BLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MI_PHYSMEM_BLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MI_PHYSMEM_BLOCK"": [ 8, {
				 ""IoTracker"": [ 0, [ ""Pointer"", ""{\""target\"":\""_MMIO_TRACKER\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 IoTracker { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _POP_PER_PROCESSOR_CONTEXT
 
	public class _POP_PER_PROCESSOR_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_PER_PROCESSOR_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 128; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_PER_PROCESSOR_CONTEXT"": [ 128, {
				 ""UncompressedData"": [ 0, [ ""Pointer"", ""{\""target\"":\""Byte\""}"" ]],
				 ""MappingVa"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""XpressEncodeWorkspace"": [ 16, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CompressedDataBuffer"": [ 24, [ ""Pointer"", ""{\""target\"":\""Byte\""}"" ]],
				 ""CopyTicks"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""CompressTicks"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""BytesCopied"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""PagesProcessed"": [ 56, [ ""UInt64"", ""null"" ]],
				 ""DecompressTicks"": [ 64, [ ""UInt64"", ""null"" ]],
				 ""ResumeCopyTicks"": [ 72, [ ""UInt64"", ""null"" ]],
				 ""SharedBufferTicks"": [ 80, [ ""UInt64"", ""null"" ]],
				 ""DecompressTicksByMethod"": [ 88, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt64\""}"" ]],
				 ""DecompressSizeByMethod"": [ 104, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt64\""}"" ]],
				 ""CompressCount"": [ 120, [ ""UInt32"", ""null"" ]],
				 ""HuffCompressCount"": [ 124, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 UncompressedData { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 MappingVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 XpressEncodeWorkspace { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 CompressedDataBuffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 CopyTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 CompressTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 BytesCopied { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 PagesProcessed { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 DecompressTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 ResumeCopyTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 SharedBufferTicks { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64[] DecompressTicksByMethod
		{
			get
			{
				UInt64[] returnValue = new UInt64[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 88);
				return returnValue;
			}
		}
		public UInt64[] DecompressSizeByMethod
		{
			get
			{
				UInt64[] returnValue = new UInt64[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 104);
				return returnValue;
			}
		}
		public UInt32 CompressCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 120); } }
		public UInt32 HuffCompressCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 124); } }
	}
	#endregion
	#region _DEVICE_OBJECT_LIST_ENTRY
 
	public class _DEVICE_OBJECT_LIST_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DEVICE_OBJECT_LIST_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DEVICE_OBJECT_LIST_ENTRY"": [ 16, {
				 ""DeviceObject"": [ 0, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""RelationLevel"": [ 8, [ ""Enumeration"", ""{\""enum_name\"":\""_DEVICE_RELATION_LEVEL\"",\""target\"":\""UInt32\""}"" ]],
				 ""Flags"": [ 12, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 DeviceObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _DEVICE_RELATION_LEVEL RelationLevel { get { return (_DEVICE_RELATION_LEVEL)BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
	}
	#endregion
	#region _IO_REMOVE_LOCK
 
	public class _IO_REMOVE_LOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IO_REMOVE_LOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IO_REMOVE_LOCK"": [ 32, {
				 ""Common"": [ 0, [ ""_IO_REMOVE_LOCK_COMMON_BLOCK"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _IO_REMOVE_LOCK_COMMON_BLOCK Common
		{
			get
			{
				_IO_REMOVE_LOCK_COMMON_BLOCK returnValue = new _IO_REMOVE_LOCK_COMMON_BLOCK(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _POP_IO_INFO
 
	public class _POP_IO_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_IO_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 96; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_IO_INFO"": [ 96, {
				 ""DumpMdl"": [ 0, [ ""Pointer"", ""{\""target\"":\""_MDL\""}"" ]],
				 ""IoStatus"": [ 8, [ ""Enumeration"", ""{\""enum_name\"":\""_POP_IO_STATUS\"",\""target\"":\""UInt32\""}"" ]],
				 ""IoStartCount"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""IoBytesCompleted"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""IoBytesInProgress"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""RequestSize"": [ 40, [ ""UInt64"", ""null"" ]],
				 ""IoLocation"": [ 48, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""FileOffset"": [ 56, [ ""UInt64"", ""null"" ]],
				 ""Buffer"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""AsyncCapable"": [ 72, [ ""Byte"", ""null"" ]],
				 ""BytesToRead"": [ 80, [ ""UInt64"", ""null"" ]],
				 ""Pages"": [ 88, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 DumpMdl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public _POP_IO_STATUS IoStatus { get { return (_POP_IO_STATUS)BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt64 IoStartCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 IoBytesCompleted { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 IoBytesInProgress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 RequestSize { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public _LARGE_INTEGER IoLocation
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 48);
				return returnValue;
			}
		}
		public UInt64 FileOffset { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 Buffer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public Byte AsyncCapable{ get { return _StructureData[_BufferOffset +72]; } }
		public UInt64 BytesToRead { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt32 Pages { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 88); } }
	}
	#endregion
	#region _LDRP_CSLIST
 
	public class _LDRP_CSLIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _LDRP_CSLIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_LDRP_CSLIST"": [ 8, {
				 ""Tail"": [ 0, [ ""Pointer"", ""{\""target\"":\""_SINGLE_LIST_ENTRY\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Tail { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _MMVIEW
 
	public class _MMVIEW
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMVIEW(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMVIEW"": [ 56, {
				 ""PteOffset"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""Entry"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""u1"": [ 16, [ ""_MMVIEW_CONTROL_AREA"", ""null"" ]],
				 ""ViewLinks"": [ 24, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""SessionViewVa"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""SessionId"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""SessionIdForGlobalSubsections"": [ 52, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 PteOffset { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Entry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _MMVIEW_CONTROL_AREA u1
		{
			get
			{
				_MMVIEW_CONTROL_AREA returnValue = new _MMVIEW_CONTROL_AREA(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _LIST_ENTRY ViewLinks
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public UInt64 SessionViewVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt32 SessionId { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public UInt32 SessionIdForGlobalSubsections { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
	}
	#endregion
	#region _AER_BRIDGE_DESCRIPTOR_FLAGS
 
	public class _AER_BRIDGE_DESCRIPTOR_FLAGS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _AER_BRIDGE_DESCRIPTOR_FLAGS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 2; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_AER_BRIDGE_DESCRIPTOR_FLAGS"": [ 2, {
				 ""UncorrectableErrorMaskRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""UncorrectableErrorSeverityRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt16\""}"" ]],
				 ""CorrectableErrorMaskRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt16\""}"" ]],
				 ""AdvancedCapsAndControlRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt16\""}"" ]],
				 ""SecondaryUncorrectableErrorMaskRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt16\""}"" ]],
				 ""SecondaryUncorrectableErrorSevRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt16\""}"" ]],
				 ""SecondaryCapsAndControlRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt16\""}"" ]],
				 ""Reserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":7,\""target\"":\""UInt16\""}"" ]],
				 ""AsUSHORT"": [ 0, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 UncorrectableErrorMaskRW
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 UncorrectableErrorSeverityRW
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt16)value2;
			}
		}
		public UInt16 CorrectableErrorMaskRW
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt16)value2;
			}
		}
		public UInt16 AdvancedCapsAndControlRW
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8) >> 3;
				return (UInt16)value2;
			}
		}
		public UInt16 SecondaryUncorrectableErrorMaskRW
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16) >> 4;
				return (UInt16)value2;
			}
		}
		public UInt16 SecondaryUncorrectableErrorSevRW
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 32) >> 5;
				return (UInt16)value2;
			}
		}
		public UInt16 SecondaryCapsAndControlRW
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 64) >> 6;
				return (UInt16)value2;
			}
		}
		public UInt16 Reserved
		{
			get
			{
				// start: 7  end: 16  Mask: 1111111110000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 65408) >> 7;
				return (UInt16)value2;
			}
		}
		public UInt16 AsUSHORT { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _ETW_PERFECT_HASH_FUNCTION
 
	public class _ETW_PERFECT_HASH_FUNCTION
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETW_PERFECT_HASH_FUNCTION(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETW_PERFECT_HASH_FUNCTION"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _ETW_FILTER_HEADER
 
	public class _ETW_FILTER_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETW_FILTER_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETW_FILTER_HEADER"": [ 72, {
				 ""FilterFlags"": [ 0, [ ""Int32"", ""null"" ]],
				 ""PidFilter"": [ 8, [ ""Pointer"", ""{\""target\"":\""_ETW_FILTER_PID\""}"" ]],
				 ""ExeFilter"": [ 16, [ ""Pointer"", ""{\""target\"":\""_ETW_FILTER_STRING_TOKEN\""}"" ]],
				 ""PkgIdFilter"": [ 24, [ ""Pointer"", ""{\""target\"":\""_ETW_FILTER_STRING_TOKEN\""}"" ]],
				 ""PkgAppIdFilter"": [ 32, [ ""Pointer"", ""{\""target\"":\""_ETW_FILTER_STRING_TOKEN\""}"" ]],
				 ""StackWalkFilter"": [ 40, [ ""Pointer"", ""{\""target\"":\""_ETW_PERFECT_HASH_FUNCTION\""}"" ]],
				 ""EventIdFilter"": [ 48, [ ""Pointer"", ""{\""target\"":\""_ETW_PERFECT_HASH_FUNCTION\""}"" ]],
				 ""PayloadFilter"": [ 56, [ ""Pointer"", ""{\""target\"":\""_ETW_PAYLOAD_FILTER\""}"" ]],
				 ""ProviderSideFilter"": [ 64, [ ""Pointer"", ""{\""target\"":\""_EVENT_FILTER_HEADER\""}"" ]] }]
				 }
				)";
			}
		}
		public Int32 FilterFlags { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public UInt64 PidFilter { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 ExeFilter { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 PkgIdFilter { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 PkgAppIdFilter { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 StackWalkFilter { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 EventIdFilter { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 PayloadFilter { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 ProviderSideFilter { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
	}
	#endregion
	#region _ETW_PAYLOAD_FILTER
 
	public class _ETW_PAYLOAD_FILTER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETW_PAYLOAD_FILTER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 88; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETW_PAYLOAD_FILTER"": [ 88, {
				 ""RefCount"": [ 0, [ ""Int32"", ""null"" ]],
				 ""PayloadFilter"": [ 8, [ ""_AGGREGATED_PAYLOAD_FILTER"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Int32 RefCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public _AGGREGATED_PAYLOAD_FILTER PayloadFilter
		{
			get
			{
				_AGGREGATED_PAYLOAD_FILTER returnValue = new _AGGREGATED_PAYLOAD_FILTER(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _MMVIEW_CONTROL_AREA
 
	public class _MMVIEW_CONTROL_AREA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMVIEW_CONTROL_AREA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMVIEW_CONTROL_AREA"": [ 8, {
				 ""ControlArea"": [ 0, [ ""Pointer"", ""{\""target\"":\""_CONTROL_AREA\""}"" ]],
				 ""Writable"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt64\""}"" ]],
				 ""ExceptionForInPageErrors"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt64\""}"" ]],
				 ""Unused"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt64\""}"" ]],
				 ""UsedForControlArea"": [ 0, [ ""BitField"", ""{\""end_bit\"":64,\""start_bit\"":3,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 ControlArea { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Writable
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt64)value2;
			}
		}
		public UInt64 ExceptionForInPageErrors
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt64)value2;
			}
		}
		public UInt64 Unused
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt64)value2;
			}
		}
		public UInt64 UsedForControlArea
		{
			get
			{
				// start: 3  end: 64  Mask: 0000000000000000000000000000000011111111111111111111111111111000
				var value = BitConverter.ToUInt64(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967288) >> 3;
				return (UInt64)value2;
			}
		}
	}
	#endregion
	#region _MM_SESSION_SPACE_FLAGS
 
	public class _MM_SESSION_SPACE_FLAGS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MM_SESSION_SPACE_FLAGS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MM_SESSION_SPACE_FLAGS"": [ 4, {
				 ""Initialized"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""DeletePending"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""PoolInitialized"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""DynamicVaInitialized"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""WsInitialized"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""PoolDestroyed"": [ 0, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""ObjectInitialized"": [ 0, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""Filler"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":7,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Initialized
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 DeletePending
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 PoolInitialized
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 DynamicVaInitialized
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 WsInitialized
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 PoolDestroyed
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 ObjectInitialized
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 64) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 Filler
		{
			get
			{
				// start: 7  end: 32  Mask: 11111111111111111111111110000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967168) >> 7;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _RTL_CRITICAL_SECTION_DEBUG
 
	public class _RTL_CRITICAL_SECTION_DEBUG
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_CRITICAL_SECTION_DEBUG(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 48; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_CRITICAL_SECTION_DEBUG"": [ 48, {
				 ""Type"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""CreatorBackTraceIndex"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""CriticalSection"": [ 8, [ ""Pointer"", ""{\""target\"":\""_RTL_CRITICAL_SECTION\""}"" ]],
				 ""ProcessLocksList"": [ 16, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""EntryCount"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""ContentionCount"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""Flags"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""CreatorBackTraceIndexHigh"": [ 44, [ ""UInt16"", ""null"" ]],
				 ""SpareUSHORT"": [ 46, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Type { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 CreatorBackTraceIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt64 CriticalSection { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _LIST_ENTRY ProcessLocksList
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt32 EntryCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 ContentionCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt16 CreatorBackTraceIndexHigh { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 44); } }
		public UInt16 SpareUSHORT { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 46); } }
	}
	#endregion
	#region _TRACE_ENABLE_INFO
 
	public class _TRACE_ENABLE_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _TRACE_ENABLE_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_TRACE_ENABLE_INFO"": [ 32, {
				 ""IsEnabled"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Level"": [ 4, [ ""Byte"", ""null"" ]],
				 ""Reserved1"": [ 5, [ ""Byte"", ""null"" ]],
				 ""LoggerId"": [ 6, [ ""UInt16"", ""null"" ]],
				 ""EnableProperty"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""Reserved2"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""MatchAnyKeyword"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""MatchAllKeyword"": [ 24, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 IsEnabled { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public Byte Level{ get { return _StructureData[_BufferOffset +4]; } }
		public Byte Reserved1{ get { return _StructureData[_BufferOffset +5]; } }
		public UInt16 LoggerId { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
		public UInt32 EnableProperty { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 Reserved2 { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt64 MatchAnyKeyword { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 MatchAllKeyword { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _UNNAMED_37368
 
	public class _UNNAMED_37368
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_37368(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_37368"": [ 8, {
				 ""Gsiv"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""WakeInterrupt"": [ 4, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""ReservedFlags"": [ 4, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Gsiv { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 WakeInterrupt
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 ReservedFlags
		{
			get
			{
				// start: 1  end: 32  Mask: 11111111111111111111111111111110
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 4);
				var value2 = (value & 4294967294) >> 1;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _UNNAMED_37372
 
	public class _UNNAMED_37372
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_37372(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_37372"": [ 16, {
				 ""Address"": [ 0, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""DataPayload"": [ 8, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LARGE_INTEGER Address
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 DataPayload { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_37375
 
	public class _UNNAMED_37375
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_37375(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_37375"": [ 8, {
				 ""IntrInfo"": [ 0, [ ""_INTERRUPT_HT_INTR_INFO"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _INTERRUPT_HT_INTR_INFO IntrInfo
		{
			get
			{
				_INTERRUPT_HT_INTR_INFO returnValue = new _INTERRUPT_HT_INTR_INFO(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_37378
 
	public class _UNNAMED_37378
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_37378(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_37378"": [ 4, {
				 ""DestinationMode"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""HAL_APIC_DESTINATION_MODE\"",\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public HAL_APIC_DESTINATION_MODE DestinationMode { get { return (HAL_APIC_DESTINATION_MODE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _INTERRUPT_VECTOR_DATA
 
	public class _INTERRUPT_VECTOR_DATA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _INTERRUPT_VECTOR_DATA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_INTERRUPT_VECTOR_DATA"": [ 72, {
				 ""Type"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""INTERRUPT_CONNECTION_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""Vector"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Irql"": [ 8, [ ""Byte"", ""null"" ]],
				 ""Polarity"": [ 12, [ ""Enumeration"", ""{\""enum_name\"":\""_KINTERRUPT_POLARITY\"",\""target\"":\""UInt32\""}"" ]],
				 ""Mode"": [ 16, [ ""Enumeration"", ""{\""enum_name\"":\""_KINTERRUPT_MODE\"",\""target\"":\""UInt32\""}"" ]],
				 ""TargetProcessors"": [ 24, [ ""_GROUP_AFFINITY"", ""null"" ]],
				 ""IntRemapInfo"": [ 40, [ ""_INTERRUPT_REMAPPING_INFO"", ""null"" ]],
				 ""ControllerInput"": [ 56, [ ""_UNNAMED_37368"", ""null"" ]],
				 ""XapicMessage"": [ 56, [ ""_UNNAMED_37372"", ""null"" ]],
				 ""Hypertransport"": [ 56, [ ""_UNNAMED_37375"", ""null"" ]],
				 ""GenericMessage"": [ 56, [ ""_UNNAMED_37372"", ""null"" ]],
				 ""MessageRequest"": [ 56, [ ""_UNNAMED_37378"", ""null"" ]] }]
				 }
				)";
			}
		}
		public INTERRUPT_CONNECTION_TYPE Type { get { return (INTERRUPT_CONNECTION_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Vector { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public Byte Irql{ get { return _StructureData[_BufferOffset +8]; } }
		public _KINTERRUPT_POLARITY Polarity { get { return (_KINTERRUPT_POLARITY)BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public _KINTERRUPT_MODE Mode { get { return (_KINTERRUPT_MODE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public _GROUP_AFFINITY TargetProcessors
		{
			get
			{
				_GROUP_AFFINITY returnValue = new _GROUP_AFFINITY(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public _INTERRUPT_REMAPPING_INFO IntRemapInfo
		{
			get
			{
				_INTERRUPT_REMAPPING_INFO returnValue = new _INTERRUPT_REMAPPING_INFO(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public _UNNAMED_37368 ControllerInput
		{
			get
			{
				_UNNAMED_37368 returnValue = new _UNNAMED_37368(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public _UNNAMED_37372 XapicMessage
		{
			get
			{
				_UNNAMED_37372 returnValue = new _UNNAMED_37372(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public _UNNAMED_37375 Hypertransport
		{
			get
			{
				_UNNAMED_37375 returnValue = new _UNNAMED_37375(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public _UNNAMED_37372 GenericMessage
		{
			get
			{
				_UNNAMED_37372 returnValue = new _UNNAMED_37372(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public _UNNAMED_37378 MessageRequest
		{
			get
			{
				_UNNAMED_37378 returnValue = new _UNNAMED_37378(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
	}
	#endregion
	#region _POP_FX_DEPENDENT
 
	public class _POP_FX_DEPENDENT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_FX_DEPENDENT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_FX_DEPENDENT"": [ 8, {
				 ""Index"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ProviderIndex"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Index { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 ProviderIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _XPF_MCE_FLAGS
 
	public class _XPF_MCE_FLAGS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _XPF_MCE_FLAGS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_XPF_MCE_FLAGS"": [ 4, {
				 ""MCG_CapabilityRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""MCG_GlobalControlRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""Reserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""AsULONG"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 MCG_CapabilityRW
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 MCG_GlobalControlRW
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 Reserved
		{
			get
			{
				// start: 2  end: 32  Mask: 11111111111111111111111111111100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4294967292) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 AsULONG { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _ADAPTER_OBJECT
 
	public class _ADAPTER_OBJECT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ADAPTER_OBJECT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 0; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ADAPTER_OBJECT"": [ 0, {
				}]
				 }
				)";
			}
		}
	}
	#endregion
	#region _UNNAMED_37399
 
	public class _UNNAMED_37399
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_37399(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_37399"": [ 8, {
				 ""Signature"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""CheckSum"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Signature { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 CheckSum { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _UNNAMED_37402
 
	public class _UNNAMED_37402
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_37402(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_37402"": [ 16, {
				 ""DiskId"": [ 0, [ ""_GUID"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _GUID DiskId
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_37404
 
	public class _UNNAMED_37404
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_37404(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_37404"": [ 16, {
				 ""Mbr"": [ 0, [ ""_UNNAMED_37399"", ""null"" ]],
				 ""Gpt"": [ 0, [ ""_UNNAMED_37402"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_37399 Mbr
		{
			get
			{
				_UNNAMED_37399 returnValue = new _UNNAMED_37399(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_37402 Gpt
		{
			get
			{
				_UNNAMED_37402 returnValue = new _UNNAMED_37402(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _DUMP_INITIALIZATION_CONTEXT
 
	public class _DUMP_INITIALIZATION_CONTEXT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _DUMP_INITIALIZATION_CONTEXT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 264; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_DUMP_INITIALIZATION_CONTEXT"": [ 264, {
				 ""Length"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Reserved"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""MemoryBlock"": [ 8, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CommonBuffer"": [ 16, [ ""Array"", ""{\""count\"":2,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]],
				 ""PhysicalAddress"": [ 32, [ ""Array"", ""{\""count\"":2,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]],
				 ""StallRoutine"": [ 48, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""OpenRoutine"": [ 56, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""WriteRoutine"": [ 64, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FinishRoutine"": [ 72, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""AdapterObject"": [ 80, [ ""Pointer"", ""{\""target\"":\""_ADAPTER_OBJECT\""}"" ]],
				 ""MappedRegisterBase"": [ 88, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PortConfiguration"": [ 96, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CrashDump"": [ 104, [ ""Byte"", ""null"" ]],
				 ""MarkMemoryOnly"": [ 105, [ ""Byte"", ""null"" ]],
				 ""HiberResume"": [ 106, [ ""Byte"", ""null"" ]],
				 ""Reserved1"": [ 107, [ ""Byte"", ""null"" ]],
				 ""MaximumTransferSize"": [ 108, [ ""UInt32"", ""null"" ]],
				 ""CommonBufferSize"": [ 112, [ ""UInt32"", ""null"" ]],
				 ""TargetAddress"": [ 120, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""WritePendingRoutine"": [ 128, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PartitionStyle"": [ 136, [ ""UInt32"", ""null"" ]],
				 ""DiskInfo"": [ 140, [ ""_UNNAMED_37404"", ""null"" ]],
				 ""ReadRoutine"": [ 160, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""GetDriveTelemetryRoutine"": [ 168, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""LogSectionTruncateSize"": [ 176, [ ""UInt32"", ""null"" ]],
				 ""Parameters"": [ 180, [ ""Array"", ""{\""count\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""GetTransferSizesRoutine"": [ 248, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""DumpNotifyRoutine"": [ 256, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Length { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Reserved { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 MemoryBlock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64[] CommonBuffer
		{
			get
			{
				UInt64[] returnValue = new UInt64[2];
				int size = 8;
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 16);
				return returnValue;
			}
		}
		public _LARGE_INTEGER[] PhysicalAddress
		{
			get
			{
				_LARGE_INTEGER[] returnValue = new _LARGE_INTEGER[2];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<2; i++ )
					returnValue[i] = new _LARGE_INTEGER(_StructureData, (i * size) + _BufferOffset + 32);
				return returnValue;
			}
		}
		public UInt64 StallRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64 OpenRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt64 WriteRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 64); } }
		public UInt64 FinishRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 AdapterObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 MappedRegisterBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 PortConfiguration { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
		public Byte CrashDump{ get { return _StructureData[_BufferOffset +104]; } }
		public Byte MarkMemoryOnly{ get { return _StructureData[_BufferOffset +105]; } }
		public Byte HiberResume{ get { return _StructureData[_BufferOffset +106]; } }
		public Byte Reserved1{ get { return _StructureData[_BufferOffset +107]; } }
		public UInt32 MaximumTransferSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 108); } }
		public UInt32 CommonBufferSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 112); } }
		public UInt64 TargetAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 120); } }
		public UInt64 WritePendingRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 128); } }
		public UInt32 PartitionStyle { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 136); } }
		public _UNNAMED_37404 DiskInfo
		{
			get
			{
				_UNNAMED_37404 returnValue = new _UNNAMED_37404(_StructureData, _BufferOffset + 140);
				return returnValue;
			}
		}
		public UInt64 ReadRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public UInt64 GetDriveTelemetryRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 168); } }
		public UInt32 LogSectionTruncateSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 176); } }
		public UInt32[] Parameters
		{
			get
			{
				UInt32[] returnValue = new UInt32[16];
				for(int i=0; i<16; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 180);
				return returnValue;
			}
		}
		public UInt64 GetTransferSizesRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 248); } }
		public UInt64 DumpNotifyRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 256); } }
	}
	#endregion
	#region _PROCESSOR_PLATFORM_STATE_RESIDENCY
 
	public class _PROCESSOR_PLATFORM_STATE_RESIDENCY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PROCESSOR_PLATFORM_STATE_RESIDENCY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PROCESSOR_PLATFORM_STATE_RESIDENCY"": [ 16, {
				 ""Residency"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""TransitionCount"": [ 8, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Residency { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 TransitionCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _ETW_QUEUE_ENTRY
 
	public class _ETW_QUEUE_ENTRY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETW_QUEUE_ENTRY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 56; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETW_QUEUE_ENTRY"": [ 56, {
				 ""ListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""DataBlock"": [ 16, [ ""Pointer"", ""{\""target\"":\""_ETWP_NOTIFICATION_HEADER\""}"" ]],
				 ""RegEntry"": [ 24, [ ""Pointer"", ""{\""target\"":\""_ETW_REG_ENTRY\""}"" ]],
				 ""ReplyObject"": [ 32, [ ""Pointer"", ""{\""target\"":\""_ETW_REG_ENTRY\""}"" ]],
				 ""WakeReference"": [ 40, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""RegIndex"": [ 48, [ ""UInt16"", ""null"" ]],
				 ""ReplyIndex"": [ 50, [ ""UInt16"", ""null"" ]],
				 ""Flags"": [ 52, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 DataBlock { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 RegEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 ReplyObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt64 WakeReference { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt16 RegIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 48); } }
		public UInt16 ReplyIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 50); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 52); } }
	}
	#endregion
	#region _ETW_FILTER_PID
 
	public class _ETW_FILTER_PID
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETW_FILTER_PID(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 36; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETW_FILTER_PID"": [ 36, {
				 ""Count"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""Pids"": [ 4, [ ""Array"", ""{\""count\"":8,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Count { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32[] Pids
		{
			get
			{
				UInt32[] returnValue = new UInt32[8];
				for(int i=0; i<8; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 4);
				return returnValue;
			}
		}
	}
	#endregion
	#region _KDPC_LIST
 
	public class _KDPC_LIST
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KDPC_LIST(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KDPC_LIST"": [ 16, {
				 ""ListHead"": [ 0, [ ""_SINGLE_LIST_ENTRY"", ""null"" ]],
				 ""LastEntry"": [ 8, [ ""Pointer"", ""{\""target\"":\""_SINGLE_LIST_ENTRY\""}"" ]] }]
				 }
				)";
			}
		}
		public _SINGLE_LIST_ENTRY ListHead
		{
			get
			{
				_SINGLE_LIST_ENTRY returnValue = new _SINGLE_LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 LastEntry { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _CM_KEY_SECURITY
 
	public class _CM_KEY_SECURITY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _CM_KEY_SECURITY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 40; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_CM_KEY_SECURITY"": [ 40, {
				 ""Signature"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Reserved"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Flink"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Blink"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""ReferenceCount"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""DescriptorLength"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""Descriptor"": [ 20, [ ""_SECURITY_DESCRIPTOR_RELATIVE"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Signature { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 Reserved { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt32 Flink { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32 Blink { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 ReferenceCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt32 DescriptorLength { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public _SECURITY_DESCRIPTOR_RELATIVE Descriptor
		{
			get
			{
				_SECURITY_DESCRIPTOR_RELATIVE returnValue = new _SECURITY_DESCRIPTOR_RELATIVE(_StructureData, _BufferOffset + 20);
				return returnValue;
			}
		}
	}
	#endregion
	#region _PO_DEVICE_NOTIFY_ORDER
 
	public class _PO_DEVICE_NOTIFY_ORDER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PO_DEVICE_NOTIFY_ORDER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 376; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PO_DEVICE_NOTIFY_ORDER"": [ 376, {
				 ""Locked"": [ 0, [ ""Byte"", ""null"" ]],
				 ""WarmEjectPdoPointer"": [ 8, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT*\""}"" ]],
				 ""OrderLevel"": [ 16, [ ""Array"", ""{\""count\"":5,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public Byte Locked{ get { return _StructureData[_BufferOffset +0]; } }
		public UInt64 WarmEjectPdoPointer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _PO_NOTIFY_ORDER_LEVEL[] OrderLevel
		{
			get
			{
				_PO_NOTIFY_ORDER_LEVEL[] returnValue = new _PO_NOTIFY_ORDER_LEVEL[5];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<5; i++ )
					returnValue[i] = new _PO_NOTIFY_ORDER_LEVEL(_StructureData, (i * size) + _BufferOffset + 16);
				return returnValue;
			}
		}
	}
	#endregion
	#region _EVENT_FILTER_HEADER
 
	public class _EVENT_FILTER_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EVENT_FILTER_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EVENT_FILTER_HEADER"": [ 24, {
				 ""Id"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Version"": [ 2, [ ""Byte"", ""null"" ]],
				 ""Reserved"": [ 3, [ ""Array"", ""{\""count\"":5,\""target\"":\""Byte\""}"" ]],
				 ""InstanceId"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""Size"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""NextOffset"": [ 20, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Id { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public Byte Version{ get { return _StructureData[_BufferOffset +2]; } }
		public Byte[] Reserved
		{
			get
			{
				Byte[] returnValue = new Byte[5];
				for(int i=0; i<5; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 3];
				return returnValue;
			}
		}
		public UInt64 InstanceId { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 Size { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 NextOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
	}
	#endregion
	#region _IO_REMOVE_LOCK_COMMON_BLOCK
 
	public class _IO_REMOVE_LOCK_COMMON_BLOCK
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IO_REMOVE_LOCK_COMMON_BLOCK(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IO_REMOVE_LOCK_COMMON_BLOCK"": [ 32, {
				 ""Removed"": [ 0, [ ""Byte"", ""null"" ]],
				 ""Reserved"": [ 1, [ ""Array"", ""{\""count\"":3,\""target\"":\""Byte\""}"" ]],
				 ""IoCount"": [ 4, [ ""Int32"", ""null"" ]],
				 ""RemoveEvent"": [ 8, [ ""_KEVENT"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte Removed{ get { return _StructureData[_BufferOffset +0]; } }
		public Byte[] Reserved
		{
			get
			{
				Byte[] returnValue = new Byte[3];
				for(int i=0; i<3; i++ )
					returnValue[i] = _StructureData[i + _BufferOffset + 1];
				return returnValue;
			}
		}
		public Int32 IoCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 4); } }
		public _KEVENT RemoveEvent
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _POP_FX_IDLE_STATE
 
	public class _POP_FX_IDLE_STATE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _POP_FX_IDLE_STATE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_POP_FX_IDLE_STATE"": [ 24, {
				 ""TransitionLatency"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""ResidencyRequirement"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""NominalPower"": [ 16, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 TransitionLatency { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 ResidencyRequirement { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 NominalPower { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _WHEA_NOTIFICATION_FLAGS
 
	public class _WHEA_NOTIFICATION_FLAGS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _WHEA_NOTIFICATION_FLAGS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 2; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_WHEA_NOTIFICATION_FLAGS"": [ 2, {
				 ""PollIntervalRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""SwitchToPollingThresholdRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt16\""}"" ]],
				 ""SwitchToPollingWindowRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt16\""}"" ]],
				 ""ErrorThresholdRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt16\""}"" ]],
				 ""ErrorThresholdWindowRW"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt16\""}"" ]],
				 ""Reserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":5,\""target\"":\""UInt16\""}"" ]],
				 ""AsUSHORT"": [ 0, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt16 PollIntervalRW
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 SwitchToPollingThresholdRW
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt16)value2;
			}
		}
		public UInt16 SwitchToPollingWindowRW
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt16)value2;
			}
		}
		public UInt16 ErrorThresholdRW
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8) >> 3;
				return (UInt16)value2;
			}
		}
		public UInt16 ErrorThresholdWindowRW
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16) >> 4;
				return (UInt16)value2;
			}
		}
		public UInt16 Reserved
		{
			get
			{
				// start: 5  end: 16  Mask: 1111111111100000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 65504) >> 5;
				return (UInt16)value2;
			}
		}
		public UInt16 AsUSHORT { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _ARBITER_CONFLICT_INFO
 
	public class _ARBITER_CONFLICT_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ARBITER_CONFLICT_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ARBITER_CONFLICT_INFO"": [ 24, {
				 ""OwningObject"": [ 0, [ ""Pointer"", ""{\""target\"":\""_DEVICE_OBJECT\""}"" ]],
				 ""Start"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""End"": [ 16, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 OwningObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 Start { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 End { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _PO_NOTIFY_ORDER_LEVEL
 
	public class _PO_NOTIFY_ORDER_LEVEL
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _PO_NOTIFY_ORDER_LEVEL(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_PO_NOTIFY_ORDER_LEVEL"": [ 72, {
				 ""DeviceCount"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""ActiveCount"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""WaitSleep"": [ 8, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ReadySleep"": [ 24, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ReadyS0"": [ 40, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""WaitS0"": [ 56, [ ""_LIST_ENTRY"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 DeviceCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 ActiveCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public _LIST_ENTRY WaitSleep
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
		public _LIST_ENTRY ReadySleep
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 24);
				return returnValue;
			}
		}
		public _LIST_ENTRY ReadyS0
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public _LIST_ENTRY WaitS0
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ETWP_NOTIFICATION_HEADER
 
	public class _ETWP_NOTIFICATION_HEADER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETWP_NOTIFICATION_HEADER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETWP_NOTIFICATION_HEADER"": [ 72, {
				 ""NotificationType"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""_ETW_NOTIFICATION_TYPE\"",\""target\"":\""UInt32\""}"" ]],
				 ""NotificationSize"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""RefCount"": [ 8, [ ""Int32"", ""null"" ]],
				 ""ReplyRequested"": [ 12, [ ""Byte"", ""null"" ]],
				 ""ReplyIndex"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""Timeout"": [ 16, [ ""UInt32"", ""null"" ]],
				 ""ReplyCount"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""NotifyeeCount"": [ 20, [ ""UInt32"", ""null"" ]],
				 ""ReplyHandle"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""ReplyObject"": [ 24, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""RegIndex"": [ 24, [ ""UInt32"", ""null"" ]],
				 ""TargetPID"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""SourcePID"": [ 36, [ ""UInt32"", ""null"" ]],
				 ""DestinationGuid"": [ 40, [ ""_GUID"", ""null"" ]],
				 ""SourceGuid"": [ 56, [ ""_GUID"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _ETW_NOTIFICATION_TYPE NotificationType { get { return (_ETW_NOTIFICATION_TYPE)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 NotificationSize { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public Int32 RefCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 8); } }
		public Byte ReplyRequested{ get { return _StructureData[_BufferOffset +12]; } }
		public UInt32 ReplyIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 Timeout { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
		public UInt32 ReplyCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt32 NotifyeeCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 20); } }
		public UInt64 ReplyHandle { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 ReplyObject { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt32 RegIndex { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
		public UInt32 TargetPID { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt32 SourcePID { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 36); } }
		public _GUID DestinationGuid
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public _GUID SourceGuid
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
	}
	#endregion
	#region _UNNAMED_37526
 
	public class _UNNAMED_37526
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_37526(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_37526"": [ 4, {
				 ""Mask"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""Polarity"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""MessageType"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""RequestEOI"": [ 0, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""DestinationMode"": [ 0, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]],
				 ""MessageType3"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""UInt32\""}"" ]],
				 ""Destination"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":8,\""target\"":\""UInt32\""}"" ]],
				 ""Vector"": [ 0, [ ""BitField"", ""{\""end_bit\"":24,\""start_bit\"":16,\""target\"":\""UInt32\""}"" ]],
				 ""ExtendedAddress"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":24,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Mask
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 Polarity
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 MessageType
		{
			get
			{
				// start: 2  end: 5  Mask: 0000000000011100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 28) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 RequestEOI
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 DestinationMode
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 64) >> 6;
				return (UInt32)value2;
			}
		}
		public UInt32 MessageType3
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 128) >> 7;
				return (UInt32)value2;
			}
		}
		public UInt32 Destination
		{
			get
			{
				// start: 8  end: 16  Mask: 1111111100000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 65280) >> 8;
				return (UInt32)value2;
			}
		}
		public UInt32 Vector
		{
			get
			{
				// start: 16  end: 24  Mask: 111111110000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16711680) >> 16;
				return (UInt32)value2;
			}
		}
		public UInt32 ExtendedAddress
		{
			get
			{
				// start: 24  end: 32  Mask: 11111111000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4278190080) >> 24;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _UNNAMED_37536
 
	public class _UNNAMED_37536
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_37536(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_37536"": [ 4, {
				 ""bits"": [ 0, [ ""_UNNAMED_37526"", ""null"" ]],
				 ""AsULONG"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_37526 bits
		{
			get
			{
				_UNNAMED_37526 returnValue = new _UNNAMED_37526(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 AsULONG { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_37539
 
	public class _UNNAMED_37539
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_37539(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_37539"": [ 4, {
				 ""ExtendedDestination"": [ 0, [ ""BitField"", ""{\""end_bit\"":24,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""Reserved"": [ 0, [ ""BitField"", ""{\""end_bit\"":30,\""start_bit\"":24,\""target\"":\""UInt32\""}"" ]],
				 ""PassPW"": [ 0, [ ""BitField"", ""{\""end_bit\"":31,\""start_bit\"":30,\""target\"":\""UInt32\""}"" ]],
				 ""WaitingForEOI"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":31,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 ExtendedDestination
		{
			get
			{
				// start: 0  end: 24  Mask: 111111111111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16777215) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 Reserved
		{
			get
			{
				// start: 24  end: 30  Mask: 111111000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1056964608) >> 24;
				return (UInt32)value2;
			}
		}
		public UInt32 PassPW
		{
			get
			{
				// start: 30  end: 31  Mask: 1000000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1073741824) >> 30;
				return (UInt32)value2;
			}
		}
		public UInt32 WaitingForEOI
		{
			get
			{
				// start: 31  end: 32  Mask: 10000000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2147483648) >> 31;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _UNNAMED_37544
 
	public class _UNNAMED_37544
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_37544(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_37544"": [ 4, {
				 ""bits"": [ 0, [ ""_UNNAMED_37539"", ""null"" ]],
				 ""AsULONG"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_37539 bits
		{
			get
			{
				_UNNAMED_37539 returnValue = new _UNNAMED_37539(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 AsULONG { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _INTERRUPT_HT_INTR_INFO
 
	public class _INTERRUPT_HT_INTR_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _INTERRUPT_HT_INTR_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_INTERRUPT_HT_INTR_INFO"": [ 8, {
				 ""LowPart"": [ 0, [ ""_UNNAMED_37536"", ""null"" ]],
				 ""HighPart"": [ 4, [ ""_UNNAMED_37544"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_37536 LowPart
		{
			get
			{
				_UNNAMED_37536 returnValue = new _UNNAMED_37536(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_37544 HighPart
		{
			get
			{
				_UNNAMED_37544 returnValue = new _UNNAMED_37544(_StructureData, _BufferOffset + 4);
				return returnValue;
			}
		}
	}
	#endregion
	#region _THREAD_PERFORMANCE_DATA
 
	public class _THREAD_PERFORMANCE_DATA
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _THREAD_PERFORMANCE_DATA(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 448; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_THREAD_PERFORMANCE_DATA"": [ 448, {
				 ""Size"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Version"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""ProcessorNumber"": [ 4, [ ""_PROCESSOR_NUMBER"", ""null"" ]],
				 ""ContextSwitches"": [ 8, [ ""UInt32"", ""null"" ]],
				 ""HwCountersCount"": [ 12, [ ""UInt32"", ""null"" ]],
				 ""UpdateCount"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""WaitReasonBitMap"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""HardwareCounters"": [ 32, [ ""UInt64"", ""null"" ]],
				 ""CycleTime"": [ 40, [ ""_COUNTER_READING"", ""null"" ]],
				 ""HwCounters"": [ 64, [ ""Array"", ""{\""count\"":16,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Size { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 Version { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public _PROCESSOR_NUMBER ProcessorNumber
		{
			get
			{
				_PROCESSOR_NUMBER returnValue = new _PROCESSOR_NUMBER(_StructureData, _BufferOffset + 4);
				return returnValue;
			}
		}
		public UInt32 ContextSwitches { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 8); } }
		public UInt32 HwCountersCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 12); } }
		public UInt64 UpdateCount { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 WaitReasonBitMap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 HardwareCounters { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public _COUNTER_READING CycleTime
		{
			get
			{
				_COUNTER_READING returnValue = new _COUNTER_READING(_StructureData, _BufferOffset + 40);
				return returnValue;
			}
		}
		public _COUNTER_READING[] HwCounters
		{
			get
			{
				_COUNTER_READING[] returnValue = new _COUNTER_READING[16];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<16; i++ )
					returnValue[i] = new _COUNTER_READING(_StructureData, (i * size) + _BufferOffset + 64);
				return returnValue;
			}
		}
	}
	#endregion
	#region _GDI_TEB_BATCH32
 
	public class _GDI_TEB_BATCH32
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _GDI_TEB_BATCH32(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1248; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_GDI_TEB_BATCH32"": [ 1248, {
				 ""Offset"": [ 0, [ ""BitField"", ""{\""end_bit\"":31,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""HasRenderingCommand"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":31,\""target\"":\""UInt32\""}"" ]],
				 ""HDC"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""Buffer"": [ 8, [ ""Array"", ""{\""count\"":310,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 Offset
		{
			get
			{
				// start: 0  end: 31  Mask: 1111111111111111111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2147483647) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 HasRenderingCommand
		{
			get
			{
				// start: 31  end: 32  Mask: 10000000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2147483648) >> 31;
				return (UInt32)value2;
			}
		}
		public UInt32 HDC { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt32[] Buffer
		{
			get
			{
				UInt32[] returnValue = new UInt32[310];
				for(int i=0; i<310; i++ )
					returnValue[i] = BitConverter.ToUInt32(_StructureData, (i * sizeof(UInt32)) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ETW_REPLY_QUEUE
 
	public class _ETW_REPLY_QUEUE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETW_REPLY_QUEUE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 72; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETW_REPLY_QUEUE"": [ 72, {
				 ""Queue"": [ 0, [ ""_KQUEUE"", ""null"" ]],
				 ""EventsLost"": [ 64, [ ""Int32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _KQUEUE Queue
		{
			get
			{
				_KQUEUE returnValue = new _KQUEUE(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public Int32 EventsLost { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 64); } }
	}
	#endregion
	#region _ARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS
 
	public class _ARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ARBITER_QUERY_ALLOCATED_RESOURCES_PARAMETERS"": [ 8, {
				 ""AllocatedResources"": [ 0, [ ""Pointer"", ""{\""target\"":\""_CM_PARTIAL_RESOURCE_LIST*\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt64 AllocatedResources { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _MI_LARGEPAGE_MEMORY_INFO
 
	public class _MI_LARGEPAGE_MEMORY_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MI_LARGEPAGE_MEMORY_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 32; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MI_LARGEPAGE_MEMORY_INFO"": [ 32, {
				 ""ListHead"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ColoredPageInfoBase"": [ 16, [ ""Pointer"", ""{\""target\"":\""_COLORED_PAGE_INFO\""}"" ]],
				 ""PagesNeedZeroing"": [ 24, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 ColoredPageInfoBase { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt32 PagesNeedZeroing { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 24); } }
	}
	#endregion
	#region _UNNAMED_37573
 
	public class _UNNAMED_37573
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_37573(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_37573"": [ 8, {
				 ""MessageAddressLow"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""MessageData"": [ 4, [ ""UInt16"", ""null"" ]],
				 ""Reserved"": [ 6, [ ""UInt16"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 MessageAddressLow { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt16 MessageData { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 4); } }
		public UInt16 Reserved { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
	}
	#endregion
	#region _UNNAMED_37577
 
	public class _UNNAMED_37577
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_37577(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_37577"": [ 8, {
				 ""RemappedFormat"": [ 0, [ ""_ULARGE_INTEGER"", ""null"" ]],
				 ""Msi"": [ 0, [ ""_UNNAMED_37573"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _ULARGE_INTEGER RemappedFormat
		{
			get
			{
				_ULARGE_INTEGER returnValue = new _ULARGE_INTEGER(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _UNNAMED_37573 Msi
		{
			get
			{
				_UNNAMED_37573 returnValue = new _UNNAMED_37573(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
	}
	#endregion
	#region _INTERRUPT_REMAPPING_INFO
 
	public class _INTERRUPT_REMAPPING_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _INTERRUPT_REMAPPING_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_INTERRUPT_REMAPPING_INFO"": [ 16, {
				 ""IrtIndex"": [ 0, [ ""BitField"", ""{\""end_bit\"":30,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""FlagHalInternal"": [ 0, [ ""BitField"", ""{\""end_bit\"":31,\""start_bit\"":30,\""target\"":\""UInt32\""}"" ]],
				 ""FlagTranslated"": [ 0, [ ""BitField"", ""{\""end_bit\"":32,\""start_bit\"":31,\""target\"":\""UInt32\""}"" ]],
				 ""u"": [ 8, [ ""_UNNAMED_37577"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 IrtIndex
		{
			get
			{
				// start: 0  end: 30  Mask: 111111111111111111111111111111
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1073741823) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 FlagHalInternal
		{
			get
			{
				// start: 30  end: 31  Mask: 1000000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1073741824) >> 30;
				return (UInt32)value2;
			}
		}
		public UInt32 FlagTranslated
		{
			get
			{
				// start: 31  end: 32  Mask: 10000000000000000000000000000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2147483648) >> 31;
				return (UInt32)value2;
			}
		}
		public _UNNAMED_37577 u
		{
			get
			{
				_UNNAMED_37577 returnValue = new _UNNAMED_37577(_StructureData, _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _RTL_ACTIVATION_CONTEXT_STACK_FRAME
 
	public class _RTL_ACTIVATION_CONTEXT_STACK_FRAME
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_ACTIVATION_CONTEXT_STACK_FRAME(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_ACTIVATION_CONTEXT_STACK_FRAME"": [ 24, {
				 ""Previous"": [ 0, [ ""Pointer"", ""{\""target\"":\""_RTL_ACTIVATION_CONTEXT_STACK_FRAME\""}"" ]],
				 ""ActivationContext"": [ 8, [ ""Pointer"", ""{\""target\"":\""_ACTIVATION_CONTEXT\""}"" ]],
				 ""Flags"": [ 16, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Previous { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 ActivationContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt32 Flags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _MMIO_TRACKER
 
	public class _MMIO_TRACKER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMIO_TRACKER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 112; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMIO_TRACKER"": [ 112, {
				 ""ListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""PageFrameIndex"": [ 16, [ ""UInt64"", ""null"" ]],
				 ""NumberOfPages"": [ 24, [ ""UInt64"", ""null"" ]],
				 ""BaseVa"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""CacheFlushTimeStamp"": [ 32, [ ""UInt32"", ""null"" ]],
				 ""Mdl"": [ 40, [ ""Pointer"", ""{\""target\"":\""_MDL\""}"" ]],
				 ""MdlPages"": [ 48, [ ""UInt64"", ""null"" ]],
				 ""StackTrace"": [ 56, [ ""Array"", ""{\""count\"":6,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""void\""}}"" ]],
				 ""CacheInfo"": [ 104, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 PageFrameIndex { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
		public UInt64 NumberOfPages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 24); } }
		public UInt64 BaseVa { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt32 CacheFlushTimeStamp { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 32); } }
		public UInt64 Mdl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 40); } }
		public UInt64 MdlPages { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 48); } }
		public UInt64[] StackTrace
		{
			get
			{
				UInt64[] returnValue = new UInt64[6];
				int size = 8;
				for(int i=0; i<6; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * size) + _BufferOffset + 56);
				return returnValue;
			}
		}
		public _IO_CACHE_INFO[] CacheInfo
		{
			get
			{
				_IO_CACHE_INFO[] returnValue = new _IO_CACHE_INFO[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _IO_CACHE_INFO(_StructureData, (i * size) + _BufferOffset + 104);
				return returnValue;
			}
		}
	}
	#endregion
	#region _ARBITER_ORDERING
 
	public class _ARBITER_ORDERING
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ARBITER_ORDERING(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ARBITER_ORDERING"": [ 16, {
				 ""Start"": [ 0, [ ""UInt64"", ""null"" ]],
				 ""End"": [ 8, [ ""UInt64"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt64 Start { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 0); } }
		public UInt64 End { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
	#region _UNNAMED_37600
 
	public class _UNNAMED_37600
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_37600(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_37600"": [ 4, {
				 ""ImagePteOffset"": [ 0, [ ""UInt32"", ""null"" ]],
				 ""TossPage"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public UInt32 ImagePteOffset { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 TossPage { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _UNNAMED_37603
 
	public class _UNNAMED_37603
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _UNNAMED_37603(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_UNNAMED_37603"": [ 4, {
				 ""e1"": [ 0, [ ""_MMINPAGE_FLAGS"", ""null"" ]],
				 ""LongFlags"": [ 0, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _MMINPAGE_FLAGS e1
		{
			get
			{
				_MMINPAGE_FLAGS returnValue = new _MMINPAGE_FLAGS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt32 LongFlags { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
	}
	#endregion
	#region _MMINPAGE_SUPPORT
 
	public class _MMINPAGE_SUPPORT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMINPAGE_SUPPORT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 384; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMINPAGE_SUPPORT"": [ 384, {
				 ""ListEntry"": [ 0, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""ListHead"": [ 16, [ ""_LIST_ENTRY"", ""null"" ]],
				 ""Event"": [ 32, [ ""_KEVENT"", ""null"" ]],
				 ""CollidedEvent"": [ 56, [ ""_KEVENT"", ""null"" ]],
				 ""IoStatus"": [ 80, [ ""_IO_STATUS_BLOCK"", ""null"" ]],
				 ""ReadOffset"": [ 96, [ ""_LARGE_INTEGER"", ""null"" ]],
				 ""PteContents"": [ 104, [ ""_MMPTE"", ""null"" ]],
				 ""Thread"": [ 112, [ ""Pointer"", ""{\""target\"":\""_ETHREAD\""}"" ]],
				 ""LockedProtoPfn"": [ 120, [ ""Pointer"", ""{\""target\"":\""_MMPFN\""}"" ]],
				 ""WaitCount"": [ 128, [ ""Int32"", ""null"" ]],
				 ""ByteCount"": [ 132, [ ""UInt32"", ""null"" ]],
				 ""u3"": [ 136, [ ""_UNNAMED_37600"", ""null"" ]],
				 ""u1"": [ 140, [ ""_UNNAMED_37603"", ""null"" ]],
				 ""FilePointer"": [ 144, [ ""Pointer"", ""{\""target\"":\""_FILE_OBJECT\""}"" ]],
				 ""ControlArea"": [ 152, [ ""Pointer"", ""{\""target\"":\""_CONTROL_AREA\""}"" ]],
				 ""Autoboost"": [ 160, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FaultingAddress"": [ 168, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""PointerPte"": [ 176, [ ""Pointer"", ""{\""target\"":\""_MMPTE\""}"" ]],
				 ""BasePte"": [ 184, [ ""Pointer"", ""{\""target\"":\""_MMPTE\""}"" ]],
				 ""Pfn"": [ 192, [ ""Pointer"", ""{\""target\"":\""_MMPFN\""}"" ]],
				 ""PrefetchMdl"": [ 200, [ ""Pointer"", ""{\""target\"":\""_MDL\""}"" ]],
				 ""Mdl"": [ 208, [ ""_MDL"", ""null"" ]],
				 ""Page"": [ 256, [ ""Array"", ""{\""count\"":16,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public _LIST_ENTRY ListEntry
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public _LIST_ENTRY ListHead
		{
			get
			{
				_LIST_ENTRY returnValue = new _LIST_ENTRY(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public _KEVENT Event
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 32);
				return returnValue;
			}
		}
		public _KEVENT CollidedEvent
		{
			get
			{
				_KEVENT returnValue = new _KEVENT(_StructureData, _BufferOffset + 56);
				return returnValue;
			}
		}
		public _IO_STATUS_BLOCK IoStatus
		{
			get
			{
				_IO_STATUS_BLOCK returnValue = new _IO_STATUS_BLOCK(_StructureData, _BufferOffset + 80);
				return returnValue;
			}
		}
		public _LARGE_INTEGER ReadOffset
		{
			get
			{
				_LARGE_INTEGER returnValue = new _LARGE_INTEGER(_StructureData, _BufferOffset + 96);
				return returnValue;
			}
		}
		public _MMPTE PteContents
		{
			get
			{
				_MMPTE returnValue = new _MMPTE(_StructureData, _BufferOffset + 104);
				return returnValue;
			}
		}
		public UInt64 Thread { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 112); } }
		public UInt64 LockedProtoPfn { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 120); } }
		public Int32 WaitCount { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 128); } }
		public UInt32 ByteCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 132); } }
		public _UNNAMED_37600 u3
		{
			get
			{
				_UNNAMED_37600 returnValue = new _UNNAMED_37600(_StructureData, _BufferOffset + 136);
				return returnValue;
			}
		}
		public _UNNAMED_37603 u1
		{
			get
			{
				_UNNAMED_37603 returnValue = new _UNNAMED_37603(_StructureData, _BufferOffset + 140);
				return returnValue;
			}
		}
		public UInt64 FilePointer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 144); } }
		public UInt64 ControlArea { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 152); } }
		public UInt64 Autoboost { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 160); } }
		public UInt64 FaultingAddress { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 168); } }
		public UInt64 PointerPte { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 176); } }
		public UInt64 BasePte { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 184); } }
		public UInt64 Pfn { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 192); } }
		public UInt64 PrefetchMdl { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 200); } }
		public _MDL Mdl
		{
			get
			{
				_MDL returnValue = new _MDL(_StructureData, _BufferOffset + 208);
				return returnValue;
			}
		}
		public UInt64[] Page
		{
			get
			{
				UInt64[] returnValue = new UInt64[16];
				for(int i=0; i<16; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 256);
				return returnValue;
			}
		}
	}
	#endregion
	#region _RTL_AVL_TABLE
 
	public class _RTL_AVL_TABLE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _RTL_AVL_TABLE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 104; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_RTL_AVL_TABLE"": [ 104, {
				 ""BalancedRoot"": [ 0, [ ""_RTL_BALANCED_LINKS"", ""null"" ]],
				 ""OrderedPointer"": [ 32, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""WhichOrderedElement"": [ 40, [ ""UInt32"", ""null"" ]],
				 ""NumberGenericTableElements"": [ 44, [ ""UInt32"", ""null"" ]],
				 ""DepthOfTree"": [ 48, [ ""UInt32"", ""null"" ]],
				 ""RestartKey"": [ 56, [ ""Pointer"", ""{\""target\"":\""_RTL_BALANCED_LINKS\""}"" ]],
				 ""DeleteCount"": [ 64, [ ""UInt32"", ""null"" ]],
				 ""CompareRoutine"": [ 72, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""AllocateRoutine"": [ 80, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""FreeRoutine"": [ 88, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]],
				 ""TableContext"": [ 96, [ ""Pointer"", ""{\""target\"":\""void\""}"" ]] }]
				 }
				)";
			}
		}
		public _RTL_BALANCED_LINKS BalancedRoot
		{
			get
			{
				_RTL_BALANCED_LINKS returnValue = new _RTL_BALANCED_LINKS(_StructureData, _BufferOffset + 0);
				return returnValue;
			}
		}
		public UInt64 OrderedPointer { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 32); } }
		public UInt32 WhichOrderedElement { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 40); } }
		public UInt32 NumberGenericTableElements { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 44); } }
		public UInt32 DepthOfTree { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 48); } }
		public UInt64 RestartKey { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 56); } }
		public UInt32 DeleteCount { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 64); } }
		public UInt64 CompareRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 72); } }
		public UInt64 AllocateRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 80); } }
		public UInt64 FreeRoutine { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 88); } }
		public UInt64 TableContext { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 96); } }
	}
	#endregion
	#region _MMINPAGE_FLAGS
 
	public class _MMINPAGE_FLAGS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMINPAGE_FLAGS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMINPAGE_FLAGS"": [ 4, {
				 ""InjectRetry"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""CrossThreadPadding"": [ 0, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""PrefetchSystemVmType"": [ 1, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""VaPrefetchReadBlock"": [ 1, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""CollidedFlowThrough"": [ 1, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""ForceCollisions"": [ 1, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""InPageExpanded"": [ 1, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""Byte\""}"" ]],
				 ""IssuedAtLowPriority"": [ 1, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""Byte\""}"" ]],
				 ""FaultFromStore"": [ 1, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""Byte\""}"" ]],
				 ""PagePriority"": [ 2, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""PerformRelocations"": [ 2, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""ClusteredPagePriority"": [ 2, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""MakeClusterValid"": [ 2, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""Byte\""}"" ]],
				 ""ZeroLastPage"": [ 3, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""Byte\""}"" ]],
				 ""UserFault"": [ 3, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""Byte\""}"" ]],
				 ""BoostedPriority"": [ 3, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""Byte\""}"" ]],
				 ""StandbyProtectionNeeded"": [ 3, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""Byte\""}"" ]],
				 ""PteChanged"": [ 3, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""Byte\""}"" ]],
				 ""PageFileFault"": [ 3, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""Byte\""}"" ]],
				 ""PageFilePageHashActive"": [ 3, [ ""BitField"", ""{\""end_bit\"":7,\""start_bit\"":6,\""target\"":\""Byte\""}"" ]],
				 ""CoalescedIo"": [ 3, [ ""BitField"", ""{\""end_bit\"":8,\""start_bit\"":7,\""target\"":\""Byte\""}"" ]] }]
				 }
				)";
			}
		}
		public Byte InjectRetry
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte CrossThreadPadding
		{
			get
			{
				// start: 1  end: 8  Mask: 0000000011111110
				Byte value = _StructureData[_BufferOffset + 0];
				var value2 = (value & 254) >> 1;
				return (Byte)value2;
			}
		}
		public Byte PrefetchSystemVmType
		{
			get
			{
				// start: 0  end: 2  Mask: 0000000000000011
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 3) >> 0;
				return (Byte)value2;
			}
		}
		public Byte VaPrefetchReadBlock
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte CollidedFlowThrough
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte ForceCollisions
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 16) >> 4;
				return (Byte)value2;
			}
		}
		public Byte InPageExpanded
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 32) >> 5;
				return (Byte)value2;
			}
		}
		public Byte IssuedAtLowPriority
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 64) >> 6;
				return (Byte)value2;
			}
		}
		public Byte FaultFromStore
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				Byte value = _StructureData[_BufferOffset + 1];
				var value2 = (value & 128) >> 7;
				return (Byte)value2;
			}
		}
		public Byte PagePriority
		{
			get
			{
				// start: 0  end: 3  Mask: 0000000000000111
				Byte value = _StructureData[_BufferOffset + 2];
				var value2 = (value & 7) >> 0;
				return (Byte)value2;
			}
		}
		public Byte PerformRelocations
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 2];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte ClusteredPagePriority
		{
			get
			{
				// start: 4  end: 7  Mask: 0000000001110000
				Byte value = _StructureData[_BufferOffset + 2];
				var value2 = (value & 112) >> 4;
				return (Byte)value2;
			}
		}
		public Byte MakeClusterValid
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				Byte value = _StructureData[_BufferOffset + 2];
				var value2 = (value & 128) >> 7;
				return (Byte)value2;
			}
		}
		public Byte ZeroLastPage
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 1) >> 0;
				return (Byte)value2;
			}
		}
		public Byte UserFault
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 2) >> 1;
				return (Byte)value2;
			}
		}
		public Byte BoostedPriority
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 4) >> 2;
				return (Byte)value2;
			}
		}
		public Byte StandbyProtectionNeeded
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 8) >> 3;
				return (Byte)value2;
			}
		}
		public Byte PteChanged
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 16) >> 4;
				return (Byte)value2;
			}
		}
		public Byte PageFileFault
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 32) >> 5;
				return (Byte)value2;
			}
		}
		public Byte PageFilePageHashActive
		{
			get
			{
				// start: 6  end: 7  Mask: 0000000001000000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 64) >> 6;
				return (Byte)value2;
			}
		}
		public Byte CoalescedIo
		{
			get
			{
				// start: 7  end: 8  Mask: 0000000010000000
				Byte value = _StructureData[_BufferOffset + 3];
				var value2 = (value & 128) >> 7;
				return (Byte)value2;
			}
		}
	}
	#endregion
	#region _AGGREGATED_PAYLOAD_FILTER
 
	public class _AGGREGATED_PAYLOAD_FILTER
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _AGGREGATED_PAYLOAD_FILTER(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 80; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_AGGREGATED_PAYLOAD_FILTER"": [ 80, {
				 ""MagicValue"": [ 0, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":0,\""target\"":\""UInt16\""}"" ]],
				 ""DescriptorVersion"": [ 0, [ ""BitField"", ""{\""end_bit\"":16,\""start_bit\"":12,\""target\"":\""UInt16\""}"" ]],
				 ""Size"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""PredicateCount"": [ 4, [ ""UInt16"", ""null"" ]],
				 ""Reserved"": [ 6, [ ""UInt16"", ""null"" ]],
				 ""HashedEventIdBitmap"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""ProviderGuid"": [ 16, [ ""_GUID"", ""null"" ]],
				 ""EachEventTableOffset"": [ 32, [ ""UInt16"", ""null"" ]],
				 ""EachEventTableLength"": [ 34, [ ""UInt16"", ""null"" ]],
				 ""PayloadDecoderTableOffset"": [ 36, [ ""UInt16"", ""null"" ]],
				 ""PayloadDecoderTableLength"": [ 38, [ ""UInt16"", ""null"" ]],
				 ""EventFilterTableOffset"": [ 40, [ ""UInt16"", ""null"" ]],
				 ""EventFilterTableLength"": [ 42, [ ""UInt16"", ""null"" ]],
				 ""UNICODEStringTableOffset"": [ 44, [ ""UInt16"", ""null"" ]],
				 ""UNICODEStringTableLength"": [ 46, [ ""UInt16"", ""null"" ]],
				 ""ANSIStringTableOffset"": [ 48, [ ""UInt16"", ""null"" ]],
				 ""ANSIStringTableLength"": [ 50, [ ""UInt16"", ""null"" ]],
				 ""PredicateTable"": [ 56, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 MagicValue
		{
			get
			{
				// start: 0  end: 12  Mask: 0000111111111111
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4095) >> 0;
				return (UInt16)value2;
			}
		}
		public UInt16 DescriptorVersion
		{
			get
			{
				// start: 12  end: 16  Mask: 1111000000000000
				var value = BitConverter.ToUInt16(_StructureData, _BufferOffset + 0);
				var value2 = (value & 61440) >> 12;
				return (UInt16)value2;
			}
		}
		public UInt16 Size { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt16 PredicateCount { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 4); } }
		public UInt16 Reserved { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 6); } }
		public UInt64 HashedEventIdBitmap { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public _GUID ProviderGuid
		{
			get
			{
				_GUID returnValue = new _GUID(_StructureData, _BufferOffset + 16);
				return returnValue;
			}
		}
		public UInt16 EachEventTableOffset { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 32); } }
		public UInt16 EachEventTableLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 34); } }
		public UInt16 PayloadDecoderTableOffset { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 36); } }
		public UInt16 PayloadDecoderTableLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 38); } }
		public UInt16 EventFilterTableOffset { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 40); } }
		public UInt16 EventFilterTableLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 42); } }
		public UInt16 UNICODEStringTableOffset { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 44); } }
		public UInt16 UNICODEStringTableLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 46); } }
		public UInt16 ANSIStringTableOffset { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 48); } }
		public UInt16 ANSIStringTableLength { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 50); } }
		public _EVENT_PAYLOAD_PREDICATE[] PredicateTable
		{
			get
			{
				_EVENT_PAYLOAD_PREDICATE[] returnValue = new _EVENT_PAYLOAD_PREDICATE[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _EVENT_PAYLOAD_PREDICATE(_StructureData, (i * size) + _BufferOffset + 56);
				return returnValue;
			}
		}
	}
	#endregion
	#region _KTRANSACTION_HISTORY
 
	public class _KTRANSACTION_HISTORY
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _KTRANSACTION_HISTORY(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 8; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_KTRANSACTION_HISTORY"": [ 8, {
				 ""RecordType"": [ 0, [ ""Enumeration"", ""{\""enum_name\"":\""_UNNAMED_26690\"",\""target\"":\""UInt32\""}"" ]],
				 ""Payload"": [ 4, [ ""UInt32"", ""null"" ]] }]
				 }
				)";
			}
		}
		public _UNNAMED_26690 RecordType { get { return (_UNNAMED_26690)BitConverter.ToUInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Payload { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
	}
	#endregion
	#region _MMSECURE_FLAGS
 
	public class _MMSECURE_FLAGS
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _MMSECURE_FLAGS(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 4; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_MMSECURE_FLAGS"": [ 4, {
				 ""ReadOnly"": [ 0, [ ""BitField"", ""{\""end_bit\"":1,\""start_bit\"":0,\""target\"":\""UInt32\""}"" ]],
				 ""ReadWrite"": [ 0, [ ""BitField"", ""{\""end_bit\"":2,\""start_bit\"":1,\""target\"":\""UInt32\""}"" ]],
				 ""SecNoChange"": [ 0, [ ""BitField"", ""{\""end_bit\"":3,\""start_bit\"":2,\""target\"":\""UInt32\""}"" ]],
				 ""NoDelete"": [ 0, [ ""BitField"", ""{\""end_bit\"":4,\""start_bit\"":3,\""target\"":\""UInt32\""}"" ]],
				 ""RequiresPteReversal"": [ 0, [ ""BitField"", ""{\""end_bit\"":5,\""start_bit\"":4,\""target\"":\""UInt32\""}"" ]],
				 ""ExclusiveSecure"": [ 0, [ ""BitField"", ""{\""end_bit\"":6,\""start_bit\"":5,\""target\"":\""UInt32\""}"" ]],
				 ""Spare"": [ 0, [ ""BitField"", ""{\""end_bit\"":12,\""start_bit\"":6,\""target\"":\""UInt32\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt32 ReadOnly
		{
			get
			{
				// start: 0  end: 1  Mask: 0000000000000001
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 1) >> 0;
				return (UInt32)value2;
			}
		}
		public UInt32 ReadWrite
		{
			get
			{
				// start: 1  end: 2  Mask: 0000000000000010
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 2) >> 1;
				return (UInt32)value2;
			}
		}
		public UInt32 SecNoChange
		{
			get
			{
				// start: 2  end: 3  Mask: 0000000000000100
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4) >> 2;
				return (UInt32)value2;
			}
		}
		public UInt32 NoDelete
		{
			get
			{
				// start: 3  end: 4  Mask: 0000000000001000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 8) >> 3;
				return (UInt32)value2;
			}
		}
		public UInt32 RequiresPteReversal
		{
			get
			{
				// start: 4  end: 5  Mask: 0000000000010000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 16) >> 4;
				return (UInt32)value2;
			}
		}
		public UInt32 ExclusiveSecure
		{
			get
			{
				// start: 5  end: 6  Mask: 0000000000100000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 32) >> 5;
				return (UInt32)value2;
			}
		}
		public UInt32 Spare
		{
			get
			{
				// start: 6  end: 12  Mask: 0000111111000000
				var value = BitConverter.ToUInt32(_StructureData, _BufferOffset + 0);
				var value2 = (value & 4032) >> 6;
				return (UInt32)value2;
			}
		}
	}
	#endregion
	#region _EVENT_PAYLOAD_PREDICATE
 
	public class _EVENT_PAYLOAD_PREDICATE
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _EVENT_PAYLOAD_PREDICATE(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_EVENT_PAYLOAD_PREDICATE"": [ 24, {
				 ""FieldIndex"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""CompareOp"": [ 2, [ ""UInt16"", ""null"" ]],
				 ""Value"": [ 8, [ ""Array"", ""{\""count\"":2,\""target\"":\""UInt64\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 FieldIndex { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt16 CompareOp { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 2); } }
		public UInt64[] Value
		{
			get
			{
				UInt64[] returnValue = new UInt64[2];
				for(int i=0; i<2; i++ )
					returnValue[i] = BitConverter.ToUInt64(_StructureData, (i * sizeof(UInt64)) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _COLORED_PAGE_INFO
 
	public class _COLORED_PAGE_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _COLORED_PAGE_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_COLORED_PAGE_INFO"": [ 24, {
				 ""BeingZeroed"": [ 0, [ ""Int32"", ""null"" ]],
				 ""Processor"": [ 4, [ ""UInt32"", ""null"" ]],
				 ""PagesQueued"": [ 8, [ ""UInt64"", ""null"" ]],
				 ""PfnAllocation"": [ 16, [ ""Pointer"", ""{\""target\"":\""_MMPFN\""}"" ]] }]
				 }
				)";
			}
		}
		public Int32 BeingZeroed { get { return BitConverter.ToInt32(_StructureData, _BufferOffset + 0); } }
		public UInt32 Processor { get { return BitConverter.ToUInt32(_StructureData, _BufferOffset + 4); } }
		public UInt64 PagesQueued { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
		public UInt64 PfnAllocation { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 16); } }
	}
	#endregion
	#region _ETW_FILTER_STRING_TOKEN
 
	public class _ETW_FILTER_STRING_TOKEN
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETW_FILTER_STRING_TOKEN(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 24; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETW_FILTER_STRING_TOKEN"": [ 24, {
				 ""Count"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""Tokens"": [ 8, [ ""Array"", ""{\""count\"":1,\""target\"":\""Pointer\"",\""target_args\"":{\""target\"":\""\""}}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Count { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public _ETW_FILTER_STRING_TOKEN_ELEMENT[] Tokens
		{
			get
			{
				_ETW_FILTER_STRING_TOKEN_ELEMENT[] returnValue = new _ETW_FILTER_STRING_TOKEN_ELEMENT[1];
				int size = returnValue[0].MxStructureSize;
				for(int i=0; i<1; i++ )
					returnValue[i] = new _ETW_FILTER_STRING_TOKEN_ELEMENT(_StructureData, (i * size) + _BufferOffset + 8);
				return returnValue;
			}
		}
	}
	#endregion
	#region _IO_CACHE_INFO
 
	public class _IO_CACHE_INFO
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _IO_CACHE_INFO(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 1; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_IO_CACHE_INFO"": [ 1, {
				 ""CacheAttribute"": [ 0, [ ""Byte"", ""null"" ]] }]
				 }
				)";
			}
		}
		public Byte CacheAttribute{ get { return _StructureData[_BufferOffset +0]; } }
	}
	#endregion
	#region _ETW_FILTER_STRING_TOKEN_ELEMENT
 
	public class _ETW_FILTER_STRING_TOKEN_ELEMENT
	{
		private Byte[] _StructureData;
		private int _BufferOffset;
		public _ETW_FILTER_STRING_TOKEN_ELEMENT(Byte[] Buffer, int PartitionOffset)
		{
			_StructureData = Buffer;
			_BufferOffset = PartitionOffset;
		}
		public int MxStructureSize { get { return 16; } }
		public string manifest
		{
			get
			{
				return @"(
				{
				 ""_ETW_FILTER_STRING_TOKEN_ELEMENT"": [ 16, {
				 ""Length"": [ 0, [ ""UInt16"", ""null"" ]],
				 ""String"": [ 8, [ ""Pointer"", ""{\""target\"":\""UInt16\""}"" ]] }]
				 }
				)";
			}
		}
		public UInt16 Length { get { return BitConverter.ToUInt16(_StructureData, _BufferOffset + 0); } }
		public UInt64 String { get { return BitConverter.ToUInt64(_StructureData, _BufferOffset + 8); } }
	}
	#endregion
}
